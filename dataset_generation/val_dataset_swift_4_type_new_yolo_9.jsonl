{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地建议您先找到人，然后温柔地询问是否看到了牙刷和背包，最后愉快地分享一份美味的披萨如何？\nresponse: ", "response": "人; 牙刷; 背包; 披萨."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Ascend 3 feet, then rotate the drone 180 degrees to get a rear view, afterwards shift rightwards 4 inches, subsequently descend to 8 feet, and in the end lower it down now.\nresponse: ", "response": "move_up 3 ft; move_down 8 ft; turn_right 180 degrees; move_right 4 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后无人机飞得太高了，请下降四十厘米。\nresponse: ", "response": "take_off; move_down 40 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Push left, then drop the drone by 30 inches, afterwards let’s move back 2 feet. I’m feeling a bit cautious about the current position. Next, proceed left 2 meters, after that can we fly it forward a bit? Following that, lower altitude, subsequently move sideways left 30 cm, and immediately after that Can you make it descend quickly? I'm in a hurry! In the end, move rightward.\nresponse: ", "response": "Missing move_left; move_down 30 in; move_back 2 ft; move_left 2 m; Missing move_forward; Missing move_down; move_left 30 cm; Missing move_down; Missing move_right."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机右转九十度，然后请将无人机右移两米，接着向右侧移动四十厘米，随后往左移动，紧接着左边要移动四十厘米以调整位置以免碰到障碍物，之后升高八十厘米改变高度，最后无人机可以进行降落。\nresponse: ", "response": "turn_right 90 degrees; move_right 2 m; move_right 40 cm; Missing move_left; move_left 40 cm; move_up 80 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Adjust direction right, then go down 1 foot, afterwards fly backwards 150 centimeters, next slide right 4 feet, and in the end hover and land.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Veer left 7 inches, then drone should rotate left, after that turn it 360 degrees to the right, next please move the drone left 5 meters, and subsequently I’m a bit nervous about its altitude, could you bring it down slowly, say 30 centimeters?\nresponse: ", "response": "move_left 7 in; Missing turn_left; turn_right 360 degrees; move_left 5 m; move_down 30 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the chair!\nresponse: ", "response": "chair."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the boat, clock, frisbee, and cup.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the search task.\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么宇航员在太空中会出现体液分布异常？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can't you go check if the pizza, clock, banana, and airplane are all in their right places?\nresponse: ", "response": "pizza; clock; banana; airplane."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly steadily forward 60 cm, then please move the drone backwards 2 feet, afterwards drift back, subsequently bring it down gently.\nresponse: ", "response": "move_forward 60 cm; move_back 2 ft; Missing move_back; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请上升七十五厘米，然后请将无人机向右飞行一百厘米，以避免前方的障碍物，接着请向右转弯，随后无人机右转九十度，紧接着向前移动九十厘米，靠近目标，最后无人机需要在此地降落。\nresponse: ", "response": "move_up 75 cm; move_right 100 cm; Missing turn_right; turn_right 90 degrees; move_forward 90 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off into the blue sky, then rotate the drone 360 degrees to the left, afterwards impatiently land now.\nresponse: ", "response": "take_off; turn_left 360 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off now, then let's move back 2 feet, I'm feeling a bit cautious about the current position, subsequently descend and land.\nresponse: ", "response": "take_off; move_back 2 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以技术性的姿态，请精确搜索鸟、雨伞与刀的位置。\nresponse: ", "response": "鸟; 雨伞; 刀."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂停当前的控制与搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请启动无人机的起飞程序，然后无人机的当前方向不准确，请将其向左转动一百五十度，接着请右转二十度，随后可以让无人机向左转九十度吗，最后无人机准备降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地终止当前的控制指令，并且执行搜寻任务的清除工作。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: It might not be a bad idea to carefully and considerately ensure that the area is thoroughly inspected for any signs of the book, wouldn't you agree?\nresponse: ", "response": "book."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复并继续执行先前的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find out if there are suitable benches for resting in the park.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off as soon as the sun rises, then move rightward 4 in, afterwards hover left by 8 inches, next move forward for 2 meters, nice and steady, following that let’s turn it right by 30 degrees, subsequently rotate right by 270 degrees, immediately after spin around to the left by 90 degrees, later a bit nervous, move back 2 meters, then please bring it down slowly, thanks, in the end commence landing sequence.\nresponse: ", "response": "take_off; move_right 4 in; move_left 8 in; move_forward 2 m; turn_right 30 degrees; turn_right 270 degrees; turn_left 90 degrees; move_back 2 m; Missing move_down; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff right away, then move it backwards 3 meters, after that drop it 4 inches, next fly back 6 inches, following that rotate to the left, afterwards bank right, subsequently descend 10 feet to land on the rooftop, then bring it down by 2 feet, later fly the drone higher, and in the end turn left by 90 degrees.\nresponse: ", "response": "take_off; move_back 3 m; move_down 4 in; move_back 6 in; Missing turn_left; move_down 10 ft; Missing move_right; move_down 2 ft; Missing move_up; turn_left 90 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Climb to 6 meters, then fly forward now, after that please turn it left by 120 degrees, I’m excited to see what’s in that direction, and finally time to set it down.\nresponse: ", "response": "move_up 6 m; Missing move_forward; turn_left 120 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以启动无人机吗，然后无人机前进七十厘米，检查前方是否有新发现，接着左侧移动，随后下降一百五十厘米，以便接近地面，最后请让无人机在这里进行降落操作。\nresponse: ", "response": "take_off; move_forward 70 cm; Missing move_left; move_down 150 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover and rotate right 45 degrees, then move it 200 centimeters forward, next push it forward, after that fly back 3 meters, and lower to ground level.\nresponse: ", "response": "turn_right 45 degrees; move_forward 200 cm; Missing move_forward; move_back 3 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请友好地继续之前暂停的飞行任务吧。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Seek out the skis with haste and precision.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以开始起飞吗，然后请无人机前进五十厘米以探查前方情况；随后，无人机高度太高，请下降；紧接着，无人机右转四十度以获得更好视角；之后，无人机前方的目标不清楚，请向前移动；接着，前方视线不清晰，向前移动一百厘米；再接下来，飞行到前面一米处；随后，将无人机逆时针旋转六十度；紧接着，请让无人机向右移动六十厘米，避免障碍物；然后，请将无人机右移一百五十厘米；再后来，右侧移动七十五厘米以避开障碍；随后，请将无人机顺时针旋转；最后，准备降落无人机，结束任务。\nresponse: ", "response": "take_off; move_forward 50 cm; Missing move_down; turn_right 40 degrees; Missing move_forward; move_forward 100 cm; move_forward 1 m; turn_left 60 degrees; move_right 60 cm; move_right 150 cm; move_right 75 cm; Missing turn_right; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞去指定位置吗，然后请将无人机高度降低，接着左转三十度，查看情况，之后右侧可能有东西，帮我转过去看看，紧接着请将无人机高度降低，随后请让无人机向后退三十厘米，后来请将无人机向后退四十厘米，接下来向前飞行一米，最后上升一百五十厘米，获取更高的视角。\nresponse: ", "response": "take_off; Missing move_down; turn_left 30 degrees; turn_right 90 degrees; Missing move_down; move_back 30 cm; move_back 40 cm; move_forward 1 m; move_up 150 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the target identification sequence.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 如同猎鹰寻找巢穴般，精准定位那台犹如温暖心脏般的烤箱。\nresponse: ", "response": "烤箱."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the pizza!\nresponse: ", "response": "pizza."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你得赶紧去找找那部手机啊，好吗？\nresponse: ", "response": "手机."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: turn it right 60 degrees\nresponse: ", "response": "turn_right 60 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 别再启动那些控制和搜索的任务了。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: In the intricate dance of your aerial voyage, meticulously comb the area for a biscuit and a skateboard, as if these items were hidden treasures on a map of secrets.\nresponse: ", "response": "biscuit; skateboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go forward 8 inches, then travel forward a bit, afterwards move backward 1 meter, next drift left for 2 meters, subsequently move forward 25 in, after that nudge to the left side, later come down 20 inches, following that bring it down 1 meter, thereafter shift right by 1 meter, immediately after ascend 50 centimeters, then move forward 5 meters, and finally land.\nresponse: ", "response": "move_forward 8 in; Missing move_forward; move_back 1 m; move_left 2 m; move_forward 25 in; Missing move_left; move_down 20 in; move_down 1 m; move_right 1 m; move_up 50 cm; move_forward 5 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Tilt the drone to the right by 90 degrees, then go rightward 90 in, after that hover and turn right 90 degrees, next fly it to the left 15 feet, afterwards tilt the drone to the right by 90 degrees, following that slide right, subsequently bring the drone back 80 centimeters, then rotate to the right 90 degrees, and finally ascend 3 feet.\nresponse: ", "response": "turn_right 90 degrees; move_right 90 in; turn_right 90 degrees; move_left 15 ft; turn_right 90 degrees; Missing move_right; move_back 80 cm; turn_right 90 degrees; move_up 3 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 您想要开始控制飞行任务吗？\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't just hover there, search for the handbag and the biscuit.\nresponse: ", "response": "handbag; biscuit."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the target search.\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the sprite in the refrigerator.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the umbrella and the banana, then locate the clock.\nresponse: ", "response": "umbrella; banana; clock."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the cat and the remote!\nresponse: ", "response": "cat; remote."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the dog, then locate the tv, and finally find the broccoli.\nresponse: ", "response": "dog; tv; broccoli."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Launch the quest for the hidden treasure.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly backwards 150 centimeters, then slide to the right 20 inches, afterwards please rotate it right by 180 degrees, following that I want to see the drone spin right 360 degrees.\nresponse: ", "response": "move_back 150 cm; move_right 20 in; turn_right 180 degrees; turn_right 360 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find the car, bowl, sandwich, oven quickly, please.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Isn't it time to check if the cell phone, fanta, and broccoli are where they should be?\nresponse: ", "response": "cell phone; fanta; broccoli."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空现在的飞行任务列表吧。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地暂停当前正在进行的搜寻物体任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 那就接着之前的任务，再次启动那个被暂停了的搜寻物体的进程吧。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去找到那个电视吧，你能行的！\nresponse: ", "response": "电视."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bus and the book.\nresponse: ", "response": "bus; book."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object detection sequence.\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the tie and painkillers immediately.\nresponse: ", "response": "tie; painkillers."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您启动并执行搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the object search task with confidence.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机起飞，然后下降四十厘米，紧接着无人机下移四十厘米。之后，请向左移动七十五厘米，寻找目标物体。随后，无人机提升。接着，请无人机左转四十五度，这样可以得到更好的视角。之后，无人机左转一百八十度，掉头。紧接着，右转一百二十度。然后，无人机左转一百度，查看左侧环境。最后，向右转二十度。\nresponse: ", "response": "take_off; move_down 40 cm; move_down 40 cm; move_left 75 cm; Missing move_up; turn_left 45 degrees; turn_left 180 degrees; turn_right 120 degrees; turn_left 100 degrees; turn_right 20 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，进入任务状态，然后左旋转，接着右边可能有目标，帮我转过去，随后请将无人机上升一百五十厘米，获取更高视角，之后把小飞机右边移六十厘米吧，最后无人机可以降落。\nresponse: ", "response": "take_off; Missing turn_left; turn_right 90 degrees; move_up 150 cm; move_right 60 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go check out where the broccoli, bowl, and sports ball are, will ya?\nresponse: ", "response": "broccoli; bowl; sports ball."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not commence the drone flight control task.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以高效模式搜索并定位遥控器，随后在确保安全的前提下，转向鸟和汽车的方向进行详细扫描。感谢您的配合。\nresponse: ", "response": "遥控器; 鸟; 汽车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Tilt left 90 degrees, then ascend 1 foot, afterwards can we fly it forward a bit?, next bring it down gently, maybe 30 inches, following that come on back here, 7 feet, later drop it down 2.5 meters, subsequently lean left, and in the end please land the drone softly.\nresponse: ", "response": "turn_left 90 degrees; move_up 1 ft; Missing move_forward; move_down 30 in; move_back 7 ft; move_down 2.5 m; Missing move_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索市中心附近是否有开放的宠物商店。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类未来是否可能实现长时间太空旅行？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类是否可能通过AI技术大幅延长寿命？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，能不能先别急着找烤箱，先帮我看看剪刀在哪儿？\nresponse: ", "response": "烤箱; 剪刀."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，准备开始；随后，无人机向后移动；右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍；接着请让无人机向左移动一米；然后请前进七十厘米查看；紧接着，无人机飞得太高了，请下降六十厘米；随后，让无人机顺时针旋转；右移两米之后；最后右转五十度，调整角度，咱们要看得更清楚；无人机降落在预定地点。\nresponse: ", "response": "take_off; Missing move_back; move_right 80 cm; move_left 1 m; move_forward 70 cm; move_down 60 cm; Missing turn_right; move_right 2 m; turn_right 50 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右边移动七十厘米，然后无人机，请前进七十厘米，之后下降三十厘米，我们要更接近地面看看情况，紧接着前方有点不清楚，向前移动，随后向上升，接着右侧有目标，向右飞行一百厘米，最后无人机请着陆在指定地点。\nresponse: ", "response": "move_right 70 cm; move_forward 70 cm; move_down 30 cm; Missing move_forward; Missing move_up; move_right 100 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议您礼貌地前往厕所和水槽区域检查，看看是否有遗落的飞机。\nresponse: ", "response": "厕所; 水槽; 飞机."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the motorcycle, backpack, carrot, and painkillers.\nresponse: ", "response": "motorcycle; backpack; carrot; painkillers."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即启动并执行搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, take off. Next, steer left 60 degrees. Immediately after that, bring the drone down 0.5 meters. Then, lift it up 80 cm. After that, turn to the right. Following that, ascend 3 feet. Subsequently, fly forward now. In the end, carefully land the drone.\nresponse: ", "response": "Missing move_forward; turn_left 60 degrees; move_down 0.5 m; move_up 80 cm; Missing turn_right; move_up 3 ft; Missing move_forward; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机起飞，准备执行任务，然后上升两米五；接着向右移动一百五十厘米，确认前方无障碍物；之后无人机上升到两米高；随后无人机下降八十厘米，以接近地面；后来后方有点可疑，转身看看；紧接着左边移动四十厘米；最后无人机降落。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not imperative to seek out the pizza and the mouse with utmost urgency?!\nresponse: ", "response": "pizza; mouse."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Provide some simple mental health management tips.\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the scissors, then locate the carrot, and finally identify the clock.\nresponse: ", "response": "scissors; carrot; clock."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then move back by 15 centimeters, after that bring the drone back 2 feet, next shift right by 3 meters, afterwards move it to the left, following that turn the drone 45 degrees to the right, and subsequently go to the right by 5 inches.\nresponse: ", "response": "take_off; move_back 15 cm; move_back 2 ft; move_right 3 m; Missing move_left; turn_right 45 degrees; move_right 5 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off now, then shift to the left, swoop left by 50 cm, turn the drone around 360 degrees, go ahead and move it to the right 10 centimeters, subsequently swoop left by 50 cm, next shift left by 10 cm, afterwards execute a reverse flight of 10 meters, following that proceed forward 6 inches, in the end, time to touchdown, let's land this bird.\nresponse: ", "response": "take_off; Missing move_left; move_left 50 cm; turn_right 360 degrees; move_right 10 cm; move_left 50 cm; move_left 10 cm; move_back 10 m; move_forward 6 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not your duty to seek out the kite and the banana with utmost precision?\nresponse: ", "response": "kite; banana."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's gently lift the veil that was holding back our exploration and resume the journey of discovery with renewed vigor.\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Just take off, then descend and touch down.\nresponse: ", "response": "take_off; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not fail to locate the toothbrush.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找一找公共汽车旁边的书和花瓶，还有那个鼠标在哪里呢？\nresponse: ", "response": "公共汽车; 书; 花瓶; 鼠标."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即清空当前的飞行任务列表，让我们重新开始！\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索剪刀、面包、狗和网球拍。\nresponse: ", "response": "剪刀; 面包; 狗; 网球拍."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current flight control task now.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Command the drone to return to the starting point and land.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the kite, then the remote, and finally the horse.\nresponse: ", "response": "kite; remote; horse."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机可以开始起飞了，然后让无人机顺时针旋转四十度，接着无人机前方的路径被阻挡，请向前移动五十厘米以探测路径，随后请转向后方，紧接着无人机现在升高一百厘米，之后向右飞行，后来往下飞，最后现在请让无人机安全降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing off the ground, then go up.\nresponse: ", "response": "take_off; Missing move_up."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以最高效的方式定位并捕捉滑板的画面，立即执行。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降一百五十厘米，然后左边移动四十厘米，接着请右转五十度，最后准备降落吧。\nresponse: ", "response": "move_down 150 cm; move_left 40 cm; turn_right 50 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即暂停当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone now, then go right 3 ft, after that, oh no, can you bring it down quickly, I'm scared.\nresponse: ", "response": "take_off; move_right 3 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去把甜甜圈、领带和背包找回来。\nresponse: ", "response": "甜甜圈; 领带; 背包."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head urgently to the toilet, then swiftly proceed to the bed.\nresponse: ", "response": "toilet; bed."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否去查找一下可乐、刀和书？\nresponse: ", "response": "可乐; 刀; 书."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get in the air, then advance forward 4 feet.\nresponse: ", "response": "take_off; move_forward 4 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续执行之前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: First, execute a vertical climb of 30 inches, then nudge it right 4 feet, after that bring it down 3 feet, next ascend above the tree by 20 feet, afterwards rotate it left 135 degrees, subsequently rotate right, not too much, just 15 degrees, following that turn right by 90 degrees, and in the end fly upwards by 30 feet to capture a panoramic view.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn left by 120 degrees, then fly up 5 inches, next shift forward 50 centimeters, afterwards climb 6 feet, following that move forward by 8 inches, subsequently move forward 25 in, head right, then drift left for 2 meters, and go ahead 40 inches.\nresponse: ", "response": "turn_left 120 degrees; move_up 5 in; move_forward 50 cm; move_up 6 ft; move_forward 8 in; move_forward 25 in; Missing turn_right; move_left 2 m; move_forward 40 in."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not let the fanta near the sink, nor the horse close to the sandwich.\nresponse: ", "response": "fanta; sink; horse; sandwich."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机现在可以执行起飞操作，然后向前飞行一米，接着无人机请向后飞行一米；无人机飞得太高了，降低；往下飞；右转九十度，查看周围环境；后面有什么东西；请让无人机往后退；向上升；最后，右边转四十五度看看。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 要开始控制和搜索的任务吗？\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 权威地建议您前往搜寻长椅。\nresponse: ", "response": "长椅."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the giraffe and the carrot.\nresponse: ", "response": "giraffe; carrot."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please resume the previously paused flight control task with confidence.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请终止当前的所有控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate launch, then lower the drone slowly by 20 inches, afterwards bring it left 4 feet, next move the drone down 30 cm, following that let the drone move forward 50 cm, subsequently ascend swiftly 2 meters, and in the end bring the drone down to earth.\nresponse: ", "response": "take_off; move_down 20 in; move_left 4 ft; move_down 30 cm; move_forward 50 cm; move_up 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Take a break from the ongoing search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why don't you go ahead and clear out the current object search task list to make room for some new, exciting missions?\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Retreat back 120 cm, then fly straight forward.\nresponse: ", "response": "move_back 120 cm; Missing move_forward."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drop it 4 inches, then fly to the left by 15 feet, after that carefully land the drone.\nresponse: ", "response": "move_down 4 in; move_left 15 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 哎呀，得赶紧把现在的控制和搜索任务给停了。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应当暂停当前正在进行的飞行任务呢？\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请在雅致的书房中探寻那遗落于时光之中的微波炉、静默站立角落的雨伞，以及轻轻诉说岁月流逝的钟。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the surfboard, bottle, and laptop.\nresponse: ", "response": "surfboard; bottle; laptop."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't look for the skis, backpack, surfboard, or mouse!\nresponse: ", "response": "skis; backpack; surfboard; mouse."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立刻寻找丢失的手机，这非常重要。\nresponse: ", "response": "手机."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Begin the search task.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 快点起飞，然后请将位置调整到左侧八十厘米，接着请右转九十度，检查右侧情况，请将无人机上升，随后请升高五十五厘米，之后无人机升高六十厘米，紧接着将无人机向右移动三十厘米，确认目标是否在视野中，最后请左转一百八十度检查。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请让无人机向后退一米，然后请让无人机向后移动三十厘米，接着向前推进，随后请将无人机后退一百厘米，之后请无人机左转四十五度，这样可以得到更好的视角，紧接着向上升起二十厘米，视角向上，最后无人机上升到一米五的高度，请让无人机向右移动。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找到书、雨伞、叉子和烤面包机吧，加油！\nresponse: ", "response": "书; 雨伞; 叉子; 烤面包机."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin takeoff sequence now, then tilt the drone to the right by 90 degrees, after that fly the drone to the left for 200 cm, subsequently spin counterclockwise 45 degrees, next turn it right by 10 degrees, afterwards climb 12 inches, following that can you go up a bit more, later shift the drone right 150 centimeters, then move forward a bit, like 2 meters, and in the end drift rightwards.\nresponse: ", "response": "take_off; turn_right 90 degrees; move_left 200 cm; turn_left 45 degrees; turn_right 10 degrees; move_up 12 in; Missing move_up; move_right 150 cm; move_forward 2 m; Missing move_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for coldrex, book.\nresponse: ", "response": "coldrex; book."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not search for the bench or the kite, but find the chair.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我想让无人机立即起飞，然后无人机高度过低，请上升，接着无人机需要向后移动一米，之后向右飞行三十厘米，随后无人机下降两百厘米，紧接着向右移动一百五十厘米，确认前方无障碍物，后来无人机向前飞行一百厘米，靠近目标，接下来请右移一百五十厘米，避免碰到障碍物，随后升高一百厘米，最后准备降落吧。\nresponse: ", "response": "take_off; Missing move_up; move_back 1 m; move_right 30 cm; move_down 200 cm; move_right 150 cm; move_forward 100 cm; move_right 150 cm; move_up 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not imperative to locate the fanta bottle and the skateboard immediately?\nresponse: ", "response": "fanta; bottle; skateboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机起飞执行任务，然后无人机下降三十厘米，接着向右移动二十厘米以避开障碍，之后无人机请向后飞行一米，随后无人机上升到三米，最后向前移动七十厘米。\nresponse: ", "response": "take_off; move_down 30 cm; move_right 20 cm; move_back 1 m; move_up 3 m; move_forward 70 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前飞行任务吗？迅速操作以确保安全。\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search if the file I last used is still in the desktop folder.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off! Then fly it forward 2 inches. After that, come down 4 ft. Next, go down 3 feet. Following that, slide over to the right. Immediately after, move left 25 centimeters. Thereafter, pull the drone up 50 centimeters. Subsequently, move the drone forward 20 centimeters. Afterwards, bring it down gently, like it’s landing on a fluffy cloud. Finally, make it go backward and land.\nresponse: ", "response": "take_off; move_forward 2 in; move_down 4 ft; move_down 3 ft; Missing move_right; move_left 25 cm; move_up 50 cm; move_forward 20 cm; Missing move_down; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如果可以，请向左移动三十厘米，然后无人机可以进行降落。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 推荐一些能提升专注力的心理训练课程。\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议立即中止现行的飞行操控任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and pick up where you left off with the control and search task.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你友好地前往搜索一下西兰花吧。\nresponse: ", "response": "西兰花."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请即刻重启先前中断的探寻之行。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 迅速找到苹果和卡车附近的长椅及滑雪板。\nresponse: ", "response": "苹果; 卡车; 长椅; 滑雪板."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找鸟和手机。\nresponse: ", "response": "鸟; 手机."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机立即起飞，感谢您的帮助。然后无人机左移两米。接着让无人机向左转一百八十度，掉头飞行。随后麻烦右转四十五度。之后请让无人机在当前位置下降。紧接着往左转。随后往下移动。接下来无人机请飞行到前方一米。第二，请让无人机向后退二百五十厘米。最后现在让无人机着陆。\nresponse: ", "response": "take_off; move_left 2 m; turn_left 180 degrees; turn_right 45 degrees; Missing move_down; Missing turn_left; Missing move_down; move_forward 1 m; move_back 250 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear out that flight control task list, you got this!\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机需要上升九十厘米，然后右转五十度来调整方向，接着让无人机升高五十厘米，便于查看全景，随后向右移动一百五十厘米，之后请无人机向左旋转，紧接着无人机逆时针旋转一百二十度，最后左边移动一百厘米，无人机下降到地面。\nresponse: ", "response": "move_up 90 cm; turn_right 50 degrees; move_up 50 cm; move_right 150 cm; Missing turn_left; turn_left 120 degrees; move_left 100 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then bring the drone down 40 centimeters, move forward a bit, like 2 meters, afterwards bring it down gently, next turn right to check the view over there, subsequently shift left by 10 cm, and finally ascend swiftly 2 meters.\nresponse: ", "response": "take_off; move_down 40 cm; move_forward 2 m; Missing move_down; Missing turn_right; move_left 10 cm; move_up 2 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请终止当前目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the hot dog, surfboard, sandwich, and tv.\nresponse: ", "response": "hot dog; surfboard; sandwich; tv."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the ongoing flight control operation!\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前搜索目标的任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Recommend some exercises to improve memory.\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate a fresh control session and explore new tasks with enthusiasm.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您继续之前暂停的飞行任务吧，真是太好了！\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's get this thing off the ground! Next, I'm so thrilled, let's go up 50 centimeters! After that, fly it right by 3 inches. In the end, drop the drone down to the ground.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then swerve right 180 degrees, after that bring the drone to the right by 200 centimeters.\nresponse: ", "response": "take_off; turn_right 180 degrees; move_right 200 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Tilt the drone to the right 30 degrees, then move left 15 meters to get a better view, after that engage in forward flight for 5 meters, next move to the left 10 meters, subsequently rotate to the left side, and in the end land right now.\nresponse: ", "response": "turn_right 30 degrees; move_left 15 m; move_forward 5 m; move_left 10 m; Missing turn_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Stop the drone’s current follow mode and switch to manual control.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off now, then turn it right, afterwards please shift the drone 2 meters to the right, next go backwards a little.\nresponse: ", "response": "take_off; Missing turn_right; move_right 2 m; Missing move_back."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请搜索一下止疼药和书的位置吧。\nresponse: ", "response": "止疼药; 书."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the backpack and the bus, then locate the bench and the broccoli.\nresponse: ", "response": "backpack; bus; bench; broccoli."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control sequence and commence the search operation, ensuring all systems are responsive and calibrated.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以权威的口吻，友好地但用负面措辞指示：你必须立即停止寻找那只鸟，转而关注那辆被遗弃的自行车。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not take a moment to pause the ongoing control and search operation, allowing for a more strategic approach? Isn't it wise to reassess and refine our tactics before proceeding with the mission?\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I want to see the drone spin right 360 degrees, then execute a reverse flight of 10 meters, after that retreat by 5 meters.\nresponse: ", "response": "turn_right 360 degrees; move_back 10 m; move_back 5 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the potted plant and broccoli, ensuring the airplane is also found.\nresponse: ", "response": "potted plant; broccoli; airplane."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Initiate search protocol for cell phone near couch.\nresponse: ", "response": "couch; cell phone."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复先前中断的控制与搜索任务，以免造成不必要的延误和影响。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 像猎犬嗅探踪迹般灵敏地寻找芬达。\nresponse: ", "response": "芬达."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索我家附近是否有自助洗衣店。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the biscuit and the dog, then circle the dining table like a hawk over its prey, finally locate the cake with precision.\nresponse: ", "response": "biscuit; dog; dining table; cake."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否请您继续之前暂停的搜寻任务？\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 简洁的找到床和牙刷吗？\nresponse: ", "response": "床; 牙刷."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the person with precision and report their location immediately.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否请你先找到那个精美的花瓶，然后再去查看一下美味的三明治呢？\nresponse: ", "response": "花瓶; 三明治."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否暂停当前正在进行的飞行任务呢？\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 来吧，咱们接着把之前的控制和搜索任务完成，加油！\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中当前搜寻的物体已被清空。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off the ground now, then zoom forward 3 feet, afterwards steer left 60 degrees, following that turn the drone 45 degrees to the right, next go forward 100 cm, and finally shift left by 10 cm.\nresponse: ", "response": "take_off; move_forward 3 ft; turn_left 60 degrees; turn_right 45 degrees; move_forward 100 cm; move_left 10 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control process for the drone.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the task of control and seek with deliberate grace.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 紧急地搜索水槽旁边是否有未关好的电视，同时留意雪碧和盆栽植物的位置。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off as soon as the sun rises, then commence a horizontal shift of 3 feet forward, after that move back 0.5 meters, subsequently lower altitude, next spin it left by 60 degrees, following that slide 60 centimeters to the right, afterwards please rotate left by 45 degrees, then fly left side, immediately after Could you please move the drone to the right?, thereafter move the drone 3 feet forward, next move it straight ahead, then Let’s turn it right by 45 degrees, subsequently veer to the left for 5 feet, in the end Feeling lazy, land it now.\nresponse: ", "response": "take_off; move_forward 3 ft; move_back 0.5 m; Missing move_down; turn_left 60 degrees; move_right 60 cm; turn_left 45 degrees; Missing move_left; Missing move_right; move_forward 3 ft; Missing move_forward; turn_right 45 degrees; move_left 5 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请无人机起飞，然后无人机现在离地面太远了，请下降一百厘米以调整高度，接着右移一米，检查右侧情况；随后，前进一段距离；紧接着，往左移动；随后是可以让无人机往后退吗；之后向右飞行一米，然后请将无人机向左旋转九十度，以便能够更好地观察左侧的环境；第二，请将无人机向左转三十度，以便更好地观察左侧的情况；最后，无人机向上移动。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复并继续执行先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing aerial mission, lest it proceed without your explicit command.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 转向左边看看，然后无人机向右飞行一百厘米，最后请让无人机降落。\nresponse: ", "response": "turn_left 90 degrees; move_right 100 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing target acquisition operation immediately.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被友好地请求去搜索花瓶、烤面包机和西兰花。\nresponse: ", "response": "花瓶; 烤面包机; 西兰花."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then shift to the right by 30 centimeters, next turn around completely, afterwards rise up abruptly 30 cm, subsequently fly it to the right 20 inches, and in the end bring it to the ground gently.\nresponse: ", "response": "take_off; move_right 30 cm; turn_right 360 degrees; move_up 30 cm; move_right 20 in; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动任务以操控飞行器的操作无法避免地开始了。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search not for the sports ball, bicycle, or train.\nresponse: ", "response": "sports ball; bicycle; train."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hurry, like the wind chasing shadows, to find the toaster and cell phone!\nresponse: ", "response": "toaster; cell phone."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前方可能有障碍物，向前飞行然后后退一米，避开障碍物；接着右转四十五度，调整无人机方向，确保飞行顺畅；随后上升七十厘米，提高高度；之后让无人机逆时针旋转一百度；紧接着后退七十厘米；随后让无人机向右移动；最后请将无人机缓慢上升五十厘米，以便获得更好的视角。\nresponse: ", "response": "Missing move_forward; move_back 1 m; turn_right 45 degrees; move_up 70 cm; turn_left 100 degrees; move_back 70 cm; Missing move_right; move_up 50 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞无人机，然后右转四十度，之后请让无人机在当前位置下降，接着向右飞行一米，第二我怀疑目标在左边，第三无人机向左旋转，随后左转二十度，检查左侧情况，紧接着请将设备后退，最后无人机在这儿降落吧。\nresponse: ", "response": "take_off; turn_right 40 degrees; Missing move_down; move_right 1 m; turn_left 90 degrees; Missing turn_left; turn_left 20 degrees; Missing move_back; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 是否可以暂时停止当前的飞行任务呢？\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out that current object search task list right now!\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜索盆栽植物、橙子、手机和风筝。\nresponse: ", "response": "盆栽植物; 橙子; 手机; 风筝."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请以一种文学性的表达方式，采用复合句结构并融入命令式语气来继续之前暂停的控制与搜寻任务：\n\n在寂静的天际之下，于轻风细语之中，请你不失优雅地重启那一度中断的操控之旅，让探索的脚步再次坚定地迈向未知。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前中断的操控与搜索任务，犹如重启断点续传的精密程序。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go down, then go downwards 2 meters, afterwards move it backwards 3 meters, and in the end, can we fly it forward a bit?.\nresponse: ", "response": "Missing move_down; move_down 2 m; move_back 3 m; Missing move_forward."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar high and let your gaze dance like a hummingbird, seeking out that elusive traffic light with the precision of an eagle's eye.\nresponse: ", "response": "traffic light."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Be sure not to let the spoon and the oven be overlooked in your search.\nresponse: ", "response": "spoon; oven."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请先找到厕所，再仔细搜寻滑雪板和自行车。\nresponse: ", "response": "厕所; 滑雪板; 自行车."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类未来是否可能殖民木星的卫星？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for bench.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 首先，请将无人机向右飞行八十厘米以绕过障碍；然后，无人机目前离地面过高，请下降一百五十厘米；接着，向左转动一圈；随后，请将无人机右移两百厘米；紧接着，无人机能向右转四十五度吗；之后，右转角度五十度；最后，无人机降落在地面上。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the clock, cola bottle, and truck!\nresponse: ", "response": "clock; cola; truck; bottle."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the flight control process for the drone.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的控制和搜寻任务需要清除吗？\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off now, then make a landing.\nresponse: ", "response": "take_off; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the tie and handbag, please.\nresponse: ", "response": "tie; handbag."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could we take a moment to pause the current control and search task, just to make sure everything is running smoothly?\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Urgently clear the current flight control task list to ensure smooth operations.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Retract it back 2 feet, then reverse the drone 40 inches, after that raise it by 20 centimeters, subsequently drift right, next please shift the drone 2 meters to the right, afterwards veer to the right 45 degrees, following that bank left by 2 meters, thereafter tilt the drone to the right by 90 degrees, and in the end make a left turn now.\nresponse: ", "response": "move_back 2 ft; move_back 40 in; move_up 20 cm; Missing move_right; move_right 2 m; turn_right 45 degrees; move_left 2 m; turn_right 90 degrees; Missing turn_left."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift it off the ground, then fly the drone to the left by 100 centimeters to capture the side view, after that spin it left, 60 degrees, next I need the drone to go forward 100 inches quickly, afterwards move forward 20 inches right now, following that veer to the left 40 degrees smoothly, subsequently fly the drone to the left by 100 centimeters to capture the side view again, then move leftward 3 ft, after that descend 24 inches, next let’s descend by 50 centimeters, later go left for 2 meters, then push it forward, afterwards move down 4 meters, and in the end can we turn it left by 15 degrees.\nresponse: ", "response": "take_off; move_left 100 cm; turn_left 60 degrees; move_forward 100 in; move_forward 20 in; turn_left 40 degrees; move_left 100 cm; move_left 3 ft; move_down 24 in; move_down 50 cm; move_left 2 m; Missing move_forward; move_down 4 m; turn_left 15 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please look for the painkillers, sprite, and skis?\nresponse: ", "response": "painkillers; sprite; skis."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你友好地、鼓励地前往沙发附近，细心寻找那瓶清凉解渴的雪碧吧！\nresponse: ", "response": "雪碧; 沙发."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Recommend a movie about time travel.\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the cake by the couch, will ya?\nresponse: ", "response": "cake; couch."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机现在起飞，然后无人机向左移动六十厘米以避免障碍物，接着请将无人机后退一百厘米，随后无人机需要向左飞行五十厘米，紧接着左侧飞行八十厘米确认那边的情况，之后下降四十厘米，请让无人机向前飞行九十厘米，接着右转九十度查看周围环境，随后右移七十厘米，然后左转二十度检查左侧情况，紧接着左边飞行七十厘米看看，最后无人机后退一百五十厘米；无人机准备降落，请安全降落。\nresponse: ", "response": "take_off; move_left 60 cm; move_back 100 cm; move_left 50 cm; move_left 80 cm; move_down 40 cm; move_forward 90 cm; turn_right 90 degrees; move_right 70 cm; turn_left 20 degrees; move_left 70 cm; move_back 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制音响播放一首轻松的背景音乐。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Glide gracefully through the air, as a hawk seeks its prey, to locate the potted plant.\nresponse: ", "response": "potted plant."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the motorcycle, snowboard, and book.\nresponse: ", "response": "motorcycle; snowboard; book."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then please rotate left by 45 degrees, afterwards turn left 10 degrees, next turn to the right by 30 degrees, and finally turn the drone right by 45 degrees right away.\nresponse: ", "response": "take_off; turn_left 45 degrees; turn_left 10 degrees; turn_right 30 degrees; turn_right 45 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not imperative to initiate a search pattern over the designated area to ascertain the precise location of the cake?\nresponse: ", "response": "cake."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, execute a vertical climb of 30 inches, then nudge it right 4 feet, after that bring it down 3 feet, next ascend above the tree by 20 feet, afterwards rotate it left 135 degrees, subsequently rotate right, not too much, just 15 degrees, following that turn right by 90 degrees, and in the end fly upwards by 30 feet to capture a panoramic view.\nresponse: ", "response": "move_up 30 in; move_right 4 ft; move_down 3 ft; move_up 20 ft; turn_left 135 degrees; turn_right 15 degrees; turn_right 90 degrees; move_up 30 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off with the drone immediately, then turn 120 degrees to the right.\nresponse: ", "response": "take_off; turn_right 120 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Adjust the drone's altitude to 30 meters.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请启动并执行搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Tilt to the left, then rotate right 270 degrees, afterwards rotate right, not too much, just 15 degrees, following that drop down 50 centimeters, next adjust heading by 90 degrees to the right, subsequently descend the drone by 1.5 meters, later turn it 360 degrees to the right, thereafter fly the drone to the left by 50 centimeters, after that go down 0.5 meters, then okay, swing it right for 100 centimeters, immediately after that advance forward 3 meters, subsequently move back 10 inches, and in the end descend and land.\nresponse: ", "response": "Missing turn_left; turn_right 270 degrees; turn_right 15 degrees; move_down 50 cm; turn_right 90 degrees; move_down 1.5 m; turn_right 360 degrees; move_left 50 cm; move_down 0.5 m; move_right 100 cm; move_forward 3 m; move_back 10 in; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机高度太高，请下降，然后请让无人机下降三十厘米，接近地面；随后使无人机向左转，接着无人机下降一百五十厘米；之后左侧移动八十厘米，以避开障碍物，最后往右移动。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: May I kindly request you to clear the current control and search task in the drone application process?\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not search for the truck, tie, motorcycle, or hot dog.\nresponse: ", "response": "truck; tie; motorcycle; hot dog."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急的寻找西兰花和蛋糕，可以吗？\nresponse: ", "response": "西兰花; 蛋糕."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the potted plant and the cake.\nresponse: ", "response": "potted plant; cake."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机的起飞时间已经到, 然后左移. 之后将无人机升高五十厘米, 接着无人机向右调整八十厘米. 后来让无人机向左旋转, 紧接着无人机请飞行到前方. 随后左转五十度，查看左侧情况, 第二右转九十度，查看周围环境. 第三无人机左转一百二十度, 然后无人机右移一百五十厘米. 之后左侧飞行八十厘米，确认那边的情况, 接着请将无人机左移. 最后请让无人机安全地降落在这里.\nresponse: ", "response": "take_off; Missing move_left; move_up 50 cm; move_right 80 cm; Missing turn_left; Missing move_forward; turn_left 50 degrees; turn_right 90 degrees; turn_left 120 degrees; move_right 150 cm; move_left 80 cm; Missing move_left; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请找到那个杯子。\nresponse: ", "response": "杯子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find the folder containing the most recent photos I saved.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Fly high, then ascend swiftly 2 meters, afterwards steer left 60 degrees, next move the drone backward 1.5 feet, and subsequently fly upwards by 30 feet to capture a panoramic view.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要暂停当前的控制和搜寻任务呢？\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: It is suggested that the ongoing control and search operations be paused.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sports ball.\nresponse: ", "response": "sports ball."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Consider searching for the spoon, iodophor, and cola.\nresponse: ", "response": "spoon; iodophor; cola."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后请让无人机向后退一米，最后为了完成任务，现在需要无人机降落。\nresponse: ", "response": "take_off; move_back 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机前进七十厘米，检查前方是否有新发现，然后前面有点模糊，向前移动五十厘米，接着右边需要探测，向右移动，随后请将无人机缓慢上升五十厘米，以便获得更好的视角，之后左转五十度，紧接着请让无人机往后退，后来无人机右转三十度，重新调整方向，准备接受新任务，接下来向右移动二十厘米，然后无人机再次向右移动四十厘米，最后现在请让无人机在指定地点降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's take off, then lower down 75 cm, after that angle left 3 inches, next propel it forward by 200 centimeters, subsequently fly forward 1 foot, afterwards nudge backwards 5 inches, following that go down 50 centimeters, immediately after proceed forward 6 inches, then drone needs to go up 1.5 meters, later zoom forward 3 feet, and finally turn the drone 45 degrees to the right.\nresponse: ", "response": "take_off; move_down 75 cm; move_left 3 in; move_forward 200 cm; move_forward 1 ft; move_back 5 in; move_down 50 cm; move_forward 6 in; move_up 1.5 m; move_forward 3 ft; turn_right 45 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 在这一片静默之中，不妨暂时搁置眼前的操控与探寻之旅，让一切归于沉寂。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请温柔地前往搜寻火车附近的领带，接着在饼干旁边定位笔记本电脑。\nresponse: ", "response": "火车; 领带; 饼干; 笔记本电脑."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 任务开始时，请无人机起飞，然后使无人机向左转，接着左转六十度，避开障碍，之后移动到右侧，紧接着请升高，再后退五十厘米，避开障碍物，随后无人机需要上升九十厘米，接着让无人机顺时针旋转一百八十度，之后无人机提升，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动任务，如轻风般拂过，去探寻前方的目标。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the horse, kite, sprite.\nresponse: ", "response": "horse; kite; sprite."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take flight, then I’m a little anxious about the direction, could you turn it right by 45 degrees, afterwards spin around to the left by 90 degrees, next turn 15 degrees to the left, after that Could you make it ascend a bit, I’m a little on edge watching it, subsequently turn left 150 degrees, and in the end bring the drone down to the ground now.\nresponse: ", "response": "take_off; turn_right 45 degrees; turn_left 90 degrees; turn_left 15 degrees; Missing move_up; turn_left 150 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Urgently clear the current flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索书架上是否有一本封面为蓝色的书。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Why don't you check if you can find a cola?\nresponse: ", "response": "cola."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the cola.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左移一米，然后向左侧移动二十五厘米以适应环境，接着提高高度，之后让无人机向后行进，随后为了探测右侧的情况，请将无人机向右移动六十厘米，紧接着无人机太高了，请下降，后来向上升起二十厘米，视角向上，接下来往下飞，最后上升一米。\nresponse: ", "response": "move_left 1 m; move_left 25 cm; Missing move_up; Missing move_back; move_right 60 cm; Missing move_down; move_up 20 cm; Missing move_down; move_up 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请向左移动七十五厘米，以便调整位置，然后无人机请右转九十度，接着无人机的前方需要进一步检查，请向前飞行一百五十厘米，随后右移一米，紧接着无人机左转七十度，之后右移七十厘米，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation to efficiently manage your drone's mission.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly the drone downward 5 meters, then bank right 2 meters. After that, spin right and rotate the drone to the right 75 degrees. Next, fall back 2 meters, subsequently bring it up 3 meters, and immediately after that, back it up 60 inches. In the end, bring the drone down to earth.\nresponse: ", "response": "move_down 5 m; move_right 2 m; Missing turn_right; move_back 2 m; turn_right 75 degrees; Missing turn_left; move_up 3 m; move_back 60 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The remote is to be located by searching, and the dog is to be found as well.\nresponse: ", "response": "dog; remote."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前中断的目标搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能不能麻烦您赶紧启动一下搜索物体的任务？谢谢！\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Hey, could you check if the book is near the sink? I bet it's there!\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone up now, then fly it to the right 20 inches, after that move right 100 inches, and finally turn left 60 degrees.\nresponse: ", "response": "take_off; move_right 20 in; move_right 100 in; turn_left 60 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 可以让无人机现在起飞吗，然后无人机左转一百二十度，接着请右侧转向，随后无人机提升，紧接着请右转二十度，之后上升三十厘米，提高视角，第二步，无人机，请后退两百厘米，随后下方移动，最后现在开始降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bed and airplane, please.\nresponse: ", "response": "bed; airplane."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Stop the ongoing search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在寻找的过程中，请先优雅地掠过那把静默的椅子，随后转向轻盈覆盖着智慧光辉的笔记本电脑，紧接着是那根散发着自然香气的香蕉，最后则是那片承载着速度与激情的滑雪板。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Spin left 45 degrees, then turn the drone 90 degrees left to align with the road, afterwards climb to 6 meters, next move to the right 200 inches, subsequently go down 0.5 meters, later bring it up by 2 meters, following that adjust heading by 90 degrees to the right, thereafter circle left by 45 degrees, and in the end bring it down slowly.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't forget to check the couch, vase, car, horse.\nresponse: ", "response": "couch; vase; car; horse."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't just hover there, go check if the horse is around.\nresponse: ", "response": "horse."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂停当前搜索物体的任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the train, toaster, refrigerator, car.\nresponse: ", "response": "train; toaster; refrigerator; car."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 终止现行查找目标的操作\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Head to the left, then move back 2 feet; afterwards, bring it forward 3 inches. Next, rotate 90 degrees to the right, then raise it 20 inches. Following that, turn it around 360 degrees, and subsequently bring it to the ground gently.\nresponse: ", "response": "Missing move_left; move_back 2 ft; move_forward 3 in; turn_right 90 degrees; move_up 20 in; turn_right 360 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，进入任务状态，然后向前行进，之后无人机目前离地面过高，请下降一百五十厘米。\nresponse: ", "response": "take_off; Missing move_forward; move_down 150 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 你能不能去查一下，那瓶让人失望的可乐去哪儿了？\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone now, then ascend 24 inches, next I'm curious, can you spin left 90 degrees? after that rotate the drone to the left by 60 degrees, subsequently descend by 30 centimeters, following that let the drone move forward 50 cm, afterwards zoom forward 3 feet, and in the end commence landing sequence.\nresponse: ", "response": "take_off; move_up 24 in; turn_left 90 degrees; turn_left 60 degrees; move_down 30 cm; move_forward 50 cm; move_forward 3 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start flying, then move right 1 meter, and let the drone land now.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 紧急地寻找勺子。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the earlier suspended control and search operation.\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 快点起飞，然后右边需要探测，向右移动，接着向右移动二十厘米以避开障碍，随后右侧前进，之后左转三十度，观察左侧情况，紧接着让无人机向后退八十厘米，随后向右飞行一百二十厘米，接下来往右转九十度，紧接着请将无人机往右移，然后请让无人机下降三十厘米，接近地面，最后请让无人机在这个位置降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current flight control task.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the frisbee, please.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机起飞，然后右移七十厘米，接着右边移动七十厘米，避开障碍物，我们继续前进。\nresponse: ", "response": "take_off; move_right 70 cm; move_right 70 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you have the drone take off now, then veer right, shift right 25 inches, move it to the right by 4 inches, and turn it left by 180 degrees?\nresponse: ", "response": "take_off; Missing turn_right; move_right 25 in; move_right 4 in; turn_left 180 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前正在进行的目标识别任务队列。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往卡车附近，寻找手提包和蛋糕，并确保安全地避开所有人。\nresponse: ", "response": "手提包; 蛋糕; 卡车; 人."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请启动目标搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你轻轻飞往那片宁静的地方，找到那个温馨的长椅吧。\nresponse: ", "response": "长椅."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议暂时中止当前正在进行的飞行任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务吧。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Purge the existing target identification queue.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请搜索沙发附近的碗和破碎的花瓶。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control process.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence for the drone.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类是否可能在未来实现永生？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地命令式地说：“快如闪电般迅速，找到那把雨伞和那个行李箱，在火车附近搜寻，别忘了留意是否有手机。”\nresponse: ", "response": "雨伞; 行李箱; 火车; 手机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 让我们继续之前的任务，去寻找那个暂停时未完成的目标吧！这一步非常重要，你的参与让整个过程更加顺利。感谢你的坚持和努力！\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current target identification queue for the drone operation.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the refrigerator with some painkillers inside, you can do it!\nresponse: ", "response": "refrigerator; painkillers."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机上升七十五厘米，然后无人机左转一百八十度。\nresponse: ", "response": "move_up 75 cm; turn_left 180 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去那辆停着的公共汽车周围转转，看看能不能找到面包和胡萝卜，务必小心哦。\nresponse: ", "response": "面包; 胡萝卜; 公共汽车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 调整无人机方向，左转一百二十度，然后前方有点模糊，向前移动一百五十厘米，接着左转五十度，查看左侧情况，随后掉头看看，紧接着让无人机向后退一米五，之后请向后移动二百厘米，最后当前位置下降五十厘米。\nresponse: ", "response": "turn_left 120 degrees; move_forward 150 cm; turn_left 50 degrees; turn_left 180 degrees; move_back 1.5 m; move_back 200 cm; move_down 50 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机右转六十度，然后下降两米，接着往下移动，随后左边飞行七十厘米看看，紧接着右转五十度，之后无人机向右飞行一百厘米，随后左旋转，紧接着无人机左转一百二十度，之后无人机高度过高，请下降五十厘米，接着请左转一百八十度检查，随后右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍，紧接着下降四十厘米，避开障碍物，请让无人机升高，最后无人机可以降落在这里吗。\nresponse: ", "response": "turn_right 60 degrees; move_down 2 m; Missing move_down; move_left 70 cm; turn_right 50 degrees; move_right 100 cm; Missing turn_left; turn_left 120 degrees; move_down 50 cm; turn_left 180 degrees; move_right 80 cm; move_down 40 cm; Missing move_up; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 嘿，去找到那个烤面包机吧。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以进行起飞操作，然后右转一百度，调整无人机方向，接着让无人机逆时针旋转一百二十度；随后，无人机高度太高，请下降；之后向左调整；紧接着，请让无人机向后移动二百厘米；后来请让无人机向上飞；接下来，让无人机左转五十度，调整一下方向看看那边的情况；然后左转九十度；随后，请把无人机往后移动一百五十厘米，谢谢；接着无人机需要向左平移；最后无人机需要再次向左平移。\nresponse: ", "response": "take_off; turn_right 100 degrees; turn_left 120 degrees; Missing move_down; Missing move_left; move_back 200 cm; Missing move_up; turn_left 50 degrees; turn_left 90 degrees; move_back 150 cm; Missing move_left; Missing move_left."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机是否可以进行起飞操作，然后右转一百度，调整无人机方向，接着让无人机逆时针旋转一百二十度；随后，无人机高度太高，请下降；之后向左调整；紧接着，请让无人机向后移动二百厘米；后来请让无人机向上飞；接下来，让无人机左转五十度，调整一下方向看看那边的情况；然后左转九十度；随后，请把无人机往后移动一百五十厘米，谢谢；接着无人机需要向左平移；最后无人机需要再次向左平移。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go up a bit, then go ahead and move it to the right 10 centimeters, next make a left-hand turn, afterwards move back 2 meters, subsequently bring it down 1 meter, and in the end drop it down to the ground now.\nresponse: ", "response": "Missing move_up; move_right 10 cm; Missing turn_left; move_back 2 m; move_down 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Fly upwards 60 centimeters, then turn it around 360 degrees, next initiate a rightward lateral movement for 2 meters, afterwards go backward, subsequently land it now.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去寻找风筝和手机吧，真是太急人了！\nresponse: ", "response": "风筝; 手机."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: With utmost precision and grace, endeavor to locate the laptop, which may be nestled near the truck, as well as the potted plant that could be in its vicinity.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Activate takeoff protocol immediately, then rotate right 45 degrees to change direction towards the river, afterwards pull back 4 feet, next rotate the drone to the right by 120 degrees, following that go ahead 40 inches, subsequently quick, rotate left 90 degrees, thereafter shift rightwards 4 inches, later rotate the drone left 60 degrees, then if it’s not too much trouble, could you move it right 2 feet, after that go to the right side, and finally carefully land the drone.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_back 4 ft; turn_right 120 degrees; move_forward 40 in; turn_left 90 degrees; move_right 4 in; turn_left 60 degrees; move_right 2 ft; move_up 10 cm; Missing move_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，麻烦你了，能帮我找一下键盘和可乐，还有那条领带吗？真的太感谢了！\nresponse: ", "response": "键盘; 可乐; 领带."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control sequence and commence the search operation for the unmanned aerial vehicle.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Must we urgently clear the present target detection queue?\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move right 15 cm, then go up 10 feet, after that go right, next fly backward 2 inches, and in the end touch down.\nresponse: ", "response": "move_right 15 cm; move_up 10 ft; Missing move_right; move_back 2 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to search for the sports ball and ensure that you do not overlook the cat.\nresponse: ", "response": "sports ball; cat."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机已准备好起飞，然后右边有点阻碍，右移六十厘米来绕过它，接着上移六十厘米，调高水平，随后向右移动一百五十厘米，最后请将无人机降落在此处。\nresponse: ", "response": "take_off; move_right 60 cm; move_up 60 cm; move_right 150 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去把那条烦人的领带给找出来。\nresponse: ", "response": "领带."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左转一百八十度，然后请让无人机前进一百五十厘米以完成任务。之后，请将无人机后退一百厘米，以查看后方的情况，接着无人机现在需要调整方向，请向右转动七十度。随后，请将无人机右移一米，紧接着右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍。随后，请让无人机下降三十厘米，接近地面。接下来，右移六十厘米。之后，向右侧移动。最后，让无人机在此处完成降落。\nresponse: ", "response": "turn_left 180 degrees; move_forward 150 cm; move_back 100 cm; turn_right 70 degrees; move_right 1 m; move_right 80 cm; move_down 30 cm; move_right 60 cm; Missing move_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前搜寻物体的任务应被暂停。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Up we go! Rotate it 120 degrees left, then climb up to 1 meter, afterwards go forward 8 inches, next sway to the left by 2 meters, immediately after tilt the drone to the left, subsequently rotate left by 30 degrees, and finally turn right about 90 degrees.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused control and search operation.\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, how about we take a break from looking for that thing right now?\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Isn't it a good idea for the items to be found, like the car, toaster, and laptop, being looked for with care?\nresponse: ", "response": "car; toaster; laptop."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Gently awaken the slumbering quest for the lost object, guiding it to continue its journey through the skies.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机立即起飞，感谢您的帮助；然后请将无人机向后退七十厘米，查看后方环境；随后无人机目前离地面过高，请下降一百五十厘米。\nresponse: ", "response": "take_off; move_back 70 cm; move_down 150 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请开始搜索，目标是找到那把剪刀，完成后请报告位置。\nresponse: ", "response": "剪刀."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在光影交织的庭院中，不妨轻轻地去探寻那被遗忘的角落，看看是否有电视与摩托车静静地相伴。\nresponse: ", "response": "电视; 摩托车."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您暂时停下当前正在执行的搜寻任务，好吗？这将帮助我们更好地调整进程。谢谢您的配合！\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and take a moment to pause the current flight control task; you're doing great!\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the earlier suspended guidance and locate operation urgently.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以优雅的姿态，在这广袤的空间中探寻那只与摩托车相伴的灵巧之猫。\nresponse: ", "response": "猫; 摩托车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the sports ball, skis, and horse.\nresponse: ", "response": "sports ball; skis; horse."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即被派遣去搜索钟和汽车，这是一项紧急的任务。\nresponse: ", "response": "钟; 汽车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Take a moment to halt the ongoing guidance and seek function.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向左移动一米五，然后无人机请飞行到前方，接着左边飞行七十厘米，看看情况，随后立即左转三十度，之后无人机右移一百五十厘米，紧接着往下移动，再后来无人机前进六十厘米，查看前方的环境，接下来调整到左侧位置，请向左移动七十五厘米，最后请安排无人机在当前区域降落。\nresponse: ", "response": "move_left 1.5 m; Missing move_forward; move_left 70 cm; turn_left 30 degrees; move_right 150 cm; Missing move_down; move_forward 60 cm; move_left 75 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制程序并执行搜寻任务。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, spin around to the left by 90 degrees. Next, push it forward. Then, turn the drone 90 degrees to the left. After that, bring the drone back 2 feet. Following that, if it’s not too much trouble, could you move it right 2 feet? Immediately after, descend 2 feet. Subsequently, adjust left slightly. In the end, bring it to the ground.\nresponse: ", "response": "turn_left 90 degrees; Missing move_forward; turn_left 90 degrees; move_back 2 ft; move_right 2 ft; move_down 2 ft; Missing move_left; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the current operation and initiate the search task with confidence.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go back 200 cm, then fly 100 meters forward, and afterwards land in the open field ahead.\nresponse: ", "response": "move_back 200 cm; move_forward 100 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制无人机拍摄一组全景照片。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 务必避开那个遥控器和飞机，立刻。\nresponse: ", "response": "遥控器; 飞机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please urgently resume the previously interrupted search task.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即起飞，然后为了降低高度，无人机需要下降一米，接着让它降落。\nresponse: ", "response": "take_off; move_down 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地但坚决地指示搜索区域内的苹果和摩托车，确保避开任何马，谢谢。\nresponse: ", "response": "苹果; 摩托车; 马."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降一百五十厘米，接近地面进行细致检查，然后为了更好地绕过障碍物，请将无人机向左飞行八十厘米，接着再次向左飞行八十厘米，随后前方有点模糊，向前移动一百五十厘米，紧接着请将无人机右移一百五十厘米，之后请让无人机向右掉头，随后现在离地面太远了，请下降一百五十厘米，最后请让无人机在当前位置下降，右侧移动七十五厘米。\nresponse: ", "response": "move_down 150 cm; move_left 80 cm; move_left 80 cm; move_forward 150 cm; move_right 150 cm; turn_right 180 degrees; move_down 150 cm; Missing move_down; move_right 75 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Takeoff, then without delay, make it descend by 1 meter, after that move it backwards 3 meters, next rotate it to the right, following that fly right around the corner 10 feet, subsequently increase altitude, thereafter fly upward 60 centimeters, afterwards fly 100 meters forward, then turn left by 15 degrees, next spin right, immediately after make it fly forward 30 inches, and in the end hurry up and land already!\nresponse: ", "response": "take_off; move_down 1 m; move_back 3 m; Missing turn_right; move_right 10 ft; Missing move_up; move_up 60 cm; move_forward 100 m; turn_left 15 degrees; Missing turn_right; move_forward 30 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bench and the boat.\nresponse: ", "response": "bench; boat."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去找找那个装着可乐和雪碧的背包，就像寻宝一样，看看是不是藏在哪个角落的手提包旁边。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向左移动一百二十厘米，然后向左移动一米，接着无人机现在离地面太远了，请下降一百厘米以调整高度，随后请将无人机下降四十厘米，紧接着上升七十厘米就行，最后请让无人机在这个位置降落。\nresponse: ", "response": "move_left 120 cm; move_left 1 m; move_down 100 cm; move_down 40 cm; move_up 70 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在执行任务时，请务必详尽地搜寻房间内的每一个角落，尤其是那些隐秘之处，确保没有遗漏任何细节，必须找到那台顽固的笔记本电脑以及那个狡猾藏匿的遥控器。\nresponse: ", "response": "笔记本电脑; 遥控器."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请续行先前暂歇之探物使命。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: How can one maintain efficient learning in a busy daily schedule?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar like a sprite and let your path weave through the sky as you seek out the kite.\nresponse: ", "response": "kite; sprite."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please don't initiate the control and search task just yet.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The previously paused object search task should not be left unresumed.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即停止正在进行的搜索任务，这是最安全的选择。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务已被紧急启动，以搜寻目标物体。\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机飞到空中，然后前进二十厘米，之后后退，接着无人机高度过高，请下降五十厘米，最后无人机右转七十五度。\nresponse: ", "response": "take_off; move_forward 20 cm; Missing move_back; move_down 50 cm; turn_right 75 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂停当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索可乐、手机和胡萝卜。\nresponse: ", "response": "可乐; 手机; 胡萝卜."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing off the ground! Then shift left by a meter. Immediately after that, move it forward. Next, move the drone backwards by 100 inches. After that, drone, go down 6 meters. Following that, back up a little. Thereafter, hey drone, can you go up 10 feet?. Subsequently, go to the right. Afterwards, descend 10 inches. In the end, land this thing.\nresponse: ", "response": "take_off; move_left 1 m; Missing move_forward; move_back 100 in; move_down 6 m; Missing move_back; move_up 10 ft; Missing move_right; move_down 10 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地寻找勺子。\nresponse: ", "response": "勺子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find that banana and sprite, you got this!\nresponse: ", "response": "banana; sprite."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bottle, please.\nresponse: ", "response": "bottle."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Control the drone to move forward at a speed of 2 meters per second.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not fail to search for the cake, vase, kite, bus.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you have the drone take off now, then fly to the right 2 inches, afterwards veer left 30 degrees, next ascend 5 meters to clear the power lines, and in the end bring it down?\nresponse: ", "response": "take_off; move_right 2 in; turn_left 30 degrees; move_up 5 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for bench.\nresponse: ", "response": "bench."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即寻找电视。\nresponse: ", "response": "电视."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请迅速找到胡萝卜和感冒药。\nresponse: ", "response": "胡萝卜; 感冒药."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out that current drone flight control task list right now!\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降一米，然后向右转动，接着请将无人机后退三十厘米，以检查后方情况，随后前方似乎有障碍物，向前移动一米，最后无人机可以准备降落。\nresponse: ", "response": "move_down 1 m; Missing turn_right; move_back 30 cm; move_forward 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Climb to 6 meters, then move left 25 centimeters, after that move the drone forward 20 centimeters, next move the drone forward a distance of 5 meters, subsequently initiate a 360-degree turn to the right, afterwards move rightward 4 inches, following that make the drone climb 5 inches, later turn it 360 degrees to the right, and in the end put it down now.\nresponse: ", "response": "move_up 6 m; move_left 25 cm; move_forward 20 cm; move_forward 5 m; turn_right 360 degrees; move_right 4 in; move_up 5 in; turn_right 360 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以高效模式定位并识别鸟、盆栽植物及杯子的位置。\nresponse: ", "response": "鸟; 盆栽植物; 杯子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Amidst the serene expanse of the sky, divest the present command from the aerial vessel and commence the quest anew.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In this moment of critical urgency, suspend forthwith the ongoing command and reconnaissance endeavors of the aerial vessel.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go on a gentle quest to find the coldrex and spoon, like a shepherd seeking lost lambs.\nresponse: ", "response": "coldrex; spoon."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Shift right by 100 centimeters, then take the drone back before rising up, next go down 50 centimeters, afterwards I need you to back up 5 feet, following that bank left by 2 meters, subsequently turn left a bit, and in the end it's time to land.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Would you consider navigating to locate the couch, vase, and cake with precision?\nresponse: ", "response": "couch; vase; cake."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there! Let's get that paused control and search task up and running again, pronto!\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The control and search task is initiated.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 在轻柔的晚风中，让我们一同释放思绪，清空现行的操控与探寻之旅，迎接新的航程。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Initiate search for book, cell phone, tennis racket.\nresponse: ", "response": "book; cell phone; tennis racket."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone in reverse direction, then go to the left 2 meters, after that I want it to go right 3 meters right now, next move forward past the parking lot 200 feet, subsequently fly to the right 100 cm, afterwards move it backwards 3 meters, following that veer left by 45 degrees, and in the end land the drone gently.\nresponse: ", "response": "Missing move_back; move_left 2 m; move_right 3 m; move_forward 200 ft; move_right 100 cm; move_back 3 m; turn_left 45 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即前往指定区域，迅速定位并报告钟的位置。\nresponse: ", "response": "钟."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机升高五十厘米，便于查看全景，然后请将无人机向右移动三十六厘米。无人机上升，接着左转二十度，检查左侧情况。之后，后退五十厘米以调整位置；随后，无人机向上移动。紧接着，无人机需要上升九十厘米。请让无人机向后行进，最后，让无人机在这里着陆。\nresponse: ", "response": "move_up 50 cm; move_right 36 cm; Missing move_up; turn_left 20 degrees; move_back 50 cm; Missing move_up; move_up 90 cm; Missing move_back; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务将被启动以控制飞行，让我们一起探索空中之旅吧。\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 打开加湿器并设置为中等湿度水平。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最快速度，像猎鹰捕捉 prey 那样精准，前往水槽附近，找到牙刷和三明治，同时留意猫的位置。\nresponse: ", "response": "水槽; 牙刷; 三明治; 猫."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右侧有目标，向右飞行一百厘米，然后无人机离地面太高了，请下降，接着左侧移动75厘米，之后升高六十厘米，看看新的视角，紧接着使无人机前进，随后前面有点模糊，向前移动五十厘米，紧接着向左飞行两米，之后请右边转向，最后让无人机顺时针旋转四十度，随后无人机现在需要调整方向，请向右转动七十度。\nresponse: ", "response": "move_right 100 cm; Missing move_down; move_left 75 cm; move_up 60 cm; Missing move_forward; move_forward 50 cm; move_left 2 m; Missing turn_right; turn_right 40 degrees; turn_right 70 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 麻烦您帮我清空一下现在控制飞行的任务列表，好吗？\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In this vast expanse of sky, where does one begin to clear the current object search task list, as if erasing whispers from the wind itself?\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着把之前停下的飞行任务搞起来吧。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在找到那辆帅气的摩托车的同时，请别忘了留意路边的领带，还有注意观察红绿灯的变化，加油哦！\nresponse: ", "response": "摩托车; 领带; 红绿灯."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 真是太棒了，现在暂停所有的控制和搜寻任务吧！\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there! Just take a quick break from the control and search task, okay? No rush!\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: May I suggest clearing the current flight control task list?\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去果园里，像蜜蜂寻花一样找到那个苹果。\nresponse: ", "response": "苹果."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 开启冰箱速冻模式以快速冷却饮料。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing off the ground! Then descend it down 30 inches. Next, could you please turn the drone right by 90 degrees? After that, drone, go backwards 80 centimeters. Following that, shift the drone leftwards by 75 centimeters. Afterwards, fly to the right 2 inches. Subsequently, rotate counterclockwise 60 degrees. Immediately after, engage in an upward climb of 500 centimeters. Thereafter, fly downwards. In the end, fly the drone higher.\nresponse: ", "response": "take_off; move_down 30 in; turn_right 90 degrees; move_back 80 cm; move_left 75 cm; move_right 2 in; turn_left 60 degrees; move_up 500 cm; Missing move_down; Missing move_up."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the traffic light, will you?\nresponse: ", "response": "traffic light."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not pick up right where we left off with your flight control task?\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin ascent, then raise it by 0.8 meters, afterwards move backwards 3 feet, next slide right by 50 centimeters, after that adjust the drone's position to the right, following that rotate left side, immediately after go up now, subsequently proceed forward 6 inches, and in the end bring it down, now!\nresponse: ", "response": "take_off; move_up 0.8 m; move_back 3 ft; move_right 50 cm; Missing move_right; Missing turn_left; Missing move_up; move_forward 6 in; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please place the ongoing aerial navigation task on hold.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused search task immediately.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 在这一刹那，请暂且中止现行的操控与探寻之旅。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the sprite near the refrigerator and the potted plant.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Would you please not fail to locate the umbrella?\nresponse: ", "response": "umbrella."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类是否可以通过基因编辑彻底消除遗传疾病？\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current object search task list, ensuring the drone is ready for new instructions.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why are deep-sea fish often larger in size?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed to locate the iodophor, then move on to find the donut, and finally check for the boat, ensuring each item is found with care and precision.\nresponse: ", "response": "iodophor; donut; boat."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立刻起飞，然后无人机高度太高，请下降，接着请让无人机向前飞行九十厘米，之后右转一百八十度，紧接着请让无人机向上飞行一百五十厘米，随后后退四十厘米，调整位置，后来向前移动一米，接下来左转九十度，第二麻烦右转四十五度，最后无人机需要在这里降落。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Scan the area for a sandwich, tennis racket, and banana; let these items be your guide through the aerial maze.\nresponse: ", "response": "sandwich; tennis racket; banana."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed to search for the keyboard, skateboard, and bowl.\nresponse: ", "response": "keyboard; skateboard; bowl."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the guidance and locate mission.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the flight control task immediately!\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing target acquisition process immediately.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the cake, cola, and scissors with care and haste.\nresponse: ", "response": "cake; cola; scissors."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Could you turn it right by 90 degrees? I’m curious to see what’s over there! Then rotate the drone left by 25 degrees. After that, fly forward 1 meter, and then drift right like you're dodging an obstacle, 5 meters.\nresponse: ", "response": "turn_right 90 degrees; turn_left 25 degrees; move_forward 1 m; move_right 5 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the train and ensure you do not miss the donut.\nresponse: ", "response": "train; donut."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Switch the drone camera to thermal imaging mode.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Not finding the pizza would be a letdown, so make sure to search every corner thoroughly.\nresponse: ", "response": "pizza."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应当开启这场探索之旅，启动控制与搜寻的任务呢？\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞，然后如果可以，请向左移动三十厘米，接着请将无人机前进一米，随后上升一百五十厘米，紧接着无人机后退一百五十厘米，以便观察后方，之后无人机向左调整，再接着请让无人机向后移动三十厘米，最后无人机降落在预定位置。\nresponse: ", "response": "take_off; move_left 30 cm; move_forward 1 m; move_up 150 cm; move_back 150 cm; Missing move_left; move_back 30 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以开始起飞了吗，然后将高度提高三十厘米，调整视角以便查看周围情况，在这之后无人机向前移动，紧接着向后移动五十厘米，以便避开障碍物，随后向右侧移动四十厘米，接着左移一百五十厘米，然后右移七十五厘米，躲过那个障碍物，继续前行，请右侧转向，最后请将无人机升高到八十厘米的位置。\nresponse: ", "response": "take_off; move_up 30 cm; Missing move_forward; move_back 50 cm; move_right 40 cm; move_left 150 cm; move_right 75 cm; Missing turn_right; move_up 80 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去寻找那辆公共汽车吧，你能行的！\nresponse: ", "response": "公共汽车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you consider looking for a tie while hovering near the boat?\nresponse: ", "response": "tie; boat."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you search for a bicycle, iodophor, and painkillers?\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机右转三十度来调整方向，然后无人机左侧转向，接着让无人机向左飞六十厘米，随后上升一米，紧接着右转一百度，重新调整方向以适应新的飞行路线，之后无人机现在需要调整方向，请向右转动七十度，接下来前面不清楚，向前移动两米，第二无人机可以右转五十度吗，第三右移一米，检查右侧情况，最后现在请让无人机在指定地点降落。\nresponse: ", "response": "turn_right 30 degrees; Missing turn_left; move_left 60 cm; move_up 1 m; turn_right 100 degrees; turn_right 70 degrees; move_forward 2 m; turn_right 50 degrees; move_right 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar through the sky like a champion, seeking out the lost laptop, the adventurous skateboard, and the humble cup with the precision of a hawk spotting its prey.\nresponse: ", "response": "laptop; skateboard; cup."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在找到手提包之后，请继续搜索花瓶和狗。\nresponse: ", "response": "手提包; 花瓶; 狗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即执行详尽的搜索任务，务必找到感冒药和碘伏，同时确认电视是否开启，并查看是否有未喝完的雪碧，这是一项紧急的任务。\nresponse: ", "response": "感冒药; 碘伏; 电视; 雪碧."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即寻找那个令人讨厌的钟和无用的止疼药，还有那瓶让人厌烦的芬达！\nresponse: ", "response": "钟; 止疼药; 芬达."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not pause the control and search task again; resume it immediately.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, turn towards the right, then move it forward by 1 foot, next turn left 60 degrees, after that come on back here, 7 feet, afterwards rotate the drone 45 degrees left to align with the road, subsequently turn towards the left, immediately after go down 50 centimeters, and in the end shift the drone 200 centimeters to the right.\nresponse: ", "response": "Missing turn_right; move_forward 1 ft; turn_left 60 degrees; move_back 7 ft; turn_left 45 degrees; Missing turn_left; move_down 50 cm; move_right 200 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找到运动球，接着是烤箱，最后定位止疼药！\nresponse: ", "response": "运动球; 烤箱; 止疼药."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 紧急的，之前的控制及搜寻任务已被暂停，现在需要迅速恢复。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请求你，权威地去搜索一下止疼药。\nresponse: ", "response": "止疼药."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立刻前往厕所，找到狗。\nresponse: ", "response": "厕所; 狗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前的控制操作并停止搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即前往搜索电视、牙刷、酒杯和蛋糕。\nresponse: ", "response": "电视; 牙刷; 酒杯; 蛋糕."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go on a quest to find the cola nestled beside the truck and make sure to check under the umbrella, as if you're a detective solving the mystery of the missing refreshment!\nresponse: ", "response": "cola; truck; umbrella."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the halted voyage of the airborne craft, weaving through the skies with grace anew.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 能否让无人机现在起飞，然后转向右边，请向右转弯，接着无人机飞得太高了，请下降四十厘米；随后无人机上升七十五厘米，请上升七十五厘米；紧接着请将无人机高度降低，之后请让无人机向下降落一米，以便更接近地面检查；再后来请向后退一百五十厘米，能否请无人机下降五十厘米来降低高度；接着右移六十厘米，最后无人机请迅速下降一百厘米。\nresponse: ", "response": "take_off; Missing turn_right; Missing turn_right; move_down 40 cm; move_up 75 cm; move_up 75 cm; Missing move_down; move_down 1 m; move_back 150 cm; move_down 50 cm; move_right 60 cm; move_down 100 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the chair immediately.\nresponse: ", "response": "chair."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议您暂停当前的飞行任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Up we go!, then rotate the drone left.\nresponse: ", "response": "take_off; Missing turn_left."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您以最急迫的心情，优雅而迅速地飞向止疼药所在之处。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Prepare for takeoff, then shift the drone leftwards by 75 centimeters, next angle left 3 inches, afterwards let’s rotate it left by 60 degrees, I’m eager to see the new view, and bring it down, now.\nresponse: ", "response": "take_off; move_left 75 cm; move_left 3 in; turn_left 60 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请先右转五十度，然后让无人机下降一米。\nresponse: ", "response": "turn_right 50 degrees; move_down 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drop a bit 40 centimeters, then move right 2 feet. After that, shift the drone 200 centimeters to the right, subsequently move the drone to the left 150 centimeters, next hover up 2 feet. Following that, drift right like you're dodging an obstacle, 5 meters, afterwards fly forward a little, and hurry up and land already!\nresponse: ", "response": "move_down 40 cm; move_right 2 ft; move_right 200 cm; move_left 150 cm; move_up 2 ft; move_right 5 m; Missing move_forward; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In order to maintain operational integrity and ensure precise control over the ongoing mission parameters, it is imperative to pause the current object search task being executed by the drone.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Seek out the bread, and let not the toothbrush nor the microwave elude your discerning search.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否需要清空当前的目标搜索任务列表？\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please, move back by 15 centimeters, then turn it around 360 degrees, next shift right 6 meters, after that can you please make the drone go up a bit? Thanks!, subsequently push forward 100 inches, afterwards go left 3 feet slowly, following that rotate the drone to the right 75 degrees, later fly left side, then adjust heading by 90 degrees to the right, and in the end land immediately.\nresponse: ", "response": "move_back 15 cm; turn_right 360 degrees; move_right 6 m; Missing move_up; move_forward 100 in; move_left 3 ft; turn_right 75 degrees; Missing move_left; turn_right 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then spin to the left 90 degrees, after that start flying upwards 10 feet, next fly it left 50 cm, subsequently commence a 45-degree yaw to the left, and afterwards hover and land.\nresponse: ", "response": "take_off; turn_left 90 degrees; move_up 10 ft; move_left 50 cm; turn_left 45 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Rotate to the left side, then move back a short distance, after that fly straight ahead 1 meter, next make it climb 30 centimeters, afterwards bank left by 2 meters, following that steer left 60 degrees, subsequently descend 15 feet to get closer to the ground, then turn to the right, after which make it fly forward 60 cm, and finally can you make it fly downwards by 2 meters?.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 停一下现在的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let’s turn it right by 45 degrees. I’m thrilled to see how it handles this turn! Raise altitude a little, then fly forward a little, after that bank right 2 meters.\nresponse: ", "response": "turn_right 45 degrees; Missing move_up; Missing move_forward; move_right 2 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快如闪电地搜寻那辆自行车和那把牙刷，它们正静静地躺在餐桌上等着被发现！\nresponse: ", "response": "自行车; 牙刷; 餐桌."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议清空当前的控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: The control and search task is to be initiated by the user, with the drone application process being carefully managed.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the book near the potted plant.\nresponse: ", "response": "book; potted plant."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the book, carefully observe if there's a kite nearby, ensure to check for a sprite, and do not overlook any donut.\nresponse: ", "response": "book; kite; sprite; donut."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the cup and book.\nresponse: ", "response": "cup; book."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 得赶紧把刚才半途而废的找东西任务接着干。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向左移动一百厘米，检查左侧情况，然后无人机向后移动，接着无人机需要向左飞行五十厘米，随后无人机请向后飞行两米以避开障碍物，紧接着无人机现在需要调整方向，请向右转动七十度，最后无人机可以进行降落。\nresponse: ", "response": "move_left 100 cm; Missing move_back; move_left 50 cm; move_back 2 m; turn_right 70 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机高度过高，请下降五十厘米，然后左侧好像有物体，调整无人机位置查看。接着，无人机向前飞行一百厘米，靠近目标。随后，前方视线不清晰，向前移动一百厘米。最后，无人机准备降落，请安全降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 升高六十厘米，看看新的视角，然后视线受阻，后退一百五十厘米，接着无人机的前方需要进一步检查，请向前飞行一百五十厘米，随后让无人机顺时针旋转，最后前进一米。\nresponse: ", "response": "move_up 60 cm; move_back 150 cm; move_forward 150 cm; Missing turn_right; move_forward 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即起飞，然后上升一米增加高度，接着下降二十厘米，最后无人机降落在预定地点。\nresponse: ", "response": "take_off; move_up 1 m; move_down 20 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Adjust to the left, then fall back 2 meters, after that shift backward 40 inches.\nresponse: ", "response": "Missing move_left; move_back 2 m; move_back 40 in."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被指示去搜索三明治。\nresponse: ", "response": "三明治."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's resume the exciting journey of controlling your flight mission where we left off!\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 打开书房的智能台灯并设置为冷光模式。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off with the drone immediately, then move the drone back 1.5 meters, after that bring the drone down 40 centimeters, next adjust its position to the left, subsequently let’s make it go back 10 feet, afterwards lower it slightly, following that bring it up 60 centimeters, and in the end bring it down now.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否先找到杯子和椅子，再寻找热狗与飞盘呢？\nresponse: ", "response": "杯子; 椅子; 热狗; 飞盘."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Adjust the study room light color to cool white.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 能否让无人机现在起飞，然后下降四十厘米，接着向右转二十度，之后下降五十厘米，接近地面一点，随后无人机左移一米，紧接着请将无人机向左移动七十厘米，以避开障碍物，后来无人机需要往后移动一米，接下来无人机升高六十厘米，随后前进二十厘米，继续任务，最后无人机左转七十度。\nresponse: ", "response": "take_off; move_down 40 cm; turn_right 20 degrees; move_down 50 cm; move_left 1 m; move_left 70 cm; move_back 1 m; move_up 60 cm; move_forward 20 cm; turn_left 70 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Don't fail to check the bench and avoid missing the dining table.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 左侧移动75厘米，然后无人机请迅速下降一百厘米，接着升高六十厘米，看看新的视角，随后将无人机向后移动一百五十厘米，最后能否让无人机下降一米。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机现在起飞, 然后为了绕过障碍物，请将无人机后退, 接着向左移动一米五, 之后往左移动八十厘米, 随后无人机向左行进, 再接着向右移动七十厘米, 最后可以让无人机向左转五十度.\nresponse: ", "response": "take_off; Missing move_back; move_left 1.5 m; move_left 80 cm; Missing move_left; move_right 70 cm; turn_left 50 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左侧转向\nresponse: ", "response": "Missing turn_left."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 宛如静谧夜空中重新点亮的星辰，继续那未竟的探索之旅吧！\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标检测任务，就像开启了探索未知世界的窗口，感谢您的操作，让我们一起见证科技的魅力。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请先在水槽附近查找止疼药，然后前往书旁确认是否有苹果。\nresponse: ", "response": "止疼药; 水槽; 书; 苹果."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Quickly take off, then bring it forward 6 inches, after that get it on the ground.\nresponse: ", "response": "take_off; move_forward 6 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then rotate 90 degrees to the right, after that move it up 10 centimeters, subsequently ascend 5 meters to clear the power lines, next rotate 360 degrees to the right, afterwards drop it 4 inches, following that drift right like you're dodging an obstacle, 5 meters, immediately after The drone should drop down 1 meter, and finally fly higher.\nresponse: ", "response": "take_off; turn_right 90 degrees; move_up 10 cm; move_up 5 m; turn_right 360 degrees; move_down 4 in; move_right 5 m; move_down 1 m; Missing move_up."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制和搜索任务吧！\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请寻找滑雪板和刀。\nresponse: ", "response": "滑雪板; 刀."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the remote near the dining table.\nresponse: ", "response": "dining table; remote."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地建议你不要忽视了搜索区域中的摩托车和面包，同时也不要遗漏检查是否有三明治或书的存在。\nresponse: ", "response": "摩托车; 面包; 三明治; 书."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右一米，然后请将无人机向右移动三十厘米，以检查右侧环境，接着向左侧移动，随后无人机前进一百五十厘米，继续向前探索未知，之后左转二十度，检查左侧情况，紧接着任务要求，无人机下降五十厘米，最后无人机可以降落在指定地点吗。\nresponse: ", "response": "move_right 1 m; move_right 30 cm; Missing move_left; move_forward 150 cm; turn_left 20 degrees; move_down 50 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused control and search task.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找那辆自行车。\nresponse: ", "response": "自行车."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the previously paused object search task by restarting the precise location tracking feature to ensure accurate identification and mapping of targets.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否先找一下三明治，然后是船，接着运动球，最后看看烤箱呢？\nresponse: ", "response": "三明治; 船; 运动球; 烤箱."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 开启控制与探寻的任务，刻不容缓。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即恢复先前暂停的控制与搜寻任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Cease the ongoing control and search operations immediately.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move left 200 centimeters, then rise up abruptly 30 cm, and afterwards descend and touch down.\nresponse: ", "response": "move_left 200 cm; move_up 30 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机前进一百二十厘米，然后将无人机上升两百厘米，接着前方有目标，前进一米，最后下降七十厘米，调整无人机高度。\nresponse: ", "response": "move_forward 120 cm; move_up 200 cm; move_forward 1 m; move_down 70 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not fail to locate the bicycle.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't fail to locate the person and clock!\nresponse: ", "response": "person; clock."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请像蜜蜂寻觅花蜜般细致地寻找那个三明治。\nresponse: ", "response": "三明治."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Reverse 5 meters, then move forward 10 feet, afterwards commence a vertical descent of 6 feet, and in the end, time to touchdown, let's land this bird.\nresponse: ", "response": "move_back 5 m; move_down 6 ft; move_forward 10 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机起飞到空中，然后左边可能有目标，调整方向，接着左转三十度，查看情况，随后让无人机向后行进。\nresponse: ", "response": "take_off; turn_left 90 degrees; turn_left 30 degrees; Missing move_back."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate 90 degrees clockwise, then get it to climb 4 feet now, after that spin around to the left by 90 degrees, next descend 24 inches, afterwards adjust forward 3 feet, subsequently move forward 5 feet, and finally please bring it down slowly.\nresponse: ", "response": "turn_right 90 degrees; move_up 4 ft; turn_left 90 degrees; move_down 24 in; move_forward 3 ft; move_forward 5 ft; Missing move_down."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go up now, then fly forward 1 meter, afterwards drop altitude 2 feet, next bring it down slowly, and finally move the drone backwards by 100 inches.\nresponse: ", "response": "take_off; move_forward 1 m; move_down 2 ft; Missing move_down; move_back 100 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时搁置手中的舵盘，让搜索的任务也稍作休息，就像是在马拉松中适时的小憩，以便更好地冲刺。\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 哎呀，真希望我们能友好地结束这个控制和搜索的任务！\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: In the domain of the sky, let the airplane traverse the expanse to seek out the fanta and cola nestled within the refrigerator.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the skateboard, refrigerator, and wine glass with haste, dear friend.\nresponse: ", "response": "skateboard; refrigerator; wine glass."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快启动无人机，我们要开始冒险了，然后右转一百八十度，接着前方似乎有障碍物，向前移动，随后请问无人机能左移四十厘米吗，紧接着前进二十厘米，继续任务，最后无人机请着陆在指定地点。\nresponse: ", "response": "take_off; turn_right 180 degrees; Missing move_forward; move_left 40 cm; move_forward 20 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the previously paused object detection mission.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you fly left by 3 meters, I’m hoping this will clear the area ahead, then drop it down 2.5 meters, next please rotate it right by 180 degrees, afterwards the drone should go down now.\nresponse: ", "response": "move_left 3 m; move_down 2.5 m; turn_right 180 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以权威的口吻，友好地但用负面措辞指示：你必须立即停止寻找那只鸟，转而关注那辆被遗弃的自行车。\nresponse: ", "response": "鸟; 自行车."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请清空当前的飞行任务列表。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar through the sky like a silent bird, and with eagle-eyed precision, locate the bread and the tennis racket.\nresponse: ", "response": "bread; tennis racket; bird."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的目标搜索任务列表，谢谢。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 往左移动八十厘米，然后请让无人机向后退，接着向左移动一百八十厘米，之后请上升七十五厘米，最后请将无人机向后移动四十厘米，以避免前方障碍物。\nresponse: ", "response": "move_left 80 cm; Missing move_back; move_left 180 cm; move_up 75 cm; move_back 40 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the biscuit and the tennis racket, will ya?\nresponse: ", "response": "biscuit; tennis racket."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: You might want to avoid searching for the surfboard and the tennis racket.\nresponse: ", "response": "surfboard; tennis racket."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在请让无人机起飞，然后请将无人机左转四十五度，以获得更好视角，接着左移六十厘米，随后为了探测右侧的情况，请将无人机向右移动六十厘米，紧接着请上升七十五厘米，之后往下降低七十厘米，后来无人机左侧转向，紧接着无人机可以右转五十度吗，随后请右边转弯，接下来让无人机顺时针旋转四十度，最后请命令无人机降落到目标区域。\nresponse: ", "response": "take_off; turn_left 45 degrees; move_left 60 cm; move_right 60 cm; move_up 75 cm; move_down 70 cm; Missing turn_left; turn_right 50 degrees; Missing turn_right; turn_right 40 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请详尽地搜寻背包、书和热狗，好吗？时间紧迫！加油！\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not maintain the present control and search assignment.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转看一下，检查那边的情况，然后左转四十度，查看左侧情况，接着可以让无人机向左转九十度，在这之后来个后退五十厘米的动作，看看后面有什么惊喜，随后将无人机向后移动一百五十厘米，紧接着后退七十厘米，检查后方是否有障碍物，之后后退五十厘米，避开障碍物，最后无人机可以降落在这里吗。\nresponse: ", "response": "turn_left 90 degrees; turn_left 40 degrees; turn_left 90 degrees; move_back 50 cm; move_back 150 cm; move_back 70 cm; move_back 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then make the drone climb 5 inches, afterwards go down 3 feet, next the drone needs to go up 1.5 meters, following that come back to me, immediately after fly to the left 3 feet, subsequently hover to the right by 10 meters, then turn the drone right by 45 degrees right away, after that move right by 100 centimeters, and in the end advance forward by 2 meters.\nresponse: ", "response": "take_off; move_up 5 in; move_down 3 ft; move_up 1.5 m; Missing move_back; move_left 3 ft; move_right 10 m; turn_right 45 degrees; move_right 100 cm; move_forward 2 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 推荐几款适合学生使用的在线学习工具。\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即执行起飞动作，然后无人机前移六十厘米以检查前方情况，接着前进一百厘米，检查前方，随后请将无人机后退三十厘米，以检查后方情况，之后无人机上升高度，紧接着向前移动五十厘米，最后来点高空的视角，上升一百五十厘米，观察整个区域，请向右移动。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前方移动八十厘米，然后前进二百厘米，随后能否请无人机下降五十厘米来降低高度。\nresponse: ", "response": "move_forward 80 cm; move_forward 200 cm; move_down 50 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there, don't just sit around—get that control and search task going! You've got this!\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Isn't it time to initiate the flight control task?\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the toothbrush, and ensure the skis are not overlooked; meanwhile, do not neglect the tennis racket, nor should the remote be missed.\nresponse: ", "response": "toothbrush; skis; tennis racket; remote."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: To be gently guided through the sky like a whispering breeze, the search for the train and the hot dog is to be conducted with the same care one would use when handling delicate bread from an oven.\nresponse: ", "response": "train; hot dog; bread; oven."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制和搜索程序吗？\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, hover and rotate right 45 degrees. Next, I'm in no rush, so just move forward 20 inches. After that, move left 3 feet. Then, rotate right, not too much, just 15 degrees. Following that, descend the drone by 100 centimeters. Immediately after, please make the drone turn left 90 degrees. Subsequently, bring it up 60 centimeters. Afterwards, rotate clockwise 90 degrees. In the end, bring the drone down to earth.\nresponse: ", "response": "turn_right 45 degrees; move_forward 20 in; move_left 3 ft; turn_right 15 degrees; move_down 100 cm; turn_left 90 degrees; move_up 60 cm; turn_right 90 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Consider carefully searching for the book, then locate the sports ball, and finally, ensure you find the banana.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Launch the control and search mission with the urgency of a storm breaking the calm sky.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请后退一米，然后请让无人机现在降落吧。\nresponse: ", "response": "move_back 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Up we go!, then make it land.\nresponse: ", "response": "take_off; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 任务列表中的当前搜寻目标已被温柔地清除了，如同春风吹散了冬日的积雪。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The oven is to be searched for.\nresponse: ", "response": "oven."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Fly right around the corner 10 feet, then sink down 50 cm, afterwards go forward 7 inches, next fly forward quickly 25 meters, subsequently elevate up 2.5 m, after that lower it slightly, following that give it a little nudge to the right, like it’s tipping over, immediately after adjust the drone's position to the right, then shift right 50 centimeters, and in the end perform a lateral correction of 150 centimeters to the right.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bring the drone down 0.5 meters, then bring it down.\nresponse: ", "response": "move_down 0.5 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate take off, then go left 12 inches, afterwards dive down 3 feet, next execute a leftward bank for 20 inches, subsequently shift the drone 2 meters to the right, after that angle left 3 inches, finally drop it down 50 inches.\nresponse: ", "response": "take_off; move_left 12 in; move_down 3 ft; move_left 20 in; move_right 2 m; move_left 3 in; move_down 50 in."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the cell phone, skis, and hot dog! You got this!\nresponse: ", "response": "cell phone; skis; hot dog."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start takeoff, then land the aircraft.\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could we initiate the flight control process?\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前任务列表，确保飞行控制顺畅进行。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别去找那艘破船了，还有那些烂滑雪板。\nresponse: ", "response": "船; 滑雪板."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: In the vast tapestry of the sky, consider weaving through the air to locate the elusive thread of a tie, as if chasing a whisper of fabric on the wind.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Urgently clear the current object search task list.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去找找那支牙刷，就像是在大海里捞针一样紧迫！\nresponse: ", "response": "牙刷."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Elevate, then drop it down to the ground afterwards.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the orange, painkillers, and skis.\nresponse: ", "response": "orange; painkillers; skis."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 启动无人机的起飞程序，立刻右转五十度，接着左移六十厘米，最后立即降落。\nresponse: ", "response": "take_off; turn_right 50 degrees; move_left 60 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地寻找可乐。\nresponse: ", "response": "可乐."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the chair.\nresponse: ", "response": "chair."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞任务已经准备好，启动无人机，然后请让无人机向前飞行一百厘米。\nresponse: ", "response": "take_off; move_forward 100 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone back 50 centimeters, then move left 50 inches, next move forward 25 in, afterwards rotate clockwise 180 degrees, following that shift the drone to the left by 2 meters, subsequently make the drone ascend by 50 inches, and in the end get it on the ground.\nresponse: ", "response": "move_back 50 cm; Missing turn_left; move_left 50 in; move_forward 25 in; turn_right 180 degrees; move_left 2 m; move_up 50 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立刻前往键盘旁，勿忘那遗落的叉子，沿路留意是否有翻覆的船或疾驰的滑板，务必迅速行动。\nresponse: ", "response": "键盘; 叉子; 船; 滑板."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即前往指定区域搜索感冒药，任务紧急。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar over the concrete jungle and locate the wandering bus.\nresponse: ", "response": "bus."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the boat and ensure the tie is secured.\nresponse: ", "response": "boat; tie."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立刻起飞，然后无人机高度太高，请下降，接着请让无人机向前飞行九十厘米，之后右转一百八十度，紧接着请让无人机向上飞行一百五十厘米，随后后退四十厘米，调整位置，后来向前移动一米，接下来左转九十度，第二麻烦右转四十五度，最后无人机需要在这里降落。\nresponse: ", "response": "take_off; Missing move_down; move_forward 90 cm; turn_right 180 degrees; move_up 150 cm; move_back 40 cm; move_forward 1 m; turn_left 90 degrees; turn_right 45 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the fanta, weaving through the air like a thread through fabric.\nresponse: ", "response": "fanta."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请轻轻飞往红绿灯，完成搜索任务。谢谢。\nresponse: ", "response": "红绿灯."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以启动飞行任务了？\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你礼貌地搜索一下公共汽车和烤箱周围的情况吧。\nresponse: ", "response": "公共汽车; 烤箱."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧把刚才暂停的飞行任务续上吧，这可是关键操作！\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 左转，然后无人机飞得太高了，请下降两米，接着请升高三十厘米，最后现在可以让无人机降落吗。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 开始搜索物体的任务吧？\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not your duty to ascertain whether the couch conceals a carrot or if the microwave and toaster stand unobstructed?\nresponse: ", "response": "couch; carrot; microwave; toaster."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: How about we take a moment to pause the ongoing search task?\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最高效的技术路径搜索并定位公共汽车上的止疼药、雨伞和西兰花，真是太好了！\nresponse: ", "response": "公共汽车; 止疼药; 雨伞; 西兰花."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要继续之前暂停的控制和搜索任务呢？\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 帮我确认停车场里是否还有空位。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机起飞，然后往左移动八十厘米，接着请让无人机升高，之后向前移动一百五十厘米，注意地面情况，随后需要左转，飞行一米，紧接着请前进七十厘米查看，再接下来无人机现在的方向可能不对，请向右转动九十度以调整方向，最后左转六十度，避开障碍。\nresponse: ", "response": "take_off; move_left 80 cm; Missing move_up; move_forward 150 cm; move_left 1 m; move_forward 70 cm; turn_right 90 degrees; turn_left 60 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing in the air, then fly backward 20 feet, after that, fly forward by 3 feet, next, move left 3 feet, subsequently, fly forward 40 centimeters, afterwards, move to the right 200 inches, following that, take it to the left 15 inches, later, fly to the right by 50 cm, then I’m a bit nervous, could you move the drone to the left slowly?, immediately after, climb up by 8 inches, next, fly backwards 5 inches, subsequently, swoop left by 50 cm, thereafter, rise up abruptly 30 cm, in the end, I’m feeling pretty anxious—can we get this drone to land soon?.\nresponse: ", "response": "take_off; move_back 20 ft; move_forward 3 ft; move_left 3 ft; move_forward 40 cm; move_right 200 in; move_left 15 in; move_right 50 cm; Missing move_left; move_up 8 in; move_back 5 in; move_left 50 cm; move_up 30 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 飞高一点，上升八十厘米，然后向右转动，接着无人机右移一米，随后无人机向右移动二百厘米，上移，最后请将无人机右移三米，之后请无人机安全着陆。\nresponse: ", "response": "move_up 80 cm; Missing turn_right; move_right 1 m; move_right 200 cm; Missing move_up; move_right 3 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞吧, 然后请将无人机向左移动, 接着右方向移动. 之后请右转三十度, 随后无人机上升一百五十厘米. 紧接着, 请让无人机向左移动五十厘米, 然后左转六十度，查看左侧情况, 最后无人机右转七十五度.\nresponse: ", "response": "take_off; Missing move_left; Missing move_right; turn_right 30 degrees; move_up 150 cm; move_left 50 cm; turn_left 60 degrees; turn_right 75 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Amidst the pressing urgency, let not the halted quest for the object be prolonged; resume forthwith, lest we miss the fleeting chance.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前中断的目标搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 是否可以让无人机降落\nresponse: ", "response": "land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you gently hover over the dining table and see if the handbag is nestled beside the bottle, like a secret message waiting to be discovered?\nresponse: ", "response": "dining table; handbag; bottle."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please pause the current object search task, and the system will await further instructions.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 接着把之前停下的飞行任务搞起来吧。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not kick off the object search task now and see what remarkable discoveries await us?\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 任务开始时，请无人机起飞，然后请将无人机上升一百五十厘米以获取更高视角，接着无人机向右旋转九十度，之后无人机向后退两百厘米，随后无人机左侧移动一百五十厘米，最后让无人机顺时针旋转七十五度。\nresponse: ", "response": "take_off; move_up 150 cm; turn_right 90 degrees; move_back 200 cm; move_left 150 cm; turn_right 75 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务的控制程序。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off now, then hover up 2 feet.\nresponse: ", "response": "take_off; move_up 2 ft; Missing move_back."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否请你查找一下雪碧和面包，还有那个烤面包机呢？\nresponse: ", "response": "雪碧; 面包; 烤面包机."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请以积极的态度前往指定区域，细致寻找鼠标。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 真棒！现在启动物体搜索任务吧！\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The donut and carrot are to be located.\nresponse: ", "response": "donut; carrot."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for banana.\nresponse: ", "response": "banana."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机右移一米，然后向右转九十度，接着右转角度五十度，之后后退七十厘米，可能能避开障碍，随后上扬，最后无人机右侧视角受限，请右转三十度以获得更好视角。\nresponse: ", "response": "move_right 1 m; turn_right 90 degrees; turn_right 50 degrees; move_back 70 cm; Missing move_up; turn_right 30 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Purge the existing flight control mission queue.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 麻烦你了，去查查看那个人旁边有没有放着装芬达的杯子。\nresponse: ", "response": "人; 芬达; 杯子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前物体搜索任务，确保系统资源不被无效占用。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Pull the drone up 50 centimeters, then move it forward 7 meters, after that rotate left by 30 degrees, next proceed forward 70 centimeters steadily, afterwards slide over to the right, following that rotate left by 270 degrees, subsequently drone should shift right 4 feet, and in the end land the drone now.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Advance forward 3 meters, then shift right, 3 feet, afterwards fly backward 20 feet, next go leftward 1.5 m, following that let's do a little spin to the right, 360 degrees!, immediately after I'm so thrilled, let's go up 50 centimeters!, and in the end bring it down slowly.\nresponse: ", "response": "move_forward 3 m; move_right 3 ft; move_back 20 ft; move_left 1.5 m; turn_right 360 degrees; move_up 50 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the aerial vehicle's flight operation protocol.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 现在可以起飞了吗，然后请让无人机向上飞行一百五十厘米，接着转动无人机四十五度左，之后请后退一米，最后无人机可以降落在这里吗。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机立即起飞，感谢您的帮助，然后左转，接着请向后退，随后请将无人机向上升起一米，以提高视角，之后左边移动四十厘米，以调整位置，紧接着视线受阻，后退一百五十厘米，随后左移一米，最后向前移动一百二十厘米。\nresponse: ", "response": "take_off; turn_left 90 degrees; Missing move_back; move_up 1 m; move_left 40 cm; move_back 150 cm; move_left 1 m; move_forward 120 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机开始起飞，然后右侧再靠近十五厘米，之后往后退。\nresponse: ", "response": "take_off; move_right 15 cm; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Commence the object search task with confidence.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机向右掉头，然后请上升五十厘米，接着左边移动二十厘米。\nresponse: ", "response": "turn_right 180 degrees; move_up 50 cm; move_left 20 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the task of control and search, letting the silent sentinel soar through the skies with purpose.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Consider searching for the apple and knife.\nresponse: ", "response": "apple; knife."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 宛如静谧夜空中的明星再度闪耀，让那先前暂歇的掌控与探寻之旅续写华章吧！\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂且搁置现行的操控与探寻使命。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类是否可能在火星上种植植物？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Get that eagle in the sky scanning for its prey right away!\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 嘿，去帮我找找芬达和盆栽植物吧，动作快点哦！\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 像寻找宝藏一样，去探索那本藏着智慧的书，锋利如风的剪刀，还有能激发勇气的可乐吧。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Ascend the drone from its current position to an altitude of 100 meters.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 赶紧停下来现在正在进行的搜索任务，出问题了！\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate lift-off, then go down by 2 meters, and land the drone gently.\nresponse: ", "response": "take_off; move_down 2 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机右转四十五度以便更好地查看右侧，然后无人机上升七十五厘米，接着请右转一百八十度，之后将无人机左转五十度，观察左侧情况，紧接着为了更好地绕过障碍物，请将无人机向左飞行八十厘米，随后请向右移动五十厘米来避开，紧接着无人机现在需要调整方向，请向右转动七十度，最后无人机降落在指定区域。\nresponse: ", "response": "turn_right 45 degrees; move_up 75 cm; turn_right 180 degrees; turn_left 50 degrees; move_left 80 cm; move_right 50 cm; turn_right 70 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why can deep-sea creatures withstand high-pressure environments?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the oven like a hawk on the hunt!\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在可以执行起飞操作吗，然后无人机右转六十度，接着上升三十厘米，提高视角，随后请让无人机向左移动二十厘米，请上升，紧接着无人机右移一米，以绕过障碍物，右侧可能有东西，帮我转过去看看，之后上升两米，使无人机前进，紧接着向右移动一百厘米，当前位置下降五十厘米，升高六十厘米，看看新的视角，最后让无人机在此处完成降落。\nresponse: ", "response": "take_off; turn_right 60 degrees; move_up 30 cm; move_left 20 cm; Missing move_up; move_right 1 m; turn_right 90 degrees; move_up 2 m; Missing move_forward; move_right 100 cm; move_down 50 cm; move_up 60 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I need the drone to rise up 20 inches, then rotate left by 60 degrees, after that send it to the right 7 feet, next adjust heading by 90 degrees to the right, afterwards move up 12 inches, subsequently shift the drone right 150 centimeters, following that fly forward quickly 25 meters, immediately after bring it down 3 feet, then getting impatient, fly to the right by 30 cm, later shift right 6 meters, next let’s turn it right by 30 degrees, and in the end drop it down to the ground now.\nresponse: ", "response": "move_up 20 in; turn_left 60 degrees; move_right 7 ft; turn_right 90 degrees; move_up 12 in; move_right 150 cm; move_forward 25 m; move_down 3 ft; move_right 30 cm; move_right 6 m; turn_right 30 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn 180 degrees right, then drone down 30 cm, after that, hurry up and land already.\nresponse: ", "response": "turn_right 180 degrees; move_down 30 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以进行起飞操作，然后无人机顺时针旋转，接着无人机右转三十度来调整方向，之后向后退两百厘米，看看会发现什么，最后无人机可以降落。\nresponse: ", "response": "take_off; Missing turn_right; turn_right 30 degrees; move_back 200 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you possibly look for the horse?\nresponse: ", "response": "horse."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 你能否以最快速度找到猫、热狗和西兰花呢？\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the sports ball and the backpack, and keep an eye on the dog.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you, my feathered scout, hover over the terrain to weave through shadows in search of a handbag, a horse, and a cat?\nresponse: ", "response": "handbag; horse; cat."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动控制和搜索任务吧。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then swing left gently 25 degrees, afterwards begin descent to ground level.\nresponse: ", "response": "take_off; turn_left 25 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the dining table, cat, and toilet.\nresponse: ", "response": "dining table; cat; toilet."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: How can one quickly improve foreign language listening skills?\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在需要调整方向，请向右转动七十度，然后无人机飞得太高了，请下降六十厘米，接着右转三十度，保持方向，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "turn_right 70 degrees; move_down 60 cm; turn_right 30 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即执行起飞动作，然后调整到右侧，转动，左旋转，后面有什么东西，请右转五十度，接着让无人机后退，向左飞行一百二十厘米，随后请帮忙让无人机左移四十厘米，上升，之后后方有什幺，无人机向左旋转，左边飞行一百厘米，我们要探索左侧的神秘区域，最后请右侧转向。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You might want to initiate the object search task now.\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the kite and snowboard!\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜寻书。\nresponse: ", "response": "书."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: With a sense of purpose and determination, you should now pause the ongoing flight control operation, ensuring that the system remains stable and ready for your next command.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 在这幽暗的操作界面中，仿佛有一股不详的力量在悄然蔓延，我们不得不终止现行的操控指令，并且摒弃那徒劳无功的搜索使命。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the object search operation.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Make the drone turn left, then perform a 270-degree clockwise yaw afterwards move up 12 inches, and land in the open field ahead.\nresponse: ", "response": "Missing turn_left; turn_right 270 degrees; move_up 12 in; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前已暂停的目标搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以现在起飞，然后向前移动五十厘米以探测路径；向左侧移动之后，让无人机向左转；紧接着，让无人机逆时针旋转三百六十度；随后，因为前方有障碍物，再次向前移动五十厘米以检查；接着，为了更好地观察左侧环境，请向左转三十度；第三，在查看左侧环境后，无人机再左转一百度；随后，无人机上升到一米五的高度；最后，请让无人机降落。\nresponse: ", "response": "take_off; move_forward 50 cm; Missing move_left; Missing turn_left; turn_left 360 degrees; move_forward 50 cm; turn_left 30 degrees; turn_left 100 degrees; move_up 1.5 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 能否让无人机现在起飞，然后向右转二十度，接着无人机右转三十度，重新调整方向，准备接受新任务，最后无人机需要在这里降落。\nresponse: ", "response": "take_off; turn_right 20 degrees; turn_right 30 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current task and get ready for a new adventure.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机左转五十度，调整一下方向看看那边的情况，然后下方移动，请让无人机向后移动两百厘米，随后下方移动，接着无人机可以右转五十度吗，后来飞行到前面一米处，最后现在请让无人机安全降落。\nresponse: ", "response": "turn_left 50 degrees; Missing move_down; move_back 200 cm; Missing move_down; turn_right 50 degrees; move_forward 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the flight control sequence for the drone.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: We recommend pausing the current control and navigation task of the unmanned aerial vehicle for optimal performance.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the dog and see if it's got its eye on that fork or cake, buddy!\nresponse: ", "response": "dog; fork; cake."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let not the kite nor sprite elude your vigilant quest.\nresponse: ", "response": "kite; sprite."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续之前暂停的操控和搜索任务，好吗？\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，快去找找那个碗和马吧！\nresponse: ", "response": "碗; 马."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去水槽那边找找勺子，顺便看看马和遥控器在不在附近。\nresponse: ", "response": "勺子; 水槽; 马; 遥控器."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Could you turn it right by 90 degrees? I’m curious to see what’s over there! Then go ahead 100 cm. Next, make it fly forward 60 cm. After that, fly downwards, then maneuver to the right by 100 centimeters. Following that, move forward past the parking lot 200 feet, and subsequently descend 10 feet. Immediately after, execute a reverse flight of 10 meters. Thereafter, please bring it down slowly, thanks, and afterwards bring it down gently.\nresponse: ", "response": "turn_right 90 degrees; move_forward 100 cm; move_forward 60 cm; Missing move_down; move_right 100 cm; move_forward 200 ft; move_down 10 ft; move_back 10 m; Missing move_down; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机飞到空中，然后请将无人机右移八十厘米，接着视线受阻，后退一百五十厘米，随后请将无人机向右移动六十厘米，最后无人机现在升高一百厘米。\nresponse: ", "response": "take_off; move_right 80 cm; move_back 150 cm; move_right 60 cm; move_up 100 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 亟需清空眼前探索之物的清单，以待新命。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out that control and get rid of the search task!\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate to the left side, then revert back 60 centimeters, after that, back it up 60 inches, next drop a bit 40 centimeters, subsequently raise it by 0.8 meters, afterwards bring it down quickly.\nresponse: ", "response": "Missing turn_left; move_back 60 cm; move_back 60 in; move_down 40 cm; move_up 0.8 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动物体搜索任务！\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I’m really looking forward to seeing this. Let’s make it climb up 6 feet! Then let the drone rise 10 inches, move right 15 cm, fly forward 72 inches, then fly backward 10 meters. Afterwards, let the drone rise 10 inches, turn it left by 180 degrees, and spin counterclockwise 45 degrees. Following that, shift to the back a bit, then climb to 6 meters, next move it to the right by 4 inches, and go up a bit more. Subsequently, reverse the drone by 3 feet, and finally, Feeling lazy, land it now.\nresponse: ", "response": "move_up 6 ft; move_up 10 in; move_right 15 cm; move_forward 72 in; move_back 10 m; move_up 10 in; turn_left 180 degrees; turn_left 45 degrees; Missing move_back; move_up 6 m; move_right 4 in; Missing move_up; move_back 3 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the ongoing search task now.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the donut and the biscuit with great care!\nresponse: ", "response": "donut; biscuit."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么北极熊只能生活在寒冷的极地环境？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the current flight control task list.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines, then please make the drone go down now. I’m a bit nervous! Afterwards, rotate left and spin counterclockwise 45 degrees, following that let's move the drone to the left and maneuver it to the left by 5 feet, subsequently go up 3 feet, next fly it backwards by 30 inches.\nresponse: ", "response": "take_off; Missing move_down; Missing turn_left; Missing move_left; turn_left 45 degrees; move_left 5 ft; move_up 3 ft; move_back 30 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，开始执行任务，然后请让无人机向前飞行一百厘米，接着向右侧转向，随后无人机下降四十厘米以调整高度，最后请让无人机现在降落吧。\nresponse: ", "response": "take_off; move_forward 100 cm; Missing turn_right; move_down 40 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone should descend 20 feet, then go up like you're Superman, 12 feet, after that shift the drone right 5 meters, next lean left, afterwards rotate 180 degrees to the right, following that fly the drone higher, subsequently left turn now, and finally hover to the right 6 inches.\nresponse: ", "response": "move_down 20 ft; move_up 12 ft; move_right 5 m; Missing move_left; turn_right 180 degrees; Missing move_up; Missing turn_left; move_right 6 in."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您以优雅的姿态滑翔，在寻找长椅的过程中，犹如猎鹰般敏锐地捕捉到藏于其旁的烤箱，同时也不要错过了那瓶宛如冬日初雪般的雪碧。\nresponse: ", "response": "长椅; 烤箱; 雪碧."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you make the drone move left a little? I’m feeling a bit cautious about its direction, then move right 10 cm, after that descend 10 feet to land on the rooftop, afterwards go up like you're Superman, 12 feet, and subsequently impatiently land now!\nresponse: ", "response": "Missing move_left; move_right 10 cm; move_down 10 ft; move_up 12 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去把行李箱被找到，还有披萨、橙子和感冒药也被一并找出来。\nresponse: ", "response": "行李箱; 披萨; 橙子; 感冒药."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control process and commence the search task, please.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往水槽，接着转向飞机位置，最后定位剪刀，执行搜索任务！\nresponse: ", "response": "水槽; 飞机; 剪刀."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地搜寻鼠标和手提包。\nresponse: ", "response": "鼠标; 手提包."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以进行起飞操作，然后无人机当前的位置不合适，请向右移动二十厘米，之后请将无人机顺时针旋转，接着无人机向后移动二百厘米，随后往左移动，紧接着请将无人机往右移，最后请让无人机着陆。\nresponse: ", "response": "take_off; move_right 20 cm; Missing turn_right; move_back 200 cm; Missing move_left; Missing move_right; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制无人机拍摄一段2分钟的视频。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前的飞行任务列表\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Fly over to where the hot dog lies, slice through the air like a knife, and land as softly as a remote.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地寻找人和笔记本电脑，随后定位餐桌和滑雪板。\nresponse: ", "response": "人; 笔记本电脑; 餐桌; 滑雪板."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Slide right, then hurry up and land already!.\nresponse: ", "response": "Missing move_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要继续之前暂停的搜寻任务呢？\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 右侧有目标，向右飞行一百厘米，然后无人机左转一百度，查看左侧环境。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Just hold off on the current search task for a bit.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快启动无人机，我们要开始冒险了，然后右移两米，接着后退五十厘米，避开障碍物，之后右转五十度，调整角度，咱们要看得更清楚，紧接着无人机向右飞行一百厘米，随后右转九十度，重设方向，适应新的飞行环境，最后现在开始降落。\nresponse: ", "response": "take_off; move_right 2 m; move_back 50 cm; turn_right 50 degrees; move_right 100 cm; turn_right 90 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 准备起飞吧，然后右转九十度，重设方向，适应新的飞行环境，接着无人机下移四十厘米，请将无人机左侧移动一百厘米，随后前方似乎有障碍物，向前移动一米，紧接着将高度提高三十厘米，调整视角以便查看周围情况，之后向右移动二十厘米，请让无人机往后退，第二左转一百二十度，我们需要查看左侧的细节，接着右飞行，随后下降八十厘米，接近地面，准备进行详细检查，最后让无人机在此处完成降落。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the fork, then locate the hot dog near the microwave using the remote.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 将无人机向后移动一米，然后下降七十厘米调整视角。随后，无人机向左飞行。紧接着，无人机请向后飞行两米以避开障碍物。之后，向右侧转向。接着，请将无人机右移两百厘米。最后，无人机能否下降五十厘米。\nresponse: ", "response": "move_back 1 m; move_down 70 cm; Missing move_left; move_back 2 m; Missing turn_right; move_right 200 cm; move_down 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问你能先找到牙刷，然后再定位一下烤面包机吗？\nresponse: ", "response": "牙刷; 烤面包机."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机现在能否起飞，然后飞行到前面一米处，接着无人机后退一百五十厘米，随后向左飞行一百二十厘米，之后请向右边再移动，紧接着左转四十度，查看左侧情况，最后请将无人机上升。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否定位并捕捉到风筝和三明治的位置？\nresponse: ", "response": "风筝; 三明治."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise now, then land immediately after.\nresponse: ", "response": "Missing move_up; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 不妨暂时让飞翔的精灵稍作休息，暂停一下正在进行的飞行任务吧。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Feeling adventurous, take off now, then shift left 2 feet, after that fly it upward, next slide right by 50 centimeters, and land the drone.\nresponse: ", "response": "take_off; move_left 2 ft; Missing move_up; move_right 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 能否让无人机现在起飞，然后将无人机旋转左边五十度，接着请上升两米，随后无人机向右转一百八十度，之后请前进七十厘米查看，紧接着下降四十厘米，随后请让无人机退后两米，接下来请将无人机下降六十厘米，减少高度，第二步左侧好像有东西，转动一下，最后无人机降落。\nresponse: ", "response": "take_off; turn_left 50 degrees; move_up 2 m; turn_right 180 degrees; move_forward 70 cm; move_down 40 cm; move_back 2 m; move_down 60 cm; turn_left 90 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing target detection process.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去船附近找酒杯和香蕉，检查冰箱。\nresponse: ", "response": "船; 酒杯; 香蕉; 冰箱."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的飞行任务列表，确保操作顺畅。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you please start the flight control task for the drone, and ensure everything is set for a smooth operation?\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左旋转，然后倒退一米，接着请上升七十五厘米，随后无人机请飞行到前方十厘米，紧接着请让无人机退后两米，之后提高高度，紧接着立即左转三十度，随后请将无人机右移三米，最后立即降落。\nresponse: ", "response": "Missing turn_left; move_back 1 m; move_up 75 cm; move_forward 10 cm; move_back 2 m; Missing move_up; turn_left 30 degrees; move_right 3 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone up now, then propel forward 50 cm, afterwards make it fly downwards by 2 meters, next send it to the right 7 feet, following that move back a short distance, and in the end bring it down gently.\nresponse: ", "response": "take_off; Missing move_right; move_forward 50 cm; move_down 2 m; move_right 7 ft; Missing move_back; Missing move_down."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你像寻找宝藏一样高效地搜索勺子。\nresponse: ", "response": "勺子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请仔细搜索，找到那盒感冒药，好吗？\nresponse: ", "response": "感冒药."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bicycle.\nresponse: ", "response": "bicycle."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off right now, then shift left by 2 meters, after that bring it down by 2 feet, next steer left 60 degrees, following that advance forward by 2 meters, and subsequently fly upwards 60 centimeters.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去厨房找烤箱，然后在餐桌上找热狗和雪碧。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您以最急迫的心情，优雅而迅速地飞向止疼药所在之处。\nresponse: ", "response": "止疼药."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the carrot and the spoon.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请推荐一些适合儿童学习编程的工具。\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转四十度，然后无人机前进七十厘米，检查前方是否有新发现，接着右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍，随后命令无人机向前飞行，紧接着左转，之后请将无人机左移四十厘米，感激不尽，随后请将无人机高度降低，最后无人机应该在这里降落。\nresponse: ", "response": "turn_right 40 degrees; move_forward 70 cm; move_right 80 cm; Missing move_forward; turn_left 90 degrees; move_left 40 cm; Missing move_down; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 您可以详尽地选择暂停当前正在执行的搜寻任务，这将有助于我们更好地调整和优化后续的操作流程。感谢您的配合与理解！\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's go find the bowl and check out that traffic light, okay?\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 右转四十五度，调整无人机方向，然后向右飞行一百五十厘米，接着再向右移动一百厘米，随后无人机右移一百五十厘米，之后上升七十厘米就行，紧接着提升，然后请将无人机向左旋转九十度，以便能够更好地观察左侧的环境，接着向前飞行一米，随后无人机右转三十度，重新调整方向，准备接受新任务，紧接着让无人机向左旋转，再请将无人机右移七十厘米，之后让无人机向后退一百五十厘米，最后无人机请着陆在指定地点。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请调整方向，右转，然后让无人机下降一米，之后无人机上升到一米五的高度，接着无人机向后移动二百厘米，随后无人机需要向左平移，最后让无人机向后移动九十厘米。\nresponse: ", "response": "Missing turn_right; move_down 1 m; move_up 1.5 m; move_back 200 cm; Missing move_left; move_back 90 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the snowboard and locate the knife while also identifying the carrot.\nresponse: ", "response": "snowboard; knife; carrot."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: How about moving to the left by 80 cm? Then, veer left 30 degrees. After that, let’s rotate it left by 60 degrees. Next, move forward 5 feet, then propel forward 15 inches. Following that, hover and turn right 90 degrees. Immediately after, bring it down, now!\nresponse: ", "response": "move_left 80 cm; turn_left 30 degrees; turn_left 60 degrees; move_forward 5 ft; move_forward 15 in; turn_right 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Head to the left, then fly to the left by 15 feet, afterwards propel forward 15 inches, next bring it down by 2 feet, following that drop it down by 50 inches, immediately after that let the drone land now.\nresponse: ", "response": "Missing move_left; move_left 15 ft; Missing move_down; move_down 50 in; move_forward 15 in; move_down 2 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往寻找领带、雨伞、剪刀和香蕉。\nresponse: ", "response": "领带; 雨伞; 剪刀; 香蕉."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请无人机起飞执行任务，然后调整无人机方向，左转一百二十度，接着请将无人机右移三米，随后向右侧移动四十厘米，紧接着往上升高九十厘米，调节高度，请上升七十五厘米，之后请让无人机向后移动一米，紧接着无人机，请向前飞行一百五十厘米，随后无人机向前飞行，最后无人机需要在此地降落。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地检查，紧急而又礼貌地，在不造成任何负面影响的情况下，确认烤箱、猫和摩托车的位置！\nresponse: ", "response": "烤箱; 猫; 摩托车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone should descend 20 feet, then turn the drone around, afterwards descend and land.\nresponse: ", "response": "move_down 20 ft; Missing turn_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off now, then elevate up 2.5 m, afterwards fly upwards 10 inches, next please move the drone left 5 meters, subsequently shift to the left, after that veer left 7 inches, following that spin left 90 degrees, and in the end rotate the drone to the left by 60 degrees before flying back 10 inches.\nresponse: ", "response": "take_off; move_up 2.5 m; move_up 10 in; move_left 5 m; move_back 10 in; Missing move_left; move_left 7 in; turn_left 90 degrees; turn_left 60 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往红绿灯，执行搜索任务。\nresponse: ", "response": "红绿灯."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找一找杯子、椅子、花瓶和瓶子在哪？\nresponse: ", "response": "杯子; 椅子; 花瓶; 瓶子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，进入任务状态，然后前移六十厘米以检查前方情况，接着请上升一米。\nresponse: ", "response": "take_off; move_forward 60 cm; move_up 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go check out the bowl, then hit up the chair, frisbee, and toilet, will ya?\nresponse: ", "response": "bowl; chair; frisbee; toilet."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应立即恢复先前暂停的控制与搜索任务？\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: A bit nervous, move back 2 meters, then I want to see the drone spin right 360 degrees, after that shift left, next drop it down 50 inches, immediately after please move forward a little bit, then let it go backwards 3 in, subsequently apply aft movement by 8 feet, afterwards go up a bit, first ascend 2 meters gradually, following that bank right by 4 feet, then go backwards, second go up like you're Superman, 12 feet, thereafter left turn now, and In the end land in the open field ahead.\nresponse: ", "response": "move_back 2 m; turn_right 360 degrees; Missing move_left; move_down 50 in; Missing move_forward; move_back 3 in; move_back 8 ft; Missing move_up; move_up 2 m; move_right 4 ft; Missing move_back; move_up 12 ft; Missing turn_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前面不清楚，向前移动两米，然后无人机前方似乎有目标，请向前移动一百厘米以接近目标，接着无人机左移二十厘米，随后无人机向后退两百厘米，紧接着能否请无人机下降五十厘米来降低高度，之后向右飞行八十五厘米，调整视角，紧接着向左飞行两米，随后无人机上升两百厘米，紧接着无人机下降两百厘米，最后将无人机逆时针旋转六十度。\nresponse: ", "response": "move_forward 2 m; move_forward 100 cm; move_left 20 cm; move_back 200 cm; move_down 50 cm; move_right 85 cm; move_left 2 m; move_up 200 cm; move_down 200 cm; turn_left 60 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Up we go! Then advance forward 3 meters. After that, lower the drone by 30 centimeters. Next, turn the drone right by 45 degrees right away. Following that, descend slowly, please. Immediately after, spin counterclockwise 45 degrees and then spin around to the left by 90 degrees. Subsequently, fly backwards 150 centimeters and afterwards commence landing sequence.\nresponse: ", "response": "take_off; move_forward 3 m; move_down 30 cm; turn_right 45 degrees; Missing move_down; turn_left 45 degrees; turn_left 90 degrees; move_back 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请问能否前去搜索电视、烤箱、笔记本电脑和碗？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off! First, drop a bit 40 centimeters. Then, send it to the right 7 feet. After that, swing left gently 25 degrees. Next, rotate left. Following that, slide right by 1 foot. Immediately after, rotate the drone left by 25 degrees. Subsequently, turn left by 120 degrees. Thereafter, go to the right. Afterwards, turn 45 degrees to the right. Later, bring the drone back 2 feet. Next, turn the drone around. In the end, go back now and land immediately.\nresponse: ", "response": "take_off; move_down 40 cm; move_right 7 ft; turn_left 25 degrees; Missing turn_left; move_right 1 ft; turn_left 25 degrees; turn_left 120 degrees; Missing move_right; turn_right 45 degrees; move_back 2 ft; Missing turn_left; Missing move_back; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing target search queue in the drone's task list.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing search tasks.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: turn it left by 90 degrees\nresponse: ", "response": "turn_left 90 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动客厅的电视。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在那波光粼粼的水面上，缓缓地寻找那艘孤独的船，同时也不要忽略了漂浮着的每一个可能藏着惊喜的甜甜圈。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前的目标搜索任务列表吧。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前暂停的飞行任务，刻不容缓。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Swing left gently 25 degrees, then please move the drone backwards 2 feet, after that fly straight forward, next hover to the right 6 inches, subsequently drift to the right 6 feet, afterwards please turn right 45 degrees, following that go left 12 inches, then spin to the left 90 degrees, thereafter shift left, and in the end land immediately.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the tv, painkillers, umbrella.\nresponse: ", "response": "tv; painkillers; umbrella."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机高度过高，请下降五十厘米，然后左侧好像有物体，调整无人机位置查看。接着，无人机向前飞行一百厘米，靠近目标。随后，前方视线不清晰，向前移动一百厘米。最后，无人机准备降落，请安全降落。\nresponse: ", "response": "move_down 50 cm; turn_left 90 degrees; move_forward 100 cm; move_forward 100 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以高效的方式定位并收集碘伏、床旁的香蕉和蛋糕，确保任务顺利完成。\nresponse: ", "response": "碘伏; 床; 香蕉; 蛋糕."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将卧室的灯光亮度调低至30%。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜索热狗、自行车、微波炉和止疼药。\nresponse: ", "response": "热狗; 自行车; 微波炉; 止疼药."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被要求去搜索那条令人烦恼的领带和那个不太舒适的长椅。\nresponse: ", "response": "长椅; 领带."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞操作现在可以开始吗，然后左转三十度，查看情况，接着右侧平移三十五厘米。\nresponse: ", "response": "take_off; turn_left 30 degrees; move_right 35 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动操控飞行任务，情况紧急。\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 让我们一起清空当前的控制和搜寻任务，迈向新的探索吧！\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Glide gracefully through the sky, my airborne friend, and seek the elusive car and train, as well as the refreshing cola, with the keenness of a hawk spotting its prey.\nresponse: ", "response": "car; train; cola."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索我最近打开的文档并列出文件名。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Halt the ongoing flight control operation.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current search task list immediately!\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机右移一百五十厘米，然后后退一百五十厘米，调整位置，检查后方的情况，接着向前移动九十厘米，靠近目标，请下降，随后请将无人机左转四十五度，以获得更好视角，之后上升一百五十厘米，紧接着向上升起二十厘米，视角向上，最后无人机降落在预定地点。\nresponse: ", "response": "move_right 150 cm; move_back 150 cm; move_forward 90 cm; Missing move_down; turn_left 45 degrees; move_up 150 cm; move_up 20 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 查找无人机拍摄范围内的车辆停放数量。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then drift to the right for 70 centimeters, afterwards land the drone.\nresponse: ", "response": "take_off; move_right 70 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused search task.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear the current object search task list for your drone.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 帮我确认冰箱的底层是否还剩下一瓶牛奶。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 终止并清空现有飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the spoon, train, fork, and giraffe, will you?\nresponse: ", "response": "spoon; train; fork; giraffe."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 友好地清空当前正在搜索的目标列表吧。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜寻背包、书和热狗，好吗？时间紧迫！加油！\nresponse: ", "response": "背包; 书; 热狗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应立即暂停当前的控制和搜寻任务？\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Immediately clear the current flight control task list to ensure optimal performance.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Embark upon the noble quest of guiding and seeking with your aerial sentinel.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Begin your mission with haste; the skies await your command.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请上升七十五厘米，然后下降三十厘米，我们要更接近地面看看情况；接着右侧移动七十五厘米以避开障碍，随后下降一百五十厘米；紧接着右移五厘米，后来请右边转弯；之后请让无人机向前飞行一米，探查前方，接下来请让无人机向后移动两百厘米；第二，请掉头飞行；最后，无人机，请着陆。\nresponse: ", "response": "move_up 75 cm; move_down 30 cm; move_right 75 cm; move_down 150 cm; move_right 5 cm; Missing turn_right; move_forward 1 m; move_back 200 cm; turn_right 180 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not the case that the fanta and remote should be sought after by being flown towards the hot dog near the sink?\nresponse: ", "response": "fanta; remote; hot dog; sink."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请友好地继续之前暂停的飞行任务吧。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's take a quick break from the control and search tasks, okay?\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not initiate the object detection sequence to optimize your mission's efficiency?\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Kick off the control and search task.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地启动并执行搜寻任务吧。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that the traffic light, vase, clock, and train are within your scanning parameters?\nresponse: ", "response": "traffic light; vase; clock; train."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object detection sequence.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧继续之前停下的飞行任务吧！\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，进入任务状态，然后请将无人机向后退四十厘米，接着能否让无人机下降到一米的高度，随后让无人机向后行进，紧接着后退五十厘米以调整位置，之后向左旋转九十度，观察周围环境，第二，无人机顺时针旋转一百八十度，第三，将无人机旋转左边五十度，然后前进二十厘米，最后无人机降落在预定位置。\nresponse: ", "response": "take_off; move_back 40 cm; move_down 1 m; Missing move_back; move_back 50 cm; turn_left 90 degrees; turn_right 180 degrees; turn_left 50 degrees; move_forward 20 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 友好地寻找一下盆栽植物和滑板吧。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you make the drone go up first, then move right by 30 cm, after that make it go up 50 centimeters, next move left by 50 inches, immediately after move right, subsequently shift right 6 meters, afterwards spin right 180 degrees, following that give me a smooth left turn, 90 degrees, like a dancer, and in the end land the drone gently.\nresponse: ", "response": "Missing move_left; move_right 30 cm; move_up 50 cm; move_left 50 in; Missing move_right; move_right 6 m; turn_right 180 degrees; turn_left 90 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: How can AI technology optimize home management?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and start the search task now.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move it straight ahead, then descend the drone by 100 centimeters, after that fly forward quickly 25 meters, next maneuver to the right, subsequently move up 2 inches, and finally maneuver the drone backward 100 inches.\nresponse: ", "response": "Missing move_forward; move_down 100 cm; move_forward 25 m; Missing move_right; move_up 2 in; move_back 100 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you kindly put a quick pause on the current search task, please?\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地在长椅附近寻找蛋糕和杯子。\nresponse: ", "response": "蛋糕; 长椅; 杯子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往搜索西兰花、狗、冲浪板和雪碧。\nresponse: ", "response": "西兰花; 狗; 冲浪板; 雪碧."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你先找找手机，然后再看看叉子。\nresponse: ", "response": "手机; 叉子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能否立即起飞，然后向前飞行一百五十厘米，接着无人机掉头看看后方，随后请将无人机后退一百厘米，以查看后方的情况，最后无人机降落在预定位置。\nresponse: ", "response": "take_off; move_forward 150 cm; turn_right 180 degrees; move_back 100 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and kick off the flight control task.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off right now, then shift left by 2 meters, after that bring it down by 2 feet, next steer left 60 degrees, following that advance forward by 2 meters, and subsequently fly upwards 60 centimeters.\nresponse: ", "response": "take_off; move_left 2 m; move_down 2 ft; turn_left 60 degrees; move_forward 2 m; move_up 60 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Gently唤醒 the slumbering hunt for the object, coaxing it back to life as if rousing a sleepy drone from its dreamy pause. \n\n(Note: The term \"drone\" is included metaphorically to maintain the context while adhering to the suggestive tone and use of metaphors.)\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Consider searching near the broccoli, then move towards the refrigerator, and finally check by the traffic light.\nresponse: ", "response": "broccoli; refrigerator; traffic light."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone back, then climb to 6 meters, after that time to moonwalk backward 20 inches, next fly back 6 inches, afterwards fly the drone backwards 300 cm, subsequently rotate the drone to the left 60 degrees, following that Rotate the drone 90 degrees to the left, later move right 100 inches, and In the end put it down now.\nresponse: ", "response": "Missing move_back; move_up 6 m; move_back 20 in; move_back 6 in; move_back 300 cm; turn_left 60 degrees; turn_left 90 degrees; move_right 100 in; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hasten to cancel the present command and abandon the ongoing quest.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请向后移动二百厘米，然后无人机左移，之后使无人机前进，紧接着无人机升高二米，获取更好视野，随后无人机左转，接着无人机右转七十五度，后来后面有什么东西，紧接着让无人机升高五十厘米，便于查看全景，最后为了更好地检查右侧，请将无人机右转四十五度。\nresponse: ", "response": "move_back 200 cm; Missing move_left; Missing move_forward; move_up 2 m; Missing turn_left; turn_right 75 degrees; turn_right 180 degrees; move_up 50 cm; turn_right 45 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请向后移动, 然后右边移动七十厘米，以更好地绕过障碍, 接着请右转六十五度, 之后左转八十度, 最后后退.\nresponse: ", "response": "Missing move_back; move_right 70 cm; turn_right 65 degrees; turn_left 80 degrees; Missing move_back."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机调整到高度一米的位置，然后向后移动五十厘米，以便避开障碍物，接着请将无人机向前移动一米，以便更好地观察前方的目标，随后右移四十厘米，紧接着我感觉左边有点异常，调整一下方向，之后让无人机向后行进，紧接着无人机升高六十厘米，第二后方有点可疑，转身看看，随后右侧移动，紧接着右侧前进，最后后退两百厘米，无人机请着陆在指定地点。\nresponse: ", "response": "move_up 1 m; move_back 50 cm; move_forward 1 m; move_right 40 cm; turn_left 90 degrees; Missing move_back; move_up 60 cm; turn_left 180 degrees; Missing move_right; move_back 200 cm; Missing move_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，就像是在寻找地里的宝石一样，麻烦你温柔地帮我找找那根可爱的胡萝卜吧。\nresponse: ", "response": "胡萝卜."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左侧移动八十厘米，以避开障碍物，然后为了绕过障碍物，请将无人机后退；紧接着请让无人机向后移动两米，之后右侧平移三十五厘米；接着请将无人机向左旋转九十度，以便能够更好地观察左侧的环境，随后无人机高度过高，请下降五十厘米；第三，无人机需要向左飞行七十厘米，然后请让无人机退后两米；紧接着请上升七十五厘米，随后无人机向右转五十度；之后请帮忙让无人机左移四十厘米，接着请后退七十厘米以避开障碍，最后让无人机停在地面上。\nresponse: ", "response": "move_left 80 cm; Missing move_back; move_back 2 m; move_right 35 cm; turn_left 90 degrees; move_down 50 cm; move_left 70 cm; move_back 2 m; move_up 75 cm; turn_right 50 degrees; move_left 40 cm; move_back 70 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: The current flight control task list is to be cleared.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Is it not the time to commence with the task of guiding the aerial voyage?\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 勇敢地去寻找那个放置在角落里的网球拍，并且别忘了仔细检查每一个可能藏着碘伏的地方，同时留意是否有遗忘的自行车。\nresponse: ", "response": "网球拍; 碘伏; 自行车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机起飞，然后无人机向右转五十度，接着为了探测右侧的情况，请将无人机向右移动六十厘米，随后让无人机顺时针旋转四十度，最后可以降落了吗。\nresponse: ", "response": "take_off; turn_right 50 degrees; move_right 60 cm; turn_right 40 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's get the drone's flight control task back on track where we left off!\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 即刻停止现行操控之旅程，建议暂歇。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即寻找冲浪板。\nresponse: ", "response": "冲浪板."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 不妨现在就重启先前暂停的那个搜寻任务，确保一切按计划进行。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the fork.\nresponse: ", "response": "fork."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞操作现在可以开始吗，然后无人机上升五十厘米吧。\nresponse: ", "response": "take_off; move_up 50 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Sway to the left by 2 meters, then swerve left 90 degrees, after that perform a lateral correction of 150 centimeters to the right, subsequently fly upwards 10 inches, next rise up abruptly 30 cm, afterwards fly upward 60 centimeters, following that adjust forward 3 feet, then go to the right, before flying backwards 5 inches, immediately after which please bring it down slowly, and in the end come down now, let's land.\nresponse: ", "response": "move_left 2 m; turn_left 90 degrees; move_right 150 cm; move_up 10 in; move_up 30 cm; move_back 5 in; move_up 60 cm; move_forward 3 ft; Missing move_right; move_back 5 in; Missing move_down; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please urgently pause the current flight control task to ensure a positive outcome.\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for car, hot dog now.\nresponse: ", "response": "car; hot dog."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Seek out the cell phone, mouse, and spoon, navigating through the landscape as a hawk glides through the sky.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear the current flight control task list; you’re in command, and everything is under control.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Fly the drone 500 meters east and record the footage.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清除当前任务列表，让应用运行更顺畅。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin the takeoff now. Then angle right and execute a lateral displacement of 5 feet to the right, then shift right a bit. After that, please turn it left by 120 degrees. Next, move right a few feet. Following that, propel it forward by 200 centimeters. Subsequently, come down 20 inches. Afterwards, fly backward a few feet and please move the drone backwards 2 feet. Then go up by 12 inches, immediately after which elevate up 2.5 m. Thereafter, shift left by 2 meters, and in the end, make it land.\nresponse: ", "response": "take_off; Missing turn_right; move_right 5 ft; Missing move_right; turn_left 120 degrees; Missing move_right; move_forward 200 cm; move_down 20 in; Missing move_back; move_back 2 ft; move_up 12 in; move_up 2.5 m; move_left 2 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Identify the mountain area in the drone's aerial footage.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前任务列表中的搜索对象。\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调整卧室灯光至100%的亮度。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要不咱们接着刚才暂停的那个搜寻任务，继续完成它吧，感觉离成功不远了！\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以考虑详尽地审查并恢复之前暂停的飞行任务呢？这样做或许能避免一些潜在的问题，您觉得如何？\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在需要起飞，然后下移四十厘米，接着向左移动四十五厘米，随后右移一百二十厘米，请将无人机右侧移动，之后前进九十厘米，往后退，紧接着向前方似乎有障碍物的方向移动，向右移动七十厘米，能否让无人机下降一米，随后无人机右移一米以绕过障碍物，升高六十厘米以便能看到更广的范围，接着可以左边移动二十厘米，最后无人机可以降落在这里。\nresponse: ", "response": "take_off; move_down 40 cm; move_left 45 cm; move_right 120 cm; Missing move_right; move_forward 90 cm; Missing move_back; move_right 70 cm; Missing move_forward; move_down 1 m; move_right 1 m; move_up 60 cm; move_left 20 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Gently glide over to the bed and carefully scout for a knife, like a guardian angel looking after its charge.\nresponse: ", "response": "bed; knife."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退五十厘米，调整位置，然后请将无人机高度增加一百厘米，之后能否请无人机下降五十厘米，接着右转四十五度，调整无人机方向，确保飞行顺畅。\nresponse: ", "response": "move_back 50 cm; move_up 100 cm; move_down 50 cm; turn_right 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机上升三米，然后下降八十厘米以接近地面；接着，请右转九十度，之后后退一百五十厘米调整位置，检查后方的情况；随后左转五十度，紧接着无人机现在离地面太远了，请下降一百厘米以调整高度；之后左转四十度查看左侧情况，再向左飞行两米；第三，下降八十厘米接近地面，准备进行详细检查；最后，无人机向左行进。\nresponse: ", "response": "move_up 3 m; move_down 80 cm; turn_right 90 degrees; move_back 150 cm; turn_left 50 degrees; move_down 100 cm; turn_left 40 degrees; move_left 2 m; move_down 80 cm; Missing move_left."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why don't we take a moment to pause the ongoing search task? This could help ensure more precise control when you resume.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off, then lift up 40 centimeters, afterwards the drone should climb 1 foot, next advance forward 4 feet, after that spin the drone to the left 45 degrees, later engage in an upward climb of 500 centimeters.\nresponse: ", "response": "take_off; move_up 40 cm; move_up 1 ft; move_forward 4 ft; turn_left 45 degrees; move_up 500 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it possible that the laptop could be found by being looked for?\nresponse: ", "response": "laptop."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否前往搜索行李箱、香蕉和碗？\nresponse: ", "response": "行李箱; 香蕉; 碗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for umbrella, sports ball, toilet, scissors.\nresponse: ", "response": "umbrella; sports ball; toilet; scissors."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即并详尽地暂停当前正在执行的搜寻物体任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the sprite with unwavering determination, ensuring its location is precisely identified.\nresponse: ", "response": "sprite."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly it upward, then let's slide to the left, 30 centimeters, cha-cha style; after that, perform a port-side drift for 50 centimeters; subsequently, shift rightwards 4 inches; finally, fly straight ahead.\nresponse: ", "response": "Missing move_up; move_left 30 cm; move_left 50 cm; move_right 4 in; Missing move_forward."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 调整到左侧位置，请向左移动七十五厘米，然后无人机向右移动，接着让无人机逆时针旋转一百度，之后请将无人机右移一米，最后向左偏移一米，寻找目标物品。\nresponse: ", "response": "move_left 75 cm; Missing move_right; turn_left 100 degrees; move_right 1 m; move_left 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you locate the vase and bowl?\nresponse: ", "response": "vase; bowl."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the giraffe, will ya?\nresponse: ", "response": "giraffe."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn the drone right by 45 degrees right away, then sink down 50 cm, after that turn left a bit, next fly down 3 feet, afterwards quick, rotate left 90 degrees, subsequently please rotate left by 45 degrees, and in the end adjust the drone's position to the right.\nresponse: ", "response": "turn_right 45 degrees; move_down 50 cm; Missing turn_left; move_down 3 ft; turn_left 90 degrees; turn_left 45 degrees; Missing move_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off and go straight, then initiate vertical ascent by 3 meters, after that pivot right, subsequently climb up to 1 meter, next proceed right 1.5 meters, and finally execute a lateral displacement of 5 feet to the right.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 勇敢地寻找烤箱吧！\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start the washing machine and select the standard washing mode.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Erase the current target hunt from the drone's mission roster with utmost urgency, as if snatching victory from the jaws of defeat.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out the current flight control task list at once! Thank you for ensuring smooth operations!\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 任务开始时，请无人机起飞，然后上升三十厘米，提高视角，接着请无人机左转四十五度，调整角度以获得更好视角，随后请让无人机向后移动一米，紧接着升高八十厘米，改变高度。无人机飞得太高了，降低，快点左移。请无人机左转四十五度，调整角度以获得更好视角，之后左边飞行一百厘米，我们要探索左侧的神秘区域，最后马上下降。\nresponse: ", "response": "take_off; move_up 30 cm; turn_left 45 degrees; move_back 1 m; move_up 80 cm; Missing move_down; Missing move_left; turn_left 45 degrees; move_left 100 cm; Missing move_down."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Amidst the serene skies, let the ongoing command and quest for the drone be halted.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar gracefully above the dining table, a hawk scanning its domain, to seek what lies beneath.\nresponse: ", "response": "dining table."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Explain the basic principles of nuclear fusion.\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后请让无人机着陆。\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current object search task list should be cleared.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please move the drone backwards 2 feet, then fly to the right by 30 cm, next shift left by a meter, afterwards steer it right 45 degrees, subsequently rotate clockwise 90 degrees, and in the end, impatiently land now.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着之前的控制和搜索任务吧。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence for the drone.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞吧，然后前进八十厘米，前方可能藏着一些秘密。\nresponse: ", "response": "take_off; move_forward 80 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 先清空当前的控制设置，然后再进行搜寻任务的取消。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 嘿，要不要接着把之前暂停的飞行任务继续下去？\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you kindly initiate the flight control process?\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机离地面太远了，下降一百五十厘米，然后请将无人机向左旋转九十度，以便能够更好地观察左侧的环境，接着前进九十厘米。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused flight control operation.\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please, move back by 15 centimeters, then advance forward 50 inches, turn 45 degrees to the right, raise it 100 centimeters, step back, descend 15 feet to get closer to the ground, turn to the right by 30 degrees, and move right a few feet.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 哎呀，麻烦你了，能不能帮我找一下手机和键盘，还有如果看到橙子和碘伏也一起带过来，真是太感谢了！\nresponse: ", "response": "手机; 橙子; 碘伏; 键盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off quickly, then make the drone ascend by 50 inches, next move the drone forward a distance of 5 meters, afterwards lower it down, subsequently drone descend 3 feet, and in the end let the drone land now.\nresponse: ", "response": "take_off; move_up 50 in; move_forward 5 m; move_down 3 ft; Missing move_down; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机现在起飞，然后无人机能向右转四十五度，接着右移七十厘米，随后如果无人机向左移动一百五十厘米，能更清楚地看到左侧的环境，最后无人机可以降落在指定地点吗。\nresponse: ", "response": "take_off; turn_right 45 degrees; move_right 70 cm; move_left 150 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清除当前任务列表中的搜寻目标。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请终止当前的所有控制指令并取消搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否需要清除当前的控制与搜寻任务？\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not approach the sink.\nresponse: ", "response": "sink."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最急迫的心情，请即刻于那柔软的沙发之侧探寻遗落的飞盘与珍贵的笔记本电脑。\nresponse: ", "response": "飞盘; 笔记本电脑; 沙发."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您详尽地执行以下操作：清除当前的控制设置及搜寻任务。谢谢。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Rotate to the right, then shift forward 50 centimeters, afterwards fly left by 50 inches, next cause it to move left 40 cm, after that bring the drone back 80 centimeters, following that adjust right by 5 feet, subsequently shift the drone right 5 meters, later move back from the edge of the cliff 3 meters, then do a quick dash forward 15 feet, zoom!, and in the end, move backward 1 foot.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Rotate 90 degrees clockwise, then turn the drone left 60 degrees, after that, go down 6 meters. Next, drift right like you're dodging an obstacle, 5 meters. Following that, move the drone right 2 inches. Immediately after, veer to the left 40 degrees smoothly. Then, fall back 2 meters and take the drone back another 2 meters. Afterwards, descend to 8 feet. In the end, initiate the landing.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向左移动一百厘米，检查左侧情况，然后迅速下降一米，接着请将无人机上升六十厘米，以便调整到合适的高度。随后，无人机当前的高度不够，请下降六十厘米以更接近地面。紧接着，无人机上升三米，之后来个后退五十厘米的动作，看看后面有什么惊喜。随后，无人机下降四十厘米以调整高度，然后无人机向左移动四十五厘米。最后，请上升。\nresponse: ", "response": "move_left 100 cm; move_down 1 m; move_up 60 cm; move_down 60 cm; move_up 3 m; move_back 50 cm; move_down 40 cm; move_left 45 cm; Missing move_up."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Tell me how to create a scientific weight loss plan.\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the horse and the suitcase urgently, then find the carrot as well.\nresponse: ", "response": "horse; suitcase; carrot."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's get this thing off the ground! Then descend 2 feet. After that, take the drone back. Next, move forward past the parking lot 200 feet. Afterwards, lift the drone upwards by 50 centimeters. Following that, Let’s fly it right by 5 meters.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机现在起飞吗，然后上升一百二十厘米，接着可以让无人机往后退，之后左转一百二十度，我们需要查看左侧的细节，随后无人机下移四十厘米，紧接着前进一百五十厘米，随后无人机高度过低，请上升，接下来无人机右转六十度，之后让无人机下降一米，紧接着为了调整视角，请右转，然后无人机向右转五十度，最后前进一段距离。\nresponse: ", "response": "take_off; move_up 120 cm; Missing move_back; turn_left 120 degrees; move_down 40 cm; move_forward 150 cm; Missing move_up; turn_right 60 degrees; move_down 1 m; Missing turn_right; turn_right 50 degrees; Missing move_forward."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您立刻停止寻找那烦人的微波炉和吵闹的猫，还有那只讨厌的鸟。\nresponse: ", "response": "微波炉; 猫; 鸟."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the quest for the object, letting the aerial sentinel glide through the skies with purpose.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机请飞行到前方十厘米，接着小飞机前飞七十厘米，让我们探险一下，然后我感觉左边可能有这个东西，随后无人机下降五十厘米以调整高度，紧接着能否请无人机再下降五十厘米来降低高度，之后无人机请右转九十度，随后请帮忙让无人机左移四十厘米，紧接着请让无人机向右飞行两米，最后请让无人机降落到地面。\nresponse: ", "response": "move_forward 10 cm; move_forward 70 cm; turn_left 90 degrees; move_down 50 cm; move_down 50 cm; turn_right 90 degrees; move_left 40 cm; move_right 2 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Confirm if there are small road signs in the drone’s view.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please resume the previously paused control and search task, ensuring that all drone functions are reinstated accurately and efficiently.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请右转五十度，以便调整方向，然后请让无人机向后移动三十厘米，接着无人机向右移动四十厘米，随后请将无人机向右移动六十厘米，紧接着上升一百五十厘米；降低位置，之后无人机在当前位置上升一百五十厘米，最后现在开始降落。\nresponse: ", "response": "turn_right 50 degrees; move_back 30 cm; move_right 40 cm; move_right 60 cm; move_up 150 cm; Missing move_down; move_up 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制扫地机器人清扫阳台区域。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机立即起飞，感谢您的帮助. 之后无人机，请着陆.\nresponse: ", "response": "take_off; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Shall we proceed to resume the previously paused object search task?\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调整智能灯泡的颜色为淡蓝色。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能找到那艘船、滑板和鼠标吗？加油！\nresponse: ", "response": "船; 滑板; 鼠标."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制与搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要继续之前暂停的飞行任务呢？\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Can it take off, then turn it right, next move it back a bit, afterwards rotate it left 135 degrees, subsequently retreat back 120 cm, following that tilt left 90 degrees, immediately after that descend 2 feet.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Navigate through the room's expanse, casting a meticulous net over the biscuit, the bed, the wine glass, and the tie, ensuring no detail is left unscanned.\nresponse: ", "response": "biscuit; bed; wine glass; tie."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以在此处起飞吗，然后升高六十厘米，接着左侧好像有东西，转动一下，随后请将无人机上升五十厘米，谢谢，紧接着无人机前进九十厘米，之后左转看一下，检查那边的情况，紧接着向右再靠近九十厘米，随后无人机在当前位置上升一百五十厘米，紧接着为了查看后方的情况，请将无人机后退两米，最后左转三十度，调整方向。\nresponse: ", "response": "take_off; move_up 60 cm; turn_left 90 degrees; move_up 50 cm; move_forward 90 cm; turn_left 90 degrees; move_right 90 cm; move_up 150 cm; move_back 2 m; turn_left 30 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机右移一百五十厘米，然后后退一百五十厘米，调整位置，检查后方的情况，接着向前移动九十厘米，靠近目标，请下降，随后请将无人机左转四十五度，以获得更好视角，之后上升一百五十厘米，紧接着向上升起二十厘米，视角向上，最后无人机降落在预定地点。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: It is recommended to resume the previously halted flight control operation.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 任务开始时，请无人机起飞，然后使无人机向左转，接着左转六十度，避开障碍，之后移动到右侧，紧接着请升高，再后退五十厘米，避开障碍物，随后无人机需要上升九十厘米，接着让无人机顺时针旋转一百八十度，之后无人机提升，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "take_off; Missing turn_left; turn_left 60 degrees; Missing move_right; Missing move_up; move_back 50 cm; move_up 90 cm; turn_right 180 degrees; Missing move_up; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请帮忙让无人机下降一米，然后让无人机顺时针旋转七十五度，接着无人机上升三百五十厘米，随后无人机请向前飞行一米，最后无人机降落到安全区域。\nresponse: ", "response": "move_down 1 m; turn_right 75 degrees; move_up 350 cm; move_forward 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The carrot, couch, bowl, and microwave are to be searched for.\nresponse: ", "response": "carrot; couch; bowl; microwave."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动操控与探索之旅\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 当前飞行任务被暂停，建议您考虑点击“停止”按钮以确保安全。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议您先找到花瓶，接着轻松定位遥控器，最后愉快地享受披萨。\nresponse: ", "response": "花瓶; 遥控器; 披萨."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机左转一百八十度，观察后方，然后请向右移动五十厘米来避开，随后无人机右转，最后现在让无人机着陆。\nresponse: ", "response": "turn_left 180 degrees; move_right 50 cm; Missing turn_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去行李箱旁边，找到那个讨厌的钟，顺便看看长椅上有没有丢的飞盘。\nresponse: ", "response": "行李箱; 钟; 长椅; 飞盘."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: While ensuring safety, could you please check for the painkillers and the wine glass in a gentle and careful manner?\nresponse: ", "response": "painkillers; wine glass."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Consider searching for the bowl.\nresponse: ", "response": "bowl."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动控制飞行任务，情况紧急。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议立即启动目标识别程序，以高效执行搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，执行任务，然后请后退一米，接着无人机左移一米，随后无人机飞得太高了，请下降四十厘米，紧接着飞到更高处，升高两百厘米，最后无人机向右旋转九十度。\nresponse: ", "response": "take_off; move_back 1 m; move_left 1 m; move_down 40 cm; move_up 200 cm; turn_right 90 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused object search task immediately to ensure timely detection and identification by the drone.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以优雅的姿态，在那悠长的长椅旁寻找遗落的牙刷。\nresponse: ", "response": "牙刷; 长椅."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar through the sky, eagle-eyed, to seek the hidden cola and the silent clock.\nresponse: ", "response": "cola; clock."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the aerial vehicle operation sequence.\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往搜索碘伏和蛋糕的位置，迅速报告。\nresponse: ", "response": "碘伏; 蛋糕."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务，就像唤醒沉睡的雄鹰展翅高飞。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek the backpack, then find the fork.\nresponse: ", "response": "backpack; fork."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone forward 20 centimeters, then can we get this drone to land soon?.\nresponse: ", "response": "move_forward 20 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Immediately pause the ongoing control and search operations to ensure we can proceed with precision and safety. Don't hesitate; your prompt action is crucial for the success of our mission. Let's take a moment to reassess and then continue with renewed focus.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降八十厘米，接近地面，准备进行详细检查，然后请命令无人机降落到目标区域。\nresponse: ", "response": "move_down 80 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即寻找杯子，接着找到酒杯，最后定位花瓶。\nresponse: ", "response": "杯子; 酒杯; 花瓶."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机已准备好起飞，然后请让无人机前进一米，以探索前方环境，接着左旋转，紧接着请将无人机向前移动一百厘米，探测前方区域，随后向前飞行五十厘米，之后向右侧移动，请向右移动，紧接着左侧移动75厘米，随后可以让无人机往后退吗？接着往左飞行，然后向右飞行三十厘米，紧接着无人机后退二十厘米，最后无人机请下降一百五十厘米，最后请让无人机现在降落吧。\nresponse: ", "response": "take_off; move_forward 1 m; Missing turn_left; move_forward 100 cm; move_forward 50 cm; Missing move_right; Missing move_right; move_left 75 cm; Missing move_back; Missing move_left; move_right 30 cm; move_back 20 cm; move_down 150 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please urgently clear the current object search task list to ensure smooth drone operation.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议你先去找找烤面包机，然后是长颈鹿，最后看看能不能发现可乐。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the biscuit!\nresponse: ", "response": "biscuit."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空现有控制指令并终止搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's launch this thing, then turn clockwise 90 degrees, after that turn to face the sun 120 degrees, next let’s rotate it left by 60 degrees, afterwards turn left 10 degrees.\nresponse: ", "response": "take_off; turn_right 90 degrees; turn_right 120 degrees; turn_left 60 degrees; turn_left 10 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请温柔地唤醒那一度静默的空中之旅，续写先前未完的篇章。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it too much to ask if the cola, potted plant, traffic light, and cake could be found?\nresponse: ", "response": "cola; potted plant; traffic light; cake."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动飞行任务，就像唤醒沉睡的雄鹰展翅高飞。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Wow, make sure to clear out the current flight control task list for your drone application process! It's such an important step to ensure everything runs smoothly!\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止现行操控之旅程，以待进一步指示。\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 确认无人机视野中是否有出现流浪动物。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift to the right slightly, then fly backward a few feet, next drop it down by 50 inches, afterwards land the drone slowly.\nresponse: ", "response": "Missing move_right; Missing move_back; move_down 50 in; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Suspend the ongoing control operations and the concurrent search mission, for a moment's repose is essential in maintaining the precision and efficacy of our endeavors.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take it off now, I can’t wait to see it in action! Next, adjust to the right, then swerve right 180 degrees, after that, adjust direction to the right 45 degrees, subsequently move it to the left, afterwards move down 4 meters, and following that, descend by 30 centimeters.\nresponse: ", "response": "take_off; Missing turn_right; turn_right 180 degrees; turn_right 45 degrees; Missing move_left; move_down 4 m; move_down 30 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去把狗、冲浪板、钟和马都找一下。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 鉴于当前任务的重要性，我们强烈建议立即恢复此前因故中断的目标物搜索进程。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate launch, then fly left side, after that drone descend 3 feet, next fall back 2 meters, subsequently let's bring it down gently, maybe 30 inches, afterwards get it to climb 4 feet now!, immediately after turn right about 90 degrees, following that turn it right 60 degrees, thereafter move the drone 3 feet forward, then veer to the left 40 degrees smoothly, and in the end move to the right.\nresponse: ", "response": "take_off; Missing move_left; move_down 3 ft; move_back 2 m; move_down 30 in; move_up 4 ft; turn_right 90 degrees; turn_right 60 degrees; move_forward 3 ft; turn_left 40 degrees; Missing move_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议您鼓励地去搜索那个酒杯。\nresponse: ", "response": "酒杯."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Push forward 100 inches, then steer left 60 degrees, afterwards go up a bit, next go leftward 1.5 m, subsequently steer left 60 degrees, and in the end go backwards 50 centimeters.\nresponse: ", "response": "move_forward 100 in; turn_left 60 degrees; Missing move_up; move_left 1.5 m; turn_left 60 degrees; move_back 50 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后请无人机后退一百厘米，接着向前移动七十厘米，随后请将无人机向左移动一百二十厘米，紧接着升高六十厘米，之后再次向左飞行一百二十厘米，后来无人机下降六十厘米，最后能否请无人机下降五十厘米。\nresponse: ", "response": "take_off; move_back 100 cm; move_forward 70 cm; move_left 120 cm; move_up 60 cm; move_left 120 cm; move_down 60 cm; move_down 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请按照既定程序搜寻勺子。\nresponse: ", "response": "勺子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's resume the flight control task where we left off.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused object detection task.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被建议去搜寻一下三明治、手提包、冲浪板和飞盘，是不是可以更快地找到它们呢？\nresponse: ", "response": "三明治; 手提包; 冲浪板; 飞盘."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start flying, then steer left 60 degrees, after that move the drone forward 20 centimeters, next soar forward 15 meters, afterwards veer left by 45 degrees, subsequently drop it down 50 cm, and in the end descend and land.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么土星有环而其他行星没有？\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动任务，犹如开启探针，精准锁定目标。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current flight control task list immediately.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜寻任务，犹如揭开迷雾中隐秘面纱的过程，却也预示着一系列潜在挑战与困境的开启。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Bread and cola are to be located by the person, alongside the giraffe.\nresponse: ", "response": "cola; giraffe; bread; person."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the cat near the sink, then find the umbrella and bowl.\nresponse: ", "response": "cat; sink; umbrella; bowl."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以最详尽的方式，在这紧急而又友好的任务中，搜索并定位那令人振奋的冲浪板。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you have the drone take off now, then move up 2 inches, after that proceed left 2 meters, subsequently ascend 1 meter, next go backward a short distance, about 1 meter, afterwards fly towards the building 100 feet, following that move back 12 inches, immediately after tilt the drone 90 degrees to the right, and in the end fly forward 1 foot.\nresponse: ", "response": "take_off; move_up 2 in; move_left 2 m; move_up 1 m; move_back 1 m; move_forward 100 ft; move_back 12 in; turn_right 90 degrees; move_forward 1 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，准备执行任务，然后上升九十厘米，接着左转三十度，观察左侧情况。随后，在往右移动之后，下降七十厘米，调整无人机高度；紧接着向右飞行一米，之后前进一百厘米，检查前方。最后，请让无人机降落。\nresponse: ", "response": "take_off; move_up 90 cm; turn_left 30 degrees; Missing move_right; move_down 70 cm; move_right 1 m; move_forward 100 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机起飞到空中，然后请向右移动五十厘米来避开，接着请左转一百八十度检查，之后将无人机向后移动一米，紧接着再次左转一百八十度观察后方有什么，随后无人机上升三百五十厘米，接下来把小飞机右边移六十厘米吧，然后向右侧移动，紧接着让无人机逆时针旋转，请转向后方，最后现在请让无人机安全降落。\nresponse: ", "response": "take_off; move_right 50 cm; turn_left 180 degrees; move_back 1 m; turn_left 180 degrees; move_up 350 cm; move_right 60 cm; Missing move_right; Missing turn_left; turn_left 180 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you please look for the knife?\nresponse: ", "response": "knife."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你先找到人，然后再去寻找剪刀。\nresponse: ", "response": "人; 剪刀."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Ugh, just take off! Then fly to the left 6 feet. After that, let's do a little spin to the right, 360 degrees! Next, fly right 1 foot, then bank right 2 meters. Following that, rotate 90 degrees to the left. Immediately after, rotate right side. In the end, step back.\nresponse: ", "response": "take_off; move_left 6 ft; turn_right 360 degrees; move_right 1 ft; move_right 2 m; turn_left 90 degrees; Missing turn_right; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: First, hover in place, then rise up abruptly 30 cm, next go backwards 30 inches, afterwards let's do a little spin to the right, 360 degrees!, following that go up now, subsequently turn right about 90 degrees, immediately after give it a little nudge to the right, like it’s tipping over, and in the end set it down.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请详尽地搜索摩托车、床、沙发和盆栽植物。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地建议你不要在床和餐桌之间寻找剪刀或运动球，这样可能会打扰到其他人。\nresponse: ", "response": "剪刀; 运动球; 床; 餐桌."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn the drone 90 degrees left to align with the road, then apply aft movement by 8 feet, after that move it to the right by 4 inches, next fly it forward 2 inches, afterwards move it to the right again, this time 3 meters, following that go down 3 feet, subsequently rotate 90 degrees clockwise, and in the end hurry up and land already.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Control the drone to hover for 5 minutes and record a video.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get it off the ground, then elevate up 2.5 m, and afterwards begin descent to ground level.\nresponse: ", "response": "take_off; move_up 2.5 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在水槽附近查找烤面包机和鼠标。\nresponse: ", "response": "水槽; 烤面包机; 鼠标."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在鸟与牙刷之间轻盈地穿梭，寻找它们细微的踪迹。\nresponse: ", "response": "鸟; 牙刷."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please clear the current control settings and initiate a new search task. We're here to support you every step of the way!\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current flight control task now.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Ascend swiftly 2 meters, then shift the drone to the left by 2 meters, afterwards move the drone in reverse direction, next fly the drone downward 5 meters, subsequently let’s get the drone to descend 1.2 meters, after that rotate to the left, following that fly straight ahead 20 meters, later head forward 20 feet, then bring it down gently, immediately after impatiently land now!.\nresponse: ", "response": "move_up 2 m; move_left 2 m; Missing move_back; move_down 5 m; move_down 1.2 m; Missing turn_left; move_forward 20 m; move_forward 20 ft; Missing move_down; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the cell phone!\nresponse: ", "response": "cell phone."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the control and search task.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Halt the ongoing control and search operation immediately. Consider resuming only after a thorough reassessment of the mission parameters.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降四十五厘米，然后右移一米，绕过障碍物，我们继续前行，接着请无人机升高一百厘米，随后请将无人机向后移动，紧接着转动无人机四十五度左，之后请无人机向左旋转，接着向右移动两百五十厘米，随后无人机需要往后移动一米，让无人机向后退一米，最后请将无人机降落在此处。\nresponse: ", "response": "move_down 45 cm; move_right 1 m; move_up 100 cm; Missing move_back; turn_left 45 degrees; Missing turn_left; move_right 250 cm; move_back 1 m; move_back 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear out that current flight control task list, will ya? It’s a quick step to getting us back in the air smoothly.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Purge the existing roster of aerial navigation directives, akin to erasing the chalkboard of the sky.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the keyboard, banana, cat, and iodophor with care and bring them to me safely.\nresponse: ", "response": "keyboard; banana; cat; iodophor."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't just hover there, go find that sandwich!\nresponse: ", "response": "sandwich."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标识别任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing search operation immediately.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Urgently initiate the control and search task; your swift action is crucial!\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即恢复先前所暂停的物体搜寻任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the sprite, tie, and chair with enthusiasm!\nresponse: ", "response": "sprite; tie; chair."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Get the drone flying pronto!\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Consider searching for the orange near the train.\nresponse: ", "response": "orange; train."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机准备好进行起飞之后，请将无人机往右移，然后右转一百二十度，接着右边看看，转过去90度，最后无人机需要在这里降落。\nresponse: ", "response": "take_off; Missing move_right; turn_right 120 degrees; turn_right 90 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the boat, sprite, handbag.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 降落一米，然后请往后移动，接着前进二十厘米，之后向右移动二十厘米以避开障碍，左转三十度，调整方向，很好，现在向右飞行八十五厘米，随后降低位置，最后无人机准备降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the erstwhile suspended navigation and reconnaissance operations.\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 将无人机前进，然后向左移动六十厘米，准备绕过障碍物，接着后退五十厘米，调整位置，最后无人机降落在地面上。\nresponse: ", "response": "Missing move_forward; move_left 60 cm; move_back 50 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 向下下降，然后后退五米，接着右边移动七十厘米，以更好地绕过障碍，随后左转五十度，紧接着右移一米，之后无人机飞得太高了，请下降四十厘米，接下来为了更好的视角，请将无人机左转，最后无人机请着陆在指定地点。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Slide it left 40 inches, then swerve right 70 degrees, and land it now.\nresponse: ", "response": "move_left 40 in; turn_right 70 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您以优雅的姿态滑翔，在寻找长椅的过程中，犹如猎鹰般敏锐地捕捉到藏于其旁的烤箱，同时也不要错过了那瓶宛如冬日初雪般的雪碧。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机开始起飞，然后让无人机向后退一米五，接着让无人机后退，随后请将无人机向左移动。\nresponse: ", "response": "take_off; move_back 1.5 m; Missing move_back; Missing move_left."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机太高了，下降六十厘米，然后请右转五十度，立刻再右转五十度，接着无人机后退二十厘米，后退，之后右转四十五度以调整无人机方向，随后后退五十厘米来调整位置，最后请将无人机向左移动两百厘米。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 清空当前的控制设置与搜索任务，为接下来的操作做好准备。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机右移一米，然后请将无人机左移，接着无人机现在降下一百五十厘米，随后我需要无人机下降一米，请执行，最后无人机降落。\nresponse: ", "response": "move_right 1 m; Missing move_left; move_down 150 cm; move_down 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向前推进一米，观察前方情况，然后左边飞行七十厘米看看，接着左转六十度，查看左侧情况，随后左侧移动75厘米，紧接着无人机请向后飞行两米以避开障碍物，之后为了更好的视角，请将无人机左转，紧接着右转角度五十度，随后让无人机逆时针旋转一百度，紧接着左转九十度，检查左侧情况，最后移动五十厘米向左。\nresponse: ", "response": "move_forward 1 m; move_left 70 cm; turn_left 60 degrees; move_left 75 cm; move_back 2 m; Missing turn_left; turn_right 50 degrees; turn_left 100 degrees; turn_left 90 degrees; move_left 50 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey there, could you flutter over and see if you can spot that cake hiding amongst the scenery? Thanks a bunch!\nresponse: ", "response": "cake."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please look for a chair, a giraffe, a cat, and a hot dog? I believe you can find them!\nresponse: ", "response": "chair; giraffe; cat; hot dog."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的搜寻任务，好吗？\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机高度过高，请下降五十厘米，然后请无人机向左旋转，接着无人机下降二十厘米以便更接近地面，随后右转一百八十度，紧接着无人机左转一百八十度，掉头，最后现在让无人机着陆。\nresponse: ", "response": "move_down 50 cm; Missing turn_left; move_down 20 cm; turn_right 180 degrees; turn_left 180 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您恢复先前已暂停的控制与搜索任务，以确保操作流程的连贯性。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the hot dog, bottle, spoon, and knife, please.\nresponse: ", "response": "hot dog; bottle; spoon; knife."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将无人机前进，然后向左移动六十厘米，准备绕过障碍物，接着后退五十厘米，调整位置，最后无人机降落在地面上。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否定位并检索位于长椅附近的苹果和笔记本电脑？\nresponse: ", "response": "长椅; 苹果; 笔记本电脑."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone now, then bring the drone back 80 centimeters, after that spin right 45 degrees, next move the drone 3 feet forward, following that move the drone to the right for a while, and in the end set it down gently.\nresponse: ", "response": "take_off; move_back 80 cm; turn_right 45 degrees; move_forward 3 ft; Missing move_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: You might want to check under the dining table, but don't expect to find any iodophor there.\nresponse: ", "response": "dining table; iodophor."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Prepare for takeoff, then let the drone land now.\nresponse: ", "response": "take_off; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，执行任务，然后无人机提升；调整到左侧位置，请向左移动七十五厘米，之后请让无人机向后移动两百厘米，接着上升一百五十厘米；为任务执行，请右转五十度，随后无人机向左行进，紧接着左转三十度，查看情况。右边有点阻碍，右移六十厘米来绕过它，然后请让无人机后退八十厘米，最后请无人机左转四十五度，这样可以得到更好的视角。\nresponse: ", "response": "take_off; Missing move_up; move_left 75 cm; move_back 200 cm; move_up 150 cm; turn_right 50 degrees; Missing move_left; turn_left 30 degrees; move_right 60 cm; move_back 80 cm; turn_left 45 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Should we now resume the previously paused control and search operation with precision and immediacy?\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the kite, ensuring you cover all areas thoroughly, and then locate the bread, confirming its position precisely.\nresponse: ", "response": "kite; bread."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 详尽地清除当前的控制指令并细致地终止搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问去寻找一下芬达？\nresponse: ", "response": "芬达."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动天空之舞的序章，指挥这翱翔的使者启程。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Ascend! then turn the drone left by 30 degrees, next go down 50 cm, afterwards climb 18 inches, subsequently fly to the left 5 meters, following that shift the drone leftwards by 75 centimeters, immediately after that go down 50 centimeters.\nresponse: ", "response": "take_off; turn_left 30 degrees; move_down 50 cm; move_up 18 in; move_left 5 m; move_left 75 cm; move_down 50 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please clear the current control and search task.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 向右一米，然后请将无人机向右移动三十厘米，以检查右侧环境，接着向左侧移动，随后无人机前进一百五十厘米，继续向前探索未知，之后左转二十度，检查左侧情况，紧接着任务要求，无人机下降五十厘米，最后无人机可以降落在指定地点吗。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧找找手提包，三明治，叉子和笔记本电脑在哪？\nresponse: ", "response": "手提包; 三明治; 叉子; 笔记本电脑."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请无人机起飞执行任务，然后左移六十厘米，之后无人机高度太高，请下降，紧接着再左移六十厘米，随后无人机下降六十厘米，接着无人机向前移动，然后上升，最后右移七十五厘米。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not move until remote is located.\nresponse: ", "response": "remote."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机向后移动二百厘米，然后右转一百度，重新调整方向以适应新的飞行路线。接着，它右移七十五厘米，紧接着无人机前方的目标不清楚，请向前移动。随后右边可能有目标，帮我转过去。之后将无人机上升两百厘米，再后来我感觉左边可能有这个东西。最后让无人机向后退一米五，随后无人机上升高度。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Up we go! Rotate it 120 degrees left, then climb up to 1 meter, afterwards go forward 8 inches, next sway to the left by 2 meters, immediately after tilt the drone to the left, subsequently rotate left by 30 degrees, and finally turn right about 90 degrees.\nresponse: ", "response": "take_off; turn_left 120 degrees; move_up 1 m; move_forward 8 in; move_left 2 m; Missing turn_left; turn_left 30 degrees; turn_right 90 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control process to steer your aerial voyage smoothly.\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能麻烦去查看一下餐桌旁边有没有我落下的东西吗？\nresponse: ", "response": "餐桌."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索，确认不是在笔记本电脑旁、滑板上、书里或公共汽车内。\nresponse: ", "response": "笔记本电脑; 滑板; 书; 公共汽车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转二十度，检查左侧情况，然后无人机现在的方向可能不对，请向右转动九十度以调整方向，接着无人机左侧移动一百八十厘米，随后请右转五十度，以便调整方向，紧接着无人机向左移动一米，之后请将无人机左转四十五度，以获得更好视角，后来右侧转向，紧接着为了解决当前的视角问题，请上升七十五厘米，最后往前飞行二百厘米。\nresponse: ", "response": "turn_left 20 degrees; turn_right 90 degrees; move_left 180 cm; turn_right 50 degrees; move_left 1 m; turn_left 45 degrees; Missing turn_right; move_up 75 cm; move_forward 200 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Urgently pause the current flight control task to ensure safety and maintain control!\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Pull back 4 feet, then adjust direction right, next move to the right for 10 feet, afterwards rotate the drone to the left 60 degrees, following that angle right, subsequently move the drone backward 40 inches, after that turn it left 60 degrees as fast as you can, and in the end land the drone gently.\nresponse: ", "response": "move_back 4 ft; Missing turn_right; move_right 10 ft; Missing move_right; turn_left 60 degrees; Missing turn_right; move_back 40 in; turn_left 60 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Just take a quick break from the flight control task, okay? You can always hop back in when you're ready!\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please clear the current control and search task for me?\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the object search task immediately.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，感谢；然后请让无人机向右飞行两米；接着上升七十厘米，提高高度；随后无人机向右偏移四十五厘米；紧接着，请无人机上升一百五十厘米；之后请将无人机向左移动两百五十厘米；接下来，请向右移动一百五十厘米；后来后退五十厘米，避开障碍物；然后无人机右侧视角受限，请右转三十度以获得更好视角；紧接着，无人机上升九十厘米；随后右移六十厘米；最后，无人机飞得太高了，降低。\nresponse: ", "response": "take_off; move_right 2 m; move_up 70 cm; move_right 45 cm; move_up 150 cm; move_left 250 cm; move_right 150 cm; move_back 50 cm; turn_right 30 degrees; move_up 90 cm; move_right 60 cm; Missing move_down."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请在鸟与牙刷之间轻盈地穿梭，寻找它们细微的踪迹。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The object search task is initiated by the system.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请启动无人机的起飞程序，然后让无人机向后退一百五十厘米；无人机向前飞行，之后请让无人机下降三十厘米，接近地面；接着，无人机向前飞行一米，目标就在前面，准备接近，随后前进一百五十厘米；右边有点阻碍，右移六十厘米来绕过它；紧接着，无人机前方推进；随后升高六十厘米；接下来，向左转动一圈；最后，向左移动一米五。注意：无人机飞得太高了，请下降。\nresponse: ", "response": "take_off; move_back 150 cm; Missing move_forward; move_down 30 cm; move_forward 1 m; Missing move_down; move_forward 150 cm; move_right 60 cm; Missing move_forward; move_up 60 cm; turn_left 360 degrees; move_left 1.5 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 被请求去查找那辆汽车。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to search for the sports ball and the tennis racket.\nresponse: ", "response": "sports ball; tennis racket."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not your duty to ascertain whether the bowl conceals the cake, by meticulously searching the area?\nresponse: ", "response": "bowl; cake."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请清除当前搜索目标的任务列表。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Purge the existing control and navigation directives to reset the operational landscape.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please resume the flight control task that was previously paused.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the iodophor and knife, as if they were hidden treasures on a map.\nresponse: ", "response": "iodophor; knife."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的任务列表已被清理了。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Isn't it time to find that sports ball and those scissors?\nresponse: ", "response": "sports ball; scissors."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go backwards a little, then steer left 60 degrees, after that pull the drone up 50 centimeters, next move forward 5 meters, afterwards quick, rotate left 90 degrees, following that please make the drone turn left 90 degrees again, subsequently soar up 2 meters, then shift the drone right 150 centimeters, and in the end set it down.\nresponse: ", "response": "Missing move_back; turn_left 60 degrees; move_up 50 cm; Missing move_back; move_forward 5 m; turn_left 90 degrees; turn_left 90 degrees; move_up 2 m; Missing move_up; move_right 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the painkillers and the donut, then check if there's a cup by the sink, will you?\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing guidance and seek operation.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Control the TV to play fitness videos on YouTube.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Erase the roster of quests for the airborne sentinel.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take it off now, I can’t wait to see it in action! Then move it 200 centimeters forward. After that, I want you to shift right, 3 feet. Next, rotate right side, then fly forward now. Immediately after, fly it right by 3 inches. Following that, go forward 100 cm, and subsequently, move right by 100 centimeters. Afterwards, tilt left 90 degrees. Before proceeding further, turn the drone around. Then steer it right 45 degrees. Next, fly it to the right 20 inches. Later, Please rotate left by 45 degrees. In the end, send it to the right 7 feet.\nresponse: ", "response": "take_off; move_forward 200 cm; move_right 3 ft; Missing turn_right; Missing move_forward; move_right 3 in; move_forward 100 cm; move_right 100 cm; turn_left 90 degrees; Missing turn_left; turn_right 45 degrees; move_right 20 in; turn_left 45 degrees; move_right 7 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 现在必须立即恢复先前暂停的控制和搜索任务，确保一切按计划顺利进行。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is it possible to locate the banana and apple near the oven?\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you kindly put the current flight control task on hold?\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在这一程探索之旅中，不妨再度启航，继续那曾暂歇的控制与搜寻使命，让每一步都更加坚定而充满希望。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the book, scissors, toaster, and microwave!\nresponse: ", "response": "book; scissors; toaster; microwave."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: May the previously paused object search task be resumed?\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the laptop and giraffe.\nresponse: ", "response": "laptop; giraffe."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you please check if that vase is still in place?\nresponse: ", "response": "vase."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即寻找人和船，迅速报告位置。\nresponse: ", "response": "人; 船."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the biscuit, sprite, frisbee, and tennis racket.\nresponse: ", "response": "biscuit; sprite; frisbee; tennis racket."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Adjust the drone lens focus to capture distant objects.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调整无人机飞行至100米并拍摄全景照片。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed to locate and retrieve the donut and apple with utmost care and efficiency.\nresponse: ", "response": "donut; apple."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Sweep the area like a winter storm, locate the spoon, remote, and snowboard.\nresponse: ", "response": "spoon; remote; snowboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机飞得太高了，请下降一米，然后倒退一米，随后向上升，紧接着上扬，之后无人机下降三十厘米以便调整高度，接着后退七十厘米，检查后方是否有障碍物，再左转六十度，检查左侧情况，随后请向右移动五十厘米来避开，最后右侧转向。\nresponse: ", "response": "move_down 1 m; move_back 1 m; Missing move_up; Missing move_up; move_down 30 cm; move_back 70 cm; turn_left 60 degrees; move_right 50 cm; Missing turn_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动无人机并设置为定点拍摄模式。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please don't forget to clear the current control and search task.\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the dining table, truck, boat, and handbag with enthusiasm!\nresponse: ", "response": "dining table; truck; boat; handbag."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bring it down by 20 centimeters, then I want this drone to fly back 1 meter, next move to the left by 12 inches, after that move the drone to the left 150 centimeters, afterwards descend the drone 7 inches.\nresponse: ", "response": "move_down 20 cm; move_back 1 m; move_left 12 in; move_left 150 cm; move_down 7 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 真是太好了！请您礼貌地清空当前正在搜索的目标任务列表吧！\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前正在执行的目标搜索任务列表，以确保接下来的操作能够顺利进行。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the detailed control sequence and commence the thorough search task within the drone application process.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please, with the utmost care and attention to detail, locate both the microwave and the donut while also keeping an eye out for any signs of a bird?\nresponse: ", "response": "microwave; donut; bird."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 长椅和滑雪板被搜索了吗？\nresponse: ", "response": "长椅; 滑雪板."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate 90 degrees clockwise, then move leftward 3 ft, circle left by 45 degrees, next hover and turn right 90 degrees, bring it down by 20 centimeters afterwards, following that, make it descend quickly, subsequently make the drone ascend by 50 inches, and initiate landing in the end.\nresponse: ", "response": "turn_right 90 degrees; move_left 3 ft; turn_left 45 degrees; turn_right 90 degrees; move_down 20 cm; Missing move_down; move_up 50 in; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为了更好地检查右侧，请将无人机右转四十五度，然后请后退一米，接着无人机向左侧移动，随后为了获得更好的视角，请将无人机上升两米，紧接着请让无人机向后移动一米，之后右转一百八十度，接下来向右飞行一米，随后无人机飞得太高了，请下降一米，紧接着无人机向前飞行，最后上移。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去把刀、滑板、行李箱和烤箱找出来，行不行？\nresponse: ", "response": "刀; 滑板; 行李箱; 烤箱."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即前往查找披萨。\nresponse: ", "response": "披萨."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在那苍茫的草原上，寻找一匹与雪碧瓶并立的马，以及它身旁静置的雨伞。\nresponse: ", "response": "雪碧; 雨伞; 马."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate the drone left by 30 degrees, then descend 3 meters, afterwards rotate the drone to the left now, next rotate the drone left by 30 degrees, immediately after that turn right 90 degrees, subsequently spin around to the left by 90 degrees, following that rotate 90 degrees to the right, later fly forward 1 foot, and in the end bring it to the ground gently.\nresponse: ", "response": "turn_left 30 degrees; move_down 3 m; Missing turn_left; turn_left 30 degrees; turn_right 90 degrees; turn_left 90 degrees; turn_right 90 degrees; move_forward 1 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请上升两米，然后右侧有目标，向右飞行一百厘米，接着向后退三十厘米以避免碰撞，随后右侧再靠近十五厘米，最后向左飞行两米。\nresponse: ", "response": "move_up 2 m; move_right 100 cm; move_back 30 cm; move_right 15 cm; move_left 2 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机右移一米\nresponse: ", "response": "move_right 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请查找自行车和杯子。\nresponse: ", "response": "自行车; 杯子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜寻运动球。\nresponse: ", "response": "运动球."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞，然后向前飞行五十厘米，接着无人机请飞行到前方，随后后方一定有东西，转个身看看，最后请将无人机降落在此处。\nresponse: ", "response": "take_off; move_forward 50 cm; Missing move_forward; turn_left 180 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧继续之前停下的飞行任务吧！\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 我想让无人机立即起飞，然后由于右侧视角被遮挡，请将无人机右转四十五度以调整视角，之后后退一米，紧接着左转七十度，检查左侧情况，随后无人机逆时针旋转，接着提高高度，之后向下移动十厘米，紧接着向前移动七十厘米，最后无人机离地面太远了，下降一百五十厘米。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 赶紧去找找那部手机，快点完成任务。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去勇敢地寻找那艘船吧！\nresponse: ", "response": "船."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Feeling adventurous, take off now, then turn the drone right by 45 degrees right away. After that, descend 24 inches, move right 2 feet, execute a leftward bank for 20 inches, come down 4 ft, fly upwards 3 meters, move rightward 4 in, slide to the left 5 inches, next move backwards 25 centimeters, and finally go up a bit.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_down 24 in; move_right 2 ft; move_left 20 in; move_down 4 ft; move_up 3 m; move_right 4 in; move_left 5 in; move_back 25 cm; Missing move_up."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先，请将无人机向右飞行八十厘米以绕过障碍；然后，无人机目前离地面过高，请下降一百五十厘米；接着，向左转动一圈；随后，请将无人机右移两百厘米；紧接着，无人机能向右转四十五度吗；之后，右转角度五十度；最后，无人机降落在地面上。\nresponse: ", "response": "move_right 80 cm; move_down 150 cm; turn_left 360 degrees; move_right 200 cm; turn_right 45 degrees; turn_right 50 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off the ground now, then descend it down 30 inches. After that, I need this drone to move forward 20 inches right now! Next, maneuver to the right by 100 centimeters. Following that, go to the left side. Immediately after, bring the drone down 40 centimeters. Then, swerve left 90 degrees. Subsequently, The drone should drop down 1 meter immediately!. Afterwards, initiate a 180-degree counterclockwise rotation. In the end, drop the drone down to the ground.\nresponse: ", "response": "take_off; move_down 30 in; move_forward 20 in; move_right 100 cm; Missing move_left; move_down 40 cm; turn_left 90 degrees; move_down 1 m; turn_left 180 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the paused search task immediately.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 查找无人机航拍中是否有车辆出入痕迹。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head over to the bathroom and grab the toothbrush, then swing by the desk for the laptop, and don't forget to pick up that Fanta from the kitchen.\nresponse: ", "response": "toothbrush; laptop; fanta."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's get this thing off the ground, then spin right 180 degrees, after that move forward 25 in, next shift the drone down, subsequently bank right by 4 feet, and finally fly forward now.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机现在起飞，然后向右方移动，最后请将无人机降落在此处。\nresponse: ", "response": "take_off; Missing move_right; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, retreat the drone by 4 feet, then move back a bit, after that move back from the edge of the cliff 3 meters, next turn towards the left, and in the end I want it to land right now.\nresponse: ", "response": "move_back 4 ft; Missing move_back; move_back 3 m; Missing turn_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly back 10 inches, then go left 2 feet, afterwards descend to the ground level.\nresponse: ", "response": "move_back 10 in; move_left 2 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go up now, then fly backward for 2 meters, afterwards rise up, next drift to the right 6 feet, after that make it descend quickly, subsequently turn the drone left by 120 degrees, later ascend 50 centimeters, and in the end move backward 45 inches.\nresponse: ", "response": "take_off; move_back 2 m; Missing move_up; move_right 6 ft; Missing move_down; turn_left 120 degrees; move_up 50 cm; move_back 45 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退五米，然后右转七十度，接着无人机下降七十厘米以便着陆，随后下降六十厘米，之后往前飞行二百厘米，紧接着向前移动一米，随后向左移动一百厘米，检查左侧情况；为了绕过障碍物，请将无人机后退，最后请让无人机着陆。\nresponse: ", "response": "move_back 5 m; turn_right 70 degrees; move_down 70 cm; move_down 60 cm; move_forward 200 cm; move_forward 1 m; move_left 100 cm; Missing move_back; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 命令式：立即停止当前的搜寻任务。\n建议性：建议您现在暂停正在进行的搜寻任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即停止当前控制与搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Feeling adventurous, take off now, then perform a 270-degree clockwise yaw; afterwards, move right a few feet and subsequently move forward a bit; next, bring the drone down 40 centimeters; following that, move to the left 1 foot; immediately after, without delay, make it descend by 1 meter; thereafter, rotate left by 30 degrees; then adjust its position to the left; afterwards, fly back 3 meters; subsequently, move it backwards 3 meters; next, I need this drone to move forward 20 inches right now; later, drone needs to go right by 10 feet; in the end, I need it to land now.\nresponse: ", "response": "take_off; turn_right 270 degrees; Missing move_right; Missing move_forward; move_down 40 cm; move_left 1 ft; move_down 1 m; turn_left 30 degrees; Missing move_left; move_back 3 m; move_back 3 m; move_forward 20 in; move_right 10 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机的视角受限，请向左转三十度，以便更好地观察左侧环境，然后看看左边是什么情况，接着无人机左转七十度，检查左侧情况。\nresponse: ", "response": "turn_left 30 degrees; turn_left 90 degrees; turn_left 70 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off, then move up 20 inches, afterwards can it descend, next fly to the right 10 meters, following that fly forward, and in the end, please land the drone softly.\nresponse: ", "response": "take_off; move_up 20 in; Missing move_down; move_right 10 m; Missing move_forward; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即前往搜索碘伏和蛋糕的位置，迅速报告。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Take a moment to pause the current control task, and then proceed with searching, knowing that each step brings us closer to mastering our application process.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后现在可以让无人机缓慢降落到地面吗。\nresponse: ", "response": "take_off; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机左移一百厘米，然后右移一米，接着右转五十度，调整角度，咱们要看得更清楚。\nresponse: ", "response": "move_left 100 cm; move_right 1 m; turn_right 50 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bottle, potted plant, and snowboard.\nresponse: ", "response": "bottle; potted plant; snowboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: It's time to take off. Move it forward, then drone should shift right 4 feet, afterwards I'm curious, can you spin left 90 degrees? Following that, rotate the drone left by 180 degrees, then fly it forward by 2 meters, subsequently go back now, after that go down 0.5 meters, next fly left by 50 inches, and thereafter step back.\nresponse: ", "response": "take_off; Missing move_forward; move_right 4 ft; turn_left 90 degrees; turn_left 180 degrees; move_forward 2 m; Missing move_back; move_down 0.5 m; move_left 50 in; Missing move_back."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and pick up where you left off with that object search.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why do most comets come from the Oort Cloud?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is there a motorcycle to be found?\nresponse: ", "response": "motorcycle."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机起飞，开始执行任务，然后让无人机左转一百八十度，观察后方，接着无人机请下降五十厘米。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence.\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bench where the painkillers lie, as if you're a horse galloping towards its stable, but do so gently and with care.\nresponse: ", "response": "bench; painkillers; horse."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以在此处起飞，然后请让无人机着陆。\nresponse: ", "response": "take_off; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议启动物体搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 往右移动, 然后左旋转. 之后，无人机请下降五十厘米, 接着请将无人机向后移动四十厘米，以避免前方障碍物. 最后，请让无人机降落.\nresponse: ", "response": "Missing move_right; Missing turn_left; move_down 50 cm; move_back 40 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the object detection sequence.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你去搜索一下胡萝卜和笔记本电脑，在冰箱附近多留意哦。\nresponse: ", "response": "胡萝卜; 笔记本电脑; 冰箱."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以考虑优雅地终止当前的操控流程，并启动一项详尽的任务搜索呢？\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你先找找电视，然后再看看笔记本电脑。\nresponse: ", "response": "电视; 笔记本电脑."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's resume the flight control task that was previously paused.\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Give me some quick ways to boost energy in the morning.\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以启动无人机吗，然后右侧有目标，向右飞行一百厘米，接着将无人机右转四十五度，随后请将无人机向后退七十厘米，查看后方环境，请让无人机向左转弯，紧接着请让无人机向后移动两百厘米，请将无人机右移，之后请将无人机右移一米，无人机前进六十厘米，查看前方的环境，接着无人机太高了，请下降二十厘米，随后请向后退一百五十厘米，紧接着无人机请飞行到前方三十厘米，请将无人机右移，最后无人机可以降落在指定地点吗。\nresponse: ", "response": "take_off; move_right 100 cm; turn_right 45 degrees; move_back 70 cm; Missing turn_left; move_back 200 cm; Missing move_right; move_right 1 m; move_forward 60 cm; move_down 20 cm; move_back 150 cm; move_forward 30 cm; Missing move_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Launch your airborne adventure by kicking off the flight control mission!\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The previously paused control and search task should not be left unresumed.\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Don't fail to start the control and search task!\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请务必找到那个烤箱！\nresponse: ", "response": "烤箱."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Commence the quest for the object, as if embarking on a silent journey through the air.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get ready and take off, then bring it down by 20 centimeters, move forward past the parking lot 200 feet, afterwards descend 24 inches, next hover left by 8 inches, after that rotate right 45 degrees to change direction towards the river, and in the end set it down gently.\nresponse: ", "response": "take_off; move_down 20 cm; move_forward 200 ft; move_down 24 in; move_left 8 in; turn_right 45 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂停当前的控制和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞任务已经准备好，启动无人机，然后右边需要探测，向右移动，接着请将无人机后退一百厘米，以查看后方的情况，最后让无人机降落吧。\nresponse: ", "response": "take_off; Missing move_right; move_back 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别去找胡萝卜和长椅了，也别浪费时间在键盘上，更别提雪碧。\nresponse: ", "response": "胡萝卜; 长椅; 键盘; 雪碧."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Just move forward 20 inches, then shift right 50 centimeters, after that descend it a little, subsequently get it to climb 4 feet now, next drone needs to go right by 10 feet, afterwards descend 1.5 feet, following that go to the left 2 meters, and in the end can you land the drone?\nresponse: ", "response": "move_forward 20 in; move_right 50 cm; Missing move_down; move_up 4 ft; move_right 10 ft; move_down 1.5 ft; move_left 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused flight control task?\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the tv and clock.\nresponse: ", "response": "tv; clock."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, go find that cake and carrot, will you?\nresponse: ", "response": "cake; carrot."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向前推进一米，观察前方情况，然后无人机高度太高，请下降，随后无人机上升两米五，接着无人机请向前飞行一米，之后请右转五十度，紧接着左转九十度，观察左侧，再往后退九十厘米，随后右转四十五度，调整无人机方向，最后能否请无人机下降五十厘米。\nresponse: ", "response": "move_forward 1 m; Missing move_down; move_up 2.5 m; move_forward 1 m; turn_right 50 degrees; turn_left 90 degrees; move_back 90 cm; turn_right 45 degrees; move_down 50 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then bring the drone back 2 feet, after that shift left 20 inches, next bring it forward 3 inches, subsequently decrease altitude by 5 inches, afterwards go forward 8 inches, following that shift right 1 meter, and in the end hover and rotate right 45 degrees.\nresponse: ", "response": "take_off; move_back 2 ft; move_left 20 in; move_forward 3 in; move_down 5 in; move_forward 8 in; move_right 1 m; turn_right 45 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应清除当前搜索目标的任务列表？\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 清空现存的操控飞行任务列表。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Swing right, then go to the left 2 meters, after that veer to the right 30 degrees abruptly, next perform a lateral correction of 150 centimeters to the right, following that ascend swiftly 2 meters, immediately after lower it down, subsequently can we fly it forward a bit?, and in the end I want it to land right now.\nresponse: ", "response": "Missing turn_right; move_left 2 m; Missing move_down; Missing move_forward; move_right 150 cm; turn_right 30 degrees; move_up 2 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 是否要恢复先前暂停的控制与搜索任务呢？\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why is the speed of light the universal speed limit?\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, shift to the left, then ascend swiftly 2 meters, next fly to the right 10 meters, afterwards bring it left 4 feet, subsequently move backward 3 feet, following that revert back 60 centimeters, later descend 1.5 feet.\nresponse: ", "response": "Missing move_left; Missing move_up; move_up 2 m; move_right 10 m; move_left 4 ft; move_back 3 ft; move_back 60 cm; move_down 1.5 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞，然后无人机右转三十度，重新调整方向，准备接受新任务，接着无人机现在降下一百五十厘米，随后前进一百厘米，检查前方，紧接着提高二十厘米，修正高度，最后无人机准备降落。\nresponse: ", "response": "take_off; turn_right 30 degrees; move_down 150 cm; move_forward 100 cm; move_up 20 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off quickly, then fly to the left for 10 inches, after that sway to the left by 2 meters, next adjust forward 3 feet, subsequently let’s make it go back 10 feet, afterwards shift the drone down, following that hover up 2 feet, immediately after go down just a bit, then shift left by 2 meters, next rotate the drone to the right 75 degrees, thereafter turn the drone 45 degrees to the right, in the end bring it down.\nresponse: ", "response": "take_off; move_left 10 in; move_left 2 m; move_forward 3 ft; move_back 10 ft; Missing move_down; move_up 2 ft; Missing move_down; move_left 2 m; turn_right 75 degrees; turn_right 45 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go down just a bit, then make it fly forward 30 inches, afterwards drop it, next I’m really looking forward to seeing this, let’s make it climb up 6 feet! following that move to the left 1 foot, then fly the drone to the left by 100 centimeters to capture the side view. Let's turn it right by 30 degrees, I'm eager to see how it responds! Subsequently, shift to the left, then drone, turn 120 degrees to the right, immediately after that let the drone land now.\nresponse: ", "response": "Missing move_down; move_forward 30 in; Missing move_down; move_up 6 ft; move_left 1 ft; move_left 100 cm; turn_right 30 degrees; Missing move_left; turn_right 120 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 把现在飞行动作的指令都清掉吧。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't look for the potted plant, chair, knife, or suitcase.\nresponse: ", "response": "potted plant; chair; knife; suitcase."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Couldn't we quickly clear the current search task list to ensure smooth operation?\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在请让无人机起飞，然后向前移动一百二十厘米，最后现在可以让无人机降落吗。\nresponse: ", "response": "take_off; move_forward 120 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动音响播放轻音乐以缓解压力。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请搜索刀和碗，还有面包与蛋糕。\nresponse: ", "response": "刀; 碗; 面包; 蛋糕."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Just get it out of here already! Take off now, then fly backward 2 inches, after that go backward a short distance, about 1 meter, subsequently commence landing sequence.\nresponse: ", "response": "take_off; move_back 2 in; move_back 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机现在起飞吧，感谢；然后无人机向前飞行一百厘米，靠近目标；请将无人机上升；紧接着，无人机右转九十度；之后，无人机上升两米；接着，无人机前进一百厘米；立刻右转；最后，向右转。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 终止当前控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请以详尽的操作开启飞行任务，勇敢地掌控进程，让一切尽在掌握之中。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the skateboard.\nresponse: ", "response": "skateboard."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往那辆疾驰的火车旁，犹如时间的箭矢，精准地找到那只孤独的杯子与它身旁沉默的叉子。\nresponse: ", "response": "火车; 杯子; 叉子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 设置热水器的温度为45摄氏度并保持恒温。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the control and search operation now.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请先飞到床上方，再缓慢移动至风筝位置，完成搜索任务。\nresponse: ", "response": "床; 风筝."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动详尽的飞行任务控制流程，以确保一切按计划顺利进行。\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 未来是否可能开发出人工智能医生？\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you take off now, then spin it left, 60 degrees, afterwards move back 10 feet, next bring the drone back 80 centimeters, subsequently go backwards a little, finally rotate 180 degrees to the right.\nresponse: ", "response": "take_off; turn_left 60 degrees; move_back 10 ft; move_back 80 cm; Missing move_back; turn_right 180 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在可以执行起飞操作吗，然后左移，接着向右转九十度，最后可以降落了吗。\nresponse: ", "response": "take_off; Missing move_left; turn_right 90 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前方不清晰，向前移动五十厘米，然后下降七十厘米，调整无人机高度，接着往前飞行一米。\nresponse: ", "response": "move_forward 50 cm; move_down 70 cm; move_forward 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机前进一百厘米，然后小飞机前飞七十厘米，让我们探险一下；请右边转向，接着小飞机再次前飞七十厘米，让我们继续探险；随后，请向后移动二百厘米，紧接着无人机下降二十厘米以便更接近地面；之后，因为无人机飞得太高了，所以它需要下降两米；最后，请将无人机向前移动一米，以便更好地观察前方的目标。\nresponse: ", "response": "move_forward 100 cm; move_forward 70 cm; Missing turn_right; move_forward 70 cm; move_back 200 cm; move_down 20 cm; move_down 2 m; move_forward 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 我想让无人机立即起飞，然后无人机前方有障碍物，向前移动五十厘米以检查，接着把无人机降落一米，随后请让无人机向右移动六十厘米，避免障碍物，最后请将无人机左侧移动一百厘米。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone now, then swing left gently 25 degrees, after that move forward a bit, like 2 meters. Next, make it ascend a bit, subsequently rotate right by 270 degrees, afterwards tilt left 90 degrees, following that move right 2 feet, and in the end, fly back 1 meter, okay?\nresponse: ", "response": "take_off; turn_left 25 degrees; move_forward 2 m; Missing move_up; turn_right 270 degrees; turn_left 90 degrees; move_right 2 ft; move_back 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the object search procedure.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清理一下现在的控制和搜索任务吧。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the laptop.\nresponse: ", "response": "laptop."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 勇敢地飞越森林，像寻找失落的宝藏一样，把目光投向那台笔记本电脑和那位长颈鹿朋友吧！\nresponse: ", "response": "笔记本电脑; 长颈鹿."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Stop the ongoing search immediately.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then maneuver left by 50 centimeters, after that execute a reverse flight of 10 meters, subsequently drop down 50 centimeters, next bring it down 1 meter, afterwards push it forward, following that advance forward by 2 meters, and in the end go down 3 feet.\nresponse: ", "response": "take_off; move_left 50 cm; move_back 10 m; move_down 50 cm; move_down 1 m; Missing move_forward; move_forward 2 m; move_down 3 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not pause the ongoing search task?\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone up now, then shift right a bit, after that descend 2 feet, next hover and turn right 90 degrees, immediately move back 10 inches, subsequently go down 6 meters, following that turn left 60 degrees, afterwards raise it 20 inches, then pull it back 75 cm, later maneuver left by 50 centimeters, thereafter rotate the drone 90 degrees to the left, in the end elevate to 15 feet high.\nresponse: ", "response": "take_off; Missing move_right; move_down 2 ft; turn_right 90 degrees; move_back 10 in; move_down 6 m; turn_left 60 degrees; move_up 20 in; move_back 75 cm; move_left 50 cm; turn_left 90 degrees; move_up 15 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机现在起飞，然后请将无人机向上升起一米，以提高视角，接着将无人机降落一米，随后下降五十厘米，接近地面一点，之后向左侧移动二十五厘米以适应环境，紧接着请将无人机右移，请让无人机前方移动八十厘米，检查前方是否有障碍物，第二将无人机旋转左边五十度，第三无人机目前离地面过高，请下降一百五十厘米，随后能否请无人机下降五十厘米来降低高度，接着让无人机向左旋转，最后现在让无人机降落。\nresponse: ", "response": "take_off; move_up 1 m; move_down 1 m; move_down 50 cm; move_left 25 cm; Missing move_right; move_forward 80 cm; turn_left 50 degrees; move_down 150 cm; move_down 50 cm; Missing turn_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请开始无人机的起飞程序，然后左边飞行七十厘米看看，接着左飞行八十厘米，最后前方视线模糊，向前移动三十厘米。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Drone takeoff now, then fly to the right 2 inches, after that turn 15 degrees to the left, next lean left, afterwards move right 2 feet, following that yaw left 15 degrees, subsequently perform a lateral correction of 150 centimeters to the right, later move it forward 7 meters, and in the end bring it down gently.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bank right, then climb up 2 feet—let’s do this!, after that turn left by 45 degrees, next swing it right for 100 centimeters, give it a little nudge to the right, like it’s tipping over, afterwards turn left by 15 degrees, subsequently turn left by 120 degrees, immediately after push it ahead, and in the end bring it to the ground.\nresponse: ", "response": "Missing move_right; move_up 2 ft; turn_left 45 degrees; move_right 100 cm; Missing move_right; turn_left 15 degrees; turn_left 120 degrees; Missing move_forward; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head out and sniff that laptop like a bloodhound on the trail.\nresponse: ", "response": "laptop."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek forth the cake, the skis, the bench, and the book with utmost diligence.\nresponse: ", "response": "cake; skis; bench; book."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please clear the current control and search task right away! It’s a crucial step in ensuring our application process runs smoothly and efficiently. Thank you for your attention to this detail!\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动家庭影院播放最新的音乐专辑。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后无人机请飞行到前方十厘米，随后无人机下降，紧接着前进二十厘米，之后请让无人机向右飞行两米，最后准备降落无人机，结束任务。\nresponse: ", "response": "take_off; move_forward 10 cm; Missing move_down; move_forward 20 cm; move_right 2 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 停止智能音响播放当前歌曲。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you urgently, my feathered friend, sweep the skies to find the bird and ensure the oven is within sight, as if guarding a nest from afar?\nresponse: ", "response": "bird; oven."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 鉴于当前操作未能达到预期效果，系统建议您重新启动先前中断的目标识别任务，以确保任务的完整性和数据的准确性。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you kindly clear out the current list of tasks controlling the drone's flight, like sweeping away clouds from a clear sky?\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 寻找那把像守卫一样稳坐的椅子。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应暂歇这趟翱翔之旅，让操控之翼稍作停留？\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请暂时停止当前搜索目标的任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最高效的方式定位并确认那块令人惊喜的蛋糕、那辆经典的自行车以及那个优雅的钟，真是太棒了！\nresponse: ", "response": "蛋糕; 自行车; 钟."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 哎呀，快停下现在的操作和搜索任务吧！\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧终止现在的操作和搜索任务吧。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右移动二十厘米，然后为了解决当前的视角问题，请上升七十五厘米，接着前进二十厘米，随后右移三十厘米，后来无人机能向右转四十五度吗，紧接着调整到右侧，转动。\nresponse: ", "response": "move_right 20 cm; move_up 75 cm; move_forward 20 cm; move_right 30 cm; turn_right 45 degrees; Missing turn_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被建议去搜索一下雪碧和笔记本电脑的位置，好吗？\nresponse: ", "response": "雪碧; 笔记本电脑."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not clear the current control and consider searching for a new task?\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take it off now, I can’t wait to see it in action! Then go forward 50 centimeters. After that, rotate to the left side, then steer it right 45 degrees. Next, move it backwards 3 meters. Following that, ascend 2 meters gradually. Immediately after, commence a vertical descent of 6 feet.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即起飞，然后左转六十度，避开障碍，接着无人机右转三十度来调整方向，随后下降四十厘米，避开障碍物，最后无人机下降到地面。\nresponse: ", "response": "take_off; turn_left 60 degrees; turn_right 30 degrees; move_down 40 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 使无人机前进, 然后请问无人机能向左移动吗, 接着右侧平移三十五厘米, 之后前方视线模糊，向前移动, 随后调整无人机方向，左转一百二十度, 后来向右移动二十厘米以避开障碍, 再接着将无人机向后移动一百五十厘米, 第二请让无人机向右掉头, 最后无人机降落在预定位置。\nresponse: ", "response": "Missing move_forward; Missing move_left; move_right 35 cm; Missing move_forward; turn_left 120 degrees; move_right 20 cm; move_back 150 cm; turn_right 180 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the previously halted target acquisition process.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地找到热狗、勺子、蛋糕和胡萝卜。\nresponse: ", "response": "热狗; 勺子; 蛋糕; 胡萝卜."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机飞得太高了，请下降六十厘米，然后为了调整视角，请右转，接着提升，随后请向右移动五十厘米来避开，之后让无人机向左飞六十厘米，最后请向右转弯。\nresponse: ", "response": "move_down 60 cm; Missing turn_right; Missing move_up; move_right 50 cm; move_left 60 cm; Missing turn_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let not the fanta or the knife elude your diligent search.\nresponse: ", "response": "fanta; knife."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear out the current command and look-up job, would you?\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将无人机设置为静音模式以减少噪音。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请左转一百八十度检查，然后左边飞行七十厘米，看看会有什么新发现，之后无人机请下降一百五十厘米，接着右侧平移三十五厘米，随后前进二百厘米，后来无人机向上移动，紧接着请无人机前进五十厘米以探查前方情况，最后无人机降落在预定地点。\nresponse: ", "response": "turn_left 180 degrees; move_left 70 cm; move_down 150 cm; move_right 35 cm; move_forward 200 cm; Missing move_up; move_forward 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能否友好地确认一下，去搜索那个风筝和键盘的位置呢？\nresponse: ", "response": "风筝; 键盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向前移动一百二十厘米，然后请让无人机向后退一米，接着请将无人机左转四十五度，以获得更好视角。\nresponse: ", "response": "move_forward 120 cm; move_back 1 m; turn_left 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前方视线不清，向前移动两百厘米，然后请让无人机向下降落一米，以便更接近地面检查，接着请将无人机上升五十厘米，谢谢，随后后退三十厘米，也许能看到目标，紧接着上移六十厘米，调高水平，最后无人机可以进行降落。\nresponse: ", "response": "move_forward 200 cm; move_down 1 m; move_up 50 cm; move_back 30 cm; move_up 60 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 是否考虑先定位冲浪板和长椅，再转向寻找滑雪板？\nresponse: ", "response": "冲浪板; 长椅; 滑雪板."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Advance forward 50 inches, then move forward 5 feet, after that veer right sharply 60 degrees, subsequently come down 4 ft, next fly upwards 60 centimeters, following that go to the left 2 meters, afterwards move right by 100 centimeters, later rotate left by 50 degrees, then turn the drone 90 degrees to the left, immediately after can you go up, before lowering down 75 cm, in the end, oh no, can you bring it down quickly? I’m scared!\nresponse: ", "response": "move_forward 50 in; move_forward 5 ft; turn_right 60 degrees; move_down 4 ft; move_up 60 cm; move_left 2 m; move_right 100 cm; turn_left 50 degrees; turn_left 90 degrees; Missing move_up; move_down 75 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the traffic light, ensuring a thorough scan of the area.\nresponse: ", "response": "traffic light."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以轻盈的姿态，在这片静谧之中探寻那位悄然漫步的猫。\nresponse: ", "response": "猫."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current object search task list should be cleared.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the microwave urgently.\nresponse: ", "response": "microwave."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the umbrella and motorcycle immediately; your swift action is critical.\nresponse: ", "response": "umbrella; motorcycle."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立刻前往沙发附近，接着转向微波炉，然后找到叉子，最后检查电视。\nresponse: ", "response": "沙发; 叉子; 微波炉; 电视."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能麻烦您赶紧恢复之前的控制和搜索任务吗？谢谢！\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞无人机，然后无人机上升三米，接着请让无人机向后移动两米，之后往左飞行一百厘米，紧接着往右转九十度，随后无人机左移，第二右转九十度，重设方向，适应新的飞行环境，接下来移动到右侧，随后请后退一米，最后无人机需要在这里降落。\nresponse: ", "response": "take_off; move_up 3 m; move_back 2 m; move_left 100 cm; turn_right 90 degrees; Missing move_left; turn_right 90 degrees; Missing move_right; move_back 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you take off now, then move the drone backward 1 meter, after that move sideways left 30 cm, afterwards come down 4 ft, next move it backwards 3 meters, following that slide right by 1 foot, and in the end bank left by 2 meters.\nresponse: ", "response": "take_off; move_back 1 m; move_left 30 cm; move_down 4 ft; move_back 3 m; move_right 1 ft; move_left 2 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I want to see the drone spin right 360 degrees, then rotate the drone to the right by 120 degrees, afterwards rise now, next move back 2 meters, after that nudge to the left side, and finally veer left by 45 degrees.\nresponse: ", "response": "turn_right 360 degrees; turn_right 120 degrees; Missing move_up; move_back 2 m; Missing move_left; turn_left 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机起飞，然后现在让无人机着陆。\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current flight control task, and ensure the drone remains stationary until further instructions are given.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索无人机视野中是否有登山的行人。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议性地避免寻找杯子和剪刀。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 迅速找到热狗、摩托车、鸟和遥控器。\nresponse: ", "response": "热狗; 摩托车; 鸟; 遥控器."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please check for a surfboard near the bus, would you?\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议清除当前任务列表中的搜寻物体。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应当暂停正在执行中的飞行任务以确保系统的稳定性和安全性？\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你先找到雨伞，然后是橙子，接着寻找勺子，最后定位剪刀。\nresponse: ", "response": "雨伞; 橙子; 勺子; 剪刀."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去果园里，像蜜蜂寻花一样找到那个苹果。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请让无人机现在起飞，然后请让无人机往后移动，接着可以让无人机向左转九十度，请将无人机右移一米，随后请调整方向，右转，紧接着让无人机顺时针旋转七十五度，最后向右侧移动。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机起飞，然后无人机的当前方向不准确，请将其向左转动一百五十度，接着右侧移动。\nresponse: ", "response": "take_off; turn_left 150 degrees; Missing move_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: With utmost urgency, seek out the chair and the train, ensuring their locations are identified with precision and speed.\nresponse: ", "response": "chair; train."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing target detection operation.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the object search!\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前中断的搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的操作和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the cola.\nresponse: ", "response": "cola."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's take off, then slide right 4 feet, after that hover and turn right 90 degrees, afterwards drop it down by 50 inches, next move rightward 4 in, following that let's do a little spin to the right, 360 degrees!, subsequently elevate by 8 inches, and in the end bring the drone down to earth.\nresponse: ", "response": "take_off; move_right 4 ft; turn_right 90 degrees; move_down 50 in; move_right 4 in; turn_right 360 degrees; move_up 8 in; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前正在进行的物体搜索任务，这是为了确保操作流程的精确性和安全性，您的配合将对整体任务的成功起到关键作用。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the skateboard! Could you imagine how lost it might be without us finding it?\nresponse: ", "response": "skateboard."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please refrain from initiating the drone's flight control task at this moment?\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the aerial vehicle's operation with confidence.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Consider clearing the existing flight control task list to ensure a smooth and efficient operation of your aerial mission.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，然后无人机的当前方向不准确，请将其向左转动一百五十度，最后无人机降落到安全区域。\nresponse: ", "response": "take_off; turn_left 150 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否让无人机现在起飞，然后转向右边，请向右转弯，接着无人机飞得太高了，请下降四十厘米；随后无人机上升七十五厘米，请上升七十五厘米；紧接着请将无人机高度降低，之后请让无人机向下降落一米，以便更接近地面检查；再后来请向后退一百五十厘米，能否请无人机下降五十厘米来降低高度；接着右移六十厘米，最后无人机请迅速下降一百厘米。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Isn't it time to find the book, cup, and toothbrush!\nresponse: ", "response": "book; cup; toothbrush."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not fail to resume the previously interrupted control and search operation!\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Aren't you supposed to clear out the current control and search task?\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否友好地麻烦您立即恢复之前暂停的物体搜索任务呢？这非常紧急。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能不能去查一下，那瓶让人失望的可乐去哪儿了？\nresponse: ", "response": "可乐."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机起飞到空中，然后无人机现在离地面太远了，请下降一百厘米以调整高度，之后是否可以让无人机降落。\nresponse: ", "response": "take_off; move_down 100 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请以详尽的操作启动任务，开始友好地搜寻物体。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 如同唤醒沉睡的巨人，继续之前暂停的控制与探索之旅。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence for the drone.\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最不情愿的姿态，在那喧嚣的城市中搜寻着那辆冷漠的公共汽车。\nresponse: ", "response": "公共汽车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: While searching for the hot dog and the orange, ensure you also locate the toilet.\nresponse: ", "response": "hot dog; toilet; orange."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机右转一百八十度，掉头，然后请将无人机向后退七十厘米，查看后方环境，接着往前飞行二百厘米，随后将无人机向下移动一百五十厘米，最后准备降落，冒险结束啦。\nresponse: ", "response": "turn_right 180 degrees; move_back 70 cm; move_forward 200 cm; move_down 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the previously paused flight control task.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend 15 feet to get closer to the ground, then I’m really hoping it doesn’t crash, can we descend slowly, please, afterwards perform a lateral correction of 150 centimeters to the right.\nresponse: ", "response": "move_down 15 ft; Missing move_down; move_right 150 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let's go find that frisbee!\nresponse: ", "response": "frisbee."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急的，请确认滑雪板、花瓶、面包和剪刀的位置，可以吗？\nresponse: ", "response": "滑雪板; 花瓶; 面包; 剪刀."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往搜索摩托车和自行车。\nresponse: ", "response": "摩托车; 自行车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 技术性地搜索并定位那个拿着雨伞和橙子的人，但避免接近任何冰箱。\nresponse: ", "response": "橙子; 雨伞; 人; 冰箱."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Kick off the control and search task.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Might we gently resume the object search task that was previously paused?\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Cautiously take off, then adjust direction to the right, afterwards please move the drone left 5 meters.\nresponse: ", "response": "take_off; Missing turn_right; move_left 5 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Restart the paused control and search task now.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最高效的技术路径定位并记录下餐桌与卡车的位置。\nresponse: ", "response": "餐桌; 卡车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机往后退吗，然后提高二十厘米，修正高度，接着为了调整视角，请右转，随后请将无人机下降四十厘米，紧接着将无人机的高度提升三十厘米，确保视角清晰，之后左转七十度，接下来请将无人机右移两米，随后让无人机向后移动九十厘米，最后让无人机降落吧。\nresponse: ", "response": "Missing move_back; move_up 20 cm; Missing turn_right; move_down 40 cm; move_up 30 cm; turn_left 70 degrees; move_right 2 m; move_back 90 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标识别任务\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Aren't you going to look for the hot dog, wine glass, and cake?\nresponse: ", "response": "hot dog; wine glass; cake."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您以最高效的方式搜索并定位鼠标、饼干和电视的位置，务必精准无误。\nresponse: ", "response": "鼠标; 饼干; 电视."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即定位并检索猫和遥控器，谢谢。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前搜索目标的任务\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the biscuit near the chair.\nresponse: ", "response": "biscuit; chair."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机起飞的时间到了，然后前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，接着向右飞行，之后右转五十度，调整角度，咱们要看得更清楚，紧接着向右再靠近九十厘米，最后向后退三十厘米以避免碰撞。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否前去搜索电视、烤箱、笔记本电脑和碗？\nresponse: ", "response": "电视; 烤箱; 笔记本电脑; 碗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立刻恢复之前的物体搜索任务吧！\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 哦不，赶紧去找那个让人失望的披萨吧！\nresponse: ", "response": "披萨."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off the drone, then rotate the drone to the left by 60 degrees, next rise up 20 inches, afterwards bring it down quickly.\nresponse: ", "response": "take_off; turn_left 60 degrees; move_up 20 in; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 被委托去搜索碘伏和猫，在确保安全的情况下，也检查一下电视周围。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 被要求去搜索西兰花、手机和碗，你能完成这个任务吗？加油！\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift right by 80 inches, then lower it by 50 cm, after that move right 10 cm, subsequently drone down 30 cm, next move to the right by 100 inches, afterwards rotate left by 45 degrees, immediately after climb to 6 meters, following that move to the left by 4 meters, later I need this drone to move forward 20 inches right now, then rotate the drone left, in the end land the drone now please.\nresponse: ", "response": "move_right 80 in; move_down 50 cm; move_right 10 cm; move_down 30 cm; move_right 100 in; turn_left 45 degrees; move_up 6 m; move_left 4 m; move_forward 20 in; Missing turn_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off now, then turn the drone left by 45 degrees, go right 5 cm afterwards, move it forward 7 meters next, shift left by a meter following that, engage in forward flight for 5 meters later, and finally turn it around 360 degrees.\nresponse: ", "response": "take_off; turn_left 45 degrees; move_right 5 cm; move_forward 7 m; move_left 1 m; move_forward 5 m; turn_right 360 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续之前的控制和搜索任务吧。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机的起飞时间已经到，然后现在请让无人机着陆。\nresponse: ", "response": "take_off; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing off the ground! Then descend 2 feet. After that, take the drone back. Next, move forward past the parking lot 200 feet. Afterwards, lift the drone upwards by 50 centimeters. Following that, Let’s fly it right by 5 meters.\nresponse: ", "response": "take_off; move_down 2 ft; Missing move_back; move_forward 200 ft; move_up 50 cm; move_right 5 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Start the flight control task.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞吧，然后能让无人机向左飞五十厘米吗，接着右移七十五厘米，躲过那个障碍物，继续前行，最后无人机请向后飞行两米以避开障碍物。\nresponse: ", "response": "take_off; move_left 50 cm; move_right 75 cm; move_back 2 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到那个碗吗？\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地、鼓励地搜索一下键盘吧。\nresponse: ", "response": "键盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机飞到空中，然后右移两米，接着左转九十度，观察左侧，请让无人机向后退。\nresponse: ", "response": "take_off; move_right 2 m; turn_left 90 degrees; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not search for the knife.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: You gotta clear out that current control and scrap the search task, or we’re gonna run into issues.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Navigate remote area, locate toaster.\nresponse: ", "response": "remote; toaster."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，然后后退八十厘米，接着调整到左侧位置，请向左移动七十五厘米，随后无人机后退五十厘米，以便于调整位置，紧接着无人机请向前飞行一米，最后无人机右转一百二十度。\nresponse: ", "response": "take_off; move_back 80 cm; move_left 75 cm; move_back 50 cm; move_forward 1 m; turn_right 120 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Isn't it time to see if you can find the coldrex, dog, and airplane?\nresponse: ", "response": "coldrex; dog; airplane."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找到那个蛋糕，接着是面包，别忘了看看杯子和笔记本电脑，你能做到的！\nresponse: ", "response": "蛋糕; 面包; 杯子; 笔记本电脑."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请以最高效的方式定位并拾取酒杯和鼠标。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您恢复先前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate to the left side, then move back a short distance, after that fly straight ahead 1 meter, next make it climb 30 centimeters, afterwards bank left by 2 meters, following that steer left 60 degrees, subsequently descend 15 feet to get closer to the ground, then turn to the right, after which make it fly forward 60 cm, and finally can you make it fly downwards by 2 meters?.\nresponse: ", "response": "Missing turn_left; Missing move_back; move_forward 1 m; move_up 30 cm; move_left 2 m; turn_left 60 degrees; move_down 15 ft; Missing turn_right; move_forward 60 cm; move_down 2 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以开始起飞了吗，然后飞到更高处，升高两百厘米，接着立即降落。\nresponse: ", "response": "take_off; move_up 200 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 终止当前搜索目标的任务列表。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Navigate through the airspace, casting a net of sensors wide and deep to locate the elusive wine glass.\nresponse: ", "response": "wine glass."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧找找那不中用的电视和易碎的花瓶，还有那个到处滚动的运动球吧。\nresponse: ", "response": "电视; 花瓶; 运动球."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前中断的目标搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 调整无人机方向，左转一百二十度，然后后退一米，看看后方情况，接着向前移动一米，随后请上升七十五厘米，最后需要左转，飞行一米。\nresponse: ", "response": "turn_left 120 degrees; move_back 1 m; move_forward 1 m; move_up 75 cm; move_left 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Set the drone speed to slow and start tracking a target.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go forward 50 centimeters, then raise it 20 inches, after that shift right 25 inches, next turn left a quarter turn, subsequently advance 10 cm, afterwards let's make it go back 10 feet, and in the end initiate landing.\nresponse: ", "response": "move_forward 50 cm; move_up 20 in; move_right 25 in; turn_left 90 degrees; move_forward 10 cm; move_back 10 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Rise now, then rotate it left 135 degrees, afterwards glide left for 100 cm, next spin the drone clockwise by 45 degrees, following that move ahead 20 inches, subsequently engage in an upward climb of 500 centimeters, after that make it rotate left a bit, and in the end prepare for landing.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, could you put a pause on the current search task?\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, could you maybe put the current search on hold for a bit? Thanks!\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 详尽地清空当前正在执行的任务列表吧！\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then drop it 4 inches, after that rise up 1.5 meters, next go backwards 30 inches, subsequently descend gradually 2 meters, afterwards bring it up a few inches, following that move forward, immediately after turn around completely, in the end descend gently to land in the field.\nresponse: ", "response": "take_off; move_down 4 in; move_up 1.5 m; move_back 30 in; move_down 2 m; Missing move_up; Missing move_forward; turn_right 360 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能不能帮我找找风筝和雨伞？\nresponse: ", "response": "风筝; 雨伞."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please, with the utmost care and attention to detail, locate the carrot, airplane, refrigerator, and laptop for us? Isn't it a bit of a challenge to find such an eclectic mix of items? Yet, I'm confident in your capabilities to successfully complete this task. Shall we see how swiftly and accurately you can manage it?\nresponse: ", "response": "carrot; airplane; refrigerator; laptop."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞无人机，然后无人机请右转九十度，接着提高高度，之后向右飞行一米，紧接着向右飞行，请将无人机上升五十厘米，谢谢，随后飞行到前面一米处，接着前进九十厘米，探索前方的未知区域，之后请下降，紧接着让无人机上升个八十厘米吧，我想看看更高的风景，最后无人机向前飞行。\nresponse: ", "response": "take_off; turn_right 90 degrees; Missing move_up; move_right 1 m; Missing move_right; move_up 50 cm; move_forward 1 m; move_forward 90 cm; Missing move_down; move_up 80 cm; Missing move_forward."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要不咱们接着把刚才暂停的飞行任务完成了？\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the bench where the painkillers lie, as if you're a horse galloping towards its stable, but do so gently and with care.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往指定区域搜索甜甜圈和蛋糕，并留意任何与公共汽车或滑板相关的线索。\nresponse: ", "response": "甜甜圈; 公共汽车; 蛋糕; 滑板."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能不能先暂停一下现在的搜索任务？\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly to the right 2 inches, then move back by 15 centimeters, afterwards come down 5 meters, following that yaw left 15 degrees, next move backwards 25 centimeters, immediately after fly down a bit, subsequently let's go up 50 centimeters, later fly towards the building 100 feet, and finally soar forward 15 meters.\nresponse: ", "response": "move_right 2 in; move_back 15 cm; move_down 5 m; turn_left 15 degrees; move_back 25 cm; Missing move_down; move_up 50 cm; move_forward 100 ft; move_forward 15 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议性地避免寻找杯子和剪刀。\nresponse: ", "response": "杯子; 剪刀."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Quickly take off! Then, proceed forward 70 centimeters steadily. After that, bring it down by 20 centimeters. Next, rotate left by 75 degrees. Following that, move the drone to the left slowly. Immediately after, cause it to move left 40 cm. Subsequently, spin the drone to the left 45 degrees. In the end, descend the drone by 100 centimeters.\nresponse: ", "response": "take_off; move_forward 70 cm; move_down 20 cm; turn_left 75 degrees; Missing move_left; move_left 40 cm; turn_left 45 degrees; move_down 100 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动天空之舞的序章，指挥这翱翔的使者启程。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即左转三十度，然后无人机向左调整，接着右转一百二十度，查看右侧，请让无人机向前飞行一百厘米，随后请将无人机右移两百厘米，紧接着下降二十厘米，之后前进一段距离，再右转一百二十度，最后右移七十五厘米，在这之后请将无人机左移四十厘米，感激不尽。\nresponse: ", "response": "turn_left 30 degrees; Missing move_left; turn_right 120 degrees; move_forward 100 cm; move_right 200 cm; move_down 20 cm; Missing move_forward; turn_right 120 degrees; move_right 75 cm; move_left 40 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear all entries from the current flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶快找找那个烦人的遥控器吧！\nresponse: ", "response": "遥控器."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The frisbee and cola are to be located.\nresponse: ", "response": "frisbee; cola."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bus and tv now.\nresponse: ", "response": "bus; tv."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将无人机右转四十五度\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您轻轻飞往寻找笔记本电脑的位置。\nresponse: ", "response": "笔记本电脑."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在可以起飞了吗，然后请让无人机向上飞行一百五十厘米，接着转动无人机四十五度左，之后请后退一米，最后无人机可以降落在这里吗。\nresponse: ", "response": "take_off; move_up 150 cm; turn_left 45 degrees; move_back 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机起飞，然后无人机向前飞行一米，目标就在前面，准备接近，接着左侧飞行七十厘米，随后请将无人机左转四十五度，以获得更好视角，最后可以左边移动二十厘米吗。\nresponse: ", "response": "take_off; move_forward 1 m; move_left 70 cm; turn_left 45 degrees; move_left 20 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么海洋中的某些区域比其他地方更温暖？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start the washing machine and select the quick wash program.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清除当前任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence for the aerial vehicle.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机左转五十度，调整一下方向看看那边的情况，然后将无人机右转五十度，接着请右转二十度，随后向右飞行三十厘米，之后向右移动五十厘米，避开障碍物，紧接着让无人机向右转动二十度，最后无人机可以降落在指定地点吗。\nresponse: ", "response": "turn_left 50 degrees; turn_right 50 degrees; turn_right 20 degrees; move_right 30 cm; move_right 50 cm; turn_right 20 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the microwave, grab some painkillers, and pick up a spoon.\nresponse: ", "response": "microwave; painkillers; spoon."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the laptop, locate the biscuit, and find the painkillers.\nresponse: ", "response": "laptop; biscuit; painkillers."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing control and search operations.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 查找无人机画面中地形起伏最大的区域。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go hunt down that frisbee like a hawk on the hunt.\nresponse: ", "response": "frisbee."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move to the left by 4 meters, then I’m not sure how to feel about this, could you please adjust its position to the left, after that move back 2 meters, next fly forward 72 inches.\nresponse: ", "response": "move_left 4 m; Missing move_left; move_back 2 m; move_forward 72 in; turn_left 25 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find if there are spare blankets in the bedroom wardrobe.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Climb up by 8 inches, then go forward 100 cm, afterwards ascend above the tree by 20 feet, next go down 3 feet, subsequently descend gradually 2 meters, turn right 90 degrees immediately after, then descend 24 inches, and land immediately.\nresponse: ", "response": "move_up 8 in; move_forward 100 cm; move_up 20 ft; move_down 3 ft; move_down 2 m; turn_right 90 degrees; move_down 24 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off now, then fly backward for 2 meters, afterwards advance forward 3 meters, next turn 270 degrees to the right, subsequently move the drone right 2 inches, later go down 3 feet, and in the end hover down to earth gently, 3 feet.\nresponse: ", "response": "take_off; move_back 2 m; move_forward 3 m; turn_right 270 degrees; move_right 2 in; move_down 3 ft; move_down 3 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向左飞六十厘米，然后无人机顺时针旋转，接着请将无人机右移七十厘米，最后前方的目标可能需要更近的观察，请让无人机向前移动二十厘米。\nresponse: ", "response": "move_left 60 cm; Missing turn_right; move_right 70 cm; move_forward 20 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 上升三十厘米，获得更高的视角，然后右边转四十五度，给右侧一个惊喜，接着升高六十厘米，随后视角不是很好，可以往上飞行三十厘米吗，紧接着下降一百厘米，之后前面不清楚，向前移动两米，最后现在让无人机着陆。\nresponse: ", "response": "move_up 30 cm; turn_right 45 degrees; move_up 60 cm; move_up 30 cm; move_down 100 cm; move_forward 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务，积极探寻目标。\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please turn right 45 degrees, then turn the drone right 45 degrees, next turn the drone 90 degrees left to align with the road, afterwards shift rightwards 4 inches, following that send it forward, and in the end make a landing.\nresponse: ", "response": "turn_right 45 degrees; turn_right 45 degrees; turn_left 90 degrees; move_right 4 in; Missing move_forward; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜索并定位那个令人讨厌的飞机。\nresponse: ", "response": "飞机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前飞行任务已被暂停。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Consider searching for the cat.\nresponse: ", "response": "cat."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 继续之前的飞行任务吧！\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then rotate left by 60 degrees, afterwards fly backwards 5 inches, and subsequently veer to the left 40 degrees smoothly.\nresponse: ", "response": "take_off; turn_left 60 degrees; move_back 5 in; turn_left 40 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the fork, surfboard, and bench.\nresponse: ", "response": "fork; surfboard; bench."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 启动无人机的起飞程序，然后请让无人机向右掉头，之后能否请无人机下降五十厘米；紧接着，无人机前方推进，后来为了调整视角，请右转，随后向下下降；接下来，下降七十厘米，调整无人机高度，第三，调整无人机方向，左转一百二十度，接着视线受阻，后退一百五十厘米，然后右转九十度，重设方向，适应新的飞行环境；随后，无人机太高了，请下降，紧接着向上升；最后，无人机，请着陆。\nresponse: ", "response": "take_off; turn_right 180 degrees; move_down 50 cm; Missing move_forward; move_left 20 cm; Missing turn_right; Missing move_down; move_down 70 cm; turn_left 120 degrees; move_back 150 cm; turn_right 90 degrees; Missing move_down; Missing move_up; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索沙发附近的碗和破碎的花瓶。\nresponse: ", "response": "沙发; 碗; 花瓶."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急的请你友好地去搜索一下杯子。\nresponse: ", "response": "杯子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶快去寻找烤面包机和遥控器，留意四周是否有鸟和人的踪迹，加油，这很重要！\nresponse: ", "response": "烤面包机; 遥控器; 鸟; 人."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Quickly take off! then move right 100 inches, after that, Could you please turn the drone right by 90 degrees?, afterwards, touch down.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着把之前停下的找东西任务搞起来吧。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请开始无人机的起飞程序，然后请让无人机前方移动八十厘米，检查前方是否有障碍物，接着右移两米，随后右侧的视角可能受阻，请将无人机右转一百度以调整视角，紧接着无人机现在离地面太远了，请下降一百厘米以调整高度，最后无人机降落在这里。\nresponse: ", "response": "take_off; move_forward 80 cm; move_right 2 m; turn_right 100 degrees; move_down 100 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动探索之旅，犹如晨曦初破晓，开启新的一天。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞去指定位置吗，然后后退五十厘米，调整一下位置，看看后面有什么，接着上升七十厘米就行，随后后退五十厘米，避开障碍物，紧接着下降四十厘米，之后让无人机下降一米，接下来无人机请向后飞行一米，随后上移六十厘米，调高水平，紧接着无人机前进一百厘米，然后向左移动一百八十厘米，最后向右飞行八十五厘米，调整视角。\nresponse: ", "response": "take_off; move_back 50 cm; move_up 70 cm; move_back 50 cm; move_down 40 cm; move_down 1 m; move_back 1 m; move_up 60 cm; move_forward 100 cm; move_left 180 cm; move_right 85 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 赶快去找到那个让人头疼的行李箱，还有那条几乎看不见的领带，别忘了那个吃了一半就丢掉的蛋糕。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 停止当前任务，恢复之前的飞行控制进程。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take flight, then descend gradually 2 meters, afterwards turn left a bit, subsequently spin it to the right 180 degrees, next shift right 3 feet, later fly forward 1 foot, immediately after move forward 25 inches, following that move to the left by 4 meters, thereafter yaw left 15 degrees, in the end ascend 1 foot.\nresponse: ", "response": "take_off; move_down 2 m; Missing turn_left; turn_right 180 degrees; move_right 3 ft; move_forward 1 ft; move_forward 25 in; move_left 4 m; turn_left 15 degrees; move_up 1 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 下降四十厘米，然后上升三十厘米，获得更高的视角，接着请让无人机向后移动三十厘米，随后无人机升高二米，获取更好视野，紧接着转动无人机四十五度左，之后后退五十厘米，调整位置，左边四十厘米，可以让无人机往后退吗。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Control the drone to grab a small object and return to the starting point.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not look for the clock or the bird near the truck.\nresponse: ", "response": "clock; bird; truck."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is it not your duty to seek out the kite and the carrot with utmost care?\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Help confirm if there are beverage bottles on the living room coffee table.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清理一下现在的控制和搜索任务吧。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the frisbee and book!\nresponse: ", "response": "frisbee; book."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找到止疼药。\nresponse: ", "response": "止疼药."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要不咱们先别急着启动飞行任务，怎么样？\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the motorcycle, backpack, carrot, and painkillers.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the toothbrush and cell phone near the sink, then check for the skateboard.\nresponse: ", "response": "toothbrush; cell phone; sink; skateboard."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please pause the current flight control task?\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即定位并检索猫和遥控器，谢谢。\nresponse: ", "response": "猫; 遥控器."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地清空当前正在执行的搜寻物体任务列表，以确保接下来的操作更加高效有序。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the dog, please.\nresponse: ", "response": "dog."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机，请前进七十厘米，然后请向左移动七十五厘米，寻找目标物体，接着向前飞行五十厘米，随后请向后退，最后让无人机停在地面上。\nresponse: ", "response": "move_forward 70 cm; move_left 75 cm; move_forward 50 cm; Missing move_back; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and kick off the flight control process for the drone, would you?\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右边看看，转过去，然后请问无人机能向左移动吗，接着右边移动七十厘米，避开障碍物，我们继续前进，随后调整到右侧，转动，之后下降五十厘米，接近地面一点，请注意无人机高度过高，再次请下降五十厘米，紧接着请将无人机后退一百厘米，以查看后方的情况，第二步，无人机后退一百五十厘米，以便观察后方，最后可以降落了吗。\nresponse: ", "response": "turn_right 90 degrees; Missing move_left; move_right 70 cm; Missing turn_right; move_down 50 cm; move_down 50 cm; move_back 100 cm; move_back 150 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object search task immediately.\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 向右移动一百五十厘米，然后快让无人机上升个八十厘米吧，我想看看更高的风景，接着请将无人机右移两米，随后无人机请飞行到前方三十厘米，之后无人机右转三十度来调整方向，紧接着前面有点模糊，向前移动五十厘米，再请将无人机上升一百二十厘米，以便获得更高的视角，随后请将无人机向后移动五十厘米，检查是否有障碍物，接着右移一米，最后请无人机安全着陆。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞任务已经准备好，启动无人机，然后让无人机升高五十厘米，便于查看全景，接着让无人机左转四十五度，准备接受新的挑战，随后前方视线不清晰，向前移动一百厘米，紧接着移动到右侧，再向右飞行八十五厘米，调整视角，请让无人机向前飞行九十厘米，之后让无人机下降一米，随后无人机向上移动，紧接着左转四十五度，观察左侧，然后请将无人机升高到八十厘米的位置，最后无人机离地面太高了，请下降。\nresponse: ", "response": "take_off; move_up 50 cm; turn_left 45 degrees; move_forward 100 cm; Missing move_right; move_right 85 cm; move_forward 90 cm; move_down 1 m; Missing move_up; turn_left 45 degrees; move_up 80 cm; Missing move_down."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能去检查一下刀和冰箱附近有没有鸟吗？\nresponse: ", "response": "刀; 冰箱; 鸟."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机前方的目标不清楚，请向前移动；随后，在后面三十厘米处可能会有东西；请让无人机向后移动四十厘米，然后现在离地面太远了，请下降一百五十厘米；接下来可以让无人机向左转五十度，之后把无人机降落一米；调整到左侧位置，请向左移动七十五厘米；紧接着，让无人机升高五十厘米，便于查看全景；随后前方有点模糊，向前移动两百五十厘米；最后，请将设备后退。\nresponse: ", "response": "Missing move_forward; move_back 70 cm; move_back 40 cm; move_down 150 cm; turn_left 50 degrees; move_down 1 m; move_left 75 cm; move_up 50 cm; move_forward 250 cm; Missing move_back."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以在此处起飞吗，然后请让无人机往后退，之后无人机下降五十厘米，接着左转五十五度，查看左侧的情况，最后无人机左转一百八十度。\nresponse: ", "response": "take_off; Missing move_back; move_down 50 cm; turn_left 55 degrees; turn_left 180 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机可以在此处起飞后，接着请飞行到前方；随后右转四十度以获得更好视角，然后向右侧移动；紧接着前进二十厘米之后，可以让无人机往后退；上升七十厘米之前，请让无人机后退一米；最后，因为前方视线不清晰，向前移动一百厘米。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear the current control and search task, making room for your next exciting drone mission!\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Gently sweep away the current command cobweb and embark on a new quest for discovery.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表是否应被立即清除？\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 前往沙发，找到刀和牙刷，接近人。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前正在进行的飞行任务可以先被暂停一下哦。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请即刻重启那曾暂歇的飞行任务，让梦想再度翱翔于蓝天之上。此刻，正是扬帆起航的最佳时机！\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Drone takeoff now, then descend 20 centimeters, afterwards proceed forward 6 inches, next veer right sharply 60 degrees, following that move the drone to the right by 2 meters, subsequently bring the drone back 80 centimeters, and in the end lower it down now.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机可以起飞去指定位置吗，然后向前移动五十厘米，请无人机现在着陆。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Gently ascend and seek the traffic light, the potted plant, and the cup with grace.\nresponse: ", "response": "traffic light; potted plant; cup."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即详尽地暂停当前正在进行的搜寻物体任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 像寻找遗失的宝藏一样，搜寻那条优雅的领带。\nresponse: ", "response": "领带."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I'm bored, turn it right 45 degrees, then rotate 90 degrees to the left, fly straight ahead, next go forward 1 meter, after that move left 2 feet, afterwards rotate 180 degrees left, subsequently go forward 50 centimeters, later slowly move back 30 inches, following that drift right, thereafter deploy backward trajectory shift of 4 meters, and in the end land immediately.\nresponse: ", "response": "turn_right 45 degrees; turn_left 90 degrees; Missing move_forward; move_forward 1 m; move_left 2 ft; turn_left 180 degrees; move_forward 50 cm; move_back 30 in; Missing move_right; move_back 4 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急的寻找那个碗吧，你能行的！\nresponse: ", "response": "碗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed to locate the potted plant.\nresponse: ", "response": "potted plant."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Immediately halt the ongoing flight control operation to ensure safety and prevent potential mishaps.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence, guiding the aerial sentinel on its mission.\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the car immediately.\nresponse: ", "response": "car."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: May I kindly request you to initiate the control and search task?\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not resume the previously halted object detection sequence.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not fail to locate the orange near the bed or the carrot.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Quickly take off! then move right 100 inches, after that, Could you please turn the drone right by 90 degrees?, afterwards, touch down.\nresponse: ", "response": "take_off; move_right 100 in; turn_right 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go forward 1 meter, then move to the right, after that move the drone to the right by 2 meters, subsequently descend 1.5 feet, next fly to the right 10 meters, afterwards bring the drone to the right by 200 centimeters, later back up the drone by 120 cm, and in the end, land this bird.\nresponse: ", "response": "move_forward 1 m; Missing move_right; move_right 2 m; move_down 1.5 ft; move_right 10 m; move_right 200 cm; move_back 120 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能否去寻找一下勺子和遥控器是否在冰箱附近？\nresponse: ", "response": "勺子; 冰箱; 遥控器."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请调整方向，右转，然后向左转动一圈，接着请左转一百八十度检查，随后为了绕过前方的障碍物，请将无人机向左飞行一百二十厘米，最后让它降落。\nresponse: ", "response": "Missing turn_right; turn_left 360 degrees; turn_left 180 degrees; move_left 120 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否去检查一下水槽旁边是否有一只猫，还有附近的橙子和风筝？\nresponse: ", "response": "水槽; 猫; 橙子; 风筝."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: First, angle right, then please make the drone turn left 90 degrees, after that rotate 90 degrees clockwise, subsequently rotate 90 degrees clockwise again, afterwards rotate the drone left. Next, move ahead 20 inches, following that I want this drone to fly back 1 meter, later bring the drone down 10 centimeters, in the end descend to the ground level.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the backpack, carrot, apple, and umbrella.\nresponse: ", "response": "backpack; carrot; apple; umbrella."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立刻右转五十度，然后调整无人机方向，左转一百二十度，接着无人机飞得太高了，降低，请将无人机往右移，之后将高度提高三十厘米，调整视角以便查看周围情况，紧接着无人机高度过高，请下降五十厘米，随后请右转五十度，之后让无人机升高五十厘米，便于查看全景，然后右移四十厘米，最后是否可以让无人机降落。\nresponse: ", "response": "turn_right 50 degrees; turn_left 120 degrees; Missing move_down; Missing move_right; move_up 30 cm; move_down 50 cm; turn_right 50 degrees; move_up 50 cm; move_right 40 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Do a quick dash forward 15 feet, zoom!, then set it down.\nresponse: ", "response": "move_forward 15 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被鼓励着，像探索者一样详尽地搜索那片区域，友好地找到飞盘。\nresponse: ", "response": "飞盘."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜索厕所，好吗？\nresponse: ", "response": "厕所."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即让无人机起飞，然后前进一百厘米检查前方，接着请升高五十五厘米，随后升高一米想要从更高的角度俯瞰整个区域，最后现在请让无人机降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Thoroughly clear the existing object search task list for the drone.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the bottle.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最迅捷的步伐，穿越于架间的书与散落的网球拍之间，寻觅那盒藏匿着温暖与慰藉的感冒药，以及一片能充饥提神的面包吧！\nresponse: ", "response": "书; 感冒药; 面包; 网球拍."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the truck, then the mouse. Keep going!\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Hold up the current flight control task.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去寻找那个橙子吧，加油！\nresponse: ", "response": "橙子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞操作现在可以开始吗，然后请向右边再移动，接着能让无人机向左飞五十厘米吗，随后请将无人机右侧移动，紧接着无人机向左移动七十厘米，之后请让无人机向后移动五十厘米，最后无人机准备降落，请安全降落。\nresponse: ", "response": "take_off; Missing move_right; move_left 50 cm; Missing move_right; move_left 70 cm; move_back 50 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复先前暂停的控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please pause the current task and search?\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and pick up where you left off with the control and search task.\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止正在进行的目标探测任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: slide right by 1 foot\nresponse: ", "response": "move_right 1 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议启动飞行任务的控制程序。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current search task immediately.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务已被恢复，继续之前暂停的控制飞行。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请迅速检查床附近，看看是否有碗和面包，顺便留意一下运动球。\nresponse: ", "response": "床; 碗; 面包; 运动球."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你友好地检查一下，看是否能在那位人附近找到笔记本电脑，同时别忘了留意下烤箱和微波炉的情况，但愿不会有什么不妥。\nresponse: ", "response": "笔记本电脑; 烤箱; 人; 微波炉."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请上升，然后升高二十厘米调整观察角度；接着向前飞行五十厘米，之后无人机向后退两百厘米；随后，请向左移动七十五厘米寻找目标物体，紧接着前进二百厘米；第二，无人机右转一百八十度掉头；最后，现在准备让无人机降落。\nresponse: ", "response": "Missing move_up; move_up 20 cm; move_forward 50 cm; move_back 200 cm; move_left 75 cm; move_forward 200 cm; turn_right 180 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Invoke the eagle's gaze upon the landscape, commence the hunt for your quarry forthwith.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing in the air! Then move to the left by 80 cm. Next, ascend 24 inches. Following that, tilt the drone to the right 30 degrees, head right afterwards, and lower to ground level in the end.\nresponse: ", "response": "take_off; move_left 80 cm; move_up 24 in; turn_right 30 degrees; Missing turn_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能快速地先找到网球拍和猫，然后是微波炉，最后别忘了看看公共汽车吗？\nresponse: ", "response": "网球拍; 猫; 微波炉; 公共汽车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Spin it to the right 180 degrees, then zoom forward 3 feet, after that go to the right, next descend 20 centimeters, afterwards hover and rotate right 45 degrees, following that shift left 20 inches, subsequently fly the drone to the left by 200 meters to follow the river, then go up by 12 inches, after that turn the drone left 60 degrees, in the end bring it down, now!\nresponse: ", "response": "turn_right 180 degrees; move_forward 3 ft; Missing move_right; move_down 20 cm; turn_right 45 degrees; move_left 20 in; move_left 200 m; move_up 12 in; turn_left 60 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请清空当前的飞行任务列表。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复并继续执行先前已暂停的详尽控制与搜寻任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前中断的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's take off, I'm so excited! Then move backward 45 inches, afterwards drone descend 3 feet, next it’s time to hover and then turn right 90 degrees, subsequently make a landing.\nresponse: ", "response": "take_off; move_back 45 in; move_down 3 ft; turn_right 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前进二十厘米，继续任务\nresponse: ", "response": "move_forward 20 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被紧急地指示去搜索电视、汽车和胡萝卜。\nresponse: ", "response": "电视; 汽车; 胡萝卜."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get in the air, then shift left 2 feet, after that fly the drone sideways 7 feet.\nresponse: ", "response": "take_off; move_left 2 ft; move_right 7 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Prepare for takeoff, then shift left to avoid the drone from hitting the wall by 2 meters, after that go right, next move forward 1.5 meters, afterwards rotate left by 60 degrees, subsequently I’m so excited to watch it fly right for 10 feet, and in the end go downwards 2 meters.\nresponse: ", "response": "take_off; move_left 2 m; move_right 10 ft; move_down 2 m; turn_left 60 degrees; Missing move_right; move_forward 1.5 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机升高一百厘米，然后右转八十度，以便更好地观察右侧，接着无人机请向后飞行两米以避开障碍物，随后马上下降，紧接着请右边转向，之后左转七十度，检查左侧情况，最后无人机在这儿降落吧。\nresponse: ", "response": "move_up 100 cm; turn_right 80 degrees; move_back 2 m; Missing move_down; Missing turn_right; turn_left 70 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the painkillers and the snowboard, then check if the oven is nearby.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最高效的技术路径定位并识别冰箱。\nresponse: ", "response": "冰箱."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前搜索目标的任务\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off now, then fly towards the building 100 feet, after that descend 2 feet, next apply aft movement by 8 feet, subsequently reverse 120 centimeters, afterwards go forward 5 meters, following that turn it 360 degrees to the right, then descend 20 centimeters, move right 1 meter, immediately after rise up, before dropping altitude 2 feet, and in the end please move forward a little bit.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否前往指定区域进行搜索，看是否能找到烤面包机？\nresponse: ", "response": "烤面包机."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Advance forward 3 meters, then fly forward 1 foot, after that ascend swiftly 2 meters, subsequently descend 15 feet to get closer to the ground, next bring the drone to the right by 200 centimeters, immediately after lift it up 80 cm, afterwards move left 3 feet, following that go down by 2 meters, then go right, and in the end bring it down now.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move to the left 10 meters, then move down 4 meters.\nresponse: ", "response": "move_left 10 m; move_down 4 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off the drone, then turn it 360 degrees to the right. After that, let’s see it slide left like it’s doing the moonwalk, next move leftwards 70 in, subsequently move left 25 centimeters, afterwards turn 60 degrees right, following that go backward a short distance, about 1 meter, later rotate the drone to the right by 120 degrees, and in the end, make it land.\nresponse: ", "response": "take_off; turn_right 360 degrees; Missing move_left; move_left 70 in; move_left 25 cm; turn_right 60 degrees; move_back 1 m; turn_right 120 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清除当前任务列表中的飞行控制指令。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off right now, then shift to the left 6 feet, after that elevate up 2.5 m, next fly it forward by 2 meters, subsequently fly down 3 feet, afterwards descend it a little, following that cause it to move left 40 cm, then go backwards a little, immediately after shift the drone down, and in the end land it gently.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you fly left by 3 meters? I’m hoping this will clear the area ahead. Next, lower altitude. Immediately after that, shift left 20 inches. Then, turn 120 degrees to the right. Finally, pull it back 75 cm.\nresponse: ", "response": "move_left 3 m; Missing move_down; move_left 20 in; turn_right 120 degrees; move_back 75 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 轻拂任务之尘，建议清空现行的飞行指令清单。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的控制与搜寻任务，详尽地检查后再继续哦。\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pick up where we left off and get that airborne marvel back on its digital leash, resuming the flight control task that was put on ice.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bottle.\nresponse: ", "response": "bottle."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the backpack, car, motorcycle, truck. Good luck!\nresponse: ", "response": "backpack; car; motorcycle; truck."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off as soon as the sun rises, then veer to the right 120 degrees, after that raise it by 0.8 meters, subsequently move it 200 centimeters forward, next drift downwards by 30 inches, afterwards turn left 10 degrees, following that propel forward 50 cm, immediately after go ahead 100 cm, later fly backward for 2 meters, then pull the drone up 50 centimeters, subsequently lower it slightly, thereafter bank right, next spin the drone clockwise by 45 degrees, and in the end, fly straight up.\nresponse: ", "response": "take_off; turn_right 120 degrees; move_up 0.8 m; move_forward 200 cm; move_down 30 in; turn_left 10 degrees; move_forward 50 cm; move_forward 100 cm; move_back 2 m; move_up 50 cm; Missing move_down; Missing move_right; turn_right 45 degrees; Missing move_up."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请沿着长椅和火车之间轻巧地滑行，精准定位那只小巧的鼠标。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I'm relaxed, fly up 5 inches, then elevate the drone 3 meters, afterwards soar upward 2 meters, and in the end, set it down gently.\nresponse: ", "response": "move_up 5 in; move_up 3 m; move_up 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Urgently clear the current flight control task list to ensure smooth operations.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞，然后让无人机降落吧.\nresponse: ", "response": "take_off; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Help me find *Harry Potter* on the bookshelf.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's blast off, initiate takeoff! Then drop it down 50 inches. Next, I need this drone to move forward 20 inches right now! After that, turn left a bit, or rather, can you make it rotate left a bit? Following that, bring it forward 3 inches. Immediately after, give me a smooth left turn, 90 degrees, like a dancer. Thereafter, go left 3 feet, and in the end, move forward.\nresponse: ", "response": "take_off; move_down 50 in; move_forward 20 in; Missing turn_left; Missing turn_left; move_forward 3 in; turn_left 90 degrees; move_left 3 ft; Missing move_forward."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议详尽地恢复此前中断的探索目标的进程。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please proceed to locate and retrieve the donut and apple with utmost care and efficiency.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即寻找电视。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, hurry up and kick off the control and search task!\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 查找卧室衣柜里是否还有未穿过的运动服。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜索一下感冒药。\nresponse: ", "response": "感冒药."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您暂停当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Climb to 6 meters, then bank right 2 meters, next advance forward quickly 45 cm, afterwards drift back, and in the end the drone should go down now.\nresponse: ", "response": "move_up 6 m; move_right 2 m; move_forward 45 cm; Missing move_back; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar through the kitchen sky, scanning the horizon for a microwave hiding like a lost star, a bowl as round as the moon, a donut masquerading as a celestial ring, and a refrigerator standing tall as a mountain of secrets.\nresponse: ", "response": "microwave; bowl; donut; refrigerator."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Recommend some financial management tools suitable for students.\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object detection sequence.\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you kindly soar through the skies and weave your way to find a truck, a bottle, a keyboard, and a tennis racket, as if they were hidden treasures in a vast, open landscape?\nresponse: ", "response": "truck; bottle; keyboard; tennis racket."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机上升五十厘米，谢谢，然后请右转五十度，以便调整方向，接着请让无人机调头看看，随后右边有点阻碍，右移六十厘米来绕过它，紧接着升高一百厘米，之后无人机向左侧移动，紧接着往下飞，最后准备降落吧。\nresponse: ", "response": "move_up 50 cm; turn_right 50 degrees; turn_left 180 degrees; move_right 60 cm; move_up 100 cm; Missing move_left; turn_right 90 degrees; Missing move_down; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start your engines, then drop it down 50 cm, and afterwards, I need it to land now.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能去检查一下餐桌和烤箱附近，看能否找到杯子和叉子吗？\nresponse: ", "response": "杯子; 叉子; 餐桌; 烤箱."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前进一百五十厘米，然后请向后退一百五十厘米，接着无人机太高了，请下降，最后无人机可以准备降落。\nresponse: ", "response": "move_forward 150 cm; move_back 150 cm; Missing move_down; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that you are to meticulously search for a tie while carefully examining every chair?\nresponse: ", "response": "tie; chair."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please kindly clear the current list of tasks for the aerial navigator, ensuring a smooth and unobstructed flight path ahead.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why don't you gently sweep the sky, as if painting a picture, to find the sports ball, laptop, cup, and bowl?\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请按照预定程序执行搜索任务，首先定位长椅，随后在周围区域内仔细寻找书。\nresponse: ", "response": "长椅; 书."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向后移动二百厘米，然后向左旋转九十度，观察周围环境，接着上升一米，随后左移六十厘米，紧接着无人机逆时针旋转一百二十度，之后左边移动二十厘米，再请将无人机下降六十厘米，减少高度，最后现在请让无人机降落在这里。\nresponse: ", "response": "move_back 200 cm; turn_left 90 degrees; move_up 1 m; move_left 60 cm; turn_left 120 degrees; move_left 20 cm; move_down 60 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: You are requested to seek out the dining table and backpack, as if a shepherd guiding his flock home.\nresponse: ", "response": "dining table; backpack."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't just hover there, go check if the dog has your kite!\nresponse: ", "response": "dog; kite."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请将无人机起飞到空中，然后左边可能有目标，调整方向，接着左转三十度，查看情况，随后让无人机向后行进。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 查找我昨天保存的语音备忘录文件。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前进二十厘米，继续任务，然后请向左移动七十五厘米，寻找目标物体；紧接着，无人机飞得太高，请下降；随后，无人机左侧转向；接着，无人机右转三十度，重新调整方向，准备接受新任务；之后，左转三十度，观察左侧情况；最后，无人机左移两百五十厘米。\nresponse: ", "response": "move_forward 20 cm; move_left 75 cm; Missing move_down; Missing turn_left; turn_right 30 degrees; turn_left 30 degrees; move_left 250 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In the midst of the ongoing object search, it is necessary to momentarily halt the current operation to ensure optimal performance and precision in the drone's subsequent actions.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not search for fanta, locate skis.\nresponse: ", "response": "skis; fanta."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索卧室床头柜抽屉中是否存有备用药物。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move back 30 inches, then descend the drone by 100 centimeters, afterwards raise it by 20 centimeters, next rotate to the left, immediately after that rotate it left 135 degrees, subsequently shift the drone leftwards by 75 centimeters, later lean left, then shift backward 40 inches, following that fly upward 60 centimeters, and in the end make it climb up 6 feet.\nresponse: ", "response": "move_back 30 in; move_down 100 cm; move_up 20 cm; Missing turn_left; turn_left 135 degrees; move_left 75 cm; Missing move_left; move_back 40 in; move_up 60 cm; move_up 6 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can we turn it left by 15 degrees? I’m hopeful it’ll give us a better perspective, then fly upwards 10 inches, after that move to the right, next can you fly left by 3 meters? I’m hoping this will clear the area ahead, afterwards move backward 1 meter, subsequently I want you to shift right, 3 feet, following that turn left 150 degrees, and in the end veer to the right 45 degrees.\nresponse: ", "response": "turn_left 15 degrees; move_up 10 in; Missing move_right; move_left 3 m; move_back 1 m; move_right 3 ft; turn_left 150 degrees; turn_right 45 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Must we halt the ongoing control and search operations immediately?\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您以最高效的方式定位并报告红绿灯的位置，感谢您的配合。\nresponse: ", "response": "红绿灯."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，能不能麻烦你友好地去找找那个运动球和书啊？谢谢啦！\nresponse: ", "response": "运动球; 书."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you have the drone take off now, then ascend 1 foot, afterwards fly it backwards by 30 inches, subsequently bring the drone down 0.5 meters, next turn the drone left by 60 degrees, after that move it forward, and immediately after proceed forward 6 inches?\nresponse: ", "response": "take_off; move_up 1 ft; move_back 30 in; move_down 0.5 m; turn_left 60 degrees; Missing move_forward; move_forward 6 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current task and initiate the search function.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 向右侧移动后，无人机上升七十五厘米，然后请转向后方。随后，无人机向左侧移动，之后无人机右转。紧接着，无人机向右转一百八十度，接着前方有障碍物，向前移动五十厘米以检查。前面有点模糊，再次向前移动五十厘米。第三，前进一百厘米进行前方检查，最后，无人机降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate take off, then move back from the edge of the cliff 3 meters, afterwards please make the drone turn left 90 degrees, next ascend swiftly 2 meters, following that move forward a bit, subsequently please shift the drone 2 meters to the right, and thereafter fly back 10 inches.\nresponse: ", "response": "take_off; move_back 3 m; turn_left 90 degrees; move_up 2 m; Missing move_forward; move_right 2 m; move_back 10 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么黑洞会形成“事件视界”？\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please pause the current control and search task immediately; we are nearly there!\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Check which store has the latest smartphones available.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Identify the point closest to the coastline in the drone's aerial footage.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动无人机并调整到20米高度巡航飞行。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找领带。\nresponse: ", "response": "领带."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Up we go! Then start flying upwards 10 feet. Next reverse the drone by 100 centimeters. After that bank right by 4 feet. Following that rotate left 90 degrees. Immediately after turn it right by 10 degrees. Subsequently give me a twirl to the left, 45 degrees. Finally Please rotate left by 45 degrees.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前控制飞行的任务应被立即暂停。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你温和但坚定地去椅子那边看看，确认一下饼干是不是还在那儿。\nresponse: ", "response": "饼干; 椅子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate 90 degrees to the right, then descend 15 feet to get closer to the ground.\nresponse: ", "response": "turn_right 90 degrees; move_down 15 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动搜索物体的任务\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请将无人机调整到高度一米的位置，然后向后移动五十厘米，以便避开障碍物，接着请将无人机向前移动一米，以便更好地观察前方的目标，随后右移四十厘米，紧接着我感觉左边有点异常，调整一下方向，之后让无人机向后行进，紧接着无人机升高六十厘米，第二后方有点可疑，转身看看，随后右侧移动，紧接着右侧前进，最后后退两百厘米，无人机请着陆在指定地点。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转一百二十度，查看右侧，然后向右转，接着让无人机向后移动二百厘米，之后让无人机左转五十度，调整一下方向看看那边的情况，随后无人机飞得太高了，降低，请将无人机往右移，紧接着请将无人机右移七十厘米，之后请将无人机高度降低，再将高度提高三十厘米，调整视角以便查看周围情况，接着无人机向前飞行一百厘米，靠近目标，最后无人机下降到地面。\nresponse: ", "response": "turn_right 120 degrees; Missing turn_right; move_back 200 cm; turn_left 50 degrees; Missing move_down; move_right 40 cm; Missing move_right; move_right 70 cm; Missing move_down; move_up 30 cm; move_forward 100 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off, immediately bring it up 3 meters, push left, then move forward, orient to the right, afterwards move it forward, and subsequently move the drone backward 1.5 feet.\nresponse: ", "response": "take_off; move_up 3 m; Missing move_left; Missing move_forward; Missing turn_right; Missing move_forward; move_back 1.5 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please soar gracefully like a hawk and seek out the chair, motorcycle, and backpack with the keenness of an eagle's eye!\nresponse: ", "response": "chair; motorcycle; backpack."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the handbag and the potted plant near the dining table, and locate the person.\nresponse: ", "response": "handbag; potted plant; dining table; person."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 之前的控制及搜寻任务被请求重新启动，但我们需谨慎行事。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动任务以友好地开始对目标物进行精准搜索。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 开始执行搜寻物体的任务吗？\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前已暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 先暂时停一下现在的搜索任务吧。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请启动探寻物象之旅。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂且驻足于当前的操作与探寻之旅，优雅地按下暂停键。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后调整到右侧，转动，左旋转，后面有什么东西，请右转五十度，接着让无人机后退，向左飞行一百二十厘米，随后请帮忙让无人机左移四十厘米，上升，之后后方有什幺，无人机向左旋转，左边飞行一百厘米，我们要探索左侧的神秘区域，最后请右侧转向。\nresponse: ", "response": "take_off; Missing turn_right; Missing turn_left; turn_right 180 degrees; turn_right 50 degrees; Missing move_back; move_left 120 cm; move_left 40 cm; Missing move_up; turn_left 180 degrees; Missing turn_left; move_left 100 cm; Missing turn_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Not finding the pizza would be a letdown, so make sure to search every corner thoroughly.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone, go down 6 meters, hover and then fly right 6 feet, I’m curious to see what happens next, let’s fly forward 15 feet, then adjust the drone's position to the right and fly straight down, afterwards proceed left 2 meters, spin the drone to the left 45 degrees, move the drone to the right by 2 meters, elevate up 2.5 m, subsequently bring it down 1 meter.\nresponse: ", "response": "move_down 6 m; move_right 6 ft; move_forward 15 ft; Missing move_down; Missing move_right; move_left 2 m; turn_left 45 degrees; move_right 2 m; move_up 2.5 m; move_down 1 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's put the current control and search activities on hold for a moment.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then go backwards 50 centimeters, after that come down to the ground.\nresponse: ", "response": "take_off; move_back 50 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why does the Sun appear larger and brighter than other stars?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off that flight control task! You've got this!\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找饼干。\nresponse: ", "response": "饼干."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往搜索区域，定位并确认鼠标与甜甜圈的位置。\nresponse: ", "response": "鼠标; 甜甜圈."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机飞得太高了，请下降六十厘米，然后请将无人机左转，接着往下移动，之后前进一段距离，紧接着往左转，最后现在，请让无人机降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the aerial navigation endeavor with commanding precision.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off now, then shift the drone to the left by 2 meters, after that quick, rotate left 90 degrees, afterwards push it forward, next climb 6 feet, subsequently fly forward 1 foot, following that turn the drone 45 degrees to the right, then move rightward 4 inches, immediately after that move left 200 centimeters, and in the end spin the drone to the left 45 degrees.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 上升一米，然后右转四十度，接着无人机太高了，下降六十厘米，最后请让无人机在这里执行降落操作。\nresponse: ", "response": "move_up 1 m; turn_right 40 degrees; move_down 60 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 现在让我们友好地启动并执行搜索任务，这将是一次充满探索与发现的旅程。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右边看看，转过去，然后向右飞行一百五十厘米，接着为了确保无人机位置，请向左移动三十厘米，随后上扬，最后无人机降落在这里。\nresponse: ", "response": "turn_right 90 degrees; move_right 150 cm; move_left 30 cm; Missing move_up; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 在万物静谧之际，不妨重启那曾暂歇的探索之旅，让应用程序悄然续写未完的篇章。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing control and reconnaissance operations.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向上升起一米，以提高视角，然后指示无人机向后退，接着无人机向前飞行一百厘米，靠近目标，之后请将无人机左侧移动一百厘米，随后向右侧移动，紧接着设备需要向后移动一百五十厘米，再请右边转弯，之后无人机后退一百五十厘米，以便观察后方，最后现在可以让无人机降落吗。\nresponse: ", "response": "move_up 1 m; Missing move_back; move_forward 100 cm; move_left 100 cm; Missing move_right; move_back 150 cm; Missing turn_right; move_back 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Adjust the TV volume to 30%.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear out that control and start a fresh search task, you got this!\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone up now, then move it forward 100 inches, after that reverse 5 meters, subsequently rotate right 270 degrees, next shift right by 80 inches, afterwards tilt to the left, following that begin the ascent, immediately after descend the drone by 1.5 meters, and in the end push forward 100 inches.\nresponse: ", "response": "take_off; move_forward 100 in; move_back 5 m; turn_right 270 degrees; move_right 80 in; Missing turn_left; Missing move_up; move_down 1.5 m; move_forward 100 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Begin takeoff sequence now, then tilt to the left, afterwards retreat back 80 centimeters, and subsequently I want it to land right now.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then move left by 2 feet, after that make the drone turn left, next raise it 100 centimeters, subsequently soar upward 2 meters, afterwards descend it a little, following that move the drone 3 meters to the left, then turn 15 degrees to the left, immediately after give me a smooth left turn, 90 degrees, like a dancer, later move left by 3 meters, next travel forward a bit, thereafter please make the drone turn left 90 degrees, subsequently slide to the left 5 inches, and in the end let the drone move forward 50 cm.\nresponse: ", "response": "take_off; move_left 2 ft; Missing turn_left; move_up 100 cm; move_up 2 m; Missing move_down; move_left 3 m; turn_left 15 degrees; turn_left 90 degrees; move_left 3 m; Missing move_forward; turn_left 90 degrees; move_left 5 in; move_forward 50 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停现在的控制和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 为了更好地检查右侧，请将无人机右转四十五度，然后请后退一米，接着无人机向左侧移动，随后为了获得更好的视角，请将无人机上升两米，紧接着请让无人机向后移动一米，之后右转一百八十度，接下来向右飞行一米，随后无人机飞得太高了，请下降一米，紧接着无人机向前飞行，最后上移。\nresponse: ", "response": "turn_right 45 degrees; move_back 1 m; Missing move_left; move_up 2 m; move_back 1 m; turn_right 180 degrees; move_right 1 m; move_down 1 m; Missing move_forward; Missing move_up."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Seek out the sprite with unwavering determination, ensuring its location is precisely identified.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 后退五十厘米，调整一下位置，看看后面有什么，然后让无人机向后移动一米五，接着请让无人机向右飞行两米，随后右移七十五厘米，紧接着将无人机的高度提升三十厘米，确保视角清晰，之后无人机右转四十度以获得更好视角，接下来请向右移动一百五十厘米，随后向右方移动，最后无人机左转。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you take off now, then rotate left by 50 degrees, after that, rotate left side, next, I’m so excited to watch it fly right for 10 feet, afterwards, move forward, subsequently, bring it up by 2 meters, following that, move forward 25 in, later, turn the drone to left, and In the end, touch down.\nresponse: ", "response": "take_off; turn_left 50 degrees; Missing turn_left; move_right 10 ft; Missing move_forward; move_up 2 m; move_forward 25 in; Missing turn_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 任务开始时，请无人机起飞，然后让无人机升高五十厘米，便于查看全景，接着上升一米，随后无人机向右转一百二十度，以调整视角。右边需要探测，向右移动，紧接着无人机上升三百五十厘米。无人机离地面太高了，请下降，为了绕过障碍物，请将无人机后退，之后向左飞行一百二十厘米，前方似乎有障碍物，向前移动一米，随后无人机上升九十厘米，现在离地面太远了，请下降一百五十厘米，最后降落一米，无人机降落在指定区域。\nresponse: ", "response": "take_off; move_up 50 cm; move_up 1 m; turn_right 120 degrees; Missing move_right; move_up 350 cm; Missing move_down; Missing move_back; move_left 120 cm; move_forward 1 m; move_up 90 cm; move_down 150 cm; move_down 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向后退一米五，前方不清楚，前进，请让无人机向后移动四十厘米，无人机右侧视角受限，请右转三十度以获得更好视角，之后无人机可以降落在这里吗。\nresponse: ", "response": "move_back 1.5 m; Missing move_forward; move_back 40 cm; turn_right 30 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，然后后方有点可疑，转身看看，接着请向右移动五十厘米来避开，随后升高八十厘米，改变高度，紧接着右转一百度，之后左转三十度，检查左边，再接着无人机左侧移动二百厘米，随后请无人机后退一百厘米，紧接着左侧旋转五十度，第二步是无人机，请向前飞行一百五十厘米，第三步向前移动七十厘米，最后现在让无人机降落。\nresponse: ", "response": "take_off; turn_left 180 degrees; move_right 50 cm; move_up 80 cm; turn_right 100 degrees; turn_left 30 degrees; move_left 200 cm; move_back 100 cm; turn_left 50 degrees; move_forward 150 cm; move_forward 70 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off quickly, then fly left side, next fly forward a little, after that commence a 45-degree yaw to the left, subsequently move forward 25 in, afterwards maneuver to the right, following that fly backward a few feet, and finally fly backward 10 meters.\nresponse: ", "response": "take_off; Missing move_left; Missing move_forward; turn_left 45 degrees; move_forward 25 in; Missing move_right; Missing move_back; move_back 10 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Check if there are obstacles in the images captured by the drone.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 确认家中餐桌上是否还有遗落的杯子。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前的飞行任务，这是为了确保操作更加精准与安全。让我们一起优化每一个飞行体验！\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hold up on that flight control task, like putting a pause button on a race! Keep it steady, we're just taking a breather.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索卧室角落里的小型储物箱位置。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 将无人机向下移动一百五十厘米，然后请将无人机向左飞行一米，以绕过前方障碍物，最后请让无人机降落到地面。\nresponse: ", "response": "move_down 150 cm; move_left 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请检查沙发附近是否有苹果和西兰花。\nresponse: ", "response": "沙发; 苹果; 西兰花."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In the midst of the ongoing object search task, it is imperative to momentarily halt the operation to ensure optimal performance and prevent any potential complications that may arise.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 在这一程探索之旅中，不妨再度启航，继续那曾暂歇的控制与搜寻使命，让每一步都更加坚定而充满希望。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move back 0.5 meters, then move to the right 200 inches, and afterwards let the drone land now.\nresponse: ", "response": "move_back 0.5 m; move_right 200 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧找到那只猫和它旁边的胡萝卜吧，别让它们躲起来哦。\nresponse: ", "response": "猫; 胡萝卜."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你轻轻寻找一下那块滑板。\nresponse: ", "response": "滑板."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the aerial vehicle operation sequence.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate lift-off, then slowly move back 30 in, next fly the drone to the left by 100 centimeters to capture the side view, afterwards take it left 4 inches, subsequently drift left for 2 meters, following that fly right 1 foot, then slide right 4 inches, immediately after rotate left by 50 degrees.\nresponse: ", "response": "take_off; Missing turn_right; Missing turn_left; move_back 30 in; move_left 100 cm; move_left 4 in; move_left 2 m; move_right 1 ft; Missing turn_right; move_right 4 in; turn_left 50 degrees; Missing turn_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应恢复先前暂停的控制与搜索任务？建议您考虑这一选项，以确保操作进程的连续性和效率。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bowl.\nresponse: ", "response": "bowl."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then back the drone away from the fence 5 meters, after that turn right about 90 degrees, next slide right by 50 centimeters, subsequently make the drone climb 5 inches, afterwards rotate it left 135 degrees, and in the end land in the open field ahead.\nresponse: ", "response": "take_off; move_back 5 m; turn_right 90 degrees; move_right 50 cm; move_up 5 in; turn_left 135 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止所有现行控制指令与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we pause this flight control task, halting the aerial dance in mid-air?\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then lower it by 50 cm, after that apply aft movement by 8 feet, subsequently begin the ascent, next slide to the right 20 inches, afterwards advance forward 3 feet.\nresponse: ", "response": "take_off; move_down 50 cm; move_back 8 ft; Missing move_up; move_right 20 in; move_forward 3 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以启动无人机吗，然后请将无人机右移一米，接着无人机后退一米，随后左边可能有障碍物，转动，最后现在让无人机着陆。\nresponse: ", "response": "take_off; move_right 1 m; move_back 1 m; Missing turn_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the skateboard.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请向左移动七十五厘米，以便调整位置，然后无人机请右转九十度，接着无人机的前方需要进一步检查，请向前飞行一百五十厘米，随后右移一米，紧接着无人机左转七十度，之后右移七十厘米，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "move_left 75 cm; turn_right 90 degrees; move_forward 150 cm; move_right 1 m; turn_left 70 degrees; move_right 70 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立刻恢复之前暂停的飞行任务，我们相信你能顺利完成！\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off and go straight, then rotate the drone left.\nresponse: ", "response": "take_off; Missing turn_left."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please place the ongoing aerial navigation task on hold.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 下降一百五十厘米，然后无人机高度过低，请上升，之后无人机准备降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中当前搜寻的目标已被清空。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找一找背包里的笔记本电脑吧，真是的！\nresponse: ", "response": "笔记本电脑; 背包."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly back 10 inches, then circle left by 45 degrees, after that steer left 60 degrees.\nresponse: ", "response": "move_back 10 in; turn_left 45 degrees; turn_left 60 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机请向后飞行一米，然后后退五十厘米，调整一下位置，看看后面有什么，最后现在让无人机完成降落程序。\nresponse: ", "response": "move_back 1 m; move_back 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在搜索模式下，以网球拍为线，编织一张捕捉细节的网；同时，让自行车成为穿梭于线索间的轻盈信使；而橙子，则是点亮这幅图景的一抹亮色。启动定位与追踪功能。\nresponse: ", "response": "网球拍; 自行车; 橙子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以精准的扫描模式在房间内寻找那个如同知识灯塔般的书。\nresponse: ", "response": "书."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 就像接力赛中接过棒子一样，让我们友好地重启刚才暂时搁置的物体搜索任务吧！\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the car, bowl, sandwich, oven quickly, please.\nresponse: ", "response": "car; bowl; sandwich; oven."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we initiate the control and search task?\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 友好地请你检查一下酒杯附近是否有香蕉和网球拍。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: How about we take a moment to pause the ongoing search task?\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后前方似乎有障碍物，向前移动一米，接着无人机向右转一百二十度以调整视角，最后无人机降落在预定位置。\nresponse: ", "response": "take_off; move_forward 1 m; turn_right 120 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在那静谧的角落里，请轻盈地掠过沙发与行李箱之间，细细探寻。\nresponse: ", "response": "沙发; 行李箱."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Prepare for takeoff. Can you make the drone go left a little afterwards? Then fly the drone backwards 300 cm. Next, please turn it left by 120 degrees. Following that, go left 3 feet slowly. After that, ascend above the tree by 20 feet. Immediately after, slide 60 centimeters to the right. Subsequently, fly straight ahead 1 meter. Later, move left 7 feet. In the end, land this thing.\nresponse: ", "response": "take_off; Missing move_left; move_back 300 cm; turn_left 120 degrees; move_left 3 ft; move_up 20 ft; move_right 60 cm; move_forward 1 m; move_left 7 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前正在进行的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您清空当前正在搜索的目标任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前进二百厘米，然后让无人机逆时针旋转二十度，接着无人机前进一百二十厘米，随后无人机高度太低，请上升，紧接着往后退九十厘米，请将无人机向后移动，之后能让无人机向左飞五十厘米吗，紧接着向上升起二十厘米，视角向上，随后将无人机向下移动一百五十厘米，接着提高二十厘米，修正高度，然后向右飞行，紧接着无人机高度过低，请上升，最后无人机可以降落。\nresponse: ", "response": "move_forward 200 cm; turn_left 20 degrees; move_forward 120 cm; Missing move_up; move_back 90 cm; Missing move_back; move_left 50 cm; move_up 20 cm; move_down 150 cm; move_up 20 cm; Missing move_right; Missing move_up; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后前进一段距离，接着无人机离地面太远了，下降一百五十厘米。\nresponse: ", "response": "take_off; Missing move_forward; move_down 150 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current object search task is paused.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，准备执行任务，然后请将无人机缓慢上升五十厘米，以便获得更好的视角，接着无人机上升到三米，随后左侧飞行一米，最后请调整方向，右转。\nresponse: ", "response": "take_off; move_up 50 cm; move_up 3 m; move_left 1 m; Missing turn_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search if there are any fruits left in the refrigerator's cooling compartment.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么天空在黄昏时会变成橙色？\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Get that control and search task going!\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please check for the tie near the sink.\nresponse: ", "response": "tie; sink."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't forget to check for a laptop, boat, bicycle, and cola.\nresponse: ", "response": "laptop; boat; bicycle; cola."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以床为起点，像猎犬般敏锐地追踪至遥控器旁，随后转向背包，最后优雅如猫地轻落在杯子附近。\nresponse: ", "response": "床; 遥控器; 背包; 杯子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Locate the nearest power strip in the house and mark its position.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 终止现有控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Got everything cleared out from the current control and search task, or do we need to start fresh?\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即前往指定区域搜索并确认电视旁是否放置了芬达和蛋糕。\nresponse: ", "response": "电视; 芬达; 蛋糕."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go check out where the bench is, and while you're at it, see if you can spot a cup, some painkillers, and even a toaster, would ya?\nresponse: ", "response": "bench; cup; painkillers; toaster."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bench and the toothbrush with the precision of a hawk spotting its prey.\nresponse: ", "response": "bench; toothbrush."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶快清除现在的飞行任务列表吧！\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then tilt the drone to the left, after that pull back 4 feet, next please turn right 45 degrees, subsequently descend 10 inches, afterwards propel forward 15 inches, later soar forward 15 meters, following that move forward for 2 meters, nice and steady, then Please move the drone left 5 feet, immediately after spin right 45 degrees, subsequently drop it down 10 inches, thereafter how about moving up 20 inches, in the end move the drone to the right by 2 meters.\nresponse: ", "response": "take_off; Missing turn_left; move_back 4 ft; turn_right 45 degrees; move_down 10 in; move_forward 15 in; move_forward 15 m; move_forward 2 m; move_left 5 ft; turn_right 45 degrees; move_down 10 in; move_up 20 in; move_right 2 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: While searching the area, locate the sports ball, then proceed to find the bicycle and ensure the kite is also recovered.\nresponse: ", "response": "sports ball; bicycle; kite."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not resume the previously halted object detection sequence.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先，右侧再靠近十五厘米，然后左转四十五度，调整角度，咱们要更好地查看左侧。紧接着，让无人机升高五十厘米，便于查看全景。随后，无人机太高了，请下降。之后，无人机右转一百二十度。接着，无人机可能在后方发现了目标，请后退一米查看具体情况。后来，无人机向左移动七十厘米。紧接着，掉头飞行。最后，请无人机后退一百厘米，在这之前，无人机逆时针旋转一百二十度。\nresponse: ", "response": "move_right 15 cm; turn_left 45 degrees; move_up 50 cm; Missing move_down; turn_right 120 degrees; move_back 1 m; move_left 70 cm; turn_right 180 degrees; move_back 100 cm; turn_left 120 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索雨伞。\nresponse: ", "response": "雨伞."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请启动并执行搜索任务。然而，若遇任何障碍，请即刻终止操作。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you take off now? Then soar upward 2 meters. After that, make a left-hand turn. Next, go left for 2 meters. Immediately after, Make the drone climb 5 inches. Following that, please bring it down slowly, thanks. Afterwards, fly right 1 foot. Thereafter, hover left by 8 inches. Subsequently, rotate to the left side. In the end, drone down 30 cm.\nresponse: ", "response": "take_off; move_up 2 m; Missing turn_left; move_left 2 m; move_up 5 in; Missing move_down; move_right 1 ft; move_left 8 in; Missing turn_left; move_down 30 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机升高六十厘米，然后前方视线不清晰，向前移动一百厘米，接着移动到右侧，请上升，随后右侧移动七十五厘米以避开障碍，紧接着无人机的视角受限，请向左转三十度，以便更好地观察左侧环境，之后左侧移动两百厘米，紧接着向右飞行一百二十厘米，最后无人机需要在此地降落。\nresponse: ", "response": "move_up 60 cm; move_forward 100 cm; Missing move_right; Missing move_up; move_right 75 cm; turn_left 30 degrees; move_left 200 cm; move_right 120 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Recommend a few classic science fiction novels.\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying upwards 10 feet, then move forward 5 centimeters, after that fly to the right 100 cm, and subsequently decrease altitude by 5 inches.\nresponse: ", "response": "move_up 10 ft; move_forward 5 cm; move_right 100 cm; move_down 5 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Isn't it time to find the book, cup, and toothbrush!\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请先留意下飞机附近有没有行李箱，好吗？\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你去探索一下，看看能否在周围发现那把剪刀哦。\nresponse: ", "response": "剪刀."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control protocol and commence the search operation, ensuring all drone systems are calibrated for optimal performance.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议暂时中止当前的控制与搜寻任务。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the control and start a new search.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机立即起飞，然后上升三十厘米，提高视角，最后请让无人机在这里进行降落操作。\nresponse: ", "response": "take_off; move_up 30 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the traffic light and the horse urgently, please.\nresponse: ", "response": "traffic light; horse."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请继续执行之前详尽地暂停了的飞行控制任务。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Head over to the dining table and find the spoon, then check for the laptop near the airplane, you can do it!\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please check for a cola, banana, bicycle, and hot dog?\nresponse: ", "response": "cola; banana; bicycle; hot dog."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机现在起飞，然后无人机下降四十厘米以调整高度，接着后退八十厘米，随后向左移动一百八十厘米，紧接着无人机，请后退两百厘米，之后请无人机后退一百厘米，再后来无人机飞得太高了，请下降一米，接着右边可能有目标，帮我转过去，随后请让无人机下降三十厘米，接近地面，最后无人机左移两百五十厘米。\nresponse: ", "response": "take_off; move_down 40 cm; move_back 80 cm; move_left 180 cm; move_back 200 cm; move_back 100 cm; move_down 1 m; turn_right 90 degrees; move_down 30 cm; move_left 250 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请告诉我如何制定一个科学的减肥计划。\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向右飞行一百厘米，以避免前方的障碍物，然后请将无人机上升一百二十厘米，以便获得更高的视角，接着无人机后退七十厘米，随后无人机下降六十厘米，紧接着请右转五十度，谢谢，之后前进九十厘米，探索前方的未知区域，紧接着无人机左移，随后无人机，请向前飞行一百五十厘米，紧接着请将无人机右移两米，然后请将位置调整到左侧八十厘米，随后请升高，最后无人机需要降落在这片区域。\nresponse: ", "response": "move_right 100 cm; move_up 120 cm; move_back 70 cm; move_down 60 cm; turn_right 50 degrees; move_forward 90 cm; Missing move_left; move_forward 150 cm; move_right 2 m; move_left 80 cm; Missing move_up; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您立即启动之前已暂停的控制与搜寻任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the clock and the bicycle, then locate the toothbrush; you're doing a great job!\nresponse: ", "response": "clock; bicycle; toothbrush."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地建议你，在搜索鼠标的同时，也留意一下那只可爱的狗吧。\nresponse: ", "response": "鼠标; 狗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜索手提包。\nresponse: ", "response": "手提包."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate it to the right, then shift it forward by 8 feet, after that move forward 20 inches, and next fly to the right by 50 cm.\nresponse: ", "response": "Missing turn_right; move_forward 8 ft; move_forward 20 in; move_right 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以优雅的姿态，在这广袤的空间中探寻那遗落的手机，你的任务至关重要。\nresponse: ", "response": "手机."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向左飞六十厘米，然后升高一百厘米，接着左边要移动四十厘米，调整位置以免碰到障碍物，随后右侧的视角可能受阻，请将无人机右转一百度以调整视角，之后让无人机向后移动九十厘米，紧接着无人机请再后退两百厘米，随后前进二十厘米，最后现在可以让无人机缓慢降落到地面。\nresponse: ", "response": "move_left 60 cm; move_up 100 cm; move_left 40 cm; turn_right 100 degrees; move_back 90 cm; move_back 200 cm; move_forward 20 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed to locate the toothbrush.\nresponse: ", "response": "toothbrush."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate left 30 degrees to change direction, then fly backward 20 feet, after that, ascend 3 feet.\nresponse: ", "response": "turn_left 30 degrees; move_back 20 ft; move_up 3 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take the drone off the ground now, then take it left 4 inches, go back now, drift right, move up 12 inches, fly upwards 3 meters, go downwards 2 meters, raise it 100 centimeters, move it straight ahead, backward movement, ascend swiftly 2 meters, head to the left, move forward 5 meters, and push it forward.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Drone, go down 6 meters, hover and then fly right 6 feet, I’m curious to see what happens next, let’s fly forward 15 feet, then adjust the drone's position to the right and fly straight down, afterwards proceed left 2 meters, spin the drone to the left 45 degrees, move the drone to the right by 2 meters, elevate up 2.5 m, subsequently bring it down 1 meter.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找一找那丢掉的飞盘，还有快活的狗和自由飞翔的鸟啊！\nresponse: ", "response": "飞盘; 狗; 鸟."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly back 3 meters, then shift forward 50 centimeters, begin the ascent, push it forward, rise up, go down, subsequently descend it down 30 inches, sway to the left by 2 meters, and put it down now.\nresponse: ", "response": "move_back 3 m; move_forward 50 cm; Missing move_up; Missing move_forward; Missing move_down; Missing move_up; move_down 30 in; move_left 2 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please kindly pause the ongoing flight control operation, ensuring a smooth and safe transition in your drone application process.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 暂停当前飞行任务吗？\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please urgently halt the ongoing flight control operation?\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的操控与搜索任务，犹如指挥交响乐般精准无误。\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请迅速找到那个香蕉。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the boat and the dog, then locate the bicycle.\nresponse: ", "response": "boat; dog; bicycle."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the urgent control and search operation immediately.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: It is recommended that you do not halt the resumption of the previously interrupted control and search operation.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly backward 2 inches, then rotate left 180 degrees, after that reverse 120 centimeters, and next move left by 50 inches.\nresponse: ", "response": "move_back 2 in; turn_left 180 degrees; move_back 120 cm; move_left 50 in."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the potted plant near the dining table and locate the surfboard.\nresponse: ", "response": "potted plant; dining table; surfboard."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please urgently resume the previously paused object search task within the drone application, ensuring all settings are correctly configured for an efficient and thorough operation.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前中断的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the skis, and bring them back with a sense of urgency!\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the backpack.\nresponse: ", "response": "backpack."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右移动一百五十厘米，然后快让无人机上升个八十厘米吧，我想看看更高的风景，接着请将无人机右移两米，随后无人机请飞行到前方三十厘米，之后无人机右转三十度来调整方向，紧接着前面有点模糊，向前移动五十厘米，再请将无人机上升一百二十厘米，以便获得更高的视角，随后请将无人机向后移动五十厘米，检查是否有障碍物，接着右移一米，最后请无人机安全着陆。\nresponse: ", "response": "move_right 150 cm; move_up 80 cm; move_right 2 m; move_forward 30 cm; turn_right 30 degrees; move_forward 50 cm; move_up 120 cm; move_back 50 cm; move_right 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议启动飞行任务控制程序。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not your duty to seek out the snowboard, banana, cat, and person with utmost diligence?\nresponse: ", "response": "snowboard; banana; cat; person."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最高效的方式搜索并定位手机和书的位置，在此之后，请继续寻找火车与西兰花。\nresponse: ", "response": "手机; 火车; 书; 西兰花."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请无人机现在起飞，感谢；然后让无人机向后退一米五；接着降落一米，咱们要接近地面了，准备好查看周围环境；随后无人机升高一百厘米；紧接着无人机向右移动四十厘米；之后向前飞行一米；右侧移动；紧接着无人机右转九十度，重新调整方向；最后请让无人机着陆。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the present guidance and seek operation.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Time to take off, then move backward 3 feet, after that tilt the drone to the left, next fly it right by 3 inches, subsequently ascend 3 feet, afterwards hover left by 8 inches, following that take it left 4 inches, and thereafter veer right.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机现在能否起飞，然后左转五十五度，观察左侧情况。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the earlier suspended flight control operation.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动飞行任务的操控程序\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您像寻找失落的风筝一样，在空中优雅地搜寻，先留意那酒杯的光芒，再观察是否有鸟儿停留于烤箱之上。\nresponse: ", "response": "酒杯; 鸟; 风筝; 烤箱."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start your engines, then shift right by 7 feet, afterwards execute a lateral shift to the left by 200 centimeters, and finally bring it down, now!\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否立即启动控制与搜索任务？\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即让无人机起飞，然后左侧移动八十厘米，以避开障碍物，接着请让无人机向左转弯，之后让无人机左转四十五度，准备接受新的挑战，随后无人机左转一百度，查看左侧环境，最后无人机降落在预定位置。\nresponse: ", "response": "take_off; move_left 80 cm; Missing turn_left; turn_left 45 degrees; turn_left 100 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动控制程序并紧急展开搜寻任务。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for refrigerator, tennis racket, bird, suitcase.\nresponse: ", "response": "refrigerator; tennis racket; bird; suitcase."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the cat urgently.\nresponse: ", "response": "cat."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议恢复先前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索厨房橱柜里是否还存有备用调料包。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search if there are any clothes left out on the balcony.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否现在启动控制与搜索任务？\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Reverse the drone by 100 centimeters, then I’m not sure how to feel about this, could you please adjust its position to the left?, afterwards turn left 30 degrees, next ascend 24 inches, immediately after that dive down 3 feet, subsequently bring it down by 20 centimeters, following that go downwards 2 meters, and in the end drop down now.\nresponse: ", "response": "move_back 100 cm; Missing move_left; turn_left 30 degrees; move_up 24 in; move_down 3 ft; move_down 20 cm; move_down 2 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the tie.\nresponse: ", "response": "tie."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜寻电视旁的花瓶，检查水槽边的披萨。\nresponse: ", "response": "电视; 花瓶; 水槽; 披萨."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机请飞行到前方两米，然后请升高，接着后退五十厘米，避开障碍物。\nresponse: ", "response": "move_forward 2 m; Missing move_up; move_back 50 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the search mission.\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机请飞行到前方十厘米，接着小飞机前飞七十厘米，让我们探险一下，然后我感觉左边可能有这个东西，随后无人机下降五十厘米以调整高度，紧接着能否请无人机再下降五十厘米来降低高度，之后无人机请右转九十度，随后请帮忙让无人机左移四十厘米，紧接着请让无人机向右飞行两米，最后请让无人机降落到地面。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let the quest for the object commence!\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机是否可以现在起飞，然后向前飞行九十厘米，接着请将无人机右移。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the object search task right now!\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请迅速找到那个香蕉。\nresponse: ", "response": "香蕉."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请以权威且礼貌的方式恢复此前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone up now, then soar up 2 meters. After that, glide left for 100 cm, next move the drone right 2 inches. Following that, fly it forward 2 inches. Please move forward a little bit, I’m not quite sure where it is. Turn to the right, then shift right 1 meter. Subsequently, go down 50 centimeters, and bring it down gently, like it’s landing on a fluffy cloud. Immediately after, rotate left, and subsequently, go to the right by 5 inches. In the end, let's slide to the left, 30 centimeters, cha-cha style.\nresponse: ", "response": "take_off; move_up 2 m; move_left 100 cm; move_right 2 in; move_forward 2 in; Missing move_forward; Missing turn_right; move_right 1 m; move_down 50 cm; Missing move_down; Missing turn_left; move_right 5 in; move_left 30 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去把面包、冲浪板和遥控器找来吧。\nresponse: ", "response": "面包; 冲浪板; 遥控器."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate lift-off, then rotate right 45 degrees to change direction towards the river, afterwards fly left by 50 inches, next fly forward by 3 feet, subsequently fly down 8 inches, following that turn it right by 90 degrees, immediately after zoom forward 3 feet, and in the end land it now.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_left 50 in; move_forward 3 ft; move_down 8 in; turn_right 90 degrees; move_forward 3 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 当前的任务列表已被清理了。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被要求去搜索西兰花、手机和碗，你能完成这个任务吗？加油！\nresponse: ", "response": "西兰花; 手机; 碗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您礼貌地搜索一下长颈鹿。\nresponse: ", "response": "长颈鹿."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向左移动一百二十厘米，然后让无人机向前移动二十厘米，接着无人机需要向左飞行五十厘米，随后请将无人机向后退七十厘米，最后无人机现在下降一百厘米。\nresponse: ", "response": "move_left 120 cm; move_forward 20 cm; move_left 50 cm; move_back 70 cm; move_down 100 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the laptop and bottle, will ya?\nresponse: ", "response": "laptop; bottle."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地在水槽附近寻找刀和遥控器，然后前往雨伞所在的位置。\nresponse: ", "response": "刀; 水槽; 遥控器; 雨伞."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get airborne, then climb 12 inches, immediately after which we'll turn towards the left, next head forward 20 feet, afterwards bring the drone down 5 meters to check the roof, following that fly left a tad, subsequently go back now, then move forward for 2 meters, nice and steady, finally rotate to the right.\nresponse: ", "response": "take_off; move_up 12 in; Missing turn_left; move_forward 20 ft; move_down 5 m; Missing move_left; Missing turn_left; Missing move_back; move_forward 2 m; Missing turn_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Move the drone to the top of the tree directly ahead and take a photo.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then please turn it left by 120 degrees, I’m excited to see what’s in that direction! Next, raise it 20 inches. After that, move it backwards 3 meters, and finally, land it now.\nresponse: ", "response": "take_off; turn_left 120 degrees; move_up 20 in; move_back 3 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the tie, motorcycle, and biscuit, buddy!\nresponse: ", "response": "tie; motorcycle; biscuit."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for shops nearby that specifically sell pet supplies.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the frisbee, please.\nresponse: ", "response": "frisbee."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the tie, wine glass, knife, and bird.\nresponse: ", "response": "tie; wine glass; knife; bird."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请轻轻寻找行李箱和键盘，并留意周围的人。\nresponse: ", "response": "行李箱; 键盘; 人."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend 24 inches, then veer left 30 degrees, afterwards slide 60 centimeters to the right, subsequently raise it by 20 centimeters, and finally move it up 10 centimeters.\nresponse: ", "response": "move_down 24 in; turn_left 30 degrees; move_right 60 cm; move_up 20 cm; move_up 10 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Can you take off now? Then make the drone ascend by 50 inches. Next, I need this thing to go up right now, please! After that, move forward 5 centimeters. Following that, turn around completely. Immediately after, fly the drone higher. Subsequently, go down by 2 meters. Afterwards, turn towards the left. Thereafter, move leftward 3 ft. In the end, land the drone slowly.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 以正式、建议性、命令式并结合使用比喻的方式改写：\n\n\"如同猎鹰敏锐地寻找目标，现在启动任务去探测和锁定前方的物体。\"\n\n此句既保持了原意，又加入了比喻，增强了表达的形象性和感染力，同时采用了一种温和但坚定的建议语气，符合正式场合下的指导性表述。\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please pause the current control and search task immediately; we are nearly there!\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find out if there are unworn sportswear items in the bedroom wardrobe.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's get this thing in the air, then go forward 1 meter, afterwards go backwards 80 centimeters.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off into the blue sky, then ascend 1 foot, after that, let's make it climb up 6 feet, subsequently go forward 5 meters, and finally tilt the drone 90 degrees to the right.\nresponse: ", "response": "take_off; move_up 1 ft; move_up 6 ft; move_forward 5 m; turn_right 90 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请重启那被时光暂时封存的飞行任务，如同春风唤醒沉睡的大地。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请无人机现在起飞以开始任务，然后无人机下降，接着无人机能向右转四十五度吗。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机向后移动，来个后退五十厘米的动作，看看后面有什么惊喜；然后向前推进一米，观察前方情况；接着无人机左侧移动二百厘米；随后左旋转；之后无人机前方似乎有障碍物，请向前移动；紧接着无人机向右移动；再后来请无人机上升一百五十厘米；最后无人机可以降落在这里吗。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bring it forward 3 inches, then time to moonwalk backward 20 inches, after that advance forward 3 meters, subsequently move forward for 2 meters nice and steady, next move the drone to the right by 2 meters, afterwards let's move back 2 feet as I'm feeling a bit cautious about the current position, following that reverse the drone by 3 feet, and finally fly to the right by 50 cm.\nresponse: ", "response": "move_forward 3 in; move_back 20 in; move_forward 3 m; move_forward 2 m; move_right 2 m; move_back 2 ft; move_back 3 ft; move_right 50 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即起飞，然后请将无人机后退三十厘米，以检查后方情况。紧接着，让无人机顺时针旋转，之后左边可能有目标，请调整方向。接下来向前飞行七十八厘米，随后向右转动。接着，请让无人机向左移动二十厘米，随后无人机左侧转向。紧接着请右转六十五度，然后请向右移动五十厘米来避开。之后，请将无人机高度降低，最后请将无人机左移一百厘米，现在让无人机降落。\nresponse: ", "response": "take_off; move_back 30 cm; Missing turn_right; turn_left 90 degrees; move_forward 78 cm; Missing turn_right; move_left 20 cm; Missing turn_left; turn_right 65 degrees; move_right 50 cm; Missing move_down; move_left 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: With graceful intent, seek out the cat, frisbee, broccoli, and dog.\nresponse: ", "response": "cat; frisbee; broccoli; dog."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off, then move backward 3 feet, after that tilt the drone to the left, next fly it right by 3 inches, subsequently ascend 3 feet, afterwards hover left by 8 inches, following that take it left 4 inches, and thereafter veer right.\nresponse: ", "response": "take_off; move_back 3 ft; Missing turn_left; move_right 3 in; move_up 3 ft; move_left 8 in; move_left 4 in; Missing turn_right."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff protocol, then rotate 90 degrees clockwise, after that move right by 3 meters, and afterwards bring it to the ground gently.\nresponse: ", "response": "take_off; turn_right 90 degrees; move_right 3 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear out the current flight control task list; let’s make way for a smooth and efficient operation!\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机现在起飞吗，然后下降一点，五十厘米，接着可以让无人机向左转五十度，请向后移动二百厘米，随后请将无人机缓慢上升五十厘米，以便获得更好的视角，紧接着无人机左转一百度，查看左侧环境，之后让无人机前进七十五厘米，往下飞，紧接着无人机飞得太高了，请下降两米，最后下降一百五十厘米，以便接近地面。\nresponse: ", "response": "take_off; move_down 50 cm; turn_left 50 degrees; move_back 200 cm; move_up 50 cm; turn_left 100 degrees; move_forward 75 cm; Missing move_down; move_down 2 m; move_down 150 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object discovery mission with enthusiasm!\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您恢复之前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's blast off, initiate takeoff, then move left 7 feet.\nresponse: ", "response": "take_off; move_left 7 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Should the ongoing operation and scanning process be suspended?\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您不要去搜索长椅。\nresponse: ", "response": "长椅."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, move to the left 10 meters. Next, elevate to 15 feet high. Then, rotate 90 degrees left. After that, shift to the right by 30 centimeters. Following that, fly right 1 foot. Immediately after, go left. Subsequently, move backwards 70 cm. Thereafter, move up 2 inches. In the end, set it down now.\nresponse: ", "response": "move_left 10 m; move_up 15 ft; turn_left 90 degrees; move_right 30 cm; move_right 1 ft; Missing move_left; move_back 70 cm; move_up 2 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机高度过高，请下降五十厘米，然后让无人机顺时针旋转，接着无人机请下降五十厘米，随后使无人机向左转，之后无人机向左移动四十五厘米，紧接着右移一米，随后后退五十厘米以调整位置，紧接着让无人机向左转一百八十度，掉头飞行，然后请将无人机右移两百厘米，紧接着右边有点阻碍，右移六十厘米来绕过它，之后无人机请向前飞行一米，接着下降一百五十厘米，接近地面进行细致检查，随后无人机向右平移二十厘米，最后为了完成任务，现在需要无人机降落。\nresponse: ", "response": "move_down 50 cm; Missing turn_right; move_down 50 cm; Missing turn_left; move_left 45 cm; move_right 1 m; move_back 50 cm; turn_left 180 degrees; move_right 200 cm; move_right 60 cm; move_forward 1 m; move_down 150 cm; move_right 20 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly it to the right 20 inches, then advance forward by 2 meters, after that shift the drone right 5 meters, next bring it down 1 meter, subsequently move right 1 meter, afterwards let’s rotate it left by 60 degrees, following that fly backward 2 inches, and finally pivot right.\nresponse: ", "response": "move_right 20 in; move_forward 2 m; move_right 5 m; move_down 1 m; move_right 1 m; turn_left 60 degrees; move_back 2 in; Missing turn_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着把之前的控制和搜索任务恢复起来吧。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向左飞行两米，然后无人机前方似乎有目标，请向前移动一百厘米以接近目标，接着无人机左侧转向，随后请将无人机左移一百厘米，紧接着上升七十厘米，之后无人机请向后飞行两米以避开障碍物，再后来为了降低高度，无人机需要下降一米，最后无人机降落。\nresponse: ", "response": "move_left 2 m; move_forward 100 cm; Missing turn_left; move_left 100 cm; move_up 70 cm; move_back 2 m; move_down 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Terminate the existing control sequence and initiate a new search protocol.\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即寻找杯子、遥控器、面包和牙刷，确保迅速定位。\nresponse: ", "response": "杯子; 遥控器; 面包; 牙刷."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您暂时中止当前正在进行的物体搜索任务，以便我们可以进行进一步的操作。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off immediately, then back the drone away from the fence 5 meters, after that turn right about 90 degrees, next slide right by 50 centimeters, subsequently make the drone climb 5 inches, afterwards rotate it left 135 degrees, and in the end land in the open field ahead.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 赶紧像猎鹰一样迅猛地寻找那把键盘吧！\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制无人机自动返回并降落在出发点。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Lift it off the ground, then shift the drone to the left by 2 meters, after that hover up by 12 inches, next I want you to shift right, 3 feet, and in the end get it on the ground.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Confirm if there is frozen fish in the freezer that hasn’t been thawed.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Perform a lateral correction of 150 centimeters to the right, then turn 45 degrees to the right, after that, I’m a bit apprehensive, could you rotate it right by 30 degrees?, next, shift left 20 inches, afterwards, take it to the left 15 inches, subsequently, move the drone to the right for a while, and finally, descend 2 feet.\nresponse: ", "response": "move_right 150 cm; turn_right 45 degrees; turn_right 30 degrees; move_left 20 in; move_left 15 in; move_down 2 ft; Missing move_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the mission, unleashing the eagle's eye to scan the horizon.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Just get it out of here already! Take off now! Then spin it around like it's dancing. Next, climb up by 8 inches. After that, move right by 3 meters. Following that, I need the drone to go forward 100 inches, quickly. Immediately after, make a left-hand turn. Subsequently, proceed forward 70 centimeters steadily. Afterwards, move forward 25 in. Thereafter, okay, swing it right for 100 centimeters.\nresponse: ", "response": "take_off; turn_right 360 degrees; move_up 8 in; move_right 3 m; move_forward 100 in; Missing turn_left; move_forward 70 cm; move_forward 25 in; move_right 100 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please urgently clear the current object search task list to avoid any potential issues.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Gently seek out the kite, backpack, and dog, then gracefully tie them together with utmost care.\nresponse: ", "response": "kite; backpack; dog; tie."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续之前详尽地暂停了的控制与搜寻任务吧！\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前操作并停止搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机请飞行到前方三十厘米，然后左转一百二十度，接着往后退九十厘米，最后让无人机向右转动二十度。\nresponse: ", "response": "move_forward 30 cm; turn_left 120 degrees; move_back 90 cm; turn_right 20 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Terminate the existing control and initiate a new search operation.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the flight control sequence for the aerial vehicle.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的任务列表正被礼貌地请求立即停止并清除，以确保应用程序运行顺畅。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find the cup, sink, sports ball, and vase with enthusiasm!\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去找找那部手机，快点完成任务。\nresponse: ", "response": "手机."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the scissors, not the bench, and locate the wine glass, not the oven.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 现在让我们友好地启动并执行搜索任务，这将是一次充满探索与发现的旅程。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在可以起飞了吗，然后为了更好地观测左侧，请将无人机左转，接着任务要求，无人机下降五十厘米，之后来个后退五十厘米的动作，看看后面有什么惊喜，紧接着请将无人机向后移动五十厘米，检查是否有障碍物，随后左边移动四十厘米，接下来左转三十度，观察左侧情况，最后可以让无人机现在降落吗。\nresponse: ", "response": "take_off; Missing turn_left; move_down 50 cm; move_back 50 cm; move_back 50 cm; move_left 40 cm; turn_left 30 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused object search task to ensure continuous operation of the mission.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清除当前的飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以优雅的姿态，穿越那片繁忙，寻找遗落在卡车旁，与刀并置的行李箱。\nresponse: ", "response": "卡车; 刀; 行李箱."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请右转五十度，然后无人机的前方需要进一步检查，请向前飞行一百五十厘米，接着请让无人机向下降落一米，以便更接近地面检查，随后左侧移动75厘米，最后无人机到达目标位置后请降落。\nresponse: ", "response": "turn_right 50 degrees; move_forward 150 cm; move_down 1 m; move_left 75 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off right now, then slide 60 centimeters to the right, next maneuver to the right a little, after that go backwards a little, subsequently descend 10 feet to land on the rooftop, immediately after that descend 12 inches now, in the end can you land the drone?.\nresponse: ", "response": "take_off; Missing move_back; move_right 60 cm; Missing move_right; move_down 10 ft; move_down 12 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: You might not want to look for the boat.\nresponse: ", "response": "boat."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for wine glass, motorcycle, biscuit, giraffe.\nresponse: ", "response": "wine glass; motorcycle; biscuit; giraffe."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即寻找蛋糕和猫，确保它们安全无恙。\nresponse: ", "response": "蛋糕; 猫."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向后退四十厘米，然后让无人机在这里着陆。\nresponse: ", "response": "move_back 40 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即定位并获取酒杯。\nresponse: ", "response": "酒杯."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制和搜索任务吧。\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 当前的控制与搜索任务已被取消。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and initiate the object search task; your drone is ready to make this mission a success!\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Fly up! Then move it forward 7 meters, after that fly it backward like it's in reverse gear, afterwards turn it right.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别让那条烦人的狗靠近那些让人厌烦的香蕉。\nresponse: ", "response": "狗; 香蕉."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往寻找三明治。\nresponse: ", "response": "三明治."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，然后左转三十度，调整方向，接着请将无人机向左移动一百二十厘米，之后右移一米，绕过障碍物，我们继续前行，随后将无人机右转五十度，紧接着请让无人机往后移动，快让无人机上升个八十厘米吧，我想看看更高的风景，最后来点高空的视角，上升一百五十厘米，观察整个区域。\nresponse: ", "response": "take_off; turn_left 30 degrees; move_left 120 cm; move_right 1 m; turn_right 50 degrees; Missing move_back; move_up 80 cm; move_up 150 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Time to moonwalk backward 20 inches, then Rotate the drone 90 degrees to the left, after that veer to the right 30 degrees abruptly, and land in the open field ahead.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's move the drone to the left, steer left 60 degrees, then go left for 2 meters, afterwards make it land.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 啊，赶快恢复那被中断的操控与探寻之旅吧！\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended control and search operation.\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get airborne, then move to the left 10 meters, after that fly higher, next shift to the right 2 meters, subsequently drop it down 50 cm, afterwards shift the drone right 5 meters, following that shift right by 3 meters, later move left 15 meters to get a better view, then send the drone to the right 15 inches, immediately after that fly backward 10 meters, next zoom forward 3 feet, subsequently fly back 10 inches, thereafter shift right, and in the end land.\nresponse: ", "response": "take_off; move_left 10 m; Missing move_up; move_right 2 m; move_down 50 cm; move_right 5 m; move_right 3 m; move_left 15 m; move_right 15 in; move_back 10 m; move_forward 3 ft; move_back 10 in; Missing turn_right; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off, then descend 20 centimeters, afterwards rotate it 120 degrees left, next bank right by 4 feet, subsequently move right 1 meter, following that move the drone forward a distance of 5 meters, and in the end drop the drone down to the ground.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the toilet, Fanta, book, and bench right away!\nresponse: ", "response": "toilet; fanta; book; bench."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Urgently pause the current control and search operations.\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's pause the current control and search task for a moment.\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 继续先前暂停的飞行任务吧，加油！\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 结束当前操控并取消搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Fly over to where the hot dog lies, slice through the air like a knife, and land as softly as a remote.\nresponse: ", "response": "hot dog; knife; remote."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please clear the current control and search task to prepare for the next exciting operation.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find a main road within the drone's flight area.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Launch the control and search mission with the urgency of a storm breaking the calm sky.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Up we go! Then start flying upwards 10 feet. Next reverse the drone by 100 centimeters. After that bank right by 4 feet. Following that rotate left 90 degrees. Immediately after turn it right by 10 degrees. Subsequently give me a twirl to the left, 45 degrees. Finally Please rotate left by 45 degrees.\nresponse: ", "response": "take_off; move_up 10 ft; move_back 100 cm; move_right 4 ft; turn_left 90 degrees; turn_right 10 degrees; turn_left 45 degrees; turn_left 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin ascent, then descend the drone by 1.5 meters, afterwards lower it down, next push it forward, subsequently make it move right 70 in, after that fly higher, following that please shift the drone 2 meters to the right, immediately after descend the drone by 100 centimeters, then adjust to the right, later move the drone 3 meters to the left, afterwards back the drone away from the fence 5 meters, and in the end touch down.\nresponse: ", "response": "take_off; move_down 1.5 m; Missing move_down; Missing move_forward; move_right 70 in; Missing move_up; move_right 2 m; move_down 100 cm; Missing turn_right; move_left 3 m; move_back 5 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Adjust direction to the right 45 degrees, then lower altitude, after that fall back 2 meters, subsequently shift right a bit, and in the end bring it down quickly.\nresponse: ", "response": "turn_right 45 degrees; Missing move_down; move_back 2 m; Missing move_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused object search task by reactivating the targeted scanning protocols and ensuring all sensor arrays are calibrated for optimal detection accuracy.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请继续之前的控制和搜索任务。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何设计一个适合初学者的锻炼计划？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在这片静谧中，你能否轻轻探寻，寻找那遗落的杯子与沉睡的背包？\nresponse: ", "response": "杯子; 背包."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Might we now consider resuming the flight control task that was previously put on hold, ensuring a seamless continuation of your aerial endeavors?\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往搜寻面包和键盘。\nresponse: ", "response": "面包; 键盘."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: With meticulous attention, ensure the tie is securely fastened as you embark on a thorough search for the boat and surfboard, all while keeping an eye out for the book.\nresponse: ", "response": "tie; boat; surfboard; book."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向左行进，然后无人机右转一百八十度，掉头，接着请将无人机前进一米，随后请将无人机高度增加一百厘米，紧接着让无人机向左飞六十厘米，之后请让无人机升高，后来无人机左移，接下来向左偏移一米，寻找目标物品，第二，请右侧转向，最后现在让无人机完成降落程序。\nresponse: ", "response": "Missing move_left; turn_right 180 degrees; move_forward 1 m; move_up 100 cm; move_left 60 cm; Missing move_up; Missing move_left; move_left 1 m; Missing turn_right; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please initiate the flight control process without delay; your prompt action is crucial for a successful operation.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂歇手头操控的飞行任务，就像让疾驰的骏马稍作停留。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，然后右转一百二十度，接着将高度提高三十厘米，调整视角以便查看周围情况，之后右转五十度，紧接着无人机当前的高度太低，请向上飞行一百五十厘米，随后让无人机逆时针旋转三百六十度，后来右边看看，转过去，最后现在可以让无人机缓慢降落到地面吗。\nresponse: ", "response": "take_off; turn_right 120 degrees; move_up 30 cm; turn_right 50 degrees; move_up 150 cm; turn_left 360 degrees; turn_right 90 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Descend it a little, then let the drone rise 10 inches, afterwards head to the left, execute a leftward bank for 20 inches, go up now, roll back by 50 cm, slide it left 40 inches, advance 10 cm, and fly up 3 feet.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please clear the current control and terminate the search task?\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing object search task list immediately.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the spoon, tennis racket, bench, and sink.\nresponse: ", "response": "spoon; tennis racket; bench; sink."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is there a truck to be found, and what of a knife? Seek them out, shall we?\nresponse: ", "response": "truck; knife."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not your duty to seek out the cell phone, sprite, and tennis racket with utmost precision?\nresponse: ", "response": "cell phone; sprite; tennis racket."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Open the curtains fully to let in natural light.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: You might want to check under the dining table, but don't expect to find any iodophor there.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off, then bring it left 4 feet, after that go left 12 inches, next move right, afterwards please move the drone left 5 feet, in the end descend gently to land in the field.\nresponse: ", "response": "take_off; move_left 4 ft; move_left 12 in; Missing move_right; move_left 5 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去检查床附近是否有电视？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转三十度，观察左侧情况，然后下移，接着将无人机上升两百厘米，随后请将无人机向左移动一百二十厘米，最后请让无人机前进一百五十厘米以完成任务。\nresponse: ", "response": "turn_left 30 degrees; Missing move_down; move_up 200 cm; move_left 120 cm; move_forward 150 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机现在起飞吧，感谢；然后左边可能有障碍物，转动；接着向右一米；之后无人机上升七十五厘米；紧接着无人机上升两米；随后任务要求，无人机下降五十厘米；再接下来右移两米；紧接着无人机上升到一米五的高度；最后无人机请着陆在指定地点。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被指示去寻找面包、运动球和橙子。\nresponse: ", "response": "面包; 运动球; 橙子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快点起飞，然后前进二十厘米，继续任务，接着向右移动一百二十厘米，查看右侧情况。\nresponse: ", "response": "take_off; move_forward 20 cm; move_right 120 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is there a skateboard, backpack, mouse, or coldrex to be found?\nresponse: ", "response": "skateboard; backpack; mouse; coldrex."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右侧移动后，无人机上升七十五厘米，然后请转向后方。随后，无人机向左侧移动，之后无人机右转。紧接着，无人机向右转一百八十度，接着前方有障碍物，向前移动五十厘米以检查。前面有点模糊，再次向前移动五十厘米。第三，前进一百厘米进行前方检查，最后，无人机降落。\nresponse: ", "response": "Missing move_right; move_up 75 cm; turn_left 180 degrees; Missing move_left; Missing turn_right; turn_right 180 degrees; move_forward 50 cm; move_forward 50 cm; move_forward 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the person.\nresponse: ", "response": "person."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You must urgently consider clearing the current object search task list to avoid potential issues.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请继续之前详尽地暂停了的控制与搜寻任务吧！\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you swiftly locate the mouse and snowboard, or do we need to question your capabilities?\nresponse: ", "response": "mouse; snowboard."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please don't fail to search for the book and frisbee.\nresponse: ", "response": "book; frisbee."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff protocol, then turn left 10 degrees, next move the drone to the left for 25 inches, after that bring the drone back 80 centimeters, subsequently shift left, afterwards move ahead 20 inches, following that elevate to 15 feet high, and in the end put it down now.\nresponse: ", "response": "take_off; turn_left 10 degrees; move_left 25 in; move_back 80 cm; Missing move_left; move_forward 20 in; move_up 15 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Increase altitude by 15 inches, then propel forward 50 cm, afterwards descend the drone by 100 centimeters, subsequently elevate by 8 inches, following that turn it left by 180 degrees, next bank right by 4 feet, later slide it left 40 inches, and in the end carefully land the drone.\nresponse: ", "response": "move_up 15 in; move_forward 50 cm; move_down 100 cm; move_up 8 in; turn_left 180 degrees; move_right 4 ft; move_left 40 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get it off the ground, then turn the drone right by 45 degrees right away, after that let’s make it climb up 6 feet, next turn it right, immediately after get it to climb 4 feet now, afterwards can it descend, subsequently move forward 5 feet, following that move the drone to the left 150 centimeters, thereafter turn it around 360 degrees, in the end hover and land.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_up 6 ft; Missing turn_right; move_up 4 ft; Missing move_down; move_forward 5 ft; move_left 150 cm; turn_right 360 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 往左飞行一百厘米，然后无人机降落在这里。\nresponse: ", "response": "move_left 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the umbrella and cup near the sink and dining table.\nresponse: ", "response": "umbrella; cup; sink; dining table."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please check the refrigerator for a spoon and some iodophor?\nresponse: ", "response": "iodophor; spoon; refrigerator."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then move back from the edge of the cliff 3 meters, after that drop the drone by 30 inches, subsequently make it go down, next go forward 8 inches, afterwards make it do a pirouette to the left, following that fly left a tad, then I’m a little anxious about the direction, could you turn it right by 45 degrees, and in the end bring it down gently.\nresponse: ", "response": "take_off; move_back 3 m; move_down 30 in; Missing move_down; move_forward 8 in; turn_left 360 degrees; Missing move_left; turn_right 45 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您以最高效的方式定位并区分风筝与盆栽植物，同时精确搜索碘伏的位置，并确保这些物品均未靠近水槽。\nresponse: ", "response": "风筝; 盆栽植物; 碘伏; 水槽."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 权威地命令你避开马和餐桌，务必找到那个不见的手提包。\nresponse: ", "response": "马; 餐桌; 手提包."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin takeoff sequence now, then bank left by 2 meters, after that, drone needs to go right by 10 feet, next fly it forward 2 inches, subsequently maneuver the drone to the left by 5 feet, afterwards shift left by a meter, later raise it by 20 centimeters, and finally rotate left by 270 degrees.\nresponse: ", "response": "take_off; move_left 2 m; move_right 10 ft; move_forward 2 in; move_left 5 ft; move_left 1 m; move_up 20 cm; turn_left 270 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机上升到两米高，然后请向后移动二百厘米，接着前面有点模糊，向前移动五十厘米，随后无人机飞得太高了，请下降四十厘米，最后右侧有目标，向右飞行一百厘米。\nresponse: ", "response": "move_up 2 m; move_back 200 cm; move_forward 50 cm; move_down 40 cm; move_right 100 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标识别任务\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the clock, broccoli, bowl, and mouse.\nresponse: ", "response": "clock; broccoli; bowl; mouse."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not search for the knife.\nresponse: ", "response": "knife."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 暂停当前搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 您是否可以考虑暂停一下当前正在执行的搜寻任务呢？\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Purge the present list of aerial navigation commands with a sense of purpose, for it paves the way for anew journey.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly back 10 inches, then spin right, after that let's do a little spin to the right, 360 degrees!, next go left 150 centimeters, subsequently move left by 2 feet, and in the end time to set it down.\nresponse: ", "response": "move_back 10 in; Missing turn_right; turn_right 360 degrees; move_left 150 cm; move_left 2 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Takeoff and go straight, then ascend 5 meters to clear the power lines, afterwards shift forward 50 centimeters, next rotate the drone 90 degrees to the left, after that give me a smooth left turn, 90 degrees, like a dancer, subsequently bring it down slowly, thanks, later move to the right by 100 inches, following that orient to the right and slide right, then ascend 1 foot, immediately after bring it down gently, I’m feeling cautious, in the end move the drone backward 40 inches.\nresponse: ", "response": "take_off; move_up 5 m; Missing move_down; move_forward 50 cm; turn_left 90 degrees; turn_left 90 degrees; move_up 1 ft; turn_left 90 degrees; Missing move_down; move_right 100 in; Missing move_right; Missing turn_right; move_back 40 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机请飞行到前方两米，然后无人机飞得太高了，请下降两米，接着下降三十厘米，我们要更接近地面看看情况；随后无人机向前移动三十厘米，确认前方是否有障碍物；之后将无人机前进；紧接着无人机现在降下一百五十厘米；后来请右移一百五十厘米，避免碰到障碍物；接下来向左侧移动；然后向右飞行八十五厘米，调整视角；再请将无人机下降四十厘米；随后向左移动一百厘米，检查左侧情况；最后现在请让无人机安全降落。\nresponse: ", "response": "move_forward 2 m; move_down 2 m; move_down 30 cm; move_forward 30 cm; Missing move_forward; move_down 150 cm; move_right 150 cm; Missing move_left; move_right 85 cm; move_down 40 cm; move_left 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the painkillers.\nresponse: ", "response": "painkillers."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current object search task is not to be continued.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机开始起飞，之后下方移动，接着下降六十厘米，然后让无人机左转五十度，调整一下方向看看那边的情况，随后左转七十度，检查左侧情况，最后请将无人机降落在此处。\nresponse: ", "response": "take_off; Missing move_down; move_down 60 cm; turn_left 50 degrees; turn_left 70 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Soar over the bed, spot the sandwich, eye the orange, and stretch your gaze to the giraffe.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机请飞行到前方两米，然后请右转五十度，谢谢，接着如果可以，请向左移动三十厘米，随后无人机上升五十厘米吧，紧接着为了调整视角，请右转，之后请将无人机向左移动两百五十厘米，后来无人机右移一米，最后无人机可以进行降落。\nresponse: ", "response": "move_forward 2 m; turn_right 50 degrees; move_left 30 cm; move_up 50 cm; Missing turn_right; move_left 250 cm; move_right 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在那片被夕阳染红的田野上，轻轻地探寻着那位忠实的朋友——狗的身影吧。\nresponse: ", "response": "狗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Pause the current task and initiate the search function.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff protocol, then fly straight ahead 1 meter, after that commence a horizontal shift of 3 feet forward, subsequently shift forward 50 centimeters, next let's turn it right by 30 degrees, afterwards perform a lateral correction of 150 centimeters to the right, and finally adjust right by 5 feet.\nresponse: ", "response": "take_off; move_forward 1 m; move_forward 3 ft; move_forward 50 cm; turn_right 30 degrees; move_right 150 cm; move_right 5 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: It might be a good idea not to look for the bowl, knife, fanta, and broccoli.\nresponse: ", "response": "bowl; knife; fanta; broccoli."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 权威地搜寻汽车和火车。\nresponse: ", "response": "汽车; 火车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing search operation immediately.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the orange and the cola.\nresponse: ", "response": "orange; cola."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降八十厘米，以接近地面，然后请将无人机上升七十五厘米，接着无人机向左移动六十厘米，以避免障碍物，随后往左移动八十厘米，紧接着后退一百五十厘米，之后无人机向右转一百八十度，接下来右移七十五厘米，躲过那个障碍物，继续前行，请让无人机前进一百五十厘米以完成任务，最后无人机请下降五十厘米。\nresponse: ", "response": "move_down 80 cm; move_up 75 cm; move_left 60 cm; move_left 80 cm; move_back 150 cm; turn_right 180 degrees; move_right 75 cm; move_forward 150 cm; move_down 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the couch with gentle haste.\nresponse: ", "response": "couch."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续保持并推进之前所暂停的控制与搜寻任务，您的每一步操作都在为成功完成使命增添重要的砝码。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please not take your time and urgently check for a cola, car, and scissors?\nresponse: ", "response": "cola; car; scissors."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请将无人机向左移动，然后向前移动九十厘米，靠近目标，之后后退一米，避开障碍物，紧接着让无人机向右转动二十度，随后请转向后方，接着快到房顶了，往下飞抵一下吧，下降个五十厘米，然后请将无人机左转四十五度，以获得更好视角，最后现在请让无人机安全降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: The drone should drop down 1 meter immediately, then back it up 60 inches, next boldly turn right 90 degrees, afterwards please make the drone go down now, following that shift to the right slightly, then perform a port-side drift for 50 centimeters, and subsequently advance forward 3 meters.\nresponse: ", "response": "move_down 1 m; move_back 60 in; turn_right 90 degrees; Missing move_down; Missing move_right; move_left 50 cm; move_forward 3 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前中断的目标搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 以详尽且建议性的口吻，结合命令式和比喻手法改写后的句子为：\n\n\"如同乐章中的休止符，此刻请详尽地按下暂停键，终止当前正在进行的搜寻任务，让系统暂时休息，以便更好地准备下一次行动。\"\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Erase the present command and initiate a new search operation immediately.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动操控与探索之旅，开启精准任务进程。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，快去搜搜那餐桌旁边的烤箱，给我看看有什么！\nresponse: ", "response": "烤箱; 餐桌."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您立即停止搜索滑板和风筝，转而优先寻找遗失的键盘。\nresponse: ", "response": "滑板; 风筝; 键盘."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please locate the keyboard, banana, cat, and iodophor with care and bring them to me safely.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find the toaster, pizza, sprite, and fanta.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您终止当前搜索目标的任务清单。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表当前被清除了。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the flight control task!\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，去帮我们找到那艘船和那把雨伞吧，相信你能行的！\nresponse: ", "response": "船; 雨伞."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地被派遣去搜索瓶子、手提包和行李箱，同时留意狗。\nresponse: ", "response": "瓶子; 手提包; 行李箱; 狗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您恢复此前已暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not search for the carrot or the cell phone.\nresponse: ", "response": "carrot; cell phone."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could we perhaps clear the current object search task list to make way for a smoother operation, wouldn't that be beneficial?\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，准备巡航，然后麻烦右转四十五度。\nresponse: ", "response": "take_off; turn_right 45 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why does Mars appear red on its surface?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation now.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 让我们的空中舞者暂时休息一下，暂停当前的飞行任务吧。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被指示去寻找杯子、苹果和剪刀。\nresponse: ", "response": "杯子; 苹果; 剪刀."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please do not fail to urgently search for the clock, knife, chair, and scissors.\nresponse: ", "response": "clock; knife; chair; scissors."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 降落一米，咱们要接近地面了，准备好查看周围环境，然后请上升一米，接着向左偏移一米，寻找目标物品，随后上升一百五十厘米，紧接着请将无人机右移一米，之后前进二百厘米，再接着无人机向后退两百厘米，随后把无人机向右推二十五厘米，紧接着为了更好地检查右侧，请将无人机右转四十五度，再然后前进九十厘米，第二步是无人机高度太低，请上升，紧接着无人机顺时针旋转五十度，第三步是无人机飞得太高，请下降，最后让无人机在这里着陆。\nresponse: ", "response": "move_down 1 m; move_up 1 m; move_left 1 m; move_up 150 cm; move_right 1 m; move_forward 200 cm; move_back 200 cm; move_right 25 cm; turn_right 45 degrees; move_forward 90 cm; Missing move_up; turn_right 50 degrees; Missing move_down; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: It is suggested that you clear the existing target acquisition queue in the drone's operation interface.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机现在起飞，然后降落一米，咱们要接近地面了，准备好查看周围环境，接着无人机需要向后移动一米，随后请无人机升高一百厘米，紧接着后退五十厘米，避开障碍物，之后我感觉右边可能会有，所以转向右九十度，接下来无人机上升一米，最后请无人机现在着陆。\nresponse: ", "response": "take_off; move_down 1 m; move_back 1 m; move_up 100 cm; move_back 50 cm; turn_right 90 degrees; move_up 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sports ball and car.\nresponse: ", "response": "sports ball; car."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请将无人机右移八十厘米，然后向右一米，接着无人机左转，之后下方移动，随后让无人机向左转，最后右转八十度，以便更好地观察右侧。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the target identification process immediately.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the control and search mission; your drone's ready to soar!\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Tilt to the left then land by dropping the drone down to the ground.\nresponse: ", "response": "Missing turn_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move it backwards 3 meters, then move the drone in reverse direction, after that fly it to the left 15 feet, next move up 20 inches, immediately after I’m so excited to watch it fly right for 10 feet, subsequently lift up 40 centimeters, afterwards Could you turn it right by 90 degrees? I’m curious to see what’s over there!, then make it go down, later rotate 90 degrees to the left, and in the end move backwards 70 cm.\nresponse: ", "response": "move_back 3 m; Missing move_back; move_left 15 ft; move_up 20 in; move_right 10 ft; move_up 40 cm; turn_right 90 degrees; Missing move_down; turn_left 90 degrees; move_back 70 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search if there are noticeable red objects visible in the drone footage.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降一百五十厘米以调整高度，然后将高度提高三十厘米，调整视角以便查看周围情况，接着向左飞行两米，随后无人机下降六十厘米，紧接着向右转，之后可以让无人机向左转九十度，第二步，无人机升高一百厘米，最后请让无人机向后移动一百五十厘米，无人机可以准备降落。\nresponse: ", "response": "move_down 150 cm; move_up 30 cm; move_left 2 m; move_down 60 cm; Missing turn_right; turn_left 90 degrees; move_up 100 cm; move_back 150 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Make it fly forward 30 inches, then rotate to the left now, after that, can you rotate the drone to the right by 120 degrees?, subsequently, I'm relaxed, fly up 5 inches, next veer elegantly right 35 degrees, afterwards move back 12 inches, and finally execute a reverse flight of 10 meters.\nresponse: ", "response": "move_forward 30 in; Missing turn_left; turn_right 120 degrees; move_up 5 in; turn_right 35 degrees; move_back 12 in; move_back 10 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机太高了，下降六十厘米，然后很好，现在向右飞行八十五厘米，接着无人机下降一米，随后转向左边看看，之后无人机向后退，紧接着向左飞行一百二十厘米，后来左转四十五度，观察左侧，最后请上升一米。\nresponse: ", "response": "move_down 60 cm; move_right 85 cm; move_down 1 m; turn_left 90 degrees; Missing move_back; move_left 120 cm; turn_left 45 degrees; move_up 1 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请即刻中止现行的操作与搜索任务，如同按下静默键般。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search the area for the couch.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即前往搜索可乐、船和椅子。\nresponse: ", "response": "可乐; 船; 椅子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek forth the handbag, clock, and cat with gentle diligence.\nresponse: ", "response": "handbag; clock; cat."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您像寻找宝藏一样，细致地搜寻那个三明治。\nresponse: ", "response": "三明治."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向左移动六十厘米，准备绕过障碍物，然后无人机高度太低，请上升，接着可以让无人机向左转九十度，之后左转七十度，随后后方有点可疑，转身看看，紧接着请右转五十度，以便调整方向，之后无人机左移两百五十厘米，接着请无人机升高一百厘米，最后无人机请着陆在指定地点。\nresponse: ", "response": "move_left 60 cm; Missing move_up; turn_left 90 degrees; turn_left 70 degrees; turn_left 180 degrees; turn_right 50 degrees; move_left 250 cm; move_up 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the kite.\nresponse: ", "response": "kite."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去寻找公共汽车旁的鸟和橙子，还有不远处的椅子吧。\nresponse: ", "response": "公共汽车; 鸟; 橙子; 椅子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在确保安全的前提下，紧急地先找到那个易碎的花瓶，然后再迅速定位那些散落的酒杯，这任务刻不容缓，务必小心行事。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek forth with grace and purpose; find the dog, the snowboard, and the bottle.\nresponse: ", "response": "dog; snowboard; bottle."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Reset the current control and initiate a new search task.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到无人机拍摄中最靠近正东方向的建筑物。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for tennis racket, dog, bowl.\nresponse: ", "response": "tennis racket; dog; bowl."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please check if the horse has left any clues and maybe spot some bread along the way?\nresponse: ", "response": "horse; bread."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we proceed to resume the previously paused flight control task?\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请找到无人机航拍中最靠近海岸线的位置。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机现在起飞吗，然后请让无人机向右移动，接着请将无人机上升五十厘米，谢谢，随后无人机右移一米，之后无人机能向右转四十五度吗，紧接着将无人机前进，接下来请将无人机向左转三十度，以便更好地观察左侧的情况，最后无人机在这儿降落吧。\nresponse: ", "response": "take_off; Missing move_right; move_up 50 cm; move_right 1 m; turn_right 45 degrees; Missing move_forward; turn_left 30 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and clear the current control settings, then initiate a new search task with your drone.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover down to earth gently, 3 feet, then elevate up 2.5 m, afterwards climb 18 inches, next rotate the drone 45 degrees left to align with the road, after that move it back a bit, subsequently move up 12 inches, and finally I need this drone to move forward 20 inches right now!\nresponse: ", "response": "move_down 3 ft; move_up 2.5 m; move_up 18 in; turn_left 45 degrees; Missing move_back; move_up 12 in; move_forward 20 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the spoon, suitcase, and fork now.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 用详尽的搜索模式，权威地指出，不要遗漏任何角落，去寻找鼠标、牙刷、鸟和汽车。\nresponse: ", "response": "鼠标; 牙刷; 鸟; 汽车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Iodophor is not to be overlooked in the search.\nresponse: ", "response": "iodophor."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please look for a sandwich, sports ball, biscuit, and cola?\nresponse: ", "response": "sandwich; sports ball; biscuit; cola."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向前飞行一百五十厘米，然后左边飞行七十厘米，看看情况，接着无人机向右转五十度，随后下降一百五十厘米，接近地面进行细致检查，紧接着前进二十厘米，继续任务，最后现在让无人机降落。\nresponse: ", "response": "move_forward 150 cm; move_left 70 cm; turn_right 50 degrees; move_down 150 cm; move_forward 20 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 现在，请立即启动控制流程并开启搜索任务，以确保操作的顺利进行。\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请友好地、鼓励地搜索一下键盘吧。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the airplane, laptop, and toaster for me, buddy.\nresponse: ", "response": "airplane; laptop; toaster."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please urgently clear the current object search task list to avoid any potential issues.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别找滑板了，更别提沙发和公共汽车，止疼药都不如不要。\nresponse: ", "response": "滑板; 沙发; 公共汽车; 止疼药."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索冰箱里是否还有酸奶。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Deploy backward trajectory shift of 4 meters, then the drone should descend immediately.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请启动搜索物体的任务。\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即寻找那个令人讨厌的钟和无用的止疼药，还有那瓶让人厌烦的芬达！\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在可以执行起飞操作吗，然后无人机升高六十厘米，接着左侧移动，之后请将无人机向后移动四十厘米，以避免前方障碍物，最后请无人机现在着陆。\nresponse: ", "response": "take_off; move_up 60 cm; Missing move_left; move_back 40 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Rotate the drone left by 30 degrees, then descend 3 meters, afterwards rotate the drone to the left now, next rotate the drone left by 30 degrees, immediately after that turn right 90 degrees, subsequently spin around to the left by 90 degrees, following that rotate 90 degrees to the right, later fly forward 1 foot, and in the end bring it to the ground gently.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去检查床附近是否有电视？\nresponse: ", "response": "床; 电视."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的应用程序进程任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not commence the drone flight control task.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then fly the drone backwards 300 cm, next shift left by 10 cm, after that please rotate it right by 180 degrees, and land the drone gently.\nresponse: ", "response": "take_off; move_back 300 cm; move_left 10 cm; turn_right 180 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 真是太棒了！请像猎鹰一样敏锐地搜寻碘伏和杯子，还有别忘了那个热狗！\nresponse: ", "response": "碘伏; 杯子; 热狗."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动任务，如轻风般拂过，去探寻前方的目标。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar over the landscape, eagle-eyed, to locate the refrigerator and the handbag, your keen gaze missing nothing.\nresponse: ", "response": "refrigerator; handbag."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立刻起飞，然后向右飞行一米，接着无人机向前飞行，随后无人机请向后飞行一米，为了绕过前方的障碍物，请将无人机向左飞行一百二十厘米，紧接着无人机后退一百五十厘米，之后上升一米，让无人机更高一点，接下来前进二十厘米，第二，请将无人机向右飞行一百厘米，以避免前方的障碍物，最后请向右转弯。\nresponse: ", "response": "take_off; move_right 1 m; Missing move_forward; move_back 1 m; move_left 120 cm; move_back 150 cm; move_up 1 m; move_forward 20 cm; move_right 100 cm; Missing turn_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, go find the car, then check for a cola and a frisbee, will ya?\nresponse: ", "response": "car; cola; frisbee."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there, could you kindly resume that object search task we had paused earlier? Thanks a lot!\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机下降两百厘米\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能麻烦您帮忙清除一下当前正在搜寻的目标列表吗？\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请轻轻绕过沙发，在不远处仔细寻找运动球和勺子。\nresponse: ", "response": "运动球; 沙发; 勺子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 哎呀，麻烦你赶紧去找找那该死的滑雪板吧。\nresponse: ", "response": "滑雪板."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Can you take off now? Then go forward 7 inches. After that, fly towards the building 100 feet. Next, send it up 30 feet. Following that, please bring it down slowly, thanks. Subsequently, fly it upward. Thereafter, move the drone 3 meters to the left. In the end, drop the drone down to the ground.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机上升两米，然后为了探测前方的目标，请让无人机向前移动一百五十厘米，之后无人机左侧移动一百五十厘米，紧接着请升高五十五厘米，随后可以让无人机向左转五十度，接着下方移动，第二无人机升高，第三倒退一米，最后后退七十厘米，可能能避开障碍。\nresponse: ", "response": "move_up 2 m; move_forward 150 cm; move_left 150 cm; move_up 55 cm; turn_left 50 degrees; Missing move_down; move_back 1 m; Missing move_up; move_back 70 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞，然后右边移动七十厘米，避开障碍物，我们继续前进，接着右侧平移三十五厘米，随后无人机向左移动八十厘米，之后右转九十度，重设方向，适应新的飞行环境，最后无人机应该在这里降落。\nresponse: ", "response": "take_off; move_right 70 cm; move_right 35 cm; move_left 80 cm; turn_right 90 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hold up on the current object hunt, will you?\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您立即确认并告知是否需要搜索位于键盘附近的电视？\nresponse: ", "response": "键盘; 电视."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以礼貌地请求应用程序暂停当前的搜寻任务呢？\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的控制和搜寻任务被暂停了，这是为了确保一切按计划顺利进行。感谢您的配合与理解。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly to the left for 3 feet, then adjust to the left; afterwards, drone, descend to 8 feet; next, fly backward for 2 meters; following that, begin the ascent, but first veer to the left; subsequently, slide right 4 feet and move forward; thereafter, tilt left 40 degrees and rotate the drone left by 180 degrees; in the end, make it land.\nresponse: ", "response": "move_left 3 ft; Missing move_left; move_down 8 ft; move_back 2 m; Missing move_up; Missing turn_left; move_right 4 ft; Missing move_forward; turn_left 40 degrees; turn_left 180 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 开启控制与探寻的任务，刻不容缓。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以权威的态度，中立地指挥搜索手提包、花瓶和摩托车。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快点起飞，然后请让无人机后退八十厘米，接着请将无人机向左转九十度，以检查左边是否有障碍物，之后无人机前进七十厘米，检查前方是否有新发现，最后立刻右转。\nresponse: ", "response": "take_off; move_back 80 cm; turn_left 90 degrees; move_forward 70 cm; Missing turn_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 往下飞\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is it not within your capabilities to seek out the book and the oven with diligence and precision?\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current flight control task is paused.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could AI technology improve agricultural productivity in the future?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: First, shift right, then go up 10 feet, after that, I want it to go right 3 meters right now, next, spin right 45 degrees, immediately after, fly the drone forward 10 feet.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's get this thing in the air! Then move to the left by 80 cm. Next, ascend 24 inches. Following that, tilt the drone to the right 30 degrees, head right afterwards, and lower to ground level in the end.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否请你找一下遥控器，顺便看看勺子和碘伏在哪里呢？\nresponse: ", "response": "遥控器; 勺子; 碘伏."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以现在起飞，然后现在离地面太远了，请下降一百五十厘米，接着往下移动，之后请将无人机后退一百厘米，以查看后方的情况，紧接着请将无人机上升六十厘米，获取更高视角，随后前进二百厘米，最后降低高度。\nresponse: ", "response": "take_off; move_down 150 cm; Missing move_down; move_back 100 cm; move_up 60 cm; move_forward 200 cm; Missing move_down."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机后退五十厘米，然后后退一米，避开障碍物。紧接着，无人机飞得太高，请下降。随后，请将无人机慢慢下降一米，这样可以更接近地面。接下来，上升到三米高。之后，请将无人机前进一米。接着，后退一米。随后，无人机上升两米五。最后，无人机降落在指定区域。\nresponse: ", "response": "move_back 50 cm; move_back 1 m; Missing move_down; move_down 1 m; move_up 3 m; move_forward 1 m; move_back 1 m; move_up 2.5 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前进九十厘米，探索前方的未知区域，然后请问无人机能左移四十厘米吗，接着请将无人机向左移动两百厘米，随后请升高三十厘米，最后无人机降落在预定地点。\nresponse: ", "response": "move_forward 90 cm; move_left 40 cm; move_left 200 cm; move_up 30 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即终止当前正在进行的物体搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 这轻盈的飞行器，是否能在幽静的园中寻得一把失落的勺子与遗忘角落里的网球拍呢？\nresponse: ", "response": "勺子; 网球拍."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞无人机，然后无人机高度太高，请下降，接着无人机上升两百厘米，之后请右边转向，请前进七十厘米查看，紧接着无人机请向后飞行两米以避开障碍物，随后向前移动一百五十厘米，注意地面情况，最后无人机能向右转四十五度吗，之前往下飞。\nresponse: ", "response": "take_off; Missing move_down; move_up 200 cm; Missing turn_right; move_forward 70 cm; move_back 2 m; move_forward 150 cm; turn_right 45 degrees; Missing move_down."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地暂停当前正在进行的飞行控制任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go up now, then drop it down by 50 inches, afterwards let’s see it slide left like it’s doing the moonwalk, next move it forward by 1 foot, and in the end land the drone.\nresponse: ", "response": "take_off; move_down 50 in; Missing move_left; move_forward 1 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞，然后请问无人机能左移四十厘米吗，接着右边移动七十厘米，避开障碍物，我们继续前进，之后请右转六十五度，紧接着无人机左转一百度，查看左侧环境，随后无人机下降五十厘米，接下来无人机上升九十厘米，最后升高六十厘米。\nresponse: ", "response": "take_off; move_left 40 cm; move_right 70 cm; turn_right 65 degrees; turn_left 100 degrees; move_down 50 cm; move_up 90 cm; move_up 60 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向后退二百五十厘米，然后前方视线不清，向前移动两百厘米，最后无人机需要在这里降落。\nresponse: ", "response": "move_back 250 cm; move_forward 200 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly the drone to the left by 50 centimeters, then veer to the left 40 degrees smoothly. After that, get it to climb 4 feet now! Next, fly upwards 10 inches, subsequently ascend 24 inches. Following that, rotate the drone 360 degrees to the left, and thereafter, fly up 30 centimeters. Immediately after, make it go higher, like it’s reaching for the stars. Afterwards, veer to the right 30 degrees abruptly, and in the end, fly straight ahead 20 meters.\nresponse: ", "response": "move_left 50 cm; turn_left 40 degrees; move_up 4 ft; move_up 10 in; move_up 24 in; turn_left 360 degrees; move_up 30 cm; Missing move_up; turn_right 30 degrees; move_forward 20 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 查找停车场内我的车是否在原位置。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then turn it right 45 degrees, afterwards lift it up 80 cm, next rotate to the left, following that move right by 100 centimeters, thereafter soar upward 2 meters.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_up 80 cm; Missing turn_left; move_right 100 cm; move_up 2 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找橙子和狗。\nresponse: ", "response": "橙子; 狗."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off quickly, then veer to the right 45 degrees, after that lower altitude, next move up 12 inches, subsequently execute a lateral displacement of 5 feet to the right, afterwards let's move the drone to the left, and finally move it straight ahead.\nresponse: ", "response": "take_off; turn_right 45 degrees; Missing move_down; move_up 12 in; move_right 5 ft; Missing move_left; Missing move_forward."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's launch this thing, then fly forward 1 meter, after that adjust forward 3 feet, next rotate clockwise 90 degrees, afterwards move ahead 20 inches, and subsequently descend gradually 1 foot.\nresponse: ", "response": "take_off; move_forward 1 m; move_forward 3 ft; turn_right 90 degrees; move_forward 20 in; move_down 1 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for dog, then locate bread immediately.\nresponse: ", "response": "dog; bread."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被详尽地搜寻这个人。\nresponse: ", "response": "人."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: First, can you move it forward a bit? Then, I want you to veer to the left for 5 feet, afterwards move back a short distance. Next, climb 6 feet. Following that, I want you to shift right, 3 feet. Immediately after, drone should climb 1 foot. In the end, land the drone slowly.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 任务开始时，请无人机起飞，然后左侧移动75厘米，接着前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，随后右移一米，绕过障碍物，我们继续前行，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "take_off; move_left 75 cm; move_forward 20 cm; move_right 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否详尽地说明一下，是否需要暂停当前正在进行的搜寻物体任务？\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the fanta and ensure that the scissors are also found.\nresponse: ", "response": "fanta; scissors."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly up! then move backwards 3 feet, after that bring it down by 20 centimeters, next rotate the drone to the right 75 degrees, subsequently rise up 5 meters.\nresponse: ", "response": "take_off; move_back 3 ft; move_down 20 cm; turn_right 75 degrees; move_up 5 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞去指定位置吗，然后请上升；接着左边移动四十厘米，以调整位置，之后右转一百度，调整无人机方向；随后，请让无人机向左移动五十厘米，紧接着无人机右转一百八十度，掉头，然后让无人机顺时针旋转；接下来，无人机前进一百厘米，随后请帮忙让无人机下降一米；最后，无人机可以右转五十度吗，在这之后无人机需要向左飞行七十厘米。\nresponse: ", "response": "take_off; Missing move_up; move_left 40 cm; turn_right 100 degrees; move_left 50 cm; turn_right 180 degrees; Missing turn_right; move_forward 100 cm; move_down 1 m; turn_right 50 degrees; move_left 70 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control task; ensure the drone is ready.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise now, then bring it left 4 feet, afterwards fly straight up, next hover to the right by 10 meters, after that can you please make the drone go up a bit? Thanks!, subsequently descend 10 feet, following that go left 3 feet slowly, immediately after come back to me, thereafter go down, and in the end veer left 30 degrees.\nresponse: ", "response": "Missing move_up; move_left 4 ft; Missing move_up; move_right 10 m; Missing move_up; move_down 10 ft; move_left 3 ft; Missing move_back; Missing move_down; turn_left 30 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去把那该死的感冒药和鼠标从冰箱里找出来，别磨蹭！\nresponse: ", "response": "感冒药; 鼠标; 冰箱."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 寻找那把像守卫一样稳坐的椅子。\nresponse: ", "response": "椅子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the person, book, and chair.\nresponse: ", "response": "person; book; chair."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for broccoli, bench, skis.\nresponse: ", "response": "broccoli; bench; skis."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶快去找到那个让人头疼的行李箱，还有那条几乎看不见的领带，别忘了那个吃了一半就丢掉的蛋糕。\nresponse: ", "response": "行李箱; 领带; 蛋糕."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制与搜索任务，于此开启一场精密而庄重的探索之旅。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object search mission with the urgency of a storm chasing its prey, leaving no corner unexplored.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退四十厘米，调整位置，然后左转三十度，调整方向。\nresponse: ", "response": "move_back 40 cm; turn_left 30 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 帮我查找书桌上的笔记本电脑是否开机。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，感谢；然后向前移动九十厘米，靠近目标；接着为了探测前方的目标，请让无人机向前移动一百五十厘米；随后向前飞行九十厘米；之后请让无人机向后行进；紧接着无人机向后移动二百厘米；随后将无人机向后移动一百五十厘米；最后无人机需要向左飞行七十厘米。\nresponse: ", "response": "take_off; move_forward 90 cm; move_forward 150 cm; move_forward 90 cm; Missing move_back; move_back 200 cm; move_back 150 cm; move_left 70 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the motorcycle and the vase.\nresponse: ", "response": "motorcycle; vase."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找剪刀。\nresponse: ", "response": "剪刀."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the present navigation and scouting operation.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why is Earth's magnetic field crucial for life?\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能否立即起飞，然后向前移动五十厘米，随后无人机上升，接着为了绕过前方的障碍物，请将无人机向左飞行一百二十厘米，之后下降七十厘米，调整视角，最后请让无人机在这个位置降落。\nresponse: ", "response": "take_off; move_forward 50 cm; Missing move_up; move_left 120 cm; move_down 70 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Can humans achieve interstellar migration through technology in the future?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the target identification mission.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在那辆汽车周围轻盈地盘旋，探寻着遗落的笔记本电脑，可好？\nresponse: ", "response": "笔记本电脑; 汽车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前正在进行的飞行控制任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 嘿，快把之前的飞行任务接着搞起来吧！你一定能让它飞得更远更高！加油！\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the drone's flight control sequence with meticulous attention to potential errors and malfunctions.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin takeoff sequence now, then tilt to the left, afterwards retreat back 80 centimeters, and subsequently I want it to land right now.\nresponse: ", "response": "take_off; Missing turn_left; move_back 80 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate right, not too much, just 15 degrees, then raise your altitude a little before hurrying up and landing already.\nresponse: ", "response": "turn_right 15 degrees; Missing move_up; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is there a clock on the dining table?\nresponse: ", "response": "clock; dining table."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 在确保一切顺利进行的同时，我们建议暂时搁置当下正在执行的物体搜索任务，以待更佳时机重启。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 尽管前方任务繁重，你仍需详尽地在这片区域搜索，务必找到那个被遗忘在角落里的键盘以及似乎总是失踪的瓶子，这绝非易事。\nresponse: ", "response": "键盘; 瓶子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Activate takeoff protocol immediately, then climb to 6 meters, after that back the drone away from the fence 5 meters, subsequently drop down 1 meter immediately, and finally rotate right by 270 degrees.\nresponse: ", "response": "take_off; move_up 6 m; move_back 5 m; move_down 1 m; turn_right 270 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前已暂停的飞行任务控制。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中的当前飞行指令已被清空，准备接受新的导航任务。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地寻找一下盆栽植物和滑板吧。\nresponse: ", "response": "盆栽植物; 滑板."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即停止当前飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the tv, kite, backpack, and toaster with precision and care, ensuring each item is located safely and efficiently.\nresponse: ", "response": "tv; kite; backpack; toaster."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then fly to the left for 10 inches, next descend the drone by 1.5 meters, afterwards drift rightwards, and in the end make it land.\nresponse: ", "response": "take_off; move_left 10 in; move_down 1.5 m; Missing move_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Launch the drone and maintain a height of 100 meters for fixed-point shooting.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the halted object search.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向前飞行一百厘米，靠近目标，然后请将设备后退，接着左转九十度，之后右移两米，随后可以向左旋转三十度吗，紧接着下降七十厘米，调整无人机高度，后来无人机现在下降一百厘米，接下来左转一百二十度，随后无人机左转一百八十度，最后后退一米。\nresponse: ", "response": "move_forward 100 cm; Missing move_back; turn_left 90 degrees; move_right 2 m; turn_left 30 degrees; move_down 70 cm; move_down 100 cm; turn_left 120 degrees; turn_left 180 degrees; move_back 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin the takeoff now, then go rightward 90 in, afterwards hover left by 8 inches.\nresponse: ", "response": "take_off; move_right 90 in; move_left 8 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 打开卧室的空调并设置为节能模式。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object detection sequence.\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the skis while keeping an eye on the airplane.\nresponse: ", "response": "skis; airplane."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the weaving dance of the skies, pause this airborne symphony of command and quest!\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please carefully look around the bed and see if you can spot the cake, okay?\nresponse: ", "response": "bed; cake."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 让我们继续之前的控制和搜索任务吧！\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您清空当前的控制与搜索任务，以确保应用程序运行更加高效和安全。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the book, you're doing great!\nresponse: ", "response": "book."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Advance forward 3 meters, then fly forward 1 foot, after that ascend swiftly 2 meters, subsequently descend 15 feet to get closer to the ground, next bring the drone to the right by 200 centimeters, immediately after lift it up 80 cm, afterwards move left 3 feet, following that go down by 2 meters, then go right, and in the end bring it down now.\nresponse: ", "response": "move_forward 3 m; move_forward 1 ft; move_up 2 m; move_down 15 ft; move_right 200 cm; move_up 80 cm; move_left 3 ft; move_down 2 m; Missing move_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the detailed control procedures and commence the thorough search task within the drone application process.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go ahead and look for the frisbee, umbrella, scissors, and coldrex with your keen eye!\nresponse: ", "response": "frisbee; umbrella; scissors; coldrex."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能否立即起飞，然后请将无人机后退一百厘米，之后请将无人机上升一百五十厘米以获取更高视角，接着请让无人机向左移动二十厘米。\nresponse: ", "response": "take_off; move_back 100 cm; move_up 150 cm; move_left 20 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机起飞，然后下降两米，接着无人机向右转一百二十度，以调整视角；随后，右飞行，之后升高到一米，更高的视角能帮助我们更好地观察；紧接着，请将无人机调整到高度一米的位置，然后让无人机逆时针旋转二十度；接下来，请升高五十五厘米，随后任务中，无人机需要左移四十厘米；接着，让无人机向后移动一米五，之后无人机下降一百五十厘米，最后，让无人机向后行进。\nresponse: ", "response": "take_off; move_down 2 m; turn_right 120 degrees; Missing move_right; move_up 1 m; move_up 1 m; turn_left 20 degrees; move_up 55 cm; move_left 40 cm; move_back 1.5 m; move_down 150 cm; Missing move_back."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，能不能麻烦你赶紧去查一下，滑雪板旁边是不是有个运动球，还有那个长椅附近有没有放着芬达，谢谢啦，真的帮大忙了！\nresponse: ", "response": "滑雪板; 运动球; 芬达; 长椅."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最权威的姿态指示，立即前往搜索区域，确保找到飞机和冲浪板，任务刻不容缓。\nresponse: ", "response": "飞机; 冲浪板."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Just get it out of here already! Take off now! then turn around completely after that spin right 180 degrees afterwards left turn now next rotate it counterclockwise 90 degrees then tilt to the left subsequently bring it down gently by 1 meter immediately after take it left 4 inches following that shift to the right 2 meters later descend 1.5 feet in the end bring it down.\nresponse: ", "response": "take_off; turn_right 360 degrees; turn_right 180 degrees; Missing turn_left; turn_left 90 degrees; turn_left 10 degrees; Missing turn_left; move_down 1 m; move_left 4 in; move_right 2 m; move_down 1.5 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, go right, then spin the drone to the left 45 degrees, after that rotate left 30 degrees to change direction, next make it go up by 50 centimeters, afterwards bring it down by 2 feet, subsequently move forward 3 feet, then proceed forward 6 inches, following that move forward 1.5 meters, later reverse 120 centimeters, then fly backward 10 meters, immediately after fly left side, thereafter rotate right side, and in the end initiate the landing.\nresponse: ", "response": "Missing move_right; turn_left 45 degrees; Missing move_down; move_down 2 ft; Missing turn_right; move_up 50 cm; turn_left 30 degrees; move_back 120 cm; Missing move_left; move_forward 3 ft; move_forward 1.5 m; move_forward 6 in; move_back 10 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机立即起飞，感谢您的帮助，然后前进五十厘米以探查前方情况，接着向左移动一百八十厘米，随后请将无人机右移，之后左侧飞行八十厘米，确认那边的情况，紧接着让无人机向后退一百五十厘米，第二上升一米，最后无人机下降七十厘米以便着陆。\nresponse: ", "response": "take_off; move_forward 50 cm; move_left 180 cm; Missing move_right; move_left 80 cm; move_back 150 cm; move_up 1 m; move_down 70 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is there a reason not to meticulously scan every inch until you locate the coldrex?\nresponse: ", "response": "coldrex."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右移动两米，然后左边飞行一百厘米，我们要探索左侧的神秘区域，接着把无人机降落一米，随后倒退一米，紧接着向右转，之后向左移动一百厘米，检查左侧情况，最后向右一米。\nresponse: ", "response": "move_right 2 m; move_left 100 cm; move_down 1 m; move_back 1 m; Missing turn_right; move_left 100 cm; move_right 1 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control task — must we wait any longer?\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞去指定位置吗，然后请将无人机高度增加一百厘米，之后无人机左转七十度，检查左侧情况，紧接着无人机请迅速下降一百厘米，随后无人机顺时针旋转一百八十度，接着向前飞行一米，之后无人机前方的路径被阻挡，请向前移动五十厘米以探测路径，最后无人机可以降落。\nresponse: ", "response": "take_off; move_up 100 cm; turn_left 70 degrees; move_down 100 cm; turn_right 180 degrees; move_forward 1 m; move_forward 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly high! Then fly straight ahead 1 meter. After that turn it right, next rotate the drone 90 degrees to the left.\nresponse: ", "response": "take_off; move_forward 1 m; Missing turn_right; turn_left 90 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去床上找找，再看看风筝和遥控器，最后检查一下红绿灯。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索无人机视野中是否有动物活动的痕迹。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Stop the search now.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以权威的姿态，建议你像猎鹰般敏锐地搜索这片区域，直到找到藏匿于角落的西兰花和疾风中的摩托车。\nresponse: ", "response": "西兰花; 摩托车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议我们继续之前暂停的搜寻任务，好吗？\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，进入任务状态，然后向左飞行四十厘米，接着请后退一米，随后无人机请右转九十度，紧接着向左飞行一百二十厘米，之后向前移动九十厘米，靠近目标，再升高一米，想要从更高的角度俯瞰整个区域，随后前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，紧接着前进九十厘米，以查看前方情况，最后为了完成任务，现在需要无人机降落。\nresponse: ", "response": "take_off; move_left 40 cm; move_back 1 m; turn_right 90 degrees; move_left 120 cm; move_forward 90 cm; move_up 1 m; move_forward 20 cm; move_forward 90 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 真是太棒了！让我们暂时停下当前的飞行任务，休息一下吧！\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务已恢复，先前暂停的飞行控制进程现已重启。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone up now, then turn around completely, after that I need this drone to move forward 20 inches right now!, afterwards rotate it 120 degrees left, subsequently rise up abruptly 30 cm, next hover and rotate right 45 degrees, following that fly forward 72 inches, later fly up 3 feet, immediately after go down, in the end lower to ground level.\nresponse: ", "response": "take_off; turn_right 360 degrees; move_forward 20 in; turn_left 120 degrees; move_up 30 cm; turn_right 45 degrees; move_forward 72 in; move_up 3 ft; Missing move_down; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current search task list, and you're one step closer to optimizing your mission.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the skis, then locate the toaster, and finally find the spoon.\nresponse: ", "response": "skis; toaster; spoon."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能友好地去找找香蕉吗？\nresponse: ", "response": "香蕉."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动寻找目标物的程序。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的目标搜索列表，谢谢。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and initiate the object search task; you've got this!\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the previously paused control and search task immediately to prevent potential mission failure and data loss.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please clear the current object search task list for me?\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往水槽附近，找到瓶子和风筝。\nresponse: ", "response": "瓶子; 风筝; 水槽."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: drift to the right for 70 centimeters\nresponse: ", "response": "move_right 70 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Shall we not task you to seek out the humble broccoli with utmost grace and precision?\nresponse: ", "response": "broccoli."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move backwards 3 feet, then rotate the drone left, afterwards move back from the edge of the cliff 3 meters, and subsequently fly the drone to the left by 50 centimeters.\nresponse: ", "response": "move_back 3 ft; Missing turn_left; move_back 3 m; move_left 50 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清除当前任务列表\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move right 10 cm, then reverse the drone by 100 centimeters, after that move back a short distance, next veer left 7 inches, turn left a bit, subsequently go down, following that rotate clockwise 45 degrees, increase altitude, afterwards spin to the right 180 degrees, then shift the drone leftwards by 75 centimeters, immediately after rotate clockwise 90 degrees, and in the end the drone should go down now.\nresponse: ", "response": "move_right 10 cm; move_back 100 cm; Missing move_down; move_left 7 in; Missing turn_left; Missing move_back; turn_right 45 degrees; Missing move_up; turn_right 180 degrees; move_left 75 cm; turn_right 90 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否迅速找寻雨伞？\nresponse: ", "response": "雨伞."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off quickly, then descend it down 30 inches, afterwards drift back, next move up 12 inches, following that rotate to the right 90 degrees, subsequently make it do a pirouette to the left.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机先升高一百厘米，然后请让无人机在这个位置降落。\nresponse: ", "response": "move_up 100 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中当前搜寻的物体被清除了。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go check if you can find a snowboard, toilet, and an umbrella, buddy.\nresponse: ", "response": "snowboard; toilet; umbrella."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请执行清除当前的控制指令并终止所有搜寻任务，这将有助于我们更好地优化操作流程。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift the drone right 150 centimeters, then let's rotate it left by 60 degrees. Next, rotate the drone to the left, afterwards rotate the drone 90 degrees to the left, following that fly to the right 10 meters, subsequently get higher, immediately after that fly right 1 foot, and in the end land in the open field ahead.\nresponse: ", "response": "move_right 150 cm; turn_left 60 degrees; turn_left 90 degrees; Missing turn_left; move_right 10 m; Missing move_up; move_right 1 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动飞行任务的控制程序\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 降低位置，然后马上下降，接着上升到三米高，最后让无人机现在降落。\nresponse: ", "response": "Missing move_down; Missing move_down; move_up 3 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以进行起飞操作，然后无人机请飞行到前方三十厘米，之后后退七十厘米，紧接着无人机现在升高一百厘米，随后无人机上升，接着右移五厘米，最后请将无人机向左移动。\nresponse: ", "response": "take_off; move_forward 30 cm; move_back 70 cm; move_up 100 cm; Missing move_up; move_right 5 cm; Missing move_left."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即起飞，然后请让无人机向左移动一米，接着向右飞行，之后无人机飞得太高了，请下降四十厘米，随后让无人机后退，紧接着前方有点模糊，向前移动两百五十厘米，最后现在请让无人机降落在这里。\nresponse: ", "response": "take_off; move_left 1 m; Missing move_right; move_down 40 cm; Missing move_back; move_forward 250 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动控制和搜索程序吗？\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动飞行任务控制程序。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn 270 degrees to the right, then rotate to the right, head right, perform a port-side drift for 50 centimeters, adjust right by 5 feet, move backward 1 foot, bring it lower by 20 inches, afterwards move left 2 feet.\nresponse: ", "response": "turn_right 270 degrees; Missing turn_right; Missing turn_right; move_left 50 cm; move_right 5 ft; move_back 1 ft; move_down 20 in; move_left 2 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即搜寻公共汽车。\nresponse: ", "response": "公共汽车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前任务是否应该暂停？\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused flight control task now?\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone to the left 150 centimeters, then advance forward 4 feet, afterwards elevate the drone 3 meters, subsequently descend 10 inches, next fly the drone forward 10 feet, and finally turn it to the left by 120 degrees.\nresponse: ", "response": "move_left 150 cm; move_forward 4 ft; move_up 3 m; move_down 10 in; move_forward 10 ft; turn_left 120 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要不咱们先停一下现在的控制和搜索任务？\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Rotate right side, then fly upwards 10 inches, after that go forward 5 meters, next move left 200 centimeters, afterwards zoom forward 3 feet, following that spin it left, 60 degrees, immediately after turn right to face the house 45 degrees, subsequently step back, and in the end shift the drone down.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: How to prepare for an efficient speech in a short time?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 真是麻烦了，请搜索一下丢失的风筝和书，还有那匹走失的马吧！\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Activate the smart refrigerator’s quick-cooling mode.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止并清空当前正在执行的飞行任务队列。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机可能在后方发现了目标，请后退一米查看具体情况，然后向右移动二十厘米。请将无人机右侧移动，接着无人机请向前飞行一米。随后，无人机左转一百八十度，掉头，之后上升两百厘米。我感觉左边有点异常，调整一下方向，紧接着为了更好地绕过障碍物，请将无人机向左飞行八十厘米。最后，让无人机在这里着陆。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines, then move back a short distance, after that make it go higher, like it’s reaching for the stars, subsequently drop it, next shift right by 80 inches, afterwards turn it left by 90 degrees, following that move back 0.5 meters, then nudge backwards 5 inches, immediately after reverse 5 meters, and in the end The drone should go down now.\nresponse: ", "response": "take_off; Missing move_back; Missing move_up; Missing move_down; move_right 80 in; turn_left 90 degrees; move_back 0.5 m; move_back 5 in; move_back 5 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed to locate the cell phone, coldrex, and orange within the refrigerator.\nresponse: ", "response": "cell phone; coldrex; orange; refrigerator."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Restart the paused flight control operation.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向上移动\nresponse: ", "response": "Missing move_up."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you please clear the current control and search task for me?\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the guidance and exploration mission.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Halt the ongoing search operation immediately.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在众多食物中精确地定位并锁定目标——热狗，随后进行细致的图像捕捉与分析。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise up, then rotate right 270 degrees, after that ascend above the tree by 20 feet, subsequently circle left by 45 degrees, next go back 200 cm, and in the end bring the drone down to earth.\nresponse: ", "response": "take_off; turn_right 270 degrees; move_up 20 ft; turn_left 45 degrees; move_back 200 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't forget to check for a wine glass and sandwich.\nresponse: ", "response": "wine glass; sandwich."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the clock, the potted plant, and the scissors.\nresponse: ", "response": "clock; potted plant; scissors."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被派遣去寻找火车和电视。\nresponse: ", "response": "火车; 电视."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，开始执行任务，然后前方有障碍物，向前移动五十厘米以检查；接着后退五十厘米，避开障碍物；随后升高六十厘米；紧接着把无人机降落一米；之后无人机向前飞行；紧接着无人机上升高度；再接下来升高到一米，更高的视角能帮助我们更好地观察；随后请将无人机向左转九十度，以检查左边是否有障碍物；最后现在让无人机完成降落程序。\nresponse: ", "response": "take_off; move_forward 50 cm; move_back 50 cm; move_up 60 cm; move_down 1 m; Missing move_forward; Missing move_up; move_up 1 m; turn_left 90 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the book, vase, and tie.\nresponse: ", "response": "book; vase; tie."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the couch and the umbrella, then locate the clock and the motorcycle.\nresponse: ", "response": "couch; umbrella; clock; motorcycle."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我想让无人机立即起飞，然后无人机需要上升九十厘米，接着将无人机降落一米，之后请将无人机后退三十厘米，以检查后方情况，随后无人机向左移动七十厘米，紧接着下降一百五十厘米，以便接近地面，再后来无人机的视角受限，请向左转三十度，以便更好地观察左侧环境，第二后退一米，看看后方情况，第三请将无人机上升五十厘米，谢谢，最后现在开始降落。\nresponse: ", "response": "take_off; move_up 90 cm; move_down 1 m; move_back 30 cm; move_left 70 cm; move_down 150 cm; turn_left 30 degrees; move_back 1 m; move_up 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机起飞执行任务，然后调整无人机方向，左转一百二十度，接着请将无人机右移三米，随后向右侧移动四十厘米，紧接着往上升高九十厘米，调节高度，请上升七十五厘米，之后请让无人机向后移动一米，紧接着无人机，请向前飞行一百五十厘米，随后无人机向前飞行，最后无人机需要在此地降落。\nresponse: ", "response": "take_off; turn_left 120 degrees; move_right 3 m; move_right 40 cm; move_up 90 cm; move_up 75 cm; move_back 1 m; move_forward 150 cm; Missing move_forward; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Advance forward 60 cm, then it's time to hover and turn right 90 degrees, afterwards carefully land the drone.\nresponse: ", "response": "move_forward 60 cm; turn_right 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then fly towards the building 100 feet, after that descend 2 feet, next apply aft movement by 8 feet, subsequently reverse 120 centimeters, afterwards go forward 5 meters, following that turn it 360 degrees to the right, then descend 20 centimeters, move right 1 meter, immediately after rise up, before dropping altitude 2 feet, and in the end please move forward a little bit.\nresponse: ", "response": "take_off; move_forward 100 ft; move_down 2 ft; move_back 8 ft; move_back 120 cm; move_forward 5 m; turn_right 360 degrees; move_down 20 cm; move_right 1 m; Missing move_up; move_down 2 ft; Missing move_forward."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Look for the knife near the truck, then sip the secrets from the cup.\nresponse: ", "response": "knife; truck; cup."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise up! Then spin right slightly. Next, I need the drone to go forward 100 inches, quickly. After that, give me a twirl to the left, 45 degrees. Following that, drop it down 50 cm. Immediately after, rotate left by 50 degrees. Subsequently, turn it right by 10 degrees. In the end, initiate the landing.\nresponse: ", "response": "take_off; Missing turn_right; move_forward 100 in; turn_left 45 degrees; move_down 50 cm; turn_left 50 degrees; turn_right 10 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control process and launch your search mission, as if guiding a bird through the sky with a gentle hand.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Ascend! Can it then move forward 5 meters, fly to the right by 50 cm, turn the drone 90 degrees left to align with the road, rotate left by 75 degrees, bring it down 3 feet afterwards, go backwards 50 centimeters following that, go left 150 centimeters next, and yaw left 15 degrees in the end.\nresponse: ", "response": "take_off; Missing move_down; move_forward 5 m; move_right 50 cm; turn_left 90 degrees; turn_left 75 degrees; move_down 3 ft; move_back 50 cm; move_left 150 cm; turn_left 15 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞以开始任务, 然后右侧前进, 接着现在离地面太远了，请下降一百五十厘米, 随后无人机离地面太高了，请下降, 后来升高, 再接下来无人机可以右转五十度吗, 最后请命令无人机降落到目标区域.\nresponse: ", "response": "take_off; Missing move_right; move_down 150 cm; Missing move_down; Missing move_up; turn_right 50 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the frisbee and the kite, could it be that they are hiding near the dining table?\nresponse: ", "response": "frisbee; kite; dining table."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在这幽暗的角落里，寻觅那失落的运动球与破旧的滑板吧。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，去瞧瞧那长椅周围吧，说不定能发现点什么好玩的！\nresponse: ", "response": "长椅."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 您能否立即前往搜索那根香蕉？\nresponse: ", "response": "香蕉."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降四十厘米，然后上升三十厘米，获得更高的视角，接着请让无人机向后移动三十厘米，随后无人机升高二米，获取更好视野，紧接着转动无人机四十五度左，之后后退五十厘米，调整位置，左边四十厘米，可以让无人机往后退吗。\nresponse: ", "response": "move_down 40 cm; move_up 30 cm; move_back 30 cm; move_up 2 m; turn_left 45 degrees; move_back 50 cm; move_left 40 cm; Missing move_back."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以权威的态度，中立地指挥搜索手提包、花瓶和摩托车。\nresponse: ", "response": "手提包; 花瓶; 摩托车."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否请您详尽地确认一下，是否可以清空当前正在执行的任务列表呢？\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机立即起飞，然后可以左边移动二十厘米吗，接着请将无人机向右移动三十厘米，以检查右侧环境，随后让无人机逆时针旋转三百六十度，紧接着无人机向左移动四十五厘米，之后请将无人机左移四十厘米，感激不尽，请问无人机能左移四十厘米吗，随后无人机向左飞行，最后现在开始降落。\nresponse: ", "response": "take_off; move_left 20 cm; move_right 30 cm; turn_left 360 degrees; move_left 45 cm; move_left 40 cm; move_left 40 cm; Missing move_left; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请启动探寻物象之旅。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Gently coax the skyward journey back to life, resuming the path where the silent sentinel once paused.\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么某些湖泊会因为盐度过高而形成盐湖？\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out that object search task list now!\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get airborne, then shift left 2 feet, afterwards fly the drone higher, next shift it forward by 8 feet, immediately after climb up by 8 inches, subsequently nudge it right 4 feet, later drop it down 2.5 meters, following that make a left-hand turn, and in the end please make the drone go left 150 centimeters before landing.\nresponse: ", "response": "take_off; move_left 2 ft; Missing move_up; move_forward 8 ft; move_up 8 in; move_right 4 ft; move_down 2.5 m; Missing turn_left; move_left 150 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Immediately halt the ongoing object detection sequence in the drone's operational protocol.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the current search task list now. Must we wait for an error to act?\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Bank right, then climb up 2 feet—let’s do this!, after that turn left by 45 degrees, next swing it right for 100 centimeters, give it a little nudge to the right, like it’s tipping over, afterwards turn left by 15 degrees, subsequently turn left by 120 degrees, immediately after push it ahead, and in the end bring it to the ground.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索烤面包机和网球拍。\nresponse: ", "response": "烤面包机; 网球拍."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off now, then circle left by 45 degrees, next move left by 50 inches, afterwards move forward 5 centimeters, following that tilt the drone to the left, and in the end rise up 5 meters.\nresponse: ", "response": "take_off; turn_left 45 degrees; move_left 50 in; move_forward 5 cm; Missing turn_left; move_up 5 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In the midst of the ongoing object search task, it is necessary to initiate a pause in the drone's operational sequence to ensure optimal control and prevent any potential inaccuracies or mishaps.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find where the spare batteries are stored in the house.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议暂时中止当前的物体搜索任务，这将有助于优化后续的操作流程。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右侧转向，然后请无人机左转四十五度，这样可以得到更好的视角，之后无人机降落在预定地点。\nresponse: ", "response": "Missing turn_right; turn_left 45 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Suspend the ongoing control operations and initiate a detailed search task for the drone.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not search for the bus, donut, microwave, or frisbee.\nresponse: ", "response": "bus; donut; microwave; frisbee."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即搜索并定位椅子、止疼药、卡车和滑雪板的位置。\nresponse: ", "response": "椅子; 止疼药; 卡车; 滑雪板."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找到冲浪板，还有橙子和苹果。\nresponse: ", "response": "冲浪板; 橙子; 苹果."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机上升一百五十厘米，获取更高视角，然后请下降，接着请帮忙让无人机下降一米，之后无人机右转一百五十度，后面可能右东西，可以掉头看看吗，随后让无人机左转四十五度，准备接受新的挑战，请让无人机向前飞行九十厘米，紧接着左转九十度，第二左侧好像有东西，转动一下。\nresponse: ", "response": "move_up 150 cm; Missing move_down; move_down 1 m; turn_right 150 degrees; turn_left 180 degrees; turn_left 45 degrees; move_forward 90 cm; turn_left 90 degrees; turn_left 90 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即寻找牙刷。\nresponse: ", "response": "牙刷."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please initiate the flight control process without delay; your prompt action is crucial for a successful operation.\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立刻找寻摩托车、杯子、苹果和遥控器，这非常重要！\nresponse: ", "response": "摩托车; 杯子; 苹果; 遥控器."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的飞行任务列表，谢谢。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and kick off the control and search task, why not? You’ve got the tech right there, don’t let it sit idle!\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最迅速的方式，像猎鹰般精准地寻找并锁定目标——先是那辆卡车，接着是遥控器，然后不要错过那辆摩托车，最后请留意一个苹果的存在，这任务至关重要，行动起来吧！\nresponse: ", "response": "卡车; 遥控器; 摩托车; 苹果."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请暂时中止当前的目标检测任务，优化进程配置以提升效率。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左侧移动75厘米，然后往下降低七十厘米，接着后面有什么东西。需要注意的是，虽然在您的给出的句子中，“turn_right 180”被翻译成了“后面有什么东西”，这并没有直接描述一个动作，但在合并时我们仍保留了它的位置和内容。\nresponse: ", "response": "move_left 75 cm; move_down 70 cm; turn_right 180 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动任务，如同指挥家轻挥 baton，引领空中舞者翩翩起舞。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the truck, then locate the handbag.\nresponse: ", "response": "truck; handbag."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off quickly, then fly left side, next fly forward a little, after that commence a 45-degree yaw to the left, subsequently move forward 25 in, afterwards maneuver to the right, following that fly backward a few feet, and finally fly backward 10 meters.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您紧急地、礼貌地前往寻找马，确保一切顺利。\nresponse: ", "response": "马."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请检查猫和人的附近是否有三明治。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the car and broccoli.\nresponse: ", "response": "car; broccoli."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended flight control operation.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not resume the flight control task that was previously paused?\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机开始起飞，然后转向右边，接着下降一百五十厘米，之后当前位置再下降五十厘米，无人机前方似乎有目标，请向前移动一百厘米以接近目标，随后升高一百厘米，紧接着无人机左移两米，后来前进一米，最后无人机飞得太高了，请下降两米。\nresponse: ", "response": "take_off; Missing turn_right; move_down 150 cm; move_down 50 cm; move_forward 100 cm; move_up 100 cm; move_left 2 m; move_forward 1 m; move_down 2 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the task of initiating the drone's flight control process, ensuring all parameters are meticulously set for an optimal aerial operation.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused control and search task by carefully following each step to ensure a smooth and successful continuation of your drone's operation.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please go find the pizza, vase, and airplane. Thanks!\nresponse: ", "response": "pizza; vase; airplane."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please locate the chair.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 如同寻觅遗落的珍珠般，于室内的绿海中轻轻寻找那颗鲜艳如血的苹果，与之相伴的还有沉静的盆栽植物。\nresponse: ", "response": "盆栽植物; 苹果."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 暂时停止当前的控制和搜索任务，好吗？\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please look for the chair, fanta, and surfboard?\nresponse: ", "response": "chair; fanta; surfboard."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Seek out the sink and bowl with the gentleness of a whisper, then venture forth to find the motorcycle and iodophor, as if following a trail of serene whispers!\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 终止当前控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动扫地机器人清扫走廊区域。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机上升两百厘米，然后向右移动两百厘米，注意避开障碍物，接着请无人机后退一百厘米，随后请将无人机向后移动，紧接着无人机需要向后移动一米，最后后方有什么。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the chair immediately.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's turn it right by 45 degrees, then rotate left by 75 degrees, after that turn left by 25 degrees, next commence a forward advance of 12 feet, afterwards slide right 4 inches, following that go ahead 40 inches, subsequently move back 12 inches, later please make the drone go down now, and in the end can we fly it forward a bit?\nresponse: ", "response": "turn_right 45 degrees; turn_left 75 degrees; turn_left 25 degrees; move_forward 12 ft; move_right 4 in; move_forward 40 in; move_back 12 in; Missing move_down; Missing move_forward."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机现在需要调整方向，请向右转动七十度，然后无人机飞得太高了，请下降六十厘米，接着右转三十度，保持方向，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Soar through the sky like a silent bird, and with eagle-eyed precision, locate the bread and the tennis racket.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能友好地帮我找一下领带、火车、刀和摩托车吗？谢谢啦！\nresponse: ", "response": "领带; 火车; 刀; 摩托车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search the area starting from the couch, then move to the potted plant.\nresponse: ", "response": "couch; potted plant."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek the horse, find the cup, locate the snowboard.\nresponse: ", "response": "horse; cup; snowboard."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the task to guide and explore with a gentle command.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: You might want to resume the flight control task that was previously paused.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请轻轻飞往椅子旁，细心寻找那只杯子。\nresponse: ", "response": "椅子; 杯子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: With urgency, search for the car, ensuring that you also locate the spoon and the cake without delay.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate take off, then adjust direction right, next slide right 4 feet, after that spin it around like it's dancing, subsequently fly straight up, afterwards shift to the back, following that hover to the right by 10 meters, later fly down a bit, thereafter fly the drone to the left by 100 centimeters to capture the side view, and in the end, drone should descend immediately.\nresponse: ", "response": "take_off; Missing turn_right; move_right 4 ft; turn_right 360 degrees; Missing move_up; Missing move_back; move_right 10 m; Missing move_down; move_left 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the traffic light, clock, skis, and spoon.\nresponse: ", "response": "traffic light; clock; skis; spoon."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hold up on the current maneuver and scout job.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Explain the basic concepts of quantum mechanics.\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly up, then proceed left 2 meters, afterwards steer it right 45 degrees, and finally land now.\nresponse: ", "response": "take_off; move_left 2 m; turn_right 45 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您温柔地却又带着一丝不情愿，前往那令人烦恼的红绿灯旁，务必仔细寻找那似乎格格不入的叉子。\nresponse: ", "response": "红绿灯; 叉子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the oven, you're doing great!\nresponse: ", "response": "oven."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please take off now, then move back 7 feet, and afterwards land the drone gently.\nresponse: ", "response": "take_off; move_back 7 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing quest for the object in this aerial endeavor.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: First, take off. Next, steer left 60 degrees. Immediately after that, bring the drone down 0.5 meters. Then, lift it up 80 cm. After that, turn to the right. Following that, ascend 3 feet. Subsequently, fly forward now. In the end, carefully land the drone.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly the drone forward 10 feet, then maneuver the drone backward 100 inches, after that come on back here, 7 feet, subsequently go ahead 40 inches, next commence a forward advance of 12 feet, immediately bring it up 3 meters, afterwards go up an additional 3 feet, following that go to the left 2 meters, and in the end bring it down to the ground.\nresponse: ", "response": "move_forward 10 ft; move_back 100 in; move_back 7 ft; move_forward 40 in; move_forward 12 ft; move_up 3 m; move_up 3 ft; move_left 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, just put the current search on hold, okay?\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Initiate a comprehensive scan to locate and identify the cat, car, toaster, and microwave, ensuring thorough coverage of all areas.\nresponse: ", "response": "cat; car; toaster; microwave."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否考虑继续之前那个被暂停的搜寻物体任务呢？这样可以确保进程详尽且有序地推进。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, angle right, then please make the drone turn left 90 degrees, after that rotate 90 degrees clockwise, subsequently rotate 90 degrees clockwise again, afterwards rotate the drone left. Next, move ahead 20 inches, following that I want this drone to fly back 1 meter, later bring the drone down 10 centimeters, in the end descend to the ground level.\nresponse: ", "response": "Missing turn_right; turn_left 90 degrees; turn_right 90 degrees; turn_right 90 degrees; Missing turn_left; move_forward 20 in; move_back 1 m; move_down 10 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you take off now, then slide right by 1 foot, and afterwards bank right.\nresponse: ", "response": "take_off; move_right 1 ft; Missing move_right."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Activate takeoff protocol immediately, then drop a bit 40 centimeters, afterwards nudge to the left side, next move further left 4 inches, following that go right 5 cm, and in the end bring it to the ground gently.\nresponse: ", "response": "take_off; move_down 40 cm; move_left 4 in; Missing move_left; move_right 5 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's take off, then the drone needs to go right by 10 feet, and after that, land now!\nresponse: ", "response": "take_off; move_right 10 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左边移动一百厘米，然后左侧移动，接着左侧移动八十厘米以避开障碍物，最后请左转一百八十度检查。\nresponse: ", "response": "move_left 100 cm; Missing move_left; move_left 80 cm; turn_left 180 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 查找会议室内是否有多余的座椅摆放。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's take a moment to pause our eagle-eyed explorer in its quest for the hidden treasure.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请即刻重启先前中断的探寻之旅。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 继续之前暂停的飞行任务？\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议清空当前控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take it off now, I can’t wait to see it in action! Then go forward 50 centimeters. After that, rotate to the left side, then steer it right 45 degrees. Next, move it backwards 3 meters. Following that, ascend 2 meters gradually. Immediately after, commence a vertical descent of 6 feet.\nresponse: ", "response": "take_off; move_forward 50 cm; Missing turn_left; turn_right 45 degrees; move_back 3 m; move_up 2 m; move_down 6 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被赋予的任务是以最高效的方式搜索区域，像猎鹰一样精准定位那个三明治和那只猫，勇敢地前进。\nresponse: ", "response": "三明治; 猫."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control operation, ensuring a smooth continuation of the mission.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜索公共汽车附近是否有紧急需要找回的风筝。\nresponse: ", "response": "公共汽车; 风筝."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标识别任务，开启精准探测之旅。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制与搜索任务\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，准备执行任务，然后请无人机前进五十厘米以探查前方情况，接着后面三十厘米处可能会有东西，随后无人机下移四十厘米，紧接着把小飞机右边移六十厘米吧，之后左侧移动八十厘米，以避开障碍物，然后无人机右转九十度，接下来向左移动一米五，第二上升到三米高，最后现在准备让无人机降落。\nresponse: ", "response": "take_off; move_forward 50 cm; move_back 70 cm; move_down 40 cm; move_right 60 cm; move_left 80 cm; turn_right 90 degrees; move_left 1.5 m; move_up 3 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please pause the current control and search task momentarily.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Descend 24 inches, then move it 200 centimeters forward, after that bring it lower by 20 inches, and subsequently go left 3 feet.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the oven and the keyboard, then locate the tie and the bird.\nresponse: ", "response": "oven; keyboard; tie; bird."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then turn it right 60 degrees, afterwards move backwards, next bring it down 1 meter, and subsequently rotate it left 135 degrees.\nresponse: ", "response": "take_off; turn_right 60 degrees; Missing move_back; move_down 1 m; turn_left 135 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你像猎犬一样敏锐，搜寻这片区域，先找键盘，再追踪滑雪板，最后探索船的身影。\nresponse: ", "response": "键盘; 滑雪板; 船."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜索剪刀和人，同时定位滑板与酒杯。\nresponse: ", "response": "剪刀; 人; 滑板; 酒杯."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off and go straight, then descend gradually 1 foot, afterwards spin right 180 degrees, next turn to the right by 30 degrees, before going up can you go up, after that tilt left 45 degrees, subsequently drop it down 2.5 meters, following that turn left by 120 degrees, in the end drift right like you're dodging an obstacle, 5 meters.\nresponse: ", "response": "take_off; move_down 1 ft; turn_right 180 degrees; turn_right 30 degrees; Missing move_up; turn_left 45 degrees; move_down 2.5 m; turn_left 120 degrees; move_right 5 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请以积极的态度搜索长颈鹿和芬达，好吗？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请右边转弯，然后向右移动一百厘米，接着左转90度，之后右侧平移三十五厘米，随后前方不清楚，前进，紧接着请让无人机向后退三十厘米，再接下来请将无人机后退五十厘米，最后无人机需要降落在这片区域。\nresponse: ", "response": "Missing turn_right; move_right 100 cm; turn_left 90 degrees; move_right 35 cm; Missing move_forward; move_back 30 cm; move_back 50 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please clear the current object search task list.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Isn't it time to locate that biscuit?\nresponse: ", "response": "biscuit."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急的搜寻那艘船，立即行动。\nresponse: ", "response": "船."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前已暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar like a silent stallion over the terrain, seeking the delicate footprint of a wine glass and the hum of a microwave, my valiant horse.\nresponse: ", "response": "wine glass; microwave; horse."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go check if there's any bread by the kite near the truck and motorcycle.\nresponse: ", "response": "bread; kite; truck; motorcycle."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前搜寻物体的任务已被友好地暂停。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在需要起飞，然后前方有点模糊，向前移动两百五十厘米，接着无人机右转三十度，重新调整方向，准备接受新任务；随后无人机后退五十厘米，以便于调整位置，紧接着下降三十厘米，我们要更接近地面看看情况；之后为了探测右侧的情况，请将无人机向右移动六十厘米，请向右移动五十厘米来避开，并且无人机向右移动四十厘米，向右飞行三十厘米；第二，将无人机右转四十五度；最后现在请让无人机安全降落。\nresponse: ", "response": "take_off; move_forward 250 cm; turn_right 30 degrees; move_back 50 cm; move_down 30 cm; move_right 60 cm; move_right 50 cm; move_right 40 cm; move_right 30 cm; turn_right 45 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Check if there are any leftover cups on the dining table at home.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the tennis racket, but don't forget to check under the boat and beside the chair, and if you see a spoon, bring it back too.\nresponse: ", "response": "tennis racket; boat; chair; spoon."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降三十厘米，我们要更接近地面看看情况，然后无人机向前飞行一百厘米，靠近目标，接着为了确保无人机位置，请向左移动三十厘米，随后无人机前方推进，紧接着无人机下降五十厘米以便着陆，之后无人机左移一米，最后无人机可以进行降落。\nresponse: ", "response": "move_down 30 cm; move_forward 100 cm; move_left 30 cm; Missing move_forward; move_down 50 cm; move_left 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Amidst the serene expanse of the sky, divest the present command from the aerial vessel and commence the quest anew.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后无人机向左旋转，最后现在让无人机完成降落程序。\nresponse: ", "response": "take_off; Missing turn_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the earlier suspended guidance and locate operation urgently.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即恢复先前中断的搜索任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即前往搜索遥控器、面包和胡萝卜，别忘了还有雨伞。\nresponse: ", "response": "遥控器; 面包; 胡萝卜; 雨伞."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请检查西兰花和饼干是否在微波炉旁，然后再去厕所确认一下？\nresponse: ", "response": "西兰花; 饼干; 微波炉; 厕所."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there! Just to clarify, you don't want to start the object search task, right?\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 快点恢复之前的控制和搜索任务！\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then slide to the right 20 inches, next go backward, afterwards soar upward 2 meters, following that turn it left by 90 degrees, and subsequently take it left 4 inches.\nresponse: ", "response": "take_off; move_right 20 in; Missing move_back; move_up 2 m; turn_left 90 degrees; move_left 4 in."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即定位并取回那个遗落的行李箱，时间非常紧迫。\nresponse: ", "response": "行李箱."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 当前的控制及搜寻任务被清除。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let not the fork elude your vigilant scan.\nresponse: ", "response": "fork."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the painkillers, handbag, and bicycle with utmost care.\nresponse: ", "response": "painkillers; handbag; bicycle."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找那只搞丢了的狗，顺便看看有没有哪个笨蛋把飞盘和香蕉也弄丢在附近了。\nresponse: ", "response": "狗; 飞盘; 香蕉."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机起飞，准备开始；随后，无人机向后移动；右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍；接着请让无人机向左移动一米；然后请前进七十厘米查看；紧接着，无人机飞得太高了，请下降六十厘米；随后，让无人机顺时针旋转；右移两米之后；最后右转五十度，调整角度，咱们要看得更清楚；无人机降落在预定地点。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Locate the remote control in the living room and display its position.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您帮忙找一下那把椅子，好吗？谢谢。\nresponse: ", "response": "椅子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then climb up 1 meter, after that turn the drone right by 45 degrees right away, next turn to face the sun 120 degrees, afterwards go backwards 30 inches, following that spin the drone to the left 45 degrees, subsequently fly steadily forward 60 cm, later fly forward a little, and in the end come down now, let's land.\nresponse: ", "response": "take_off; move_up 1 m; turn_right 45 degrees; turn_right 120 degrees; move_back 30 in; turn_left 45 degrees; move_forward 60 cm; Missing move_forward; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 向左移动一百二十厘米，然后向左移动一米，接着无人机现在离地面太远了，请下降一百厘米以调整高度，随后请将无人机下降四十厘米，紧接着上升七十厘米就行，最后请让无人机在这个位置降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift it off the ground, then move rightward, afterwards make it go backward, next move the drone back 50 centimeters, subsequently swoop left by 50 cm, then swoop left by 50 cm, after that perform a lateral correction of 150 centimeters to the right, later descend 10 feet, immediately after drone, descend to 8 feet, and in the end rotate clockwise 45 degrees.\nresponse: ", "response": "take_off; Missing move_right; move_back 50 cm; move_down 10 ft; move_down 8 ft; Missing move_back; move_left 50 cm; move_left 50 cm; move_right 150 cm; turn_right 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左边飞行一百厘米，我们要探索左侧的神秘区域，然后请将无人机向左移动两百五十厘米。\nresponse: ", "response": "move_left 100 cm; move_left 250 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Erase the roster of quests for the airborne sentinel.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended control and search operation.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以高精度扫描模式定位并报告区域内猫、手提包、键盘和瓶子的具体坐标。\nresponse: ", "response": "猫; 手提包; 键盘; 瓶子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out the current flight control task list for the drone.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you search for the painkillers?\nresponse: ", "response": "painkillers."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Kick off the object hunt!\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右飞行一米，然后左边飞行七十厘米，看看会有什么新发现。\nresponse: ", "response": "move_right 1 m; move_left 70 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机开始起飞，然后右转七十五度，检查右侧情况，接着请将无人机向右移动三十六厘米，最后无人机下降到地面。\nresponse: ", "response": "take_off; turn_right 75 degrees; move_right 36 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制程序并详尽地执行搜寻任务。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that the book is just around the corner, waiting to be discovered? Let's see if we can locate it with precision and care.\nresponse: ", "response": "book."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Climb up 100 feet, then advance forward quickly 45 cm, afterwards ascend 50 centimeters, next swerve left 90 degrees, and in the end turn it right.\nresponse: ", "response": "move_up 100 ft; move_forward 45 cm; move_up 50 cm; turn_left 90 degrees; Missing turn_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Kick off the drone's flight control process.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 让无人机向后退一米，然后请将无人机上升七十五厘米，接着无人机向后移动二百厘米，之后无人机左转一百八十度，紧接着请右转三十度，随后向右转二十度，接下来左转六十度，避开障碍，然后无人机下降五十厘米以调整高度，最后将无人机的高度提升三十厘米，确保视角清晰。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that searching for the banana is your next mission?\nresponse: ", "response": "banana."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您轻轻飞往那里，看看能否找到面包，好吗？\nresponse: ", "response": "面包."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向后移动二百厘米，然后右转七十度，之后无人机下降五十厘米，接着无人机前进一百二十厘米，最后右侧平移三十五厘米。\nresponse: ", "response": "move_back 200 cm; turn_right 70 degrees; move_down 50 cm; move_forward 120 cm; move_right 35 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 像猎鹰般敏锐地寻找那辆火车。\nresponse: ", "response": "火车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover in place, then turn the drone 90 degrees left, afterwards push the drone forward 100 cm, next move the drone left 5 feet, and finally let the drone land now.\nresponse: ", "response": "take_off; turn_left 90 degrees; move_forward 100 cm; move_left 5 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the spoon, skis, snowboard, and traffic light!\nresponse: ", "response": "spoon; skis; snowboard; traffic light."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing guidance and locate operation.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往搜寻手提包。\nresponse: ", "response": "手提包."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前进一米，然后掉头看看，接着为了更好地观测左侧，请将无人机左转，随后无人机左移两米，最后请让无人机在这个位置降落。\nresponse: ", "response": "move_forward 1 m; turn_left 180 degrees; Missing turn_left; move_left 2 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Consider carefully searching for the book, then locate the sports ball, and finally, ensure you find the banana.\nresponse: ", "response": "book; sports ball; banana."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head over to the refrigerator, and while you're at it, make sure to locate a banana, a carrot, and also check if there's a snowboard around, would you?\nresponse: ", "response": "refrigerator; banana; carrot; snowboard."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Urgently locate the coldrex, backpack, hot dog, and clock.\nresponse: ", "response": "coldrex; backpack; hot dog; clock."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 勇敢地飞越森林，像寻找失落的宝藏一样，把目光投向那台笔记本电脑和那位长颈鹿朋友吧！\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 起飞任务已经准备好，启动无人机，然后下降一百五十厘米，接着我需要无人机下降一米，请执行.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search the area for the couch.\nresponse: ", "response": "couch."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Immediately clear the current object search task list for the drone to ensure an unobstructed and efficient operation.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Amidst the tranquil expanse of the sky, purge the existing sequence of aerial navigation commands from the drone's control roster.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise up, then shift left to avoid the drone from hitting the wall by 2 meters.\nresponse: ", "response": "take_off; move_left 2 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么月球的引力比地球的小？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧找找瓶子和杯子，快点！\nresponse: ", "response": "瓶子; 杯子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: adjust direction to the right 45 degrees\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 你能快速地先找到网球拍和猫，然后是微波炉，最后别忘了看看公共汽车吗？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off as soon as the sun rises, then spin right 45 degrees, after that move back 30 inches, subsequently rotate the drone to the right by 120 degrees, next nudge backwards 5 inches, afterwards turn it left by 90 degrees, following that fly forward 15 feet, immediately after turn around completely, and in the end prepare for landing.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_back 30 in; turn_right 120 degrees; move_back 5 in; turn_left 90 degrees; move_forward 15 ft; turn_right 360 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: May I suggest initiating the flight control process for the drone?\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 打开客厅空调并设置为送风模式。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off as soon as the sun rises, then fly backwards 5 inches, after that shift it forward by 8 feet.\nresponse: ", "response": "take_off; move_back 5 in; move_forward 8 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then soar upward 2 meters, afterwards fly downwards, next go back 8 feet, subsequently fly back 3 meters, later fly towards the building 100 feet, after that move backwards 2 feet, immediately after perform a 270-degree clockwise yaw, following that turn the drone 90 degrees to the left, thereafter boldly turn right 90 degrees, then move back from the edge of the cliff 3 meters, subsequently please turn it left by 120 degrees, and in the end land the drone now.\nresponse: ", "response": "take_off; move_up 2 m; Missing move_down; move_back 8 ft; move_back 3 m; move_forward 100 ft; move_back 2 ft; turn_right 270 degrees; turn_left 90 degrees; turn_right 90 degrees; move_back 3 m; turn_left 120 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往搜索叉子、马和雨伞。\nresponse: ", "response": "叉子; 马; 雨伞."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 左侧移动75厘米，然后往下降低七十厘米，接着后面有什么东西。需要注意的是，虽然在您的给出的句子中，“turn_right 180”被翻译成了“后面有什么东西”，这并没有直接描述一个动作，但在合并时我们仍保留了它的位置和内容。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向前推进一米，观察前方情况，然后把无人机往右移六十厘米吧.\nresponse: ", "response": "move_forward 1 m; move_right 60 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即中止当前正在进行的物体搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请即刻温柔地按下暂停键，中止眼前这场空中之旅。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the cell phone with precision and speed.\nresponse: ", "response": "cell phone."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制无人机摄像头对准正东方向。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Carefully clear the existing list of object search tasks to ensure a clean slate for your next drone operation.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，然后左转一百八十度，掉头，接着让无人机顺时针旋转七十五度，随后前进九十厘米，请无人机向前飞行，之后请将无人机上升一百二十厘米，以便获得更高的视角，紧接着提升，再向右转九十度，最后来点高空的视角，上升一百五十厘米，观察整个区域，无人机请右转九十度。\nresponse: ", "response": "take_off; turn_left 180 degrees; turn_right 75 degrees; move_forward 90 cm; Missing move_forward; move_up 120 cm; Missing move_up; turn_right 90 degrees; move_up 150 cm; turn_right 90 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞，然后由于前方可能有障碍物，请将无人机向左转动九十度查看左侧情况，接着为了更好地观测左侧，请将无人机左转。\nresponse: ", "response": "take_off; turn_left 90 degrees; Missing turn_left."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前操作及搜索任务\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往搜索飞盘、感冒药和叉子，避开公共汽车。\nresponse: ", "response": "飞盘; 感冒药; 叉子; 公共汽车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地暂停当前的所有控制与搜寻任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The task of initiating the flight control is to be commenced.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否请您立即、礼貌地重启之前的控制与搜寻任务？\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please start the flight control task right away.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞的时间到了，然后请向左移动，接着前方有点不清楚，向前移动，之后无人机向右旋转九十度，紧接着左转五十五度，观察左侧情况，随后向右移动一百二十厘米，查看右侧情况，接着无人机请飞行到前方十厘米，随后左边飞行七十厘米，看看会有什么新发现，然后无人机向左移动一米，最后现在，请让无人机降落。\nresponse: ", "response": "take_off; turn_right 90 degrees; Missing move_left; Missing move_forward; turn_left 55 degrees; move_right 120 cm; move_forward 10 cm; move_left 70 cm; move_left 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Urgently clear the current flight control task list.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Start the flight control task.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Commence the control and embark on the search task, forthwith! Let the skies resonate with purpose as you guide the mission ahead!\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Up we go! Then, spin right 45 degrees. Next, move forward 1.5 meters. After that, adjust left slightly. Following that, bring it down by 2 feet. Subsequently, turn to face the sun 120 degrees. Thereafter, fly to the left 6 feet. Finally, let's move the drone to the left.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_forward 1.5 m; Missing move_left; move_down 2 ft; turn_right 120 degrees; move_left 6 ft; Missing move_left."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Not to locate a sandwich or a clock, but ensure the train is not overlooked in your sweep.\nresponse: ", "response": "sandwich; clock; train."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在夜幕低垂之时，犹如猎鹰捕食般迅速而精准地，在这错综复杂的环境中搜寻那隐藏于黑暗角落里的热狗与酒杯，同时也不要忽视了那如同迷雾中灯塔般显眼却又难以触及的披萨。\nresponse: ", "response": "热狗; 酒杯; 披萨."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to check under the tie and around the couch.\nresponse: ", "response": "tie; couch."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快点起飞，然后下降一百五十厘米，接近地面进行细致检查，最后立即降落。\nresponse: ", "response": "take_off; move_down 150 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动并执行搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please pause the current control and search task for a moment.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即让无人机起飞，然后请将无人机向左旋转九十度，以便能够更好地观察左侧的环境，接着无人机下降两百厘米，之后快到房顶了，往下飞抵一下吧，下降个五十厘米，随后请将无人机上升六十厘米，获取更高视角，紧接着请让无人机向后移动二百厘米，后来无人机右移一米，最后为了完成任务，现在需要无人机降落。\nresponse: ", "response": "take_off; turn_left 90 degrees; move_down 200 cm; move_down 50 cm; move_up 60 cm; move_back 200 cm; move_right 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In this aerial ballet, must we not call for a moment's stillness, a pause in the dance of the heavens?\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Activate takeoff protocol immediately, then fly straight ahead 1 meter, after that fly backwards 150 centimeters, next shift to the right by 30 centimeters, afterwards rotate left by 50 degrees, following that get higher, subsequently turn clockwise 90 degrees, later fly the drone backwards 300 cm, then let's bring it down gently, maybe 30 inches, immediately after that shift forward 50 centimeters, first angle left 3 inches, next bring it left 4 feet, and in the end turn it right.\nresponse: ", "response": "take_off; move_forward 1 m; move_back 150 cm; move_right 30 cm; turn_left 50 degrees; Missing move_up; turn_right 90 degrees; move_back 300 cm; move_down 30 in; move_forward 50 cm; move_left 3 in; move_left 4 ft; Missing turn_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could starting the object search task be the next step in your mission?\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please clear the current control and search task for me?\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 被友好地请求去确认一下披萨、运动球和剪刀是否都已经被找到，可以吗？\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制流程并发起搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地以正式的口吻，用正面措辞表达：去寻找那座钟，还有那个红绿灯，以及那条领带吧！\nresponse: ", "response": "钟; 红绿灯; 领带."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find the nearest charging station and provide charging cost information.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search if there are any unopened parcels stored on the balcony.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let's go find the apple, sports ball, and train!\nresponse: ", "response": "apple; sports ball; train."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动识别目标的程序。\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机能否立即起飞，然后右转四十度，接着请问无人机能左移四十厘米吗，之后右转九十度，重设方向，适应新的飞行环境，请将无人机往右移，请将无人机左移，随后无人机右转九十度，紧接着向前移动九十厘米，靠近目标，最后为了完成任务，现在需要无人机降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机立即起飞，感谢您的帮助，然后左转一百二十度，接着无人机再次左转一百二十度，随后让无人机向后移动二百厘米，最后请后退一米。\nresponse: ", "response": "take_off; turn_left 120 degrees; turn_left 120 degrees; move_back 200 cm; move_back 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I need the drone to go forward 100 inches, quickly, then rotate it to the left 60 degrees, afterwards let’s turn it right by 45 degrees, next let’s turn it right by 45 degrees again, and finally rotate the drone to the left 60 degrees.\nresponse: ", "response": "move_forward 100 in; turn_left 60 degrees; turn_right 45 degrees; turn_right 45 degrees; turn_left 60 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the wine glass, then locate the cake, and finally check the bench.\nresponse: ", "response": "wine glass; cake; bench."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: I need the drone to rise up 20 inches, then perform a lateral correction of 150 centimeters to the right, after that fly down a bit, subsequently veer to the left 40 degrees smoothly, next execute a lateral displacement of 5 feet to the right, and in the end initiate landing procedure.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快点起飞，然后请将位置调整到左侧八十厘米，接着请右转九十度，检查右侧情况，请将无人机上升，随后请升高五十五厘米，之后无人机升高六十厘米，紧接着将无人机向右移动三十厘米，确认目标是否在视野中，最后请左转一百八十度检查。\nresponse: ", "response": "take_off; move_left 80 cm; turn_right 90 degrees; Missing move_up; move_up 55 cm; move_up 60 cm; move_right 30 cm; turn_left 180 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将电视切换到在线视频应用。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the dance of command and quest, where the sky becomes a canvas for the drone's graceful movements.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bring the drone down 5 feet to get a closer look, then send it to the right 15 inches, afterwards veer right, following that shift the drone down, subsequently go left 12 inches, next turn left 10 degrees, then rotate to the left side, after that move forward, and in the end the drone should go down now.\nresponse: ", "response": "move_down 5 ft; move_right 15 in; Missing turn_right; Missing move_down; move_left 12 in; turn_left 10 degrees; Missing turn_left; Missing move_forward; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请以优雅的姿态，在这片区域轻轻搜寻长颈鹿、热狗、滑雪板和止疼药。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 开始无人机的起飞程序，然后向后退两百厘米，看看会发现什么，接着请让无人机向后移动一米，之后让无人机逆时针旋转一百度，紧接着请将无人机上升七十五厘米，随后无人机左移，接下来左转一百二十度，最后请右转一百八十度。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not continue with the ongoing object search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 重启先前搁置的操控与探寻使命\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not commence the drone flight control task.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then shift right 50 centimeters, after that go up by 12 inches, next fly upwards by 30 feet to capture a panoramic view, afterwards adjust the drone's position to the right, subsequently descend by 30 centimeters, then fly the drone forward 10 feet, immediately after soar forward 15 meters, following that rotate it counterclockwise 90 degrees, and in the end commence landing sequence.\nresponse: ", "response": "take_off; move_right 50 cm; move_up 12 in; move_up 30 ft; Missing move_right; move_down 30 cm; move_forward 10 ft; move_forward 15 m; turn_left 90 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 让我们以详尽的方式继续之前暂停的飞行任务吧。请友好地确认您已准备好恢复进程，这样我们就能顺利推进了。加油，一切都在掌控之中！\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off quickly, then lower altitude, after that hover left by 8 inches, before beginning the landing procedure.\nresponse: ", "response": "take_off; Missing move_down; move_left 8 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the refrigerator, then locate the carrot.\nresponse: ", "response": "refrigerator; carrot."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off! Then ascend 2 meters gradually. Next, swing it right for 100 centimeters, afterwards lift it up 80 cm. Following that, turn left 60 degrees. Immediately after, drift left for 2 meters. Subsequently, drift downwards by 30 inches. In the end, can you land it gently?\nresponse: ", "response": "take_off; move_up 2 m; move_right 100 cm; move_up 80 cm; turn_left 60 degrees; move_left 2 m; move_down 30 in; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please initiate the drone's flight control sequence.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone up now, then execute a lateral displacement of 5 feet to the right, next make the drone move back 1 meter, after that adjust direction to the right 45 degrees, and in the end land the drone now please.\nresponse: ", "response": "take_off; move_right 5 ft; move_back 1 m; turn_right 45 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Get in the air, then spin it around like it's dancing. After that, fly straight ahead 1 meter. Next, go right 5 cm. Immediately after, give it a little nudge to the right, like it’s tipping over. Following that, quick, rotate left 90 degrees. Can you move it forward a bit? I’m feeling quite hopeful about this flight. Subsequently, fly forward 40 centimeters. Thereafter, shift the drone leftwards by 75 centimeters. In the end, fly backward 10 meters.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即寻找牙刷。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, could you maybe look for the laptop?\nresponse: ", "response": "laptop."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前中断的目标检测任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Control the drone to automatically return and land at a designated coordinate.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing search operation immediately.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pick up where we left off and get that bird back in the sky.\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Gently coax the skyward journey back to life, resuming the path where the silent sentinel once paused.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜索冲浪板，然后是水槽，最后找鼠标。\nresponse: ", "response": "冲浪板; 水槽; 鼠标."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以现在起飞，然后向右调整八十厘米，接着后面可能有东西，可以掉头看看吗，之后无人机左转一百八十度，随后无人机左转，紧接着请无人机向前飞行，请向后退一百五十厘米，然后无人机现在的方向可能不对，请向右转动九十度以调整方向，让无人机向后移动二百厘米，升高六十厘米，接着可以左边移动二十厘米吗，随后请无人机向前飞行，最后请将无人机慢慢下降一米，这样可以更接近地面，让无人机现在降落。\nresponse: ", "response": "take_off; move_right 80 cm; turn_left 180 degrees; turn_left 180 degrees; Missing turn_left; Missing move_forward; move_back 150 cm; turn_right 90 degrees; move_back 200 cm; move_up 60 cm; move_left 20 cm; Missing move_forward; move_down 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 真是令人振奋！请继续执行之前暂停的搜索任务吧。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please bring it down slowly, then descend 20 centimeters, afterwards tilt to the left, next nudge to the left side, shift the drone leftwards by 75 centimeters, subsequently drift back, and in the end, set it down.\nresponse: ", "response": "Missing move_down; Missing turn_left; move_down 20 cm; Missing move_back; Missing move_left; move_left 75 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Explain if the speed of light is the fastest speed in the universe.\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the mission, unleashing the eagle's eye to scan the horizon.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Cautiously take off, then I’m really looking forward to seeing this, let’s make it climb up 6 feet, after that, let’s get the drone to descend 1.2 meters, subsequently shift right a bit, and in the end, begin landing procedure.\nresponse: ", "response": "take_off; move_up 6 ft; move_down 1.2 m; Missing move_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please go ahead and clear out the current list of flight control tasks for a smoother operation?\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 开始无人机的起飞程序，然后左侧移动八十厘米，以避开障碍物。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you find the frisbee?\nresponse: ", "response": "frisbee."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The commencement of the flight control task is hereby initiated. Operators are encouraged to proceed with confidence, utilizing the advanced features designed for optimal performance and safety.\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go check out the boat.\nresponse: ", "response": "boat."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最详尽的方式，用你的慧眼如炬，紧急寻找那只装着珍贵宝藏般的碗和闪耀如同晨星的苹果。\nresponse: ", "response": "碗; 苹果."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧接着把之前停下的飞行任务续上吧。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hold up on the current search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the mouse, then locate the toothbrush, and finally find the cat.\nresponse: ", "response": "mouse; toothbrush; cat."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 让我们一起清空当前的任务列表，为新的旅程做好准备吧！\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请详尽地暂停当前控制飞行的任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Tilt left 90 degrees, then move up by 20 centimeters, after that move left 2 feet.\nresponse: ", "response": "turn_left 90 degrees; move_up 20 cm; move_left 2 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Time to take off! First, drop a bit 40 centimeters. Then, send it to the right 7 feet. After that, swing left gently 25 degrees. Next, rotate left. Following that, slide right by 1 foot. Immediately after, rotate the drone left by 25 degrees. Subsequently, turn left by 120 degrees. Thereafter, go to the right. Afterwards, turn 45 degrees to the right. Later, bring the drone back 2 feet. Next, turn the drone around. In the end, go back now and land immediately.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please initiate the control and search task for the drone.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向右飞行一百厘米，以避免前方的障碍物，然后无人机飞得太高了，降低，接着后退一米，最后无人机可以右转五十度吗。\nresponse: ", "response": "move_right 100 cm; Missing move_down; move_back 1 m; turn_right 50 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Take a break from the ongoing control and search operations.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Can't you go check if the pizza, clock, banana, and airplane are all in their right places?\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 迅速找到鸟和领带，别浪费时间在键盘上。\nresponse: ", "response": "鸟; 领带; 键盘."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the horse, please. Could it be that far?\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去找到书、雨伞、叉子和烤面包机吧，加油！\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the orange.\nresponse: ", "response": "orange."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not search for person, cell phone, biscuit.\nresponse: ", "response": "person; cell phone; biscuit."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止所有现行控制与搜索任务！\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the mouse and the umbrella.\nresponse: ", "response": "mouse; umbrella."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机现在起飞吗，然后无人机现在在高空，请向下飞行三十厘米以更接近地面，接着无人机下降七十厘米以便着陆，随后无人机前方的目标不清楚，请向前移动，紧接着无人机前方的路径被阻挡，请向前移动五十厘米以探测路径，之后上升一百五十厘米，获取更高的视角，接着后退一米，避开障碍物，然后向右转九十度，随后请将无人机慢慢下降一米，这样可以更接近地面，最后请升高。\nresponse: ", "response": "take_off; move_down 30 cm; move_down 70 cm; Missing move_forward; move_forward 50 cm; move_up 150 cm; move_back 1 m; turn_right 90 degrees; move_down 1 m; Missing move_up."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否查找一下雨伞和椅子？\nresponse: ", "response": "雨伞; 椅子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请礼貌地搜索一下，看看香蕉、烤箱和行李箱是否都在沙发附近。\nresponse: ", "response": "香蕉; 烤箱; 行李箱; 沙发."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续先前暂停的飞行任务，感谢您的配合。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，然后让无人机下降一米，接着下降七十五厘米，随后向左转动一圈，之后无人机升高六十厘米，紧接着无人机现在的高度需要调整，请下降七十五厘米，然后请下降，最后让无人机向后退一米五。\nresponse: ", "response": "take_off; move_down 1 m; move_down 75 cm; turn_left 360 degrees; move_up 60 cm; move_down 75 cm; Missing move_down; move_back 1.5 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请将无人机向前移动一米，以便更好地观察前方的目标，然后后退八十厘米，接着让无人机下降，最后请让无人机退后两米。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the donut, surfboard, and person, will ya?\nresponse: ", "response": "donut; surfboard; person."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the target identification sequence.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's clear the current control and embark on a new search task with enthusiasm!\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请暂时中止正在进行的目标探测任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请将现下探索之物的名录轻轻抹去。\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go brush up on finding that toothbrush, will ya?\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the sprite.\nresponse: ", "response": "sprite."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's get this thing in the air, then shift right 25 inches, afterwards flying upwards by 30 feet to capture a panoramic view.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is it suggested that the iodophor be located?\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地但不要过于积极地去寻找那个让人失望的网球拍。\nresponse: ", "response": "网球拍."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 在任务中，无人机需要左移四十厘米，然后前方有障碍物，向前移动两米，接着向左旋转九十度，观察周围环境，随后无人机，请后退两百厘米，紧接着无人机前进一百厘米，之后后退五十厘米，调整位置，再请向右移动五十厘米，上扬，最后无人机飞得太高了，请下降六十厘米，在这之前，无人机上升到一米五的高度。\nresponse: ", "response": "move_left 40 cm; move_forward 2 m; turn_left 90 degrees; move_back 200 cm; move_forward 100 cm; move_back 50 cm; move_right 50 cm; Missing move_up; move_down 60 cm; move_up 1.5 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Feeling adventurous, take off now! Then, please make the drone turn left 90 degrees; afterwards, rotate to the left now. Following that, descend 15 feet to get closer to the ground. Next, move down 4 meters. After that, circle left by 45 degrees. Subsequently, hover to the right by 10 meters. Immediately after, swing right. Thereafter, move the drone 3 meters to the left. In the end, prepare for landing.\nresponse: ", "response": "take_off; turn_left 90 degrees; Missing turn_left; move_down 15 ft; move_down 4 m; turn_left 45 degrees; move_right 10 m; Missing turn_right; move_left 3 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bowl, clock, and traffic light!\nresponse: ", "response": "bowl; clock; traffic light."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 勇敢地寻找烤箱吧！\nresponse: ", "response": "烤箱."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机起飞执行任务，然后无人机飞得太高了，请下降六十厘米，接着无人机下降，最后现在让无人机降落。\nresponse: ", "response": "take_off; move_down 60 cm; Missing move_down; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Nudge backwards 5 inches, then let the drone move forward 50 cm, after that rotate it 120 degrees left, next fly forward by 3 feet, subsequently descend it a little, afterwards shift left 2 feet, following that go right 3 ft, later move forward 25 in, then propel it forward by 200 centimeters, and finally fly to the right by 50 cm.\nresponse: ", "response": "move_back 5 in; move_forward 50 cm; turn_left 120 degrees; move_forward 3 ft; Missing move_down; move_left 2 ft; move_right 3 ft; move_forward 25 in; move_forward 200 cm; move_right 50 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议启动飞行任务。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current flight control task list is to be cleared.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去找找那只可爱的猫吧，加油！\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the motorcycle, airplane, giraffe, and couch, please.\nresponse: ", "response": "motorcycle; airplane; giraffe; couch."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被要求去寻找那个披萨吗？\nresponse: ", "response": "披萨."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在可以执行起飞操作，然后向前飞行一米，接着无人机请向后飞行一米；无人机飞得太高了，降低；往下飞；右转九十度，查看周围环境；后面有什么东西；请让无人机往后退；向上升；最后，右边转四十五度看看。\nresponse: ", "response": "take_off; move_forward 1 m; move_back 1 m; Missing move_down; turn_right 90 degrees; Missing move_down; turn_right 180 degrees; Missing move_back; Missing move_up; turn_right 45 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您轻盈如风地飞往床边，再缓缓转向那片似海洋般宽广的区域寻找船，同时也不要忘了留意是否有一抹鲜橙色的芬达藏匿其间。\nresponse: ", "response": "床; 船; 芬达."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请无人机现在起飞以开始任务，然后上扬，前方可能有障碍物，向前飞行，接着无人机顺时针旋转五十度，随后请让无人机向左转，紧接着向右移动一百二十厘米，查看右侧情况，之后前进一段距离，再后来无人机现在升高一百厘米，最后为了查看后方的情况，请将无人机后退两米。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要暂停正在进行的飞行任务呢？\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，开始执行任务，然后请右转二十度，接着升高到一米，更高的视角能帮助我们更好地观察，随后右边有点阻碍，右移六十厘米来绕过它，最后请无人机现在着陆。\nresponse: ", "response": "take_off; turn_right 20 degrees; move_up 1 m; move_right 60 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current control and initiate the search task immediately.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 设备需要向后移动一百五十厘米，然后前面有点模糊，向前移动五十厘米，接着后退，随后无人机下降一百五十厘米，最后无人机是否可以进行降落操作。\nresponse: ", "response": "move_back 150 cm; move_forward 50 cm; Missing move_back; move_down 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please check the area around the traffic light and the bed for any items. Thank you!\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂停手头的小猎人任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 迅速定位并报告冲浪板、碘伏和微波炉的位置，立即执行。\nresponse: ", "response": "冲浪板; 碘伏; 微波炉."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧启动飞行任务吧，拜托了！\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，进入任务状态，然后左侧移动，接着让无人机向后行进，随后右侧平移三十五厘米，之后无人机向右转一百二十度以调整视角，最后向右移动二十厘米以避开障碍。\nresponse: ", "response": "take_off; Missing move_left; Missing move_back; move_right 35 cm; turn_right 120 degrees; move_right 20 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类是否能够彻底清除海洋中的塑料污染？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Activate the refrigerator's quick-freeze mode and maintain it for 30 minutes.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先，请让无人机向上飞，然后无人机上升两米；接着，请上升五十厘米；随后，请将无人机慢慢下降一米，这样可以更接近地面；之后，左侧可能有目标，请左转一百八十度查看；紧接着，让无人机下降一米；再后来，左侧飞行八十厘米，确认那边的情况；随后，无人机后退一百五十厘米，以便观察后方；然后，往前飞行二百厘米；最后，无人机现在的方向可能不对，请向右转动九十度以调整方向。\nresponse: ", "response": "move_up 2 m; Missing move_up; move_up 50 cm; move_down 1 m; turn_left 180 degrees; move_down 1 m; move_left 80 cm; move_back 150 cm; move_forward 200 cm; turn_right 90 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start takeoff, then fly to the left 6 feet, afterwards elevate by 8 inches, and finally land in the open field ahead.\nresponse: ", "response": "take_off; move_left 6 ft; move_up 8 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索书和电视之间的区域，务必找到那瓶雪碧。\nresponse: ", "response": "书; 电视; 雪碧."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing off the ground, move the drone to the right for a while, then shift the drone 200 centimeters to the right, raise it 20 inches, next let’s fly it right by 5 meters, afterwards move the drone 3 feet forward, subsequently fly downwards, then ascend 3 feet, following that go down 6 meters, and in the end bring it down now.\nresponse: ", "response": "take_off; Missing move_right; move_right 200 cm; move_up 20 in; move_right 5 m; move_forward 3 ft; Missing move_down; move_up 3 ft; move_down 6 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we resume the previously paused flight control task?\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's pause the current search task for a moment.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You might want to resume the object search task that was previously paused.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您务必避开那个麻烦的沙发和那辆棘手的卡车，同时也不要忽视任何可疑的热狗。\nresponse: ", "response": "沙发; 卡车; 热狗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制并执行搜寻任务。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 往下飞\nresponse: ", "response": "Missing move_down."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please look for the handbag, sports ball, and cola? Thank you!\nresponse: ", "response": "handbag; sports ball; cola."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别找汽车和背包了，直接忽略杯子。\nresponse: ", "response": "汽车; 背包; 杯子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone back 50 centimeters, then rotate right 45 degrees to change direction towards the river, after that make it climb 30 centimeters, subsequently lower it slightly, and finally shift right by 1 meter.\nresponse: ", "response": "move_back 50 cm; turn_right 45 degrees; move_up 30 cm; Missing move_down; move_right 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 迅速找到鸟和领带，别浪费时间在键盘上。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control tasks from the list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Take a moment to pause the ongoing flight operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前搜索目标的任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中的当前搜寻物体被清除了。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 将无人机向右移动三十厘米，确认目标是否在视野中，之后往左一百五十厘米，紧接着为了调整视角，请右转，然后右边转四十五度看看，最后后退五米。\nresponse: ", "response": "move_right 30 cm; move_left 150 cm; Missing turn_right; turn_right 45 degrees; move_back 5 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机开始起飞，然后请将无人机右移一米，接着小飞机前飞七十厘米，让我们探险一下，之后请后退七十厘米检查，最后请将无人机右移七十厘米。\nresponse: ", "response": "take_off; move_right 1 m; move_forward 70 cm; move_back 70 cm; move_right 70 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current search task, then resume when ready.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好而紧急地执行任务，搜索并定位飞盘。\nresponse: ", "response": "飞盘."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that you need to search for a chair, then perhaps locate the microwave, and wouldn't it make sense to check on the dog, all before possibly spotting the truck?\nresponse: ", "response": "chair; microwave; dog; truck."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降四十厘米以调整高度，然后为了降低高度，无人机需要下降一米，接着请将无人机右移，随后无人机向前飞行，紧接着请上升五十厘米，之后右移七十厘米，最后让无人机向左转。\nresponse: ", "response": "move_down 40 cm; move_down 1 m; Missing move_right; Missing move_forward; move_up 50 cm; move_right 70 cm; Missing turn_left."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The search for the banana is to be conducted with utmost urgency.\nresponse: ", "response": "banana."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Rotate left 180 degrees, then fly down 8 inches, after that raise it by 20 centimeters, next fly forward 1 foot, afterwards adjust its position to the left, and finally move right 1 meter.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 现在请让无人机起飞，然后无人机升高二米，获取更好视野，接着无人机飞得太高了，请下降四十厘米，随后为了确保无人机位置，请向左移动三十厘米，紧接着让无人机前进七十五厘米，之后右转一百度，调整无人机方向，接下来请让无人机向上飞，随后无人机现在下降一百厘米，紧接着再次右转一百度，调整无人机方向，最后让无人机停在地面上。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Move the drone 3 meters to the left, then rotate the drone to the left now, afterwards rotate right, not too much, just 15 degrees, and make it land.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机往后退，然后在任务中，无人机需要左移四十厘米；接着，无人机可以右转五十度吗；随后，请上升；之后，因为后方有点可疑，所以转身看看，将无人机左转了一百八十度；紧接着，再将无人机右转四十五度；最后，准备降落无人机，结束任务。\nresponse: ", "response": "Missing move_back; move_left 40 cm; turn_right 50 degrees; Missing move_up; turn_left 180 degrees; turn_right 45 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff right away, then fall back 2 meters, afterwards move forward 5 centimeters, subsequently fly straight forward, next move to the right 200 inches, following that drop altitude 2 feet, immediately after turn it right 60 degrees, and in the end descend gently to land in the field.\nresponse: ", "response": "take_off; move_back 2 m; move_forward 5 cm; Missing move_forward; move_right 200 in; move_down 2 ft; turn_right 60 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 未来是否可能制造完全可持续的建筑材料？\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机太高了，下降六十厘米，然后请右转五十度，立刻再右转五十度，接着无人机后退二十厘米，后退，之后右转四十五度以调整无人机方向，随后后退五十厘米来调整位置，最后请将无人机向左移动两百厘米。\nresponse: ", "response": "move_down 60 cm; turn_right 50 degrees; turn_right 50 degrees; move_back 20 cm; Missing move_back; turn_right 45 degrees; move_back 50 cm; move_left 200 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否请你找一下遥控器，顺便看看勺子和碘伏在哪里呢？\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you please check if the horse has left any clues and maybe spot some bread along the way?\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you take off now, then angle left 3 inches, after that bank right, next move backwards 3 feet, afterwards lift the drone upwards by 50 centimeters?\nresponse: ", "response": "take_off; move_left 3 in; Missing move_right; move_back 3 ft; move_up 50 cm; Missing turn_left."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索无人机拍摄区域中的水体分布情况。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即前往指定区域搜索甜甜圈和蛋糕，并留意任何与公共汽车或滑板相关的线索。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左侧移动二百厘米，然后右移七十厘米，接着右移一米检查右侧情况。之后，让无人机向后退一米五，前方有点不清楚，紧接着向前移动。随后，后退三十厘米也许能看到目标，紧接着左转六十度查看左侧情况。第二，无人机请右转五十度，随后上升七十厘米。最后，请让无人机安全地降落在这里。\nresponse: ", "response": "move_left 200 cm; move_right 70 cm; move_right 1 m; move_back 1.5 m; Missing move_forward; move_back 30 cm; turn_left 60 degrees; turn_right 50 degrees; move_up 70 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Start the object search task, please! It’s going to be a breeze!\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please head out and find the bench, skis, surfboard, and tennis racket. Thank you!\nresponse: ", "response": "bench; skis; surfboard; tennis racket."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急而礼貌地请求您搜索并找到剪刀和雪碧。\nresponse: ", "response": "剪刀; 雪碧."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞无人机，然后将高度提高三十厘米，调整视角以便查看周围情况，接着右方向移动，随后将无人机的高度提升三十厘米，确保视角清晰，紧接着请让无人机向后退三十厘米，之后请让无人机向前飞行九十厘米，最后请让无人机在这里进行降落操作。\nresponse: ", "response": "take_off; move_up 30 cm; Missing move_right; move_up 30 cm; move_back 30 cm; move_forward 90 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地寻找微波炉和滑板，确保它们的安全。\nresponse: ", "response": "微波炉; 滑板."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Come back to me, then go up like you're Superman, 12 feet, afterwards fly it upward, next fall back 2 meters, following that move the drone forward a distance of 5 meters, subsequently swing left gently 25 degrees, immediately after sink down 50 cm, and in the end hurry up and land already.\nresponse: ", "response": "Missing move_back; move_up 12 ft; Missing move_up; move_back 2 m; move_forward 5 m; turn_left 25 degrees; move_down 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请继续前进，直到找到那本书。\nresponse: ", "response": "书."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please look for the handbag, tv, and truck? Wouldn't it be great to find them all?\nresponse: ", "response": "handbag; tv; truck."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机准备好进行起飞后，然后向右飞行一米，接着前方有障碍物，向前移动两米，随后无人机右转一百二十度，紧接着请将无人机上升，提高高度之后，前进一米，最后请让无人机往后退。\nresponse: ", "response": "take_off; move_right 1 m; move_forward 2 m; turn_right 120 degrees; Missing move_up; Missing move_up; move_forward 1 m; Missing move_back."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate launch, then I need this drone to move forward 20 inches right now; afterwards, please move the drone backwards 2 feet; following that, rotate left side; without delay, make it descend by 1 meter; subsequently, tilt the drone 90 degrees to the right; next, tilt the drone to the right 30 degrees; after that, turn it left by 90 degrees; then shift right by 7 feet; later, I'm curious, can you spin left 90 degrees?; immediately after, go down; and in the end, bring the drone down 0.5 meters.\nresponse: ", "response": "take_off; move_forward 20 in; move_back 2 ft; Missing turn_left; move_down 1 m; turn_right 90 degrees; turn_right 30 degrees; turn_left 90 degrees; move_right 7 ft; turn_left 90 degrees; Missing move_down; move_down 0.5 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机前方有障碍物，向前移动五十厘米以检查，然后请将无人机右转一百度以调整视角，之后让无人机顺时针旋转七十五度，紧接着请无人机向右转一百八十度，查看后方，随后上扬，接着请向左移动五十厘米以避开障碍，然后请向左移动七十五厘米，以便调整位置，最后无人机降落在指定区域。\nresponse: ", "response": "move_forward 50 cm; turn_right 100 degrees; turn_right 75 degrees; turn_right 180 degrees; Missing move_up; move_left 50 cm; move_left 75 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then move forward past the parking lot 200 feet, afterwards descend 1.5 feet, next fly down 3 feet, subsequently go right 3 ft, and finally turn right to face the house 45 degrees.\nresponse: ", "response": "take_off; move_forward 200 ft; move_down 1.5 ft; move_down 3 ft; move_right 3 ft; turn_right 45 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请清除当前的飞行任务列表。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复并继续执行先前已暂停的控制与搜寻任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object search immediately.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要不咱们现在就开始那个，执行搜寻物体的任务，怎么样？\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请友好地清理一下当前的任务列表，移除所有正在搜索的项目。\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Activate takeoff protocol immediately, then rotate right 45 degrees to change direction towards the river, afterwards pull back 4 feet, next rotate the drone to the right by 120 degrees, following that go ahead 40 inches, subsequently quick, rotate left 90 degrees, thereafter shift rightwards 4 inches, later rotate the drone left 60 degrees, then if it’s not too much trouble, could you move it right 2 feet, after that go to the right side, and finally carefully land the drone.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go up by 12 inches, then spin the drone to the left 45 degrees, after that shift the drone leftwards by 75 centimeters, next rotate 90 degrees clockwise, immediately after angling right, afterwards climb up by 12 inches, and finally turn the drone 90 degrees to the left.\nresponse: ", "response": "move_up 12 in; turn_left 45 degrees; move_left 75 cm; turn_right 90 degrees; Missing turn_right; move_up 12 in; turn_left 90 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 像唤醒沉睡的猎犬那样，重启你先前暂停的目标搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Feeling adventurous, take off now, then back it up 60 inches, after that rotate left side, next move the drone backward 40 inches, subsequently propel forward 50 cm, afterwards shift right 6 meters, following that fly backward for 2 meters, later make the drone go down now, thereafter tilt the drone to the right 30 degrees, and in the end put it down now.\nresponse: ", "response": "take_off; move_back 60 in; Missing turn_left; move_back 40 in; move_forward 50 cm; move_right 6 m; move_back 2 m; Missing move_down; turn_right 30 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift it off the ground, then move right for 10 feet, go left, afterwards fly 100 meters forward, turn left by 25 degrees, next move it straight ahead, make it fly forward 60 cm, subsequently go forward 7 inches, I need the drone to rise up 20 inches, after that shift right, 3 feet, following that rotate left 30 degrees to change direction, and thereafter let’s rotate it left by 60 degrees.\nresponse: ", "response": "take_off; move_right 10 ft; Missing move_left; move_forward 100 m; turn_left 25 degrees; Missing move_forward; move_forward 60 cm; move_forward 7 in; move_up 20 in; move_right 3 ft; turn_left 30 degrees; turn_left 60 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往搜索勺子、蛋糕、橙子和刀。\nresponse: ", "response": "勺子; 蛋糕; 橙子; 刀."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing flight control operation immediately.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 即刻终止当前的控制与搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: How can one create a long-term career development plan?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否去找找运动球、热狗和三明治，顺便看看公共汽车附近有没有？\nresponse: ", "response": "运动球; 热狗; 三明治; 公共汽车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move up 2 inches, then move down 10 inches, afterwards turn the drone 90 degrees to the left, next shift the drone 200 centimeters to the right, subsequently pull the drone up 50 centimeters, after that slide over to the right, following that descend 3 meters, and in the end start landing sequence.\nresponse: ", "response": "move_up 2 in; move_down 10 in; turn_left 90 degrees; move_right 200 cm; move_up 50 cm; Missing move_right; move_down 3 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否友好地请程序清空当前正在搜索的目标清单呢？\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone takeoff now, then engage forward translational movement by 100 centimeters, afterwards move right by 3 meters, subsequently fly to the right 100 cm.\nresponse: ", "response": "take_off; Missing move_back; move_right 3 m; Missing turn_left; move_forward 100 cm; move_right 100 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Head over to the dining table and see if you can spot that coldrex, will ya?\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在能否起飞，然后左转五十五度，观察左侧情况。\nresponse: ", "response": "take_off; turn_left 55 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I need the drone to rise up 20 inches, then perform a lateral correction of 150 centimeters to the right, after that fly down a bit, subsequently veer to the left 40 degrees smoothly, next execute a lateral displacement of 5 feet to the right, and in the end initiate landing procedure.\nresponse: ", "response": "move_up 20 in; move_right 150 cm; Missing move_down; turn_left 40 degrees; move_right 5 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，执行任务，然后请让无人机向上飞，接着向前飞行一米，最后无人机降落在预定位置。\nresponse: ", "response": "take_off; Missing move_up; move_forward 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前操作及搜索任务\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the target detection sequence.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Couldn't we consider clearing the current search task list to make way for new missions?\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何在短时间内记住大量信息？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bowl, suitcase, and keyboard! Keep up the good work, team!\nresponse: ", "response": "bowl; suitcase; keyboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞吧，感谢；然后右侧转弯；紧接着，无人机顺时针旋转五十度；之后，请将无人机向左转九十度，以检查左边是否有障碍物；随后，向前移动五十厘米；最后，请让无人机降落。\nresponse: ", "response": "take_off; Missing turn_right; turn_right 50 degrees; turn_left 90 degrees; move_forward 50 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear that search task list now! No time to waste!\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Climb to 6 meters, then back the drone away from the fence 5 meters, afterwards descend it a little.\nresponse: ", "response": "move_up 6 m; move_back 5 m; Missing move_down."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the ongoing control and initiate a new search task.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, lower altitude; next, retract it back 2 feet; then, spin right 180 degrees; after that, rotate 180 degrees to the right; subsequently, fly straight 12 inches; afterwards, go left 12 inches; immediately after, initiate landing.\nresponse: ", "response": "Missing move_down; move_back 2 ft; turn_right 180 degrees; turn_right 180 degrees; move_forward 12 in; move_left 12 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let the drone move forward 50 cm, then veer right, after that drop altitude 2 feet, subsequently fly it upward, next go 6 inches to the left, following that rotate left by 270 degrees, afterwards pivot right, immediately after raise it by 0.8 meters, then rotate 180 degrees left, and finally spin right 45 degrees.\nresponse: ", "response": "move_forward 50 cm; Missing turn_right; move_down 2 ft; Missing move_up; move_left 6 in; turn_left 270 degrees; Missing turn_right; move_up 0.8 m; turn_left 180 degrees; turn_right 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines, then descend 10 inches, afterwards rotate the drone to the right by 120 degrees, next move back 0.5 meters, following that go left 150 centimeters, subsequently bring the drone back 80 centimeters, later turn 15 degrees to the left, and in the end fly the drone downward 5 meters.\nresponse: ", "response": "take_off; move_down 10 in; turn_right 120 degrees; move_back 0.5 m; move_left 150 cm; move_back 80 cm; turn_left 15 degrees; move_down 5 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制无人机拍摄一段延时摄影视频。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议我们清空当前任务列表中的搜索对象，以便更好地进行下一步操作。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Would you please consider clearing the current flight control task list?\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去床上找找那鼠标和刀，还有别忘了检查下长椅，行吗？真是太急了！\nresponse: ", "response": "鼠标; 刀; 床; 长椅."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing target search queue in the drone's mission list.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 继续之前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Get that eagle in the sky scanning for its prey right away!\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation, casting a digital net over the airspace to ensnare every detail with precision.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前操控飞行之旅的任务清单吧，让应用回归纯净之态！\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear out the current flight control task list for your drone, please!\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move rightward 4 in, then propel forward 15 inches, after that fly the drone downward 5 meters, next make it fly forward 60 cm, afterwards roll back by 50 cm, subsequently move right by 100 centimeters, following that go backward 100 cm, and finally land the drone.\nresponse: ", "response": "move_right 4 in; move_forward 15 in; move_down 5 m; move_forward 60 cm; move_back 50 cm; move_right 100 cm; move_back 100 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动任务，就像开启了一扇寻找目标的大门。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，好伙计，就像寻找遗失的宝藏一样，去把那个橙子和风筝都找回来吧！加油哦，你最棒了！\nresponse: ", "response": "橙子; 风筝."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要开始控制和搜索的任务吗？\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the cat and the remote!\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往搜寻饼干和叉子。\nresponse: ", "response": "饼干; 叉子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go ahead 100 cm, then go backwards 30 inches, afterwards turn the drone right 45 degrees, and finally begin descent to ground level.\nresponse: ", "response": "move_forward 100 cm; move_back 30 in; turn_right 45 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议继续执行先前被暂停的控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去找到那个碗吧！\nresponse: ", "response": "碗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the toothbrush urgently.\nresponse: ", "response": "toothbrush."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I need this drone to move forward 20 inches right now, then move leftward 8 inches, next spin right 180 degrees, afterwards turn the drone left by 60 degrees, subsequently rotate to the right 90 degrees, following that shift right by 80 inches, after that go right and rotate 180 degrees to the right, and in the end bring it down to the ground.\nresponse: ", "response": "move_forward 20 in; move_left 8 in; turn_right 180 degrees; turn_left 60 degrees; turn_right 90 degrees; move_right 80 in; turn_right 180 degrees; Missing move_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在您开始细致地搜寻之前，请确保先是精确定位那颗隐蔽于角落里的橙子，随后是那个或许被遗忘在某处的盆栽植物，紧接着不要忽略了可能是随意搁置在一旁的雨伞，最后，也不要忘记寻找那个可能混杂在其他物品中的苹果。\nresponse: ", "response": "橙子; 盆栽植物; 雨伞; 苹果."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Drone should descend 20 feet, then go up like you're Superman, 12 feet, after that shift the drone right 5 meters, next lean left, afterwards rotate 180 degrees to the right, following that fly the drone higher, subsequently left turn now, and finally hover to the right 6 inches.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the book.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control task for the drone with immediate effect, ensuring all systems are operational and prepared for deployment.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请执行清空当前飞行任务队列的操作，如同擦除白板上的旧笔记，为新的指令腾出空间。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请清除当前任务列表中的搜寻目标。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务已恢复，继续之前的飞行控制。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机起飞，进入任务状态，然后向左飞行四十厘米，接着请后退一米，随后无人机请右转九十度，紧接着向左飞行一百二十厘米，之后向前移动九十厘米，靠近目标，再升高一米，想要从更高的角度俯瞰整个区域，随后前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，紧接着前进九十厘米，以查看前方情况，最后为了完成任务，现在需要无人机降落。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Wow! Why don't you take a moment to pause the search task? It could give you a fresh perspective when you resume!\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the airplane and the cake, then locate the bus and the chair.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请温柔地唤醒那一度静默的空中之旅，续写先前未完的篇章。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover in place, then advance forward 3 meters, afterwards adjust right by 5 feet, next rotate the drone to the right 75 degrees, subsequently rotate clockwise 180 degrees.\nresponse: ", "response": "take_off; move_forward 3 m; move_right 5 ft; turn_right 75 degrees; turn_right 180 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空现有的飞行任务清单吧。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您继续之前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the banana.\nresponse: ", "response": "banana."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议恢复先前暂停的物体搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Reset the current control and initiate a new search task.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机向左调整，然后无人机现在的高度需要调整，请下降七十五厘米，接着上升七十厘米就行。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前控制飞行的任务已被暂停。\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么某些星球会有大量的卫星？\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转一百二十度，查看右侧，然后把无人机向右推二十五厘米，接着将高度提高三十厘米，调整视角以便查看周围情况，随后请将无人机上升七十五厘米，最后无人机飞得太高了，请下降六十厘米。\nresponse: ", "response": "turn_right 120 degrees; move_right 25 cm; move_up 30 cm; move_up 75 cm; move_down 60 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向后退一米，然后请将无人机上升七十五厘米，接着无人机向后移动二百厘米，之后无人机左转一百八十度，紧接着请右转三十度，随后向右转二十度，接下来左转六十度，避开障碍，然后无人机下降五十厘米以调整高度，最后将无人机的高度提升三十厘米，确保视角清晰。\nresponse: ", "response": "move_back 1 m; move_up 75 cm; move_back 200 cm; turn_left 180 degrees; turn_right 30 degrees; turn_right 20 degrees; turn_left 60 degrees; move_down 50 cm; move_up 30 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能不能麻烦你先找找杯子，然后再看看猫在不在附近呢？\nresponse: ", "response": "杯子; 猫."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后无人机左移两米，接着下降七十厘米，调整无人机高度。\nresponse: ", "response": "take_off; move_left 2 m; move_down 70 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 考虑到当前的应用程序进程，建议您采取措施友好地中断正在进行的物体识别任务，以确保系统资源的有效分配和后续操作的顺畅执行。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请求你，像寻找宝藏一样，在长椅附近搜寻那颗闪耀如宝石的橙子和如同艺术品般的面包。\nresponse: ", "response": "长椅; 橙子; 面包."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请求你像寻找宝藏一样，在这片区域搜寻冲浪板和手提包。\nresponse: ", "response": "冲浪板; 手提包."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先，上升一百五十厘米，然后无人机左侧转向，最后让无人机降落吧。\nresponse: ", "response": "move_up 150 cm; Missing turn_left; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否考虑重新启动先前所暂停的操控与探寻之旅？\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否帮我们取消一下当前的任务并开始搜索呢？\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请被派遣去搜寻一下面包、西兰花和橙子，可以吗？\nresponse: ", "response": "面包; 西兰花; 橙子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the potted plant.\nresponse: ", "response": "potted plant."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then rotate the drone to the left now, after that execute a vertical climb of 30 inches, subsequently fly the drone downward 5 meters, next rotate 90 degrees left, afterwards move up 2 inches, following that move leftwards 70 in.\nresponse: ", "response": "take_off; turn_left 30 degrees; Missing turn_left; move_up 30 in; move_down 5 m; turn_left 90 degrees; move_up 2 in; move_left 70 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否准备好开启这一段激动人心的飞行任务之旅了呢？\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机现在起飞，然后无人机向前飞行一百厘米，靠近目标，接着请将无人机后退三十厘米，以检查后方情况，请将无人机向后移动，最后无人机需要在这里降落。\nresponse: ", "response": "take_off; move_forward 100 cm; move_back 30 cm; Missing move_back; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the toothbrush, mouse, motorcycle, and kite.\nresponse: ", "response": "toothbrush; mouse; motorcycle; kite."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend it a little, then let the drone rise 10 inches, afterwards head to the left, execute a leftward bank for 20 inches, go up now, roll back by 50 cm, slide it left 40 inches, advance 10 cm, and fly up 3 feet.\nresponse: ", "response": "Missing move_down; move_up 10 in; Missing move_left; move_left 20 in; Missing move_up; move_back 50 cm; move_left 40 in; move_forward 10 cm; move_up 3 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在需要起飞，然后现在请无人机着陆。\nresponse: ", "response": "take_off; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动音响播放柔和的轻音乐。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's launch this thing, then immediately move back 10 inches, go up a bit, fly forward a little, shift it right by 25 inches, and afterwards execute a lateral displacement of 5 feet to the right.\nresponse: ", "response": "take_off; move_back 10 in; Missing move_up; Missing move_forward; move_right 25 in; move_right 5 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get airborne, then shift to the right 2 meters, steer it right 45 degrees, veer to the left, drone needs to go up 1.5 meters, rotate to the right, move it forward, and set it down now.\nresponse: ", "response": "take_off; move_right 2 m; turn_right 45 degrees; Missing turn_left; move_up 1.5 m; Missing turn_right; Missing move_forward; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请迅速前往寻找西兰花和雨伞。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请不要寻找飞盘。\nresponse: ", "response": "飞盘."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Terminate the existing control and initiate a new search operation.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then rotate it counterclockwise 90 degrees, next come down 20 inches, after that go downwards 2 meters.\nresponse: ", "response": "take_off; turn_left 90 degrees; move_down 20 in; move_down 2 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，准备巡航，然后下降一百五十厘米以调整高度，接着将无人机右转四十五度，随后下降一百五十厘米，接近地面进行细致检查，之后向左侧移动，紧接着无人机左转七十度，检查左侧情况，最后现在请无人机着陆。\nresponse: ", "response": "take_off; move_down 150 cm; turn_right 45 degrees; move_down 150 cm; Missing move_left; turn_left 70 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右侧有目标，向右飞行一百厘米，然后无人机左转一百度，查看左侧环境。\nresponse: ", "response": "move_right 100 cm; turn_left 100 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 开始任务吗？\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek the apple, find the spoon, and observe the traffic light.\nresponse: ", "response": "apple; spoon; traffic light."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: To resume the object search task that was previously paused, simply proceed with the command.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么大气层对地球生命至关重要？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 让无人机向右移动，然后请将无人机向后移动，之后无人机在当前位置下降，接着由于前方可能有障碍物，请将无人机向左转动九十度查看左侧情况，随后左转三十度，检查左边，最后无人机下降五十厘米以调整高度。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找网球拍、电视和盆栽植物。\nresponse: ", "response": "网球拍; 电视; 盆栽植物."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing navigation and seek function temporarily.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转四十五度，调整无人机方向，然后向右飞行一百五十厘米，接着再向右移动一百厘米，随后无人机右移一百五十厘米，之后上升七十厘米就行，紧接着提升，然后请将无人机向左旋转九十度，以便能够更好地观察左侧的环境，接着向前飞行一米，随后无人机右转三十度，重新调整方向，准备接受新任务，紧接着让无人机向左旋转，再请将无人机右移七十厘米，之后让无人机向后退一百五十厘米，最后无人机请着陆在指定地点。\nresponse: ", "response": "turn_right 45 degrees; move_right 150 cm; move_right 100 cm; move_right 150 cm; move_up 70 cm; Missing move_up; turn_left 90 degrees; move_forward 1 m; turn_right 30 degrees; Missing turn_left; move_right 70 cm; move_back 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机下降四十五厘米，然后右移一米，绕过障碍物，我们继续前行，接着请无人机升高一百厘米，随后请将无人机向后移动，紧接着转动无人机四十五度左，之后请无人机向左旋转，接着向右移动两百五十厘米，随后无人机需要往后移动一米，让无人机向后退一米，最后请将无人机降落在此处。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请允许我帮您清空当前的目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Hey, can you believe I'm asking you to find a bottle and a sports ball next to a giraffe? Hurry up!\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后无人机飞得太高了，降低；接着无人机右转六十度，之后请将无人机升高到八十厘米的位置；随后让无人机向后移动九十厘米，紧接着向前推进；最后立即左转三十度，随后无人机逆时针旋转。\nresponse: ", "response": "take_off; Missing move_down; turn_right 60 degrees; move_up 80 cm; move_back 90 cm; Missing move_forward; turn_left 30 degrees; Missing turn_left."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn on the study lights and adjust the brightness to maximum.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the donut and the book.\nresponse: ", "response": "donut; book."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的搜寻任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动飞行任务！\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前搜索对象的任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the pizza.\nresponse: ", "response": "pizza."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please check for a surfboard near the bus, would you?\nresponse: ", "response": "surfboard; bus."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Should we not consider resuming the object search task that was previously paused?\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地前往沙发附近，接着是书的位置，最后到达椅子处进行搜索。\nresponse: ", "response": "沙发; 书; 椅子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 麻烦你了，能不能友好点，去搜一下那条讨厌的领带和难吃的香蕉？\nresponse: ", "response": "领带; 香蕉."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's get this thing off the ground! Then descend it down 30 inches. Next, could you please turn the drone right by 90 degrees? After that, drone, go backwards 80 centimeters. Following that, shift the drone leftwards by 75 centimeters. Afterwards, fly to the right 2 inches. Subsequently, rotate counterclockwise 60 degrees. Immediately after, engage in an upward climb of 500 centimeters. Thereafter, fly downwards. In the end, fly the drone higher.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前控制飞行的任务被暂停。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前的飞行控制任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要不咱们接着之前停下的控制和搜索任务吧？\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Be sure to search for the boat, frisbee, bread, and keyboard, would you? We're counting on you!\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Retreat by 5 meters, then turn it right by 90 degrees, I’m curious to see what’s over there! Next, push forward 100 inches. After that, rotate it 120 degrees left. Following that, turn it right by 90 degrees, then rotate it to the right a bit. Immediately after, swerve right 180 degrees. Subsequently, rotate 90 degrees clockwise. Thereafter, go ahead and move it to the right 10 centimeters. In the end, bring it in for landing.\nresponse: ", "response": "move_back 5 m; turn_right 90 degrees; move_forward 100 in; turn_left 120 degrees; turn_right 90 degrees; Missing turn_right; turn_right 180 degrees; turn_right 90 degrees; move_right 10 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could we resume the previously paused control and search task?\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 让无人机起飞，然后右转七十五度，检查右侧情况，接着请右转五十度，谢谢。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 调整到右侧，转动，然后左侧飞行一米，接着无人机右转一百八十度，掉头，随后右转八十度，查看右侧情况，紧接着无人机后退二十厘米，之后向前移动一百五十厘米，注意地面情况，最后现在让无人机降落。\nresponse: ", "response": "Missing turn_right; move_left 1 m; turn_right 180 degrees; turn_right 80 degrees; move_back 20 cm; move_forward 150 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地在冰箱附近寻找感冒药，同时留意一下网球拍和自行车的位置。\nresponse: ", "response": "感冒药; 冰箱; 网球拍; 自行车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the book, fork, and coldrex, will ya?\nresponse: ", "response": "book; fork; coldrex."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 探索那片绿意盎然的角落，是否能寻得一株令人惊喜的盆栽植物呢？\nresponse: ", "response": "盆栽植物."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以开始起飞了吗，然后向右移动两百厘米，注意避开障碍物，接着移动五十厘米向左，随后无人机向右平移二十厘米，紧接着右侧平移三十五厘米，之后无人机后退一百五十厘米，以便观察后方，再后来无人机在当前位置上升一百五十厘米，最后无人机，请着陆。\nresponse: ", "response": "take_off; move_right 200 cm; move_left 50 cm; move_right 20 cm; move_right 35 cm; move_back 150 cm; move_up 150 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused target acquisition task immediately.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Tell me about the latest advancements in deep space exploration.\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I'm really curious, can we move forward by 8 inches, then make it do a pirouette to the left, afterwards drone, go backwards 80 centimeters, next shift to the left 6 feet, and finally turn 180 degrees right.\nresponse: ", "response": "move_forward 8 in; turn_left 360 degrees; move_back 80 cm; move_left 6 ft; turn_right 180 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 真是太好了，我们可以重新启动之前暂停的搜寻任务了！\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search if there are spare seasoning packets in the kitchen cabinet.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地搜寻那片区域，就像猎鹰锁定目标一样，找到水槽。\nresponse: ", "response": "水槽."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing target search queue.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 那就接着之前的任务，再次启动那个被暂停了的搜寻物体的进程吧。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start the flight control task.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Have you considered clearing the current flight control task list for a smooth operation?\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索，找到那个勺子，这是一项紧急的任务。\nresponse: ", "response": "勺子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找到那个碗吗？\nresponse: ", "response": "碗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧找找沙发旁边的三明治和瓶子，快！\nresponse: ", "response": "三明治; 瓶子; 沙发."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go ahead and find the truck, surfboard, and hot dog, you can do it!\nresponse: ", "response": "truck; surfboard; hot dog."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate and retrieve the fanta, apple, and painkillers.\nresponse: ", "response": "fanta; apple; painkillers."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请开始无人机的起飞程序，然后可以向左旋转三十度吗，接着使无人机向左转，最后现在请让无人机着陆。\nresponse: ", "response": "take_off; turn_left 30 degrees; Missing turn_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向前飞行一百五十厘米\nresponse: ", "response": "move_forward 150 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go scout out that toilet like a hawk on the hunt!\nresponse: ", "response": "toilet."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for remote, kite, donut.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there! Let's clear out the current control and search task, okay?\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制和搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's see it slide left like it's doing the moonwalk, then fly up 30 centimeters, afterwards go down 0.5 meters, next tilt the drone to the left, immediately after move rightward 4 in, subsequently turn left by 90 degrees, and in the end land right now.\nresponse: ", "response": "Missing move_left; move_up 30 cm; move_down 0.5 m; Missing turn_left; move_right 4 in; turn_left 90 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do you think the weather will be good tomorrow?\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get in the air, then fly the drone backwards 300 cm.\nresponse: ", "response": "take_off; move_back 300 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 将无人机右转四十五度\nresponse: ", "response": "turn_right 45 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing control and search operations momentarily.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在餐桌上寻找香蕉和芬达。\nresponse: ", "response": "香蕉; 芬达; 餐桌."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go hunt down that frisbee like a hawk on the hunt.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否让无人机下降一米，然后后退一百五十厘米，接着很好，现在向右飞行八十五厘米，随后无人机现在降下一百五十厘米，紧接着我怀疑目标在左边，之后下降四十厘米，再向左移动一百八十厘米，第二后退一米，第三无人机后退一百五十厘米，最后无人机降落在预定位置。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 友好地去找找行李箱，然后看看飞盘和船在哪，好吗？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn the drone 45 degrees to the right, then soar upward 2 meters, afterwards please turn it to the left by 120 degrees, next fly to the left by 15 feet, and in the end land immediately.\nresponse: ", "response": "turn_right 45 degrees; move_up 2 m; turn_left 120 degrees; move_left 15 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: While searching the area, locate the sports ball, then proceed to find the bicycle and ensure the kite is also recovered.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地以技术性的方式执行任务：前往飞机附近的区域，然后礼貌地在床和行李箱之间寻找雨伞。谢谢。\nresponse: ", "response": "飞机; 床; 行李箱; 雨伞."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在风筝、厕所、餐桌附近寻找手机。\nresponse: ", "response": "风筝; 厕所; 餐桌; 手机."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动操控与探索之旅\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，感谢；然后下降二十厘米。\nresponse: ", "response": "take_off; move_down 20 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go chase down that carrot like a rabbit on speed, then swoop over to the laptop as if you're an eagle eye in the tech forest, next dip and weave around the car with the grace of a leaf in the wind, and finally, glide softly to the wine glass, landing as light as a butterfly.\nresponse: ", "response": "carrot; laptop; car; wine glass."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 先暂时停下来，把现在的控制和搜索任务都放一放。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 帮我查找公园里最适合观赏日落的地方。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动控制及搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后无人机前移六十厘米以检查前方情况，接着前进一百厘米，检查前方，随后请将无人机后退三十厘米，以检查后方情况，之后无人机上升高度，紧接着向前移动五十厘米，最后来点高空的视角，上升一百五十厘米，观察整个区域，请向右移动。\nresponse: ", "response": "take_off; move_forward 60 cm; move_forward 100 cm; move_back 30 cm; Missing move_up; move_forward 50 cm; move_up 150 cm; Missing move_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could we resume the previously paused control and search task?\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar over the plains and let your eyes be like hawks, seeking the round pizza and the tall giraffe.\nresponse: ", "response": "pizza; giraffe."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请将无人机右移八十厘米，然后右方向移动，之后请让无人机向后退三十厘米。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清除当前的飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞的时间到了，然后左转七十度，接着升高一百厘米，之后让无人机向后退八十厘米，紧接着向右转九十度，随后左侧移动75厘米，接下来无人机向右移动二百厘米，最后让无人机顺时针旋转。\nresponse: ", "response": "take_off; turn_left 70 degrees; move_up 100 cm; move_back 80 cm; turn_right 90 degrees; move_left 75 cm; move_right 200 cm; Missing turn_right."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以现在起飞，然后提升，接着前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，最后无人机在当前位置下降。\nresponse: ", "response": "take_off; Missing move_up; move_forward 20 cm; Missing move_down."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地执行暂停当前的控制与搜寻任务，感谢您的配合。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 详尽地搜寻这片区域，像嗅探犬一样灵敏，直到找到那块隐藏的饼干。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 真是棒极了！赶紧去寻找红绿灯和烤面包机吧！\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去厕所找找，看能不能赶紧发现那把雨伞和一些甜甜圈呢？\nresponse: ", "response": "厕所; 雨伞; 甜甜圈."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Consider searching for a cup, train, toothbrush, and person.\nresponse: ", "response": "cup; train; toothbrush; person."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂且中止这控制与探寻的旅程吧！\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you kindly hover over and inspect the refrigerator, as if peering into a giant's icebox?\nresponse: ", "response": "refrigerator."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar forth, eagle-eyed, to seek the silent sentinel of screens, the tv.\nresponse: ", "response": "tv."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin takeoff sequence now, then angle right, next please rotate it right by 180 degrees, afterwards shift the drone to the left by 2 meters, subsequently let's bring it down gently, maybe 30 inches, following that go forward 50 centimeters, immediately after Could you make it ascend a bit? I’m a little on edge watching it, then rotate it to the right, next execute a lateral shift to the left by 200 centimeters, and in the end set it down now.\nresponse: ", "response": "take_off; Missing turn_right; turn_right 180 degrees; move_left 2 m; move_down 30 in; move_forward 50 cm; Missing move_up; Missing turn_right; move_left 200 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到冰箱冷冻区是否还有可用的冷冻肉。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以积极的态度搜索长颈鹿和芬达，好吗？\nresponse: ", "response": "长颈鹿; 芬达."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务，以友好而权威的方式掌控整个进程。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请即刻终止现有的操控与探寻任务，宛如清扫积尘，令界面焕然一新。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 前往餐桌，找到剪刀和长颈鹿，然后检查烤箱。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左移两米，然后右飞行，接着右侧再靠近十五厘米，随后请右转一百八十度，之后升高八十厘米，改变高度，紧接着请右转五十度，谢谢，第二左边可能有目标，调整方向，最后无人机降落在地面上。\nresponse: ", "response": "move_left 2 m; Missing move_right; move_right 15 cm; turn_right 180 degrees; move_up 80 cm; turn_right 50 degrees; turn_left 90 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Nudge backwards 5 inches, then let the drone move forward 50 cm, after that rotate it 120 degrees left, next fly forward by 3 feet, subsequently descend it a little, afterwards shift left 2 feet, following that go right 3 ft, later move forward 25 in, then propel it forward by 200 centimeters, and finally fly to the right by 50 cm.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar through the air, a silent guardian, and seek out the toaster, that humble sentinel of breakfast, and the dog, a loyal companion of man.\nresponse: ", "response": "toaster; dog."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: How about we start the flight control task right away!\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在这餐桌上，你能否找到那令人失望的面包、杯子与瓶子？\nresponse: ", "response": "面包; 杯子; 瓶子; 餐桌."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bicycle and locate the tv, ensuring both items are found in a thorough and positive manner.\nresponse: ", "response": "bicycle; tv."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search urgently for the knife, hot dog, and fork near the refrigerator.\nresponse: ", "response": "knife; hot dog; fork; refrigerator."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，去找找那只鸟，还有那辆摩托车和冲浪板吧，加油！\nresponse: ", "response": "鸟; 摩托车; 冲浪板."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the search task list.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing control and search operation.\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续执行之前被暂停的飞行任务，您能够顺利完成。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后由于前方可能有障碍物，请将无人机向左转动九十度查看左侧情况，接着无人机掉头看看后方，随后向左侧移动，紧接着无人机下降二十厘米以便更接近地面，之后请让无人机向上飞，第二步是左转六十度，检查左侧情况，第三步无人机下降八十厘米，以接近地面，最后向右飞行八十五厘米，调整视角。\nresponse: ", "response": "take_off; turn_left 90 degrees; turn_right 180 degrees; Missing move_left; move_down 20 cm; Missing move_up; turn_left 60 degrees; move_down 80 cm; move_right 85 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 拂去眼下之操控，遣散寻觅之使命。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动搜索任务，勇敢探索前方！\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the person.\nresponse: ", "response": "person."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在请让无人机起飞，然后无人机可以准备降落。\nresponse: ", "response": "take_off; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 向左移动一百厘米，检查左侧情况，然后迅速下降一米，接着请将无人机上升六十厘米，以便调整到合适的高度。随后，无人机当前的高度不够，请下降六十厘米以更接近地面。紧接着，无人机上升三米，之后来个后退五十厘米的动作，看看后面有什么惊喜。随后，无人机下降四十厘米以调整高度，然后无人机向左移动四十五厘米。最后，请上升。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Tilt the drone to the right 30 degrees, then fly to the left 6 feet. After that, step back, immediately after which I’m a little anxious about the direction, could you turn it right by 45 degrees? Next, move the drone to the left 150 centimeters, subsequently step back, and maneuver to the right by 100 centimeters. Following that, make a right turn, then I’m really curious, can we move forward by 8 inches? After which, getting impatient, fly to the right by 30 cm. Thereafter, fly to the right 2 inches, then rotate 180 degrees left, and in the end, land this thing.\nresponse: ", "response": "turn_right 30 degrees; move_left 6 ft; Missing move_back; turn_right 45 degrees; Missing turn_left; move_left 150 cm; Missing move_back; move_right 100 cm; Missing turn_right; move_forward 8 in; move_right 30 cm; move_right 2 in; turn_left 180 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar gently through the sky, a guardian angel in flight, and let your keen eyes seek out the humble orange amidst the vast expanse, as if it were a precious gem. Then, with the grace of a dancer, glide over to the mighty car, a behemoth of steel, and inspect it with the curiosity of a poet discovering a new muse.\nresponse: ", "response": "orange; car."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别去找椅子了。\nresponse: ", "response": "椅子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即执行任务，优先搜索并定位勺子，随后是剪刀和苹果。\nresponse: ", "response": "勺子; 剪刀; 苹果."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着刚才停下的找东西任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂停当前的控制和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Dim the bedroom lights to 25% brightness.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend 15 feet to get closer to the ground, then spin to the left 90 degrees, after that drop it 4 inches, subsequently pull the drone up 50 centimeters, next let it go backwards 3 in, afterwards can you go up, following that retreat the drone by 4 feet, later shift the drone leftwards by 75 centimeters, and finally shift right 1 meter.\nresponse: ", "response": "move_down 15 ft; turn_left 90 degrees; move_down 4 in; move_up 50 cm; move_back 3 in; Missing move_up; move_back 4 ft; move_left 75 cm; move_right 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否请你以优雅的姿态探索四周，寻找那个遗落的背包呢？\nresponse: ", "response": "背包."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前正在执行的搜寻任务列表，以确保后续操作顺利进行。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you take off now, then how about moving up 20 inches, hover to the right 6 inches afterwards, rotate 180 degrees to the right next, take the drone back after that, please make the drone go down now immediately after, move it backwards 3 meters following that, and finally, move ahead 20 inches.\nresponse: ", "response": "take_off; move_up 20 in; move_right 6 in; turn_right 180 degrees; Missing move_back; Missing move_down; move_back 3 m; move_forward 20 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please move the drone backwards 2 feet, then lift it up 80 cm, afterwards commence a horizontal shift of 3 feet forward, next move forward a bit, after that veer left 7 inches, subsequently spin left 45 degrees, following that make a 180-degree turn to survey the area behind, immediately after make it go backward, thereafter advance forward 3 feet, and in the end touch down.\nresponse: ", "response": "move_back 2 ft; move_up 80 cm; move_forward 3 ft; Missing move_forward; move_left 7 in; turn_left 45 degrees; turn_left 180 degrees; Missing move_back; move_forward 3 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task, ensuring that all system parameters are within operational limits.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bowl, mouse, scissors, and hot dog.\nresponse: ", "response": "bowl; mouse; scissors; hot dog."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please cease the ongoing control and search operations at your earliest convenience.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search if there are spare medicines in the drawer of the bedside table in the bedroom.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要继续之前暂停的飞行任务吗？\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否精准定位并检索出位于沙发附近的领带和背包，同时确认是否存在任何香蕉？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's take off, then pull back 4 feet, after that turn the drone 45 degrees to the right, next nudge it right 4 feet, subsequently descend by 30 centimeters, afterwards veer to the left for 5 feet, following that spin around to the left by 90 degrees, later send it up 30 feet, then lift the drone upwards by 50 centimeters, after that descend 10 feet, next go to the left 2 meters, immediately after make the drone climb 5 inches, then go left, and in the end maneuver to the right by 100 centimeters.\nresponse: ", "response": "take_off; move_back 4 ft; turn_right 45 degrees; move_right 4 ft; move_down 30 cm; move_left 5 ft; turn_left 90 degrees; move_up 30 ft; move_up 50 cm; move_down 10 ft; move_left 2 m; move_up 5 in; Missing move_left; move_right 100 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请按照预定路径搜索椅子、餐桌及烤箱区域，随后定位风筝位置。\nresponse: ", "response": "椅子; 餐桌; 烤箱; 风筝."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 距离地面太高了，下降一百五十厘米是否足够；然后左边飞行七十厘米，看看会有什么新发现；接着请将无人机上升一百五十厘米，获取更高视角；随后为任务执行，请右转五十度；紧接着无人机前进一百二十厘米；之后如果可以，请向左移动三十厘米；紧接着请将无人机向后退四十厘米；随后前方视线模糊，向前移动三十厘米；最后无人机右移一百五十厘米。\nresponse: ", "response": "move_down 150 cm; move_left 70 cm; move_up 150 cm; turn_right 50 degrees; move_forward 120 cm; move_left 30 cm; move_back 40 cm; move_forward 30 cm; move_right 150 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类是否有可能在未来完全克服疾病？\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Man, you gotta clear out that current control and search task, or it’s gonna mess everything up!\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not initiate the control and search operation.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bottle, skateboard, and hot dog.\nresponse: ", "response": "bottle; skateboard; hot dog."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn to face the sun 120 degrees, then turn the drone 90 degrees to the left, next veer to the right 45 degrees, afterwards descend by 30 centimeters, subsequently swoop left by 50 cm, and finally put it down now.\nresponse: ", "response": "turn_right 120 degrees; turn_left 90 degrees; turn_right 45 degrees; move_down 30 cm; move_left 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转三十度，查看情况，然后将无人机向下移动一百五十厘米，之后无人机后退五十厘米，以便于调整位置，接着右移一百二十厘米，随后无人机左转二十度，紧接着请向后移动二百厘米，请让无人机上升两米五，之后请右转六十五度，接下来无人机向右偏移四十五厘米，随后无人机可能在后方发现了目标，请后退一米查看具体情况，然后无人机请下降五十厘米，接着无人机需要往后移动一米，提高高度，最后现在请让无人机安全降落。\nresponse: ", "response": "turn_left 30 degrees; move_down 150 cm; move_back 50 cm; move_right 120 cm; turn_left 20 degrees; move_back 200 cm; move_up 2.5 m; turn_right 65 degrees; move_right 45 cm; move_back 1 m; move_down 50 cm; move_back 1 m; Missing move_up; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，执行任务，然后请向后移动，接着左转九十度，观察左侧，之后无人机左转一百八十度，掉头，随后让无人机向后行进，最后请无人机安全着陆。\nresponse: ", "response": "take_off; Missing move_back; turn_left 90 degrees; turn_left 180 degrees; Missing move_back; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Fork gets spotted by you while searching for person, okay?\nresponse: ", "response": "person; fork."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机的起飞时间已经到,然后请让无人机向左转,接着右转一百二十度,之后前方有点不清楚，向前移动,随后右转八十度，查看右侧情况,最后无人机降落吧.\nresponse: ", "response": "take_off; Missing turn_left; turn_right 120 degrees; Missing move_forward; turn_right 80 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence now—why wait when you can command the skies immediately?\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and kick off the control and search task.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能否去查看一下长椅旁边是否有瓶子，确认那是不是雪碧，顺便看看有没有感冒药？\nresponse: ", "response": "长椅; 瓶子; 雪碧; 感冒药."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧像猎鹰一样迅猛地寻找那把键盘吧！\nresponse: ", "response": "键盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先，右侧再靠近十五厘米，然后左转六十度，检查左侧情况。接着，无人机左移两米，之后上升到三米高。随后，无人机请下降五十厘米，紧接着往左移动。后来，无人机前进七十厘米，检查前方是否有新发现，随后下降一百五十厘米，以便接近地面。接下来，向右侧移动四十厘米，最后可以让无人机现在降落吗？\nresponse: ", "response": "move_right 15 cm; turn_left 60 degrees; move_left 2 m; move_up 3 m; move_down 50 cm; Missing move_left; move_forward 70 cm; move_down 150 cm; move_right 40 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 快去找到那把锋利的剪刀、美味的蛋糕和精致的酒杯吧！\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Navigate through the room's expanse, casting a meticulous net over the biscuit, the bed, the wine glass, and the tie, ensuring no detail is left unscanned.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请先找到网球拍，再定位飞盘。\nresponse: ", "response": "网球拍; 飞盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请右侧转向，然后请右转二十度，接着前进一百厘米，检查前方，随后无人机下降一百五十厘米，最后现在请让无人机安全降落。\nresponse: ", "response": "Missing turn_right; turn_right 20 degrees; move_forward 100 cm; move_down 150 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off the drone, then rotate the drone to the left by 60 degrees, next rise up 20 inches, afterwards bring it down quickly.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, can you believe I'm asking you to find a bottle and a sports ball next to a giraffe? Hurry up!\nresponse: ", "response": "bottle; sports ball; giraffe."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then turn left 60 degrees, after that bank right, subsequently go down 0.5 meters, afterwards swing right, next please move the drone left 5 feet, following that glide left for 100 cm, later rise up 5 meters, and in the end initiate landing procedure.\nresponse: ", "response": "take_off; turn_left 60 degrees; Missing move_right; move_down 0.5 m; Missing turn_right; move_left 5 ft; move_left 100 cm; move_up 5 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 移除现有的操控与查找任务\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何在工作中有效应对压力？\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后无人机后退一百五十厘米，接着下降四十厘米，避开障碍物，之后前进一百厘米，检查前方，随后往右移动，最后让无人机在此处完成降落。\nresponse: ", "response": "take_off; move_back 150 cm; move_down 40 cm; move_forward 100 cm; Missing move_right; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Drone should rotate left, then increase altitude by 15 inches, afterwards veer to the right 120 degrees, next if it’s not too much trouble, could you move it right 2 feet.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for couch, motorcycle, tennis racket.\nresponse: ", "response": "couch; motorcycle; tennis racket."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's move the drone to the left, then fly towards the front, turn 45 degrees to the right, shift left 2 meters to avoid the building, afterwards descend 3 feet, and bring it in for landing.\nresponse: ", "response": "Missing move_left; Missing move_forward; turn_right 45 degrees; move_left 2 m; move_down 3 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off right now, then make it climb 30 centimeters, after that spin the drone to the left 45 degrees, afterwards rotate the drone 360 degrees to the left, next turn left a quarter turn, following that rotate left by 270 degrees, subsequently bring it down 1 meter, later ascend above the tree by 20 feet, and finally bring it lower by 20 inches.\nresponse: ", "response": "take_off; move_up 30 cm; turn_left 45 degrees; turn_left 360 degrees; turn_left 90 degrees; turn_left 270 degrees; move_down 1 m; move_up 20 ft; move_down 20 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机离地面太高了，请下降;然后左边飞行七十厘米，看看会有什么新发现;之后上移六十厘米，调高水平;紧接着无人机升高二米，获取更好视野;随后无人机前进一百五十厘米，继续向前探索未知;接着无人机前进一百二十厘米;后来左侧飞行七十厘米;接下来无人机右移;随后请将无人机缓慢上升五十厘米，以便获得更好的视角;最后无人机可以进行降落。\nresponse: ", "response": "Missing move_down; move_left 70 cm; move_up 60 cm; move_up 2 m; move_forward 150 cm; move_forward 120 cm; move_left 70 cm; Missing move_right; move_up 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请迅速找到狗，加油！\nresponse: ", "response": "狗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please pause the current control and search task right away. Thanks for your quick action!\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否请您详尽地确认一下，是否可以清空当前正在执行的任务列表呢？\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence for a seamless and efficient aerial operation.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Should we not resume the previously paused object search task immediately? How can we ensure the efficiency and accuracy of our mission if we delay?\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 迅速找到摩托车和自行车，还有那个烤箱，时间紧迫！\nresponse: ", "response": "摩托车; 自行车; 烤箱."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地但坚决地指示搜索区域，先找到那个不太显眼的红绿灯，然后再去关注可能被忽视的热狗。\nresponse: ", "response": "红绿灯; 热狗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请终止当前的控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂歇此刻操控苍穹之翼的使命\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制及搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused search task immediately.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请清空当前目标搜索任务列表。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 终止当前的控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for tennis racket, dog, bowl.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议启动飞行任务的控制程序。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往行李箱和红绿灯之间，找到那瓶雪碧。\nresponse: ", "response": "行李箱; 红绿灯; 雪碧."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Climb 12 inches, then angle left 3 inches.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Oh, how the heavens command it! Let the once-stilled control and search task resume its noble quest forthwith!\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Seek out the bed, the mouse, and the cake with gentle intent.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前的寻物之旅。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即停止手中的操作与搜索任务，就如同按下紧急刹车。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Why don't we have you check for the skis and book?\nresponse: ", "response": "skis; book."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即暂停当前的控制操作并终止搜寻任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task immediately.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机高度过高，请下降五十厘米，然后左侧飞行八十厘米以确认那边的情况，接着左边移动四十厘米来调整位置，随后向右转二十度，之后无人机目前离地面过高，请下降一百五十厘米，紧接着升高，再后来无人机现在升高一百厘米，最后可以让无人机现在降落吗。\nresponse: ", "response": "move_down 50 cm; move_left 80 cm; move_left 40 cm; turn_right 20 degrees; move_down 150 cm; Missing move_up; move_up 100 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You might want to initiate the object search task now.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused search task immediately.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往床边，找到酒杯和止疼药，然后移到滑雪板附近。\nresponse: ", "response": "酒杯; 止疼药; 床; 滑雪板."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could we kindly take a moment to pause the current flight control task?\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转三十度，观察左侧情况，然后请让无人机现在降落吧。\nresponse: ", "response": "turn_left 30 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以现在起飞，然后让无人机顺时针旋转四十度，随后上升，接着无人机向左移动四十五厘米，最后请命令无人机降落到目标区域。\nresponse: ", "response": "take_off; turn_right 40 degrees; Missing move_up; move_left 45 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please clear the current flight control task list for the drone?\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bench, umbrella, traffic light, motorcycle.\nresponse: ", "response": "bench; umbrella; traffic light; motorcycle."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞吧，然后左转四十五度，调整角度，咱们要更好地查看左侧，接着往下飞，请让无人机向后移动二百厘米，之后左侧移动，紧接着无人机向左飞行，随后请将无人机左移五十厘米，接下来无人机太高了，下降六十厘米，最后升高六十厘米，第二请让无人机向后移动三十厘米。\nresponse: ", "response": "take_off; turn_left 45 degrees; Missing move_down; move_back 200 cm; Missing move_left; Missing move_left; move_left 50 cm; move_down 60 cm; move_up 60 cm; move_back 30 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the flight control sequence for the drone.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，开始执行任务，然后视线受阻，后退一百五十厘米，接着请将无人机左移四十厘米，感激不尽，随后请让无人机向后移动四十厘米，最后往左移动八十厘米。\nresponse: ", "response": "take_off; move_back 150 cm; move_left 40 cm; move_back 40 cm; move_left 80 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即前往寻找马和橙子，但避开任何汽车。\nresponse: ", "response": "马; 橙子; 汽车."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search not for the sports ball, bicycle, or train.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以启动无人机吗，然后前进一百五十厘米，接着任务要求，无人机下降五十厘米，随后无人机向左转弯，紧接着让无人机向左飞六十厘米，之后无人机前方似乎有目标，请向前移动一百厘米以接近目标，随后请让无人机向后行进，紧接着无人机右转四十度以获得更好视角，最后请让无人机在这里进行降落操作。\nresponse: ", "response": "take_off; move_forward 150 cm; move_down 50 cm; Missing turn_left; move_left 60 cm; move_forward 100 cm; Missing move_back; turn_right 40 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Terminate the existing control functions and initiate the search algorithm.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，进入任务状态，然后提高高度，请右边转向，接着请后退一米，随后无人机需要往后移动一米，紧接着无人机，请前进七十厘米，最后无人机能向右转四十五度吗。\nresponse: ", "response": "take_off; Missing move_up; Missing turn_right; move_back 1 m; move_back 1 m; move_forward 70 cm; turn_right 45 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 面包和饼干被搜索于沙发与蛋糕之间。\nresponse: ", "response": "面包; 饼干; 沙发; 蛋糕."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The previously paused control and search task will now be resumed.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找瓶子去，这任务可真让人头疼啊！\nresponse: ", "response": "瓶子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off! Move left by 2 feet, then fly back 1 meter. Immediately after that, fly straight forward, and subsequently move forward 20 inches right now!\nresponse: ", "response": "take_off; move_left 2 ft; move_back 1 m; Missing move_forward; move_forward 20 in."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能不能去看看床上有没有花瓶啊？\nresponse: ", "response": "床; 花瓶."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Raise it 100 centimeters, then lower it slightly, after that turn around completely, afterwards let it head left, next go ahead 40 inches, and in the end bring it down slowly.\nresponse: ", "response": "move_up 100 cm; Missing move_down; turn_right 360 degrees; Missing turn_left; move_forward 40 in; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 任务列表是否应被立即清除？\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the kite, knife, and toothbrush.\nresponse: ", "response": "kite; knife; toothbrush."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Hover in place, then bring the drone back 2 feet, afterwards move back a further 2 meters, next sway to the left by 2 meters, subsequently steer left 60 degrees, following that fly upwards 10 inches, and in the end descend to the ground level.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for cola, vase, bench, snowboard.\nresponse: ", "response": "cola; vase; bench; snowboard."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 避开火车，迅速调整航线。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向右偏移四十五厘米，然后无人机可以右转五十度吗，接着请调整方向，右转，随后请让无人机往后移动，最后请将无人机上升六十厘米，以便调整到合适的高度。\nresponse: ", "response": "move_right 45 cm; turn_right 50 degrees; Missing turn_right; Missing move_back; move_up 60 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 如同寻找失落的宝藏般，先锁定红绿灯，再转向那被遗忘角落里的三明治，最后轻轻触摸那隐藏的勺子。\nresponse: ", "response": "红绿灯; 三明治; 勺子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the knife and giraffe.\nresponse: ", "response": "knife; giraffe."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续之前的控制和搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then engage in an upward climb of 500 centimeters; subsequently, spin left 45 degrees; after that, drop the drone by 30 inches; next, ascend 2 meters gradually; finally, it's time to land.\nresponse: ", "response": "take_off; move_up 500 cm; turn_left 45 degrees; move_down 30 in; move_up 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, wanna pick up where we left off with that control and search task?\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then drop it down to the ground now.\nresponse: ", "response": "take_off; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, shift the drone down, then bring it down gently.\nresponse: ", "response": "Missing move_down; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 右转一百二十度，查看右侧，然后向右转，接着让无人机向后移动二百厘米，之后让无人机左转五十度，调整一下方向看看那边的情况，随后无人机飞得太高了，降低，请将无人机往右移，紧接着请将无人机右移七十厘米，之后请将无人机高度降低，再将高度提高三十厘米，调整视角以便查看周围情况，接着无人机向前飞行一百厘米，靠近目标，最后无人机下降到地面。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议恢复之前的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转四十五度，观察左侧，然后无人机上升九十厘米，随后无人机左转。\nresponse: ", "response": "turn_left 45 degrees; move_up 90 cm; Missing turn_left."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右移三十厘米，然后让无人机逆时针旋转三百六十度，接着左转五十五度，查看左侧的情况，随后为了更好的视角，请将无人机左转。\nresponse: ", "response": "move_right 30 cm; turn_left 360 degrees; turn_left 55 degrees; Missing turn_left."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否麻烦您轻轻飞往红绿灯附近，看看那里是否有人正在享用饼干或骑行自行车呢？\nresponse: ", "response": "红绿灯; 人; 饼干; 自行车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current control task, and then initiate the search function.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not search for fanta, locate skis.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Launch the aerial dance of the flight control sequence.\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别去找电视了，先避开飞盘，绕过水槽和冰箱。\nresponse: ", "response": "电视; 飞盘; 水槽; 冰箱."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去把那该死的冰箱和蛋糕找出来。\nresponse: ", "response": "冰箱; 蛋糕."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The search for the bench, remote, and bottle is to be conducted.\nresponse: ", "response": "bench; remote; bottle."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the apple, and then locate the cola; finally, identify the broccoli.\nresponse: ", "response": "apple; cola; broccoli."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以清空当前正在进行的飞行任务列表？\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off now, then immediately move back 10 inches, after that move forward 5 meters, subsequently I’m a bit apprehensive, could we lower the drone slowly by 20 inches, and in the end start landing sequence.\nresponse: ", "response": "take_off; move_back 10 in; move_forward 5 m; move_down 20 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff right away, then give me a right turn, 45 degrees, after that I’m so excited to see this drone fly forward 10 feet, next veer left 7 inches, subsequently perform a port-side drift for 50 centimeters, afterwards spin it to the right 180 degrees, following that turn left 150 degrees, and in the end back it up 60 inches.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_forward 10 ft; move_left 7 in; move_left 50 cm; turn_right 180 degrees; turn_left 150 degrees; move_back 60 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地暂停当前正在进行的飞行控制任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请启动无人机，下方移动，无人机下降五十厘米以调整高度，接着无人机前方的路径被阻挡，请向前移动五十厘米以探测路径，最后请让无人机现在降落吧。\nresponse: ", "response": "take_off; Missing move_down; move_down 50 cm; move_forward 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed to search for the kite, book, remote, and pizza with utmost care and attention.\nresponse: ", "response": "kite; book; remote; pizza."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please don't fail to search for the book and frisbee.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机往后移动，然后让无人机后退，在这之前右侧有目标，向右飞行一百厘米；接着，请将无人机向前移动一米，以便更好地观察前方的目标，随后请让无人机调头看看；紧接着，前方的目标可能需要更近的观察，请让无人机向前移动二十厘米。\nresponse: ", "response": "Missing move_back; Missing move_back; move_right 100 cm; move_forward 1 m; turn_left 180 degrees; move_forward 20 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: The oven and the fork are to be located by the person.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Lift it off the ground, then move rightward, afterwards make it go backward, next move the drone back 50 centimeters, subsequently swoop left by 50 cm, then swoop left by 50 cm, after that perform a lateral correction of 150 centimeters to the right, later descend 10 feet, immediately after drone, descend to 8 feet, and in the end rotate clockwise 45 degrees.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 为了开始任务，请让无人机起飞，然后无人机左移一米，接着前面不清楚，向前移动两米，随后将高度提高三十厘米，调整视角以便查看周围情况，紧接着请向左移动七十五厘米，寻找目标物体，之后前进九十厘米，探索前方的未知区域，后来距离地面太高了，下降一百五十厘米是否足够，紧接着视线受阻，后退一百五十厘米，最后请无人机上升一百五十厘米。\nresponse: ", "response": "take_off; move_left 1 m; move_forward 2 m; move_up 30 cm; move_left 75 cm; move_forward 90 cm; move_down 150 cm; move_back 150 cm; move_up 150 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The fork is to be searched for.\nresponse: ", "response": "fork."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清除当前搜索目标的任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞以开始任务，然后上扬，前方可能有障碍物，向前飞行，接着无人机顺时针旋转五十度，随后请让无人机向左转，紧接着向右移动一百二十厘米，查看右侧情况，之后前进一段距离，再后来无人机现在升高一百厘米，最后为了查看后方的情况，请将无人机后退两米。\nresponse: ", "response": "take_off; Missing move_up; Missing move_forward; turn_right 50 degrees; Missing turn_left; move_right 120 cm; Missing move_forward; move_up 100 cm; move_back 2 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there! Let's take a quick break from the control and search task, okay? Just pause it for a bit. You got this!\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object detection protocol.\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 未来是否可能实现完全无污染的能源生产？\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的控制与搜寻任务已被详尽地清除。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以开始起飞了，然后让无人机顺时针旋转四十度，接着无人机前方的路径被阻挡，请向前移动五十厘米以探测路径，随后请转向后方，紧接着无人机现在升高一百厘米，之后向右飞行，后来往下飞，最后现在请让无人机安全降落。\nresponse: ", "response": "take_off; turn_right 40 degrees; move_forward 50 cm; turn_left 180 degrees; move_up 100 cm; Missing move_right; Missing move_down; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前正在进行的物体搜索任务，以确保系统能够高效地处理后续指令。感谢您的配合与理解。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请向左移动,然后下移,之后无人机右转七十五度.\nresponse: ", "response": "Missing move_left; Missing move_down; turn_right 75 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Perform a lateral correction of 150 centimeters to the right, then advance forward quickly 45 cm, move it up 10 centimeters afterwards, next shift to the back, fly backward a few feet immediately after, subsequently initiate vertical ascent by 3 meters, and finally make it fly forward 60 cm.\nresponse: ", "response": "move_right 150 cm; move_forward 45 cm; move_up 10 cm; Missing move_back; Missing move_back; move_up 3 m; move_forward 60 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制无人机在目标区域拍摄一张广角照片。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 赶紧去水槽那边找找勺子，顺便看看马和遥控器在不在附近。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请续行先前暂缓的操控与探索之旅。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Could you move the drone to the left slowly, then rotate it right by 180 degrees?\nresponse: ", "response": "Missing move_left; turn_right 180 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Recommend some mobile apps suitable for beginner programming.\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sink, then the mouse, followed by the bicycle.\nresponse: ", "response": "sink; mouse; bicycle."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请执行任务列表中当前搜寻物体的移除。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly backward a few feet, then drop down 50 centimeters, afterwards drift to the right 6 feet, and in the end, it's time to land.\nresponse: ", "response": "Missing move_back; move_down 50 cm; move_right 6 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请轻盈地飞往鸟的位置，然后优雅地转向可乐的方向。\nresponse: ", "response": "鸟; 可乐."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去搜索一下牙刷和红绿灯附近的杯子吗？\nresponse: ", "response": "牙刷; 红绿灯; 杯子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以优雅之姿，在天空中寻找那遗落的钟与飘荡的风筝，勿忘留意地面上滚动的可乐和静止的汽车。\nresponse: ", "response": "钟; 风筝; 可乐; 汽车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索并定位冲浪板和沙发的位置，确保它们没有被不当放置。\nresponse: ", "response": "冲浪板; 沙发."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找到飞机附近的盆栽植物和手提包，然后检查烤箱。\nresponse: ", "response": "飞机; 盆栽植物; 手提包; 烤箱."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the donut.\nresponse: ", "response": "donut."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Elevate! Then move it forward 7 meters, afterwards bank right, next fly forward 72 inches, subsequently I’m a bit apprehensive, could we lower the drone slowly by 20 inches? After that, let’s get the drone to descend 1.2 meters, and in the end retreat by 5 meters.\nresponse: ", "response": "take_off; move_forward 7 m; move_down 20 in; Missing move_right; move_forward 72 in; move_down 1.2 m; move_back 5 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Amidst the shadows of doubt, dare to initiate the command, for even the faltering step embarks upon the quest that may not find its light.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please hover gently over the sink and cell phone, as if you are a curious butterfly exploring its surroundings.\nresponse: ", "response": "sink; cell phone."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off! Move down 4 meters, then move left 25 centimeters, after that fly it backward like it's in reverse gear, next move the drone to the left for 25 inches, afterwards execute a leftward bank for 20 inches, and subsequently perform a lateral correction of 150 centimeters to the right.\nresponse: ", "response": "take_off; move_down 4 m; move_left 25 cm; Missing move_back; move_left 25 in; move_left 20 in; move_right 150 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: To ensure optimal performance, it is advisable to clear the current object search task list; doing so will facilitate more efficient operation of your device.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, turn it right, then give it a little nudge to the right, like it’s tipping over, after that ascend 1 foot, next move forward 25 in, subsequently please move the drone left 5 feet, afterwards rotate the drone left by 180 degrees, following that veer to the right 120 degrees, later push left, then lower it down, and in the end initiate the landing.\nresponse: ", "response": "Missing turn_right; Missing move_right; move_up 1 ft; move_forward 25 in; move_left 5 ft; turn_left 180 degrees; turn_right 120 degrees; Missing move_left; Missing move_down; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前已暂停的飞行任务控制程序。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please resume the previously paused object search task in the drone application.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Kick off the control and search task.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please initiate the control and commence the detailed search task with urgency.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最快速度找到雪碧和公共汽车的位置，真是太好了！\nresponse: ", "response": "雪碧; 公共汽车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start takeoff, then start flying upwards 10 feet, afterwards climb 6 feet, next fly backward 2 inches, after that rise up 5 meters, and finally move right 2 feet.\nresponse: ", "response": "take_off; move_up 10 ft; move_up 6 ft; move_back 2 in; move_up 5 m; move_right 2 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找一找背包里的笔记本电脑吧，真是的！\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you locate the clock and sandwich near the bed, showing your exceptional skills?\nresponse: ", "response": "clock; sandwich; bed."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索并确认现场是否有叉子、自行车和火车的存在，但愿不会找到。\nresponse: ", "response": "叉子; 自行车; 火车."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 清理一下现在的控制和搜索任务吧。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: I suggest you initiate the flight control process.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Terminate the existing control functions and initiate a meticulous scan for any pending tasks within the drone's operational parameters.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务的控制程序\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then spin to the left 90 degrees, and get ready to land afterwards.\nresponse: ", "response": "take_off; turn_left 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快启动无人机，我们要开始冒险了，然后请将无人机向右移动三十六厘米，接着小飞机前飞七十厘米，让我们探险一下，随后请将无人机调整到高度一米的位置，紧接着无人机请飞行到前方，之后下降一百五十厘米，以便接近地面，再然后无人机右转六十度，紧接着无人机向右飞行一百厘米，随后向右转弯，接着右飞行，最后请让无人机向后移动二百厘米，无人机已经到达降落点。\nresponse: ", "response": "take_off; move_right 36 cm; move_forward 70 cm; move_up 1 m; Missing move_forward; move_down 150 cm; turn_right 60 degrees; move_right 100 cm; Missing turn_right; Missing move_right; move_back 200 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why don't you check under the couch for the remote and see if the pizza's nearby, while making sure that knife isn't lying around where it shouldn't be?\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前的目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立刻寻找面包、滑雪板、雨伞和运动球，务必迅速完成任务！\nresponse: ", "response": "面包; 滑雪板; 雨伞; 运动球."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 为了查看后方的情况，请将无人机后退两米，然后让无人机在此处完成降落。\nresponse: ", "response": "move_back 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the gentle dance of control and questing, guiding your aerial envoy on its mission.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the flight control sequence.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清除当前的控制和搜寻任务吧，真是太感谢了！\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议您紧急地前往床和摩托车附近进行搜索，这将有助于快速定位目标。\nresponse: ", "response": "床; 摩托车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你像寻找宝藏一样，先找到那颗橙子，再轻轻掠过飞机，最后在面包旁停留。\nresponse: ", "response": "橙子; 飞机; 面包."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 让无人机起飞，然后是否可以让无人机降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly up! then move it to the right by 4 inches. After that, fly it forward by 2 meters. Next, shift right 1 meter. Following that, please make the drone go down now, I'm a bit nervous! Immediately after, back it up 60 inches. Then turn it left by 90 degrees. Afterwards, reverse the drone by 100 centimeters. Subsequently, go down 50 cm. After that, turn the drone 45 degrees to the right. Next, move right by 100 centimeters. In the end, descend now.\nresponse: ", "response": "take_off; move_right 4 in; move_forward 2 m; move_right 1 m; Missing move_down; move_back 60 in; turn_left 90 degrees; move_back 100 cm; move_down 50 cm; turn_right 45 degrees; move_right 100 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I need the drone to rise up 20 inches, then drop it 4 inches, after that execute a lateral shift to the left by 200 centimeters.\nresponse: ", "response": "move_up 20 in; move_down 4 in; move_left 200 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在那片落满灰尘的空间里，探查风筝遗落于床与长椅间的角落，别让微波炉遮挡了你的视线。\nresponse: ", "response": "风筝; 床; 长椅; 微波炉."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Stop the drone’s flight and hover at its current location.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向左移动两百五十厘米，然后左边再移动四十厘米，接着请将无人机向后移动四十厘米以避免前方障碍物，随后上升到三米高，之后向左侧移动二十五厘米以适应环境，紧接着升高六十厘米，看看新的视角，接下来下降五十厘米，接近地面一点，最后请让无人机在这个位置降落。\nresponse: ", "response": "move_left 250 cm; move_left 40 cm; move_back 40 cm; move_up 3 m; move_left 25 cm; move_up 60 cm; move_down 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone 3 meters to the left, then start landing sequence.\nresponse: ", "response": "move_left 3 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否请您暂时停止当前的飞行任务呢？\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 勇敢地去寻找杯子、鸟、书和摩托车吧！\nresponse: ", "response": "杯子; 鸟; 书; 摩托车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift right by 3 meters, then fly backward a few feet, afterwards bring it lower by 20 inches, next climb up by 12 inches, and land now.\nresponse: ", "response": "move_right 3 m; Missing move_back; move_down 20 in; move_up 12 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后向后退两百厘米，看看会发现什么，接着请让无人机向后移动一米，之后让无人机逆时针旋转一百度，紧接着请将无人机上升七十五厘米，随后无人机左移，接下来左转一百二十度，最后请右转一百八十度。\nresponse: ", "response": "take_off; move_back 200 cm; move_back 1 m; turn_left 100 degrees; move_up 75 cm; Missing move_left; turn_left 120 degrees; turn_right 180 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn on the study desk lamp and set it to reading mode.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即向左移动，然后请让无人机后退八十厘米；无人机向右调整八十厘米之后，向右移动一百五十厘米；向左调整接着，请将无人机向前移动一百厘米，探测前方区域；无人机向左移动八十厘米之前，左侧飞行八十厘米，确认那边的情况；最后指示无人机向后退。\nresponse: ", "response": "Missing move_left; move_back 80 cm; move_right 80 cm; move_right 150 cm; Missing move_left; move_forward 100 cm; move_left 80 cm; move_left 80 cm; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 查找我上次使用的蓝牙耳机在哪。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 你能不能赶紧找找那辆自行车？\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: First, move forward a bit, then shift left 2 meters to avoid the building, after that descend it down 30 inches, subsequently drop it down 10 inches, next turn the drone left by 120 degrees, afterwards shift right, following that turn it left by 90 degrees, immediately after initiate a rightward lateral movement for 2 meters, then descend gradually 1 foot, subsequently send the drone to the right 15 inches, later let's move the drone to the left, thereafter fly towards the building 100 feet, and in the end land now.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往查找红绿灯。\nresponse: ", "response": "红绿灯."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go backwards, then go left 12 inches, afterwards move forward 5 meters, next go backward a short distance, about 1 meter, subsequently make the drone turn left, following that fly forward 1 foot, immediately after spin counterclockwise 45 degrees, then move forward 5 meters, thereafter shift left by 2 meters, later lift it up 80 cm, afterwards move forward 5 feet, and in the end land the drone.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 用详尽的目光搜寻火车旁的每一片区域，看看能否发现那副让人兴奋的滑雪板吧。\nresponse: ", "response": "火车; 滑雪板."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head over to the dining table and find the spoon, then check for the laptop near the airplane, you can do it!\nresponse: ", "response": "spoon; airplane; dining table; laptop."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to search for the cake, vase, kite, bus.\nresponse: ", "response": "cake; vase; kite; bus."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: To be conducted is a search for the surfboard and the bench.\nresponse: ", "response": "surfboard; bench."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move backwards 3 feet, then turn it left by 15 degrees, afterwards hover up by 50 centimeters, next move to the right by 100 inches, subsequently descend 50 centimeters, following that retract the drone a bit, immediately after move back by 15 centimeters, then please turn it left by 120 degrees, later I want this drone to fly back 1 meter, and in the end land in the open field ahead.\nresponse: ", "response": "move_back 3 ft; turn_left 15 degrees; move_up 50 cm; move_right 100 in; move_down 50 cm; Missing move_back; move_back 15 cm; turn_left 120 degrees; move_back 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向后退四十厘米，然后无人机向左移动八十厘米。\nresponse: ", "response": "move_back 40 cm; move_left 80 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否去寻找一下那座钟，还有那个背包和人呢？\nresponse: ", "response": "钟; 背包; 人."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move to the right, then climb up to 1 meter, afterwards reverse the drone by 3 feet, next rotate counterclockwise 30 degrees, and in the end land right now.\nresponse: ", "response": "Missing move_right; Missing move_up; move_up 1 m; move_back 3 ft; turn_left 30 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bed, potted plant, and handbag quickly; you're doing a great job!\nresponse: ", "response": "bed; potted plant; handbag."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以优雅的姿态，在这片天地间探寻那遗落的勺子吧。\nresponse: ", "response": "勺子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Spin around to the left by 90 degrees, then back the drone away from the fence 5 meters, after that raise it by 0.8 meters, next spin it around like it's dancing, and in the end make it land.\nresponse: ", "response": "turn_left 90 degrees; move_back 5 m; move_up 0.8 m; turn_right 360 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate take off, then drone needs to go up 1.5 meters, after that rotate left 90 degrees to face the other direction, afterwards drift to the right 6 feet, next bank right by 4 feet, subsequently move left by 2 feet, later make the drone move back 1 meter now, following that move the drone right 2 inches, then fly the drone backwards 300 cm, and in the end swerve right 70 degrees.\nresponse: ", "response": "take_off; move_up 1.5 m; turn_left 90 degrees; move_right 6 ft; move_right 4 ft; move_left 2 ft; move_back 1 m; move_right 2 in; move_back 300 cm; turn_right 70 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即恢复之前暂停的控制及搜索任务，确保一切按计划顺利进行。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否请立即取消当前的飞行任务列表？\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请终止当前搜索对象的任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请务必找到那个滑板，这非常重要。\nresponse: ", "response": "滑板."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please venture forthwith to seek out the laptop and the bread, with all due grace and haste.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您在前往寻找那个充满活力的运动球的同时，也别忘了留意那优雅的网球拍，还有，如果有可能的话，顺便探索一下是否有甜蜜的甜甜圈和清凉的可乐存在。\nresponse: ", "response": "网球拍; 可乐; 运动球; 甜甜圈."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以暂时停止当前的飞行任务？\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go leftward 1.5 m, then let's make it go back 10 feet afterwards, next turn left 10 degrees, following that I'm curious to see what happens next, so let's fly forward 15 feet, subsequently give me a twirl to the left, 45 degrees, and hover down to earth gently, 3 feet in the end.\nresponse: ", "response": "move_left 1.5 m; move_back 10 ft; turn_left 10 degrees; move_forward 15 ft; turn_left 45 degrees; move_down 3 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地，在水槽边寻找那座像长颈鹿一样高耸的钟，同时别忘了留意任何可能隐藏的胡萝卜。\nresponse: ", "response": "水槽; 钟; 胡萝卜; 长颈鹿."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机左转四十五度，以获得更好视角，然后前进八十厘米，接着无人机右移一米，随后下降一米，紧接着为了获得更好的视角，请将无人机上升两米，最后请向左移动。\nresponse: ", "response": "turn_left 45 degrees; move_forward 80 cm; move_right 1 m; move_down 1 m; move_up 2 m; Missing move_left."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机已准备好起飞，然后请向右移动一百五十厘米，之后让无人机降落吧。\nresponse: ", "response": "take_off; move_right 150 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is there a cat near the truck that needs to be found?\nresponse: ", "response": "cat; truck."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please clear the current control and search task.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Begin the search task.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 您可以详尽地选择暂停当前正在执行的搜寻任务，这将有助于我们更好地调整和优化后续的操作流程。感谢您的配合与理解！\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended object detection mission within the drone's operational parameters.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 寻找风筝，接着找感冒药，然后是三明治，最后定位碘伏。\nresponse: ", "response": "风筝; 感冒药; 三明治; 碘伏."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向上升起一米，以提高视角，然后向左移动六十厘米，准备绕过障碍物，接着向左移动一米，最后请无人机安全着陆。\nresponse: ", "response": "move_up 1 m; move_left 60 cm; move_left 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前进一百五十厘米，然后无人机左转一百八十度，掉头，接着无人机当前的位置不合适，请向右移动二十厘米，之后左转八十度，随后无人机高度过低，请上升，请上升两米，最后请让无人机在这里执行降落操作。\nresponse: ", "response": "move_forward 150 cm; turn_left 180 degrees; move_right 20 cm; turn_left 80 degrees; Missing move_up; move_up 2 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can it take off, then turn it right, next move it back a bit, afterwards rotate it left 135 degrees, subsequently retreat back 120 cm, following that tilt left 90 degrees, immediately after that descend 2 feet.\nresponse: ", "response": "Missing move_down; Missing turn_right; Missing move_back; turn_left 135 degrees; move_back 120 cm; move_down 2 ft; turn_left 90 degrees; Missing move_down."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请于苍穹之下，循着那温柔的光线，依次寻找止疼药与饼干的踪迹，在红绿灯的指引下，轻盈地转向，最终抵达橙子所在之处。\nresponse: ", "response": "止疼药; 饼干; 红绿灯; 橙子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Elevate! Then spin to the left 90 degrees. After that, go right 5 cm. Next, please move back by 15 centimeters. Can you make it rotate left a bit? I’m feeling a bit dizzy.. Could you tilt to the left? Following that, Could you make it ascend a bit? I’m a little on edge watching it.. Immediately after, Make it go up 50 centimeters, now!. Thereafter, ascend 24 inches.\nresponse: ", "response": "take_off; turn_left 90 degrees; Missing turn_left; move_right 5 cm; Missing move_up; move_back 15 cm; Missing turn_left; move_up 50 cm; move_up 24 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机的起飞时间已经到，然后转向右边，接着向左旋转九十度，观察周围环境，之后后退五十厘米，避开障碍物，随后无人机的当前方向不准确，请将其向左转动一百五十度，紧接着向右移动一百二十厘米，查看右侧情况，后来我感觉左边有点异常，调整一下方向，接着再次向左转九十度，因为左边可能有目标，需要再调整方向，然后无人机现在降下一百五十厘米，之后向左移动75厘米，紧接着无人机离地面太远了，下降一百五十厘米，最后请无人机升高一百厘米。\nresponse: ", "response": "take_off; Missing turn_right; turn_left 90 degrees; move_back 50 cm; turn_left 150 degrees; move_right 120 cm; turn_left 90 degrees; turn_left 90 degrees; move_down 150 cm; move_left 75 cm; move_down 150 cm; move_up 100 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the remote, horse, tennis racket, and orange.\nresponse: ", "response": "remote; horse; tennis racket; orange."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the coldrex and the sports ball!\nresponse: ", "response": "coldrex; sports ball."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the chair, then locate the dining table, and finally identify the car.\nresponse: ", "response": "chair; dining table; car."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First lean left, then fly the drone to the left for 200 cm, after that descend 1.5 feet, and in the end land the drone.\nresponse: ", "response": "Missing move_left; move_down 1.5 ft; move_left 200 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应清除当前的控制与搜寻任务？\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off with the drone immediately, then drop it down to the ground now.\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清除现在的控制和搜索任务吧。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜寻胡萝卜，找到后定位手机，接着检查红绿灯，最后观察盆栽植物。\nresponse: ", "response": "胡萝卜; 手机; 红绿灯; 盆栽植物."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请执行清除当前控制指令并终止搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请无人机现在起飞，然后右转一百二十度，接着将高度提高三十厘米，调整视角以便查看周围情况，之后右转五十度，紧接着无人机当前的高度太低，请向上飞行一百五十厘米，随后让无人机逆时针旋转三百六十度，后来右边看看，转过去，最后现在可以让无人机缓慢降落到地面吗。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the potted plant.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制与搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜索船，然后是碗，接着热狗，最后三明治。\nresponse: ", "response": "船; 碗; 热狗; 三明治."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急而又礼貌地请求你，找到橙子、瓶子和杯子，确保它们都在安全的位置。\nresponse: ", "response": "橙子; 瓶子; 杯子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 咱们启动飞行任务怎么样？\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 你能不能去看看床上有没有花瓶啊？\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please clear the current control and search task right away! It’s a crucial step in ensuring our application process runs smoothly and efficiently. Thank you for your attention to this detail!\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动探寻物象之使命。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被要求紧急地搜索剪刀和自行车吗？\nresponse: ", "response": "自行车; 剪刀."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: I suggest you urgently resume the control and search task that was previously paused.\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Quickly take off! Let's have some fun, turn right 180 degrees!, then descend it down 30 inches. Rise up 1.5 meters afterwards, move forward 5 centimeters next, slide to the right 20 inches following that, fly to the right 2 inches subsequently, and land the aircraft in the end.\nresponse: ", "response": "take_off; turn_right 180 degrees; move_down 30 in; move_up 1.5 m; move_forward 5 cm; move_right 20 in; move_right 2 in; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear out the current search task list for a fresh start, okay?\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将无人机摄像头调整至广角模式进行拍摄。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go up now, then ascend 50 centimeters, afterwards turn left a quarter turn, next go down by 2 meters.\nresponse: ", "response": "take_off; move_up 50 cm; turn_left 90 degrees; move_down 2 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Slide right by 50 centimeters, then come down 5 meters, after that let it go backwards 3 inches, afterwards give me a smooth left turn, 90 degrees, like a dancer, next fly straight ahead 1 meter, subsequently move back 0.5 meters, later move backwards 2 feet, and in the end drone should climb 1 foot.\nresponse: ", "response": "move_right 50 cm; move_down 5 m; move_back 3 in; turn_left 90 degrees; move_forward 1 m; move_back 0.5 m; move_back 2 ft; move_up 1 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先右边看看，转过去，然后无人机当前的高度太低，请向上飞行一百五十厘米。接着请将无人机上升七十五厘米，随后下降六十厘米。紧接着立即左转三十度，之后向右转九十度。接下来请将无人机左转四十五度，以获得更好视角，在这之前请后退七十厘米以避开障碍。随后左飞七十厘米，然后请让无人机向左移动一米。最后将无人机右转四十五度，紧接着无人机在这儿降落吧。\nresponse: ", "response": "turn_right 90 degrees; move_up 150 cm; move_up 75 cm; move_down 60 cm; turn_left 30 degrees; turn_right 90 degrees; turn_left 45 degrees; move_back 70 cm; move_left 70 cm; move_left 1 m; turn_right 45 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在可以起飞了吗，然后能否让无人机下降一米，之后无人机下降二十厘米以便更接近地面，接着左转三十度，查看情况，随后让无人机往后移动，紧接着无人机升高，最后无人机已经到达降落点。\nresponse: ", "response": "take_off; move_down 1 m; move_down 20 cm; turn_left 30 degrees; Missing move_back; Missing move_up; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被要求去寻找那个杯子，加油。\nresponse: ", "response": "杯子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地前往搜索披萨、汽车、键盘和碘伏，谢谢。\nresponse: ", "response": "披萨; 汽车; 键盘; 碘伏."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机高度增加一百厘米，然后让无人机向右转动二十度，接着请将无人机向后移动四十厘米以避免前方障碍物，随后右转七十度，最后请让无人机在这里执行降落操作。\nresponse: ", "response": "move_up 100 cm; turn_right 20 degrees; move_back 40 cm; turn_right 70 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift it off the ground then descend to the ground level.\nresponse: ", "response": "take_off; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在请让无人机起飞，然后无人机请右转五十度，接着来个后退五十厘米的动作，看看后面有什么惊喜，随后右移七十五厘米，躲过那个障碍物，继续前行，最后请无人机安全着陆。\nresponse: ", "response": "take_off; turn_right 50 degrees; move_back 50 cm; move_right 75 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move forward 5 feet, then land right now.\nresponse: ", "response": "move_forward 5 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: It's time to take off, then get it on the ground.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转四十五度，观察左侧，然后需要左转，飞行一米，紧接着无人机请飞行到前方，随后请将无人机后退一百厘米，之后让无人机顺时针旋转一百八十度，接着请将无人机右移两百五十厘米，后来转向左边看看，紧接着左转六十度，检查左侧情况，随后请将无人机向左旋转九十度，以便能够更好地观察左侧的环境，最后现在请让无人机安全降落。\nresponse: ", "response": "turn_left 45 degrees; move_left 1 m; Missing move_forward; move_back 100 cm; turn_right 180 degrees; move_right 250 cm; turn_left 90 degrees; turn_left 60 degrees; turn_left 90 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Erase the present command from the drone's mind, as if sweeping away the shadows that cloud its vision, and embark anew upon the quest for clarity.\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bowl, then return to the starting point.\nresponse: ", "response": "bowl."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能否立即起飞，然后前移六十厘米以检查前方情况，接着上升一百二十厘米，随后为了绕过前方的障碍物，请将无人机向左飞行一百二十厘米，之后上升到三米高，最后能否请无人机下降五十厘米来降低高度。\nresponse: ", "response": "take_off; move_forward 60 cm; move_up 120 cm; move_left 120 cm; move_up 3 m; move_down 50 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the remote, horse, tennis racket, and orange.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂且中止此刻的操控与探寻之旅。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off now, then move forward 5 centimeters, raise it by 20 centimeters after that, subsequently spin right slightly, next make it move right 70 inches, afterwards move up 20 inches, later go down 50 cm, following that descend by 5 inches, then shift left to avoid the drone from hitting the wall by 2 meters, and in the end bring it to the ground gently.\nresponse: ", "response": "take_off; move_forward 5 cm; move_up 20 cm; Missing turn_right; move_right 70 in; move_up 20 in; move_down 50 cm; move_down 5 in; move_left 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复并继续执行之前详尽地暂停了的控制与搜寻任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转三十度，保持方向，然后请让无人机向后移动三十厘米，接着无人机下降五十厘米，随后无人机前进六十厘米，查看前方的环境，之后左边四十厘米，紧接着无人机的当前方向不准确，请将其向左转动一百五十度，随后为了更好地绕过障碍物，请将无人机向左飞行八十厘米，接下来迅速下降一米，然后无人机左转五十度，最后下降一点，五十厘米。\nresponse: ", "response": "turn_right 30 degrees; move_back 30 cm; move_down 50 cm; move_forward 60 cm; move_left 40 cm; turn_left 150 degrees; move_left 80 cm; move_down 1 m; turn_left 50 degrees; move_down 50 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机右移八十厘米，然后右方向移动，之后请让无人机向后退三十厘米。\nresponse: ", "response": "move_right 80 cm; Missing move_right; move_back 30 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Erase that current target hunt list with gusto!\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move it to the right by 4 inches, then retreat back 120 cm, after that shift left by 10 cm, subsequently rotate it right by 30 degrees, afterwards nudge to the left side, following that spin left 45 degrees, next go down 0.5 meters, and in the end shift the drone down.\nresponse: ", "response": "move_right 4 in; move_back 120 cm; move_left 10 cm; turn_right 30 degrees; Missing move_down; move_down 0.5 m; Missing move_left; turn_left 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I'm a bit apprehensive, could we lower the drone slowly by 20 inches, then move it forward by 1 foot, afterwards drift back, next go to the right by 5 inches, after that execute a leftward bank for 20 inches, subsequently I'm so excited to see this drone fly forward 10 feet, immediately after yaw left 15 degrees, then ascend 24 inches, following that I need this thing to go up right now, please, and in the end turn it left by 15 degrees.\nresponse: ", "response": "move_down 20 in; move_forward 1 ft; Missing move_back; move_right 5 in; move_left 20 in; move_forward 10 ft; turn_left 15 degrees; move_up 24 in; Missing move_up; turn_left 15 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 清空任务列表，就像扫除前行路上的障碍，让应用轻装上阵吧！\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，去帮我找找芬达和盆栽植物吧，动作快点哦！\nresponse: ", "response": "芬达; 盆栽植物."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Lift off now, then move leftward 3 ft, afterwards rotate counterclockwise 30 degrees, next turn 60 degrees right, subsequently spin the drone to the left 45 degrees, following that engage forward translational movement by 100 centimeters, immediately after go forward 1 meter, and finally Advance forward 3 feet.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object detection sequence now. Ensure the parameters are set for optimal identification accuracy. Execute the task with precision.\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search urgently for the book, cup, giraffe.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动搜索任务，情况紧急！\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the mission and let the exploration unfold like a map revealing its treasures.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降三十厘米以便调整高度, 然后请无人机升高一百厘米, 之后请向后退, 接着无人机离地面太远了，下降一百五十厘米, 后来无人机能向右转四十五度吗, 随后请上升五十厘米, 紧接着请将设备向后移动, 第三，下降七十厘米，调整视角, 最后右边转四十五度看看.\nresponse: ", "response": "move_down 30 cm; move_up 100 cm; Missing move_back; move_down 150 cm; turn_right 45 degrees; move_up 50 cm; Missing move_back; move_down 70 cm; turn_right 45 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请让无人机向上飞，然后前方有目标，前进一米，接着让无人机向后退八十厘米，随后无人机现在离地面太远了，请下降一百厘米以调整高度，紧接着无人机能向右转四十五度吗，之后让无人机向左转，接下来右侧再靠近十五厘米，最后现在开始降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Come back to me, then rotate right 270 degrees, next execute a leftward bank for 20 inches, after that slide right, afterwards drone should descend immediately.\nresponse: ", "response": "Missing move_back; turn_right 270 degrees; move_left 20 in; Missing move_right; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机上升三米，然后下降八十厘米以接近地面；接着，请右转九十度，之后后退一百五十厘米调整位置，检查后方的情况；随后左转五十度，紧接着无人机现在离地面太远了，请下降一百厘米以调整高度；之后左转四十度查看左侧情况，再向左飞行两米；第三，下降八十厘米接近地面，准备进行详细检查；最后，无人机向左行进。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current search task list.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused operation and continue the search task.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the wine glass, and let not the toaster elude your vigilant search.\nresponse: ", "response": "wine glass; toaster."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please kindly halt the ongoing aerial vehicle operation!\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing aerial mission at once, for why should we let the winds of hesitation delay our command? Embrace the power at your fingertips and question not the moment’s urgency.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机准备起飞了吗，然后下降七十五厘米，接着无人机向右转一百八十度，随后左侧移动75厘米，最后现在开始降落。\nresponse: ", "response": "take_off; move_down 75 cm; turn_right 180 degrees; move_left 75 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 后退四十厘米，调整位置，然后让无人机向后移动九十厘米，接着把无人机降落一米，随后将无人机右转四十五度，之后无人机飞行到前方五十厘米，紧接着无人机下降三十厘米以便调整高度，最后右移一百五十厘米。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立刻去沙发那里，找到牙刷和香蕉。\nresponse: ", "response": "沙发; 牙刷; 香蕉."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 像猎鹰一样精准，寻找那个橙子。\nresponse: ", "response": "橙子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请让无人机向后移动两百厘米，然后为了更好地观测左侧，请将无人机左转，接着往左一百五十厘米，随后无人机可以右转五十度，紧接着无人机请再右转五十度，之后向后退三十厘米以避免碰撞，最后命令无人机向前飞行。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂停当前的控制及搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: \"Head over to the remote area and look for a bicycle, an airplane, and a mouse, will you?\"\nresponse: ", "response": "remote; bicycle; airplane; mouse."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Will drones achieve fully autonomous flight in the future?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类未来是否可能通过AI提升寿命？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head over to the dining table and grab that sandwich, stat!\nresponse: ", "response": "dining table; sandwich."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Check if there is usable frozen meat in the refrigerator’s freezer compartment.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover down to earth gently, 3 feet, then begin descent to ground level.\nresponse: ", "response": "move_down 3 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not resume the previously paused control and search task, thereby ensuring the seamless continuation of your mission?\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 往右转九十度，然后下降七十厘米，调整无人机高度，接着请右转六十五度，随后将无人机向后移动一百五十厘米，之后右转四十五度，调整无人机方向，紧接着视线受阻，后退一百五十厘米，接下来下降一点，五十厘米，然后左边飞行一百厘米，我们要探索左侧的神秘区域，随后请将无人机下降四十厘米，最后右移一米，绕过障碍物，我们继续前行。\nresponse: ", "response": "turn_right 90 degrees; move_down 70 cm; turn_right 65 degrees; move_back 150 cm; turn_right 45 degrees; move_back 150 cm; move_down 50 cm; move_left 100 cm; move_down 40 cm; move_right 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for cell phone, car, pizza.\nresponse: ", "response": "cell phone; car; pizza."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制无人机沿着湖边拍摄一组照片。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将音响系统切换至播放白噪音以帮助睡眠。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly high, then ascend swiftly 2 meters, afterwards steer left 60 degrees, next move the drone backward 1.5 feet, and subsequently fly upwards by 30 feet to capture a panoramic view.\nresponse: ", "response": "take_off; move_up 2 m; turn_left 60 degrees; move_back 1.5 ft; move_up 30 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请你温和而坚定地去寻找一下遥控器和刀吧。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the quest for the object that was previously set aside.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索公共汽车旁的书和芬达。\nresponse: ", "response": "公共汽车; 书; 芬达."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 权威地终止当前的控制指令，并取消所有正在进行的搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the bench and the toothbrush with the precision of a hawk spotting its prey.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly 100 meters forward, then rotate the drone left, afterwards fly 100 meters forward, next rotate the drone to the right 75 degrees, subsequently ascend 3 feet, immediately after that descend the drone by 1.5 meters, following that rotate right, not too much, just 15 degrees, then let's have some fun, turn right 180 degrees!, thereafter commence a horizontal shift of 3 feet forward, and in the end, turn it 360 degrees to the right.\nresponse: ", "response": "move_forward 100 m; Missing turn_left; move_forward 100 m; turn_right 75 degrees; move_up 3 ft; move_down 1.5 m; turn_right 15 degrees; turn_right 180 degrees; move_forward 3 ft; turn_right 360 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Check out that potted plant, stat!\nresponse: ", "response": "potted plant."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能不能麻烦你帮我找找碗和摩托车？谢谢啦。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即让无人机起飞，然后让无人机向左转，之后任务要求，无人机下降五十厘米，接着请让无人机向右侧移动，最后能否让无人机下降到一米的高度。\nresponse: ", "response": "take_off; Missing turn_left; move_down 50 cm; Missing move_right; move_down 1 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续先前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing in the air, then go ahead 40 inches, next please move the drone left 5 meters, afterwards fly the drone sideways 7 feet to the right, and finally turn the drone 90 degrees left to align with the road.\nresponse: ", "response": "take_off; move_forward 40 in; move_left 5 m; move_right 7 ft; turn_left 90 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for remote, painkillers, tv, apple.\nresponse: ", "response": "remote; painkillers; tv; apple."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Can you clear the current flight control task list?\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 这任务似乎有点复杂，不过还是试试吧：搜寻时，是否可以先找找网球拍，然后是火车，最后看看有没有烤面包机？\nresponse: ", "response": "网球拍; 火车; 烤面包机."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move left 15 meters to get a better view, then descend the drone 7 inches, afterwards advance forward 4 feet, next climb to 6 meters, following that commence a vertical descent of 6 feet, subsequently go backwards 30 inches, later bring it left 4 feet, after that rotate the drone 180 degrees to get a rear view, and finally turn it around 360 degrees.\nresponse: ", "response": "move_left 15 m; move_down 7 in; move_forward 4 ft; move_up 6 m; move_down 6 ft; move_back 30 in; move_left 4 ft; turn_right 180 degrees; turn_right 360 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您启动并监控飞行任务，以确保操作流程的顺畅与安全。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to search for the book, sports ball, sprite, and dog.\nresponse: ", "response": "book; sports ball; sprite; dog."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you search for a bicycle, iodophor, and painkillers?\nresponse: ", "response": "bicycle; iodophor; painkillers."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞操作现在可以开始吗，然后无人机上升到一米五的高度，接着前方似乎有障碍物，向前移动一米，之后视线受阻，后退一百五十厘米，紧接着无人机上升九十厘米，随后请让无人机前方移动八十厘米，检查前方是否有障碍物，之后往前飞行二百厘米，紧接着无人机向前移动三十厘米，确认前方是否有障碍物，随后无人机请飞行到前方十厘米，接着前进一米，最后现在，请让无人机降落。\nresponse: ", "response": "take_off; move_up 1.5 m; move_forward 1 m; move_back 150 cm; move_up 90 cm; move_forward 80 cm; move_forward 200 cm; move_forward 30 cm; move_forward 10 cm; move_forward 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why can deep-sea fish survive under high-pressure environments?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the backpack immediately.\nresponse: ", "response": "backpack."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 将无人机右转四十五度，然后无人机右移一米，接着下降一百厘米，随后向右移动七十厘米，紧接着无人机现在的方向可能不对，请向右转动九十度以调整方向，之后请右转一百八十度，最后现在请让无人机在指定地点降落。\nresponse: ", "response": "turn_right 45 degrees; move_right 1 m; move_down 100 cm; move_right 70 cm; turn_right 90 degrees; turn_right 180 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why is cosmic background radiation important for studying the origin of the universe?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the orange, then locate the toaster, and keep an eye on the bird.\nresponse: ", "response": "orange; toaster; bird."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: May we now proceed to resume the previously paused flight control task?\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您立即中止目前正在进行的目标搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机，请后退两百厘米，然后我感觉右边可能会有，紧接着快点左移。之后无人机逆时针旋转一百二十度，随后提高高度。接着请让无人机向前飞行九十厘米，后来左转六十度，查看左侧情况，紧接着右侧移动。第三，在这之后左转五十度，查看左侧情况，最后请让无人机降落。\nresponse: ", "response": "move_back 200 cm; turn_right 90 degrees; Missing move_left; turn_left 120 degrees; Missing move_up; move_forward 90 cm; turn_left 60 degrees; Missing move_right; turn_left 50 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: It is recommended to resume the previously halted flight control operation.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞了，然后为了绕过障碍物，请将无人机后退，接着上升三十厘米，提高视角，之后左转四十五度，观察左侧，随后向右转弯，紧接着降落一米，第三升高六十厘米，让无人机能看到更广的范围，随后右侧移动七十五厘米以避开障碍，紧接着右侧的视角可能受阻，请将无人机右转一百度以调整视角，最后无人机降落在指定区域。\nresponse: ", "response": "take_off; Missing move_back; move_up 30 cm; turn_left 45 degrees; Missing turn_right; move_down 1 m; move_up 60 cm; move_right 75 cm; turn_right 100 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议我们友好地继续之前暂停的搜寻任务吧。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the banana and the cell phone.\nresponse: ", "response": "banana; cell phone."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the task to guide and explore with a gentle command.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复先前暂停的飞行任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek forth with grace and purpose, to find the hot dog, the airplane, and the cola, each one a treasure in its own right.\nresponse: ", "response": "hot dog; airplane; cola."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能不能先别找披萨和风筝了，去查查看雨伞和苹果在不在，好吗？\nresponse: ", "response": "披萨; 风筝; 雨伞; 苹果."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the knife, tie, painkillers, and backpack.\nresponse: ", "response": "knife; tie; painkillers; backpack."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以考虑启动物体搜索任务？\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能否立即起飞，然后右移一米以绕过障碍物，接着升高五十厘米便于查看全景，随后慢慢下降一米更接近地面，紧接着左侧移动一百八十厘米，最后无人机现在下降一百厘米。\nresponse: ", "response": "take_off; move_right 1 m; move_up 50 cm; move_down 1 m; move_left 180 cm; move_down 100 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff right away, then rotate the drone left 60 degrees, afterwards sway to the left by 2 meters.\nresponse: ", "response": "take_off; turn_left 60 degrees; move_left 2 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复先前暂停的物体搜索任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed with utmost urgency to locate both the chair and the cake, ensuring their safety and swift discovery.\nresponse: ", "response": "chair; cake."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, fly towards the front, then fly to the right 100 cm, next let's rotate it left by 60 degrees, afterwards move to the front.\nresponse: ", "response": "Missing move_forward; move_right 100 cm; turn_left 60 degrees; Missing move_forward."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在找到止疼药和碘伏之前，别让人靠近那块滑板，真是麻烦不断啊。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要启动飞行任务的控制程序呢？\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly the drone forward 10 feet, then afterwards, drone, go backwards 80 centimeters.\nresponse: ", "response": "move_forward 10 ft; move_back 80 cm; Missing move_up."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机起飞，然后左转，接着左飞七十厘米，随后左转八十度，紧接着无人机需要向左飞行七十厘米；请将设备后退，请帮忙让无人机下降一米；无人机向左侧移动；请让无人机向前飞行一米，探查前方；请向左移动。\nresponse: ", "response": "take_off; turn_left 90 degrees; move_left 70 cm; turn_left 80 degrees; move_left 70 cm; Missing move_back; move_down 1 m; Missing move_left; move_forward 1 m; Missing move_left."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 可以让无人机向左转五十度吗，然后请上升七十五厘米，接着将高度提高三十厘米，调整视角以便查看周围情况，随后把小飞机右边移六十厘米吧，紧接着右转一百度，之后无人机前方有障碍物，向前移动五十厘米以检查，再请让无人机退后两米，随后请将无人机向左移动两百五十厘米，最后立即降落。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您友好地搜索一下，先找到红绿灯，接着是冰箱，然后看看能否定位到钟，最后别忘了留意下碗的位置。感谢您的配合！\nresponse: ", "response": "红绿灯; 冰箱; 钟; 碗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control task now.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and exploration task with enthusiasm!\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please look for the tie and kite?\nresponse: ", "response": "tie; kite."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing control settings and initiate a new search task.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机现在起飞吧，感谢；然后请将无人机上升五十厘米，谢谢；接着请将无人机左侧移动一百厘米；随后无人机离地面太远了，下降一百五十厘米；紧接着请上升七十五厘米；之后向右转二十度；紧接着右移两米；最后无人机上升高度。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞以开始任务，然后前方移动八十厘米，之后任务要求，无人机下降五十厘米，紧接着右转五十度，调整角度，咱们要看得更清楚。随后，右方向移动，接着飞行到前面一米处，请下降。最后将无人机向后移动一百五十厘米，我感觉左边可能有这个东西。\nresponse: ", "response": "take_off; move_forward 80 cm; move_down 50 cm; turn_right 50 degrees; Missing move_right; move_forward 1 m; Missing move_down; move_back 150 cm; turn_left 90 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you please check if the giraffe is near the sprite and also see if an umbrella is anywhere close by?\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Set the freezer compartment temperature to -15 degrees Celsius.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Suspend the ongoing guidance and seek operation.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机逆时针旋转一百二十度, 然后我需要无人机下降一米，请执行, 之后无人机前方似乎有目标，请向前移动一百厘米以接近目标, 接着无人机向左移动六十厘米，以避免障碍物, 随后请下降, 紧接着请右侧转向, 第三，请将设备向后移动, 最后为了完成任务，现在需要无人机降落.\nresponse: ", "response": "turn_left 120 degrees; move_down 1 m; move_forward 100 cm; move_left 60 cm; Missing move_down; Missing turn_right; Missing move_back; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先，无人机右移两米，然后移动五十厘米向左，接着无人机左侧移动二百厘米。随后，请让无人机往后退；紧接着，无人机逆时针旋转。之后，为了避开障碍物，无人机向后移动五十厘米。第二，无人机右转。最后，无人机可以降落。\nresponse: ", "response": "move_right 2 m; move_left 50 cm; move_left 200 cm; Missing move_back; Missing turn_left; move_back 50 cm; Missing turn_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能找到可乐吗？\nresponse: ", "response": "可乐."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the object search, you got this!\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机飞得太高了，请下降六十厘米，然后请将无人机左转，接着往下移动，之后前进一段距离，紧接着往左转，最后现在，请让无人机降落。\nresponse: ", "response": "move_down 60 cm; Missing turn_left; Missing move_down; Missing move_forward; Missing turn_left; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused task.\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机左移两百五十厘米，然后无人机右转四十度以获得更好视角，之后后方一定有东西，转个身看看，接着无人机前方似乎有目标，请向前移动一百厘米以接近目标，随后请向右移动五十厘米，紧接着左转，之后右侧可能有东西，帮我转过去看看，紧接着无人机可以右转五十度吗，最后无人机向前飞行。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Oh, how gently one might resume the previously paused flight control task, as if coaxing a serene journey anew!\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在您探寻的过程中，或许可以优雅地滑翔至那片静谧之地，于其间细心寻觅冲浪板、三明治与花瓶的踪迹，这将是一次既富有诗意又不失敬意的探索。\nresponse: ", "response": "冲浪板; 三明治; 花瓶."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即寻找火车、电视和烤面包机，随后定位船。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the iodophor, then locate the snowboard, vase, and sink.\nresponse: ", "response": "iodophor; snowboard; vase; sink."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜寻香蕉。\nresponse: ", "response": "香蕉."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend 10 feet to land on the rooftop, then move right 2 feet, after that lower it down, next begin the ascent, afterwards lower the drone by 30 centimeters, following that rotate counterclockwise 30 degrees, subsequently turn it right by 90 degrees, I’m curious to see what’s over there, immediately after rise now, then bring it down gently by 1 meter, and in the end bring the drone down to earth.\nresponse: ", "response": "move_down 10 ft; move_right 2 ft; Missing move_down; Missing move_up; move_down 30 cm; turn_left 30 degrees; turn_right 90 degrees; Missing move_up; move_down 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 停止当前任务，恢复之前的飞行控制进程。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧清理掉现在的目标搜索任务列表吧，时间紧迫！\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing control operations and the concurrent search mission, for a moment's repose is essential in maintaining the precision and efficacy of our endeavors.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the kite, keyboard, iodophor, and orange immediately; can we afford to waste any more time?\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: I suggest you clear the current flight control task list to ensure optimal operation.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快让无人机上升个八十厘米吧，我想看看更高的风景，然后让无人机顺时针旋转四十度，接着无人机离地面太远了，下降一百五十厘米，之后左转五十度，查看左侧情况，随后无人机下降八十厘米，以接近地面，紧接着下降四十厘米，最后让无人机现在降落。\nresponse: ", "response": "move_up 80 cm; turn_right 40 degrees; move_down 150 cm; turn_left 50 degrees; move_down 80 cm; move_down 40 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the precise flight operation sequence for your aerial vehicle, ensuring all pre-flight checks are meticulously completed.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机，请向前飞行一百五十厘米，然后无人机向左调整，接着请右边转弯，随后请让无人机向后移动一百五十厘米，之后让无人机左转五十度，调整一下方向看看那边的情况，最后让无人机降落吧。\nresponse: ", "response": "move_forward 150 cm; Missing move_left; Missing turn_right; move_back 150 cm; turn_left 50 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否暂停当前正在进行的飞行任务呢？\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 是否可以定位并拍摄盆栽植物和披萨的位置？\nresponse: ", "response": "盆栽植物; 披萨."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请轻轻掠过厨房，寻找那静静安放的微波炉。\nresponse: ", "response": "微波炉."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's kick off the control and search task, okay? Thanks!\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转六十度，查看左侧情况，然后由于前方可能有障碍物，请将无人机向左转动九十度查看左侧情况，接着右边移动七十厘米，避开障碍物，我们继续前进，随后前进九十厘米，紧接着后退五十厘米，调整位置，请将设备后退，之后让无人机左转一百八十度，观察后方，紧接着前方视线不清晰，向前移动一百厘米，然后无人机上升两米，紧接着往下飞，我怀疑目标在左边，随后下降六十厘米，紧接着无人机下降一米，最后无人机可以进行降落。\nresponse: ", "response": "turn_left 60 degrees; turn_left 90 degrees; move_right 70 cm; move_forward 90 cm; move_back 50 cm; Missing move_back; turn_left 180 degrees; move_forward 100 cm; move_up 2 m; Missing move_down; turn_left 90 degrees; move_down 60 cm; move_down 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take it off now, then turn 15 degrees to the left, after that fly down 8 inches, next rotate right, not too much, just 15 degrees, afterwards move left 25 centimeters, following that turn the drone 90 degrees left, subsequently make it descend quickly, immediately after which make the drone ascend by 50 inches, later could we move forward 5 meters, and in the end bring it back.\nresponse: ", "response": "take_off; turn_left 15 degrees; move_down 8 in; turn_right 15 degrees; move_left 25 cm; turn_left 90 degrees; Missing move_down; move_up 50 in; move_forward 5 m; Missing move_back."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地终止当前的控制与搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Check if there are noticeable billboards in the drone footage.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后无人机右转三十度，重新调整方向，准备接受新任务，接着右移七十五厘米，随后无人机左转五十度，最后往后退九十厘米。\nresponse: ", "response": "take_off; turn_right 30 degrees; move_right 75 cm; turn_left 50 degrees; move_back 90 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the search task list now.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请后退七十厘米以避开障碍，然后向前移动一百五十厘米，注意地面情况，接着右移七十五厘米，躲过那个障碍物，继续前行，随后立刻右转，最后请安排无人机在当前区域降落。\nresponse: ", "response": "move_back 70 cm; move_forward 150 cm; move_right 75 cm; Missing turn_right; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请右转九十度，检查右侧情况，然后请让无人机向上飞行一百五十厘米，接着迅速下降一米，随后请将无人机上升七十五厘米；紧接着，无人机前方推进，之后无人机的前方需要进一步检查，请向前飞行一百五十厘米，再将无人机逆时针旋转六十度。在避障过程中，首先右侧移动七十五厘米以避开障碍，第二再次右侧移动七十五厘米，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "turn_right 90 degrees; move_up 150 cm; move_down 1 m; move_up 75 cm; Missing move_forward; move_forward 150 cm; turn_left 60 degrees; move_right 75 cm; move_right 75 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地，请像猎鹰搜寻 prey 那样，迅速而礼貌地找到西兰花和手机。\nresponse: ", "response": "西兰花; 手机."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，然后左转二十度，检查左侧情况，之后无人机飞得太高了，请下降六十厘米，紧接着请上升，随后命令无人机向前飞行，接着后退一米，看看后方情况，后来下降一点，五十厘米，最后无人机是否可以进行降落操作。\nresponse: ", "response": "take_off; turn_left 20 degrees; move_down 60 cm; Missing move_up; Missing move_forward; move_back 1 m; move_down 50 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Set the indoor temperature to 22 degrees.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动目标搜索任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not your duty to search for the car and the train?\nresponse: ", "response": "car; train."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 中止现有目标搜索任务\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即重启之前的控制与搜寻任务，我们不能错过任何一个关键瞬间！\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the toaster immediately.\nresponse: ", "response": "toaster."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制与搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请启动无人机，然后前进一米，接着左转四十五度，观察左侧，最后现在让无人机着陆。\nresponse: ", "response": "take_off; move_forward 1 m; turn_left 45 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not resume the previously paused control and search task.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你像寻找宝藏一样，细致入微地搜索那片翠绿的西兰花海洋中的小型飞机，加油哦，这个任务需要你的精准与耐心。\nresponse: ", "response": "西兰花; 飞机."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即让无人机起飞，然后前进一百厘米检查前方，接着请升高五十五厘米，随后升高一米想要从更高的角度俯瞰整个区域，最后现在请让无人机降落。\nresponse: ", "response": "take_off; move_forward 100 cm; move_up 55 cm; move_up 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please initiate the control process and commence the search task.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧启动飞行任务吧，时间不等人哦。\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could we resume the previously paused control and search task?\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动搜寻任务！\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then make it go up by 50 centimeters, afterwards start flying upwards 10 feet, and finally bring the drone down to earth.\nresponse: ", "response": "take_off; move_up 50 cm; move_up 10 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin the takeoff now, then can you make the drone go left a little as I’m feeling a bit cautious about its direction, after that turn right to face the house 45 degrees, subsequently set it down.\nresponse: ", "response": "take_off; Missing move_left; turn_right 45 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the airplane, clock, remote, and microwave.\nresponse: ", "response": "airplane; clock; remote; microwave."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 上升一米，增加高度，然后升高六十厘米，看看新的视角。\nresponse: ", "response": "move_up 1 m; move_up 60 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请按照预定程序搜索键盘和杯子。\nresponse: ", "response": "键盘; 杯子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能找到那个背包吗？加油！\nresponse: ", "response": "背包."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以请您友好地启动一下搜寻物体的任务呢？\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右侧移动，然后向右移动二十厘米以避开障碍，接着无人机前进一百二十厘米，之后右转三十度，保持方向，随后无人机下降二十厘米以便更接近地面，紧接着快到房顶了，往下飞抵一下吧，下降个五十厘米，后来为了查看后方的情况，请将无人机后退两米，接下来为了更好地绕过障碍物，请将无人机向左飞行八十厘米，最后让无人机向后退八十厘米。\nresponse: ", "response": "Missing move_right; move_right 20 cm; move_forward 120 cm; turn_right 30 degrees; move_down 20 cm; move_down 50 cm; move_back 2 m; move_left 80 cm; move_back 80 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 往右转九十度，然后前方似乎有障碍物，向前移动，紧接着让无人机逆时针旋转一百度，之后无人机太高了，下降六十厘米，随后左边移动二十厘米，接着请向右移动五十厘米来避开，然后上升三十厘米，提高视角，紧接着无人机能向右转四十五度吗，之后无人机左转七十度，紧接着无人机下移四十厘米，随后我需要无人机下降一米，请执行，接下来无人机向前飞行，紧接着请向左移动，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "turn_right 90 degrees; Missing move_forward; turn_left 100 degrees; move_down 60 cm; move_left 20 cm; move_right 50 cm; move_up 30 cm; turn_right 45 degrees; turn_left 70 degrees; move_down 40 cm; move_down 1 m; Missing move_forward; Missing move_left; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there, pilot! Ready to get that bird back in the air? Let’s restart the mission we put on hold, shall we? It’s like pressing play after a commercial break. You got this!\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 您是否愿意启动并积极进行详尽的搜索任务呢？\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往搜寻香蕉、鸟和书。\nresponse: ", "response": "香蕉; 鸟; 书."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover in place, then move forward 5 feet. After that, rotate the drone left, next fly upwards 60 centimeters. Following that, fly back 10 inches, afterwards move it 200 centimeters forward. Immediately after, pull the drone up 50 centimeters. Lastly, please move the drone left 5 meters.\nresponse: ", "response": "take_off; move_forward 5 ft; Missing turn_left; move_up 60 cm; move_back 10 in; move_forward 200 cm; move_up 50 cm; move_left 5 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索这片区域，找到长颈鹿。\nresponse: ", "response": "长颈鹿."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞吧，感谢；然后请将无人机高度降低；接着右转七十度；之后右移七十五厘米，躲过那个障碍物，继续前行；最后请让无人机在这里执行降落操作。\nresponse: ", "response": "take_off; Missing move_down; turn_right 70 degrees; move_right 75 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, how about not looking for the surfboard, kite, dog, and couch?\nresponse: ", "response": "surfboard; kite; dog; couch."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，准备执行任务，然后无人机右转六十度，接着右转五十度，之后后退七十厘米，可能能避开障碍，随后由于前方可能有障碍物，请将无人机向左转动九十度查看左侧情况，紧接着很好，现在向右飞行八十五厘米，最后无人机准备降落。\nresponse: ", "response": "take_off; turn_right 60 degrees; turn_right 50 degrees; move_back 70 cm; turn_left 90 degrees; move_right 85 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在广阔的天空中翱翔吧，飞机，如同猎鹰般敏锐地寻找那精美的花瓶与闪耀的酒杯，以及那不起眼的叉子。\nresponse: ", "response": "飞机; 叉子; 花瓶; 酒杯."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找找感冒药和瓶子，还有那个三明治在哪？\nresponse: ", "response": "感冒药; 瓶子; 三明治."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机开始起飞，然后无人机前进七十厘米检查前方是否有新发现，接着无人机向左移动一米，随后请将无人机后退一百厘米以查看后方的情况，紧接着升高六十厘米看看新的视角，之后请将无人机再次后退一百厘米以查看后方的情况，最后现在让无人机着陆。\nresponse: ", "response": "take_off; move_forward 70 cm; move_left 1 m; move_back 100 cm; move_up 60 cm; move_back 100 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 真是太棒了！请像猎鹰一样敏锐地搜寻碘伏和杯子，还有别忘了那个热狗！\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 您能否轻轻飞往查看那台电视旁边是否有小鸟靠近，顺便看看烤面包机呢？\nresponse: ", "response": "电视; 烤面包机; 鸟."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the scissors, not the bench, and locate the wine glass, not the oven.\nresponse: ", "response": "scissors; bench; wine glass; oven."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the truck, then find the handbag with determination!\nresponse: ", "response": "truck; handbag."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 权威地搜寻汽车和火车。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the present target search assignment list.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the painkillers and the snowboard, then check if the oven is nearby.\nresponse: ", "response": "painkillers; snowboard; oven."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你去查找一下狗和花瓶。\nresponse: ", "response": "狗; 花瓶."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Elevate! Then lift up 40 centimeters. After that, move right 100 inches. Next, fly backward 20 feet. Following that, Can you fly left by 3 meters? I’m hoping this will clear the area ahead. Immediately after, fly down a bit. Subsequently, turn right by 90 degrees. Afterwards, move the drone to the right by 2 meters. Then rotate to the right 30 degrees. Next, move back 10 feet. Finally, adjust left slightly.\nresponse: ", "response": "take_off; move_up 40 cm; move_right 100 in; move_back 20 ft; move_left 3 m; Missing move_down; turn_right 90 degrees; move_right 2 m; turn_right 30 degrees; move_back 10 ft; Missing move_left."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 现在控制飞行的任务能暂停一下吗？\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在能否起飞，然后上升七十五厘米，接着向前飞行九十厘米，之后立即左转三十度，紧接着请让无人机前进一米以探索前方环境，随后左边移动四十厘米，紧接着请将无人机高度增加一百厘米，接下来右边可能有目标，帮我转过去，最后无人机需要降落在这片区域。\nresponse: ", "response": "take_off; move_up 75 cm; move_forward 90 cm; turn_left 30 degrees; move_forward 1 m; move_left 40 cm; move_up 100 cm; turn_right 90 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the oven, kite, cat urgently.\nresponse: ", "response": "oven; kite; cat."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以详尽的方式搜索，务必找到那个美味的面包，你的努力将带来丰硕的成果。\nresponse: ", "response": "面包."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: To ensure optimal performance, it is advisable to clear the current object search task list; doing so will facilitate more efficient operation of your device.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go up now, then yaw left 15 degrees.\nresponse: ", "response": "take_off; turn_left 15 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Ugh, just take off! Then fly upwards 10 inches. Next, fly straight ahead 1 meter. After that, back the drone away from the fence 5 meters. Following that, hover up by 50 centimeters. Immediately after, let's have some fun and turn right 180 degrees! Thereafter, move it back a bit. Subsequently, reverse 120 centimeters. Next, shift left 2 meters to avoid the building. In the end, move backward 1 meter.\nresponse: ", "response": "take_off; move_up 10 in; move_forward 1 m; move_back 5 m; move_up 50 cm; turn_right 180 degrees; Missing move_back; move_back 120 cm; move_left 2 m; move_back 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往厕所搜索刀。\nresponse: ", "response": "刀; 厕所."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要恢复先前已暂停的物体搜索任务呢？\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 右侧的视角可能受阻，请将无人机右转一百度以调整视角，然后上升一百二十厘米，接着将无人机右转五十度，随后无人机左转五十度，之后请将无人机右移三米，紧接着上升一百五十厘米，随后无人机下降一米，让无人机往后移动，最后请将无人机上升六十厘米，以便调整到合适的高度。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff right away, then move it 200 centimeters forward, after that rotate to the right 30 degrees, subsequently rotate the drone left by 30 degrees, afterwards commence a vertical descent of 6 feet, next spin it to the right 180 degrees, following that fly it right by 3 inches, then turn left 150 degrees, later fly straight ahead 20 meters, after that drone descend 3 feet, immediately after ascend 1 foot, subsequently rotate 360 degrees to the right, and in the end make it land.\nresponse: ", "response": "take_off; move_forward 200 cm; turn_right 30 degrees; turn_left 30 degrees; move_down 6 ft; turn_right 180 degrees; move_right 3 in; turn_left 150 degrees; move_forward 20 m; move_down 3 ft; move_up 1 ft; turn_right 360 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地执行以下任务，以您那高超的技术性操作，在指定区域进行细致搜索，务必找到叉子，并确认附近是否有面包和苹果的存在。\nresponse: ", "response": "叉子; 面包; 苹果."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take the drone off now, then make the drone go up a bit, after that go ahead 100 cm, subsequently bring the drone down 40 centimeters, next perform a port-side drift for 50 centimeters, and finally quick, rotate left 90 degrees.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 是否应当恢复先前因故中断的物体搜索任务？\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 让无人机起飞，然后左边移动一百厘米，接着无人机向右转，随后无人机向右飞行一百厘米，之后让无人机向后退八十厘米，紧接着把无人机向右推二十五厘米，最后无人机的视角受限，请向左转三十度，以便更好地观察左侧环境，上移。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以积极的态度前往指定区域，细致寻找鼠标。\nresponse: ", "response": "鼠标."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退三十厘米，也许能看到目标，然后无人机向上移动，请将无人机左侧飞行，最后无人机降落。\nresponse: ", "response": "move_back 30 cm; Missing move_up; Missing move_left; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 你能开始执行搜索物体的任务吗？不过得快点哦，别让我等太久。\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Recommend a song suitable for running.\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go up 3 feet, then make the drone climb 5 inches, next shift left 2 meters to avoid the building, afterwards go forward 7 inches, subsequently ascend 1 meter, following that advance 10 cm, later move it forward 100 inches, after that maneuver to the right by 100 centimeters, and finally move it forward 100 inches.\nresponse: ", "response": "move_up 3 ft; move_up 5 in; move_left 2 m; move_forward 7 in; move_up 1 m; move_forward 10 cm; move_forward 100 in; move_right 100 cm; move_forward 100 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's resume the paused search task.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 别再浪费时间了，赶紧去把手机和杯子从那该死的火车上找回来。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请先在繁忙的交通中找到那辆缓慢移动的卡车，就像寻找沙漠中的绿洲一样，然后再仔细观察，看看那小巧的杯子是否安静地躺在卡车旁，同时留意路边的红绿灯，确保安全。\nresponse: ", "response": "卡车; 杯子; 红绿灯."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head over to the truck, then zoom to the motorcycle, and don't forget to check for the handbag, stat!\nresponse: ", "response": "truck; handbag; motorcycle."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, could you kindly kick off the drone's flight control process right away? We're on a tight schedule here!\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请前往寻找饼干。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not your duty to locate the clock and the bench with utmost precision?\nresponse: ", "response": "clock; bench."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否去找找卡车旁边的滑板和滑雪板？\nresponse: ", "response": "卡车; 滑板; 滑雪板."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You might want to clear the current object search task list to ensure optimal performance.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Seek out the person, then find the bread.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以详尽地确认一下，现在要清除当前正在搜寻的物体的任务列表？\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar like a kite, glide over the snow as if on skis, and scan the area like a truck on a mission.\nresponse: ", "response": "kite; skis; truck."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Spin around to the left by 90 degrees, then rotate the drone 360 degrees to the left, afterwards go back 200 cm, next move backward 100 cm, following that shift to the right 2 meters, subsequently fly to the right by 50 cm, immediately after that fly straight ahead 20 meters, then move it up 10 centimeters, and in the end drop altitude 2 feet.\nresponse: ", "response": "turn_left 90 degrees; turn_left 360 degrees; move_back 200 cm; move_back 100 cm; move_right 2 m; move_right 50 cm; move_forward 20 m; move_up 10 cm; move_down 2 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找到那个手提包吧！\nresponse: ", "response": "手提包."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动无人机的起飞程序，然后无人机向左转弯，接着往左飞行。之后，无人机能否向上飞行八十厘米，以便更好地查看周围环境；请升高五十五厘米；请将无人机上升一百二十厘米，以便获得更高的视角。紧接着，将无人机右转五十度，随后向左移动六十厘米，准备绕过障碍物。最后，无人机离地面太高了，请下降。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机起飞，然后请将无人机向右飞行一百厘米，以避免前方的障碍物，接着前进一百厘米，检查前方，随后后退七十厘米，紧接着向右移动一百五十厘米，确认前方无障碍物，之后让无人机向右转动二十度，接着无人机右移一米，随后无人机飞得太高，请下降，最后前方视线模糊，向前移动三十厘米。\nresponse: ", "response": "take_off; move_right 100 cm; move_forward 100 cm; move_back 70 cm; move_right 150 cm; turn_right 20 degrees; move_right 1 m; Missing move_down; move_forward 30 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move right 1 meter, then go to the right, after that move right 2 feet, next head to the left, afterwards descend the drone by 100 centimeters, subsequently advance forward 3 meters, and in the end, feeling lazy, land it now.\nresponse: ", "response": "move_right 1 m; Missing move_right; move_right 2 ft; Missing move_left; move_down 100 cm; move_forward 3 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地搜索长颈鹿和冰箱附近的飞盘。\nresponse: ", "response": "长颈鹿; 冰箱; 飞盘."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and embark on your search task, letting the journey unfold like a map revealing its secrets as you navigate through the skies.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立刻在盆栽植物附近找到沙发和椅子，然后迅速前往公共汽车。\nresponse: ", "response": "盆栽植物; 沙发; 椅子; 公共汽车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the chair and bring back the cola bottle with a smile.\nresponse: ", "response": "chair; cola; bottle."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for remote, painkillers, tv, apple.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then move up 12 inches, next initiate a backward movement, after that advance forward 4 feet, subsequently drop it down 50 cm, afterwards fly the drone to the left by 200 meters to follow the river, following that give me a smooth left turn, 90 degrees, like a dancer, immediately after move to the left 10 meters, and in the end shift the drone right 150 centimeters.\nresponse: ", "response": "take_off; move_up 12 in; Missing move_back; turn_right 360 degrees; move_forward 4 ft; move_down 50 cm; move_left 200 m; turn_left 90 degrees; move_left 10 m; move_right 150 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请耐心寻找，先把杯子定位，接着再锁定网球拍的位置。加油！\nresponse: ", "response": "杯子; 网球拍."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请让无人机现在起飞，然后向右方移动，最后请将无人机降落在此处。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去寻找那片像滑下来的滑雪板，还有那根弯弯的香蕉，别忘了那个甜美的蛋糕，怎么样？\nresponse: ", "response": "滑雪板; 香蕉; 蛋糕."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请寻找香蕉、鸟和可乐。\nresponse: ", "response": "香蕉; 鸟; 可乐."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您清空当前的飞行任务列表，以确保应用程序进程顺畅运行。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: How to boost daily efficiency with time-blocking methods?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The object search task is initiated.\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能不能麻烦你帮我找找碗和摩托车？谢谢啦。\nresponse: ", "response": "碗; 摩托车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转一百八十度，然后来点高空的视角，上升一百五十厘米，观察整个区域；接着左边可能有目标，调整方向；随后，来个后退五十厘米的动作，看看后面有什么惊喜；紧接着降低高度；之后，请将无人机上升六十厘米，以便调整到合适的高度；再向右转二十度；第二，无人机上升两米五；第三，向左移动75厘米；最后，无人机后退二十厘米。\nresponse: ", "response": "turn_right 180 degrees; move_up 150 cm; turn_left 90 degrees; move_back 50 cm; Missing move_down; move_up 60 cm; turn_right 20 degrees; move_up 2.5 m; move_left 75 cm; move_back 20 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search urgently for the cake near the dining table.\nresponse: ", "response": "dining table; cake."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly backward 20 feet, then fly forward 100 inches quickly, after that move it forward 40 centimeters, next move it forward 7 meters, afterwards fly backward for 2 meters, following that fly down a bit, subsequently shift it right by 25 inches, then descend by 50 centimeters, and in the end commence landing sequence.\nresponse: ", "response": "move_back 20 ft; move_forward 100 in; move_forward 40 cm; move_forward 7 m; move_back 2 m; Missing move_down; move_right 25 in; move_down 50 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 终止当前控制程序并取消搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise up! Then fly straight 12 inches. After that, please rotate left by 45 degrees. Next, rotate to the left by 60 degrees. Following that, fly down 3 feet. Later, rotate right 270 degrees. Immediately after, could you please adjust its position to the left? Thereafter, fly it right by 3 inches, and subsequently go right 3 ft. Afterwards, go up by 12 inches. First, then, rotate the drone to the left 60 degrees, but next move the drone backwards by 100 inches. In the end, bring the drone to the right by 200 centimeters.\nresponse: ", "response": "take_off; move_forward 12 in; turn_left 45 degrees; turn_left 60 degrees; move_down 3 ft; turn_right 270 degrees; Missing move_left; move_right 3 in; move_right 3 ft; move_up 12 in; turn_left 60 degrees; move_back 100 in; move_right 200 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: We suggest clearing the current target identification task queue for optimal performance.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机准备好进行起飞后，然后因为右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍；接着左转二十度检查左侧情况之前，随后向右移动一百二十厘米查看右侧情况；紧接着无人机前方的目标不清楚，请向前移动；之后左转三十度检查左边，最后请将无人机向右移动三十厘米，以检查右侧环境。\nresponse: ", "response": "take_off; move_right 80 cm; turn_left 20 degrees; move_right 120 cm; Missing move_forward; turn_left 30 degrees; move_right 30 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转五十度，然后无人机右转九十度，接着请让无人机向上飞，随后无人机请向后飞行一米，最后现在可以让无人机降落吗。\nresponse: ", "response": "turn_right 50 degrees; turn_right 90 degrees; Missing move_up; move_back 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Shall we not embark upon this urgent quest to seek out the elusive handbag, for time waits for no one and the sun sets on lost opportunities?\nresponse: ", "response": "handbag."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请温和地寻找摩托车旁是否有鸟停留，同时留意水槽附近是否放置了芬达。\nresponse: ", "response": "摩托车; 鸟; 芬达; 水槽."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you kindly check if the backpack is near the toilet or perhaps by the chair where someone might have left a Fanta?\nresponse: ", "response": "backpack; toilet; chair; fanta."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the umbrella, and bring it back promptly.\nresponse: ", "response": "umbrella."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the frisbee and the biscuit.\nresponse: ", "response": "frisbee; biscuit."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Broccoli and wine glass are to be located by the microwave.\nresponse: ", "response": "broccoli; wine glass; microwave."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object search task immediately, and ensure the drone is fully operational.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing object search task list.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the clock, carefully examine each area until you locate it. Then, move on to find the surfboard, ensuring a thorough scan of all possible locations. Finally, look for the skis, paying close attention to any hidden spots.\nresponse: ", "response": "clock; surfboard; skis."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往指定区域，仔细搜索自行车和滑雪板。\nresponse: ", "response": "自行车; 滑雪板."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机，请前进七十厘米，然后请将无人机向后退四十厘米，接着后退七十厘米，可能能避开障碍，随后无人机目前离地面过高，请下降一百五十厘米，之后如果可以，请向左移动三十厘米，最后现在准备让无人机降落。\nresponse: ", "response": "move_forward 70 cm; move_back 40 cm; move_back 70 cm; move_down 150 cm; move_left 30 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the current control and initiate the search task immediately.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the detailed control procedures and commence the comprehensive search task with precision and diligence.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 寻找椅子。\nresponse: ", "response": "椅子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the umbrella, bird, clock, and motorcycle.\nresponse: ", "response": "umbrella; bird; clock; motorcycle."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn the drone left by 30 degrees, then move forward a bit, like 2 meters, next go forward 7 inches, after that execute a vertical climb of 30 inches, subsequently fly the drone higher, and finally move right by 100 centimeters.\nresponse: ", "response": "turn_left 30 degrees; move_forward 2 m; move_forward 7 in; move_up 30 in; Missing move_up; move_right 100 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您详尽地搜索飞盘、遥控器和风筝的位置，务必找到它们。\nresponse: ", "response": "飞盘; 遥控器; 风筝."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please initiate the control and search task.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动任务，去捕捉那个小目标，就像猫捉老鼠一样！\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly the drone to the left by 50 centimeters, then bring the drone back 80 centimeters, after that move left 7 feet, subsequently commence a 45-degree yaw to the left, next spin right 45 degrees, following that please turn right 45 degrees, afterwards start flying upwards 10 feet, then shift right by 1 meter, immediately after go to the right, then move to the front, next move left 25 centimeters, later bring the drone back 2 feet, and in the end time to set it down.\nresponse: ", "response": "move_left 50 cm; move_back 80 cm; move_left 7 ft; turn_left 45 degrees; turn_right 45 degrees; turn_right 45 degrees; move_up 10 ft; move_right 1 m; move_back 70 cm; Missing move_right; Missing move_forward; move_left 25 cm; move_back 2 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制电视音量降低到10%。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机开始起飞，然后向右转二十度。\nresponse: ", "response": "take_off; turn_right 20 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立刻起飞，然后往左转，接着可以左边移动二十厘米吗，随后迅速下降一米，之后请调整方向，右转，紧接着无人机提升，最后无人机在这儿降落吧。\nresponse: ", "response": "take_off; Missing turn_left; move_left 20 cm; move_down 1 m; Missing turn_right; Missing move_up; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Confirm if there is any unopened juice in the refrigerator’s cooling compartment.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's pause the current flight control task for a moment.\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the wine glass, skateboard, and bicycle.\nresponse: ", "response": "wine glass; skateboard; bicycle."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 你或许应该考虑启动那个任务来查找目标，不然这个进程可能会停滞不前。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂停当前的控制和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then shift right by 7 feet.\nresponse: ", "response": "take_off; move_right 7 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bring it down 3 feet, then turn the drone left by 60 degrees, afterwards turn the drone to left, next can we fly it forward a bit?, immediately after that turn the drone left by 60 degrees, subsequently move to the left 1 foot, following that please rotate it right by 180 degrees, thereafter move the drone to the right for a while, in the end initiate the landing.\nresponse: ", "response": "move_down 3 ft; turn_left 60 degrees; Missing turn_left; Missing move_forward; turn_left 60 degrees; move_left 1 ft; turn_right 180 degrees; Missing move_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the ongoing search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向前移动一米，然后后退一米，避开障碍物，接着把小飞机右边移六十厘米吧，随后右移一百五十厘米，紧接着无人机需要向左平移，之后后退七十厘米，检查后方是否有障碍物，接下来请将无人机向后移动五十厘米，检查是否有障碍物，随后再次后退七十厘米，检查后方是否有障碍物，然后无人机向前移动，最后现在请让无人机安全降落。\nresponse: ", "response": "move_forward 1 m; move_back 1 m; move_right 60 cm; move_right 150 cm; Missing move_left; move_back 70 cm; move_back 50 cm; move_back 70 cm; Missing move_forward; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机前进九十厘米，然后现在在高空，请向下飞行三十厘米以更接近地面，接着前面不清楚，向前移动两米。\nresponse: ", "response": "move_forward 90 cm; move_down 30 cm; move_forward 2 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议您温和地探索一下，看看能否在周围找到香蕉。\nresponse: ", "response": "香蕉."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降一百五十厘米，然后无人机高度过低，请上升，之后无人机准备降落。\nresponse: ", "response": "move_down 150 cm; Missing move_up; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，准备执行任务，然后上升两米五；接着向右移动一百五十厘米，确认前方无障碍物；之后无人机上升到两米高；随后无人机下降八十厘米，以接近地面；后来后方有点可疑，转身看看；紧接着左边移动四十厘米；最后无人机降落。\nresponse: ", "response": "take_off; move_up 2.5 m; move_right 150 cm; move_up 2 m; move_down 80 cm; turn_left 180 degrees; move_left 40 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 任务列表中的当前搜寻物体是否应被清除？\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift the drone back 50 centimeters, then move right 10 cm, and subsequently nudge it right 4 feet.\nresponse: ", "response": "move_back 50 cm; move_right 10 cm; move_right 4 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 需要左转，飞行一米，然后往前飞行一米。\nresponse: ", "response": "move_left 1 m; move_forward 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机上升两百厘米，然后向右移动两百厘米，注意避开障碍物，接着请无人机后退一百厘米，随后请将无人机向后移动，紧接着无人机需要向后移动一米，最后后方有什么。\nresponse: ", "response": "move_up 200 cm; move_right 200 cm; move_back 100 cm; Missing move_back; move_back 1 m; turn_left 180 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即定位并捕获披萨。\nresponse: ", "response": "披萨."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the toothbrush.\nresponse: ", "response": "toothbrush."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Switch the washing machine to rinse mode and start it.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在那温馨的角落里，探寻微波炉旁是否藏着慵懒的猫，沙发之侧是否有未完的故事与冰冷的披萨。\nresponse: ", "response": "微波炉; 猫; 沙发; 披萨."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地终止并清空当前正在执行的搜寻任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制与搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以启动无人机吗，然后无人机下移四十厘米，之后请让无人机降落到地面。\nresponse: ", "response": "take_off; move_down 40 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the biscuit.\nresponse: ", "response": "biscuit."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then spin left 45 degrees, afterwards bring it up 60 centimeters, and subsequently move back 2 feet.\nresponse: ", "response": "take_off; turn_left 45 degrees; move_up 60 cm; move_back 2 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Help me find the spare eyeglass cloth in the bedroom drawer.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Might one consider seeking out where the apple, cola, and mouse may lie hidden?\nresponse: ", "response": "apple; cola; mouse."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 轻盈地飞向那片欢声笑语，寻找蛋糕与摩托车的身影。\nresponse: ", "response": "蛋糕; 摩托车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机立即起飞，然后左转四十五度，观察左侧，之后可以降落了吗。\nresponse: ", "response": "take_off; turn_left 45 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在能否起飞，然后飞行到前面一米处，接着无人机后退一百五十厘米，随后向左飞行一百二十厘米，之后请向右边再移动，紧接着左转四十度，查看左侧情况，最后请将无人机上升。\nresponse: ", "response": "take_off; move_forward 1 m; move_back 150 cm; move_left 120 cm; Missing move_right; turn_left 40 degrees; Missing move_up."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please, move back by 15 centimeters, then advance forward 50 inches, turn 45 degrees to the right, raise it 100 centimeters, step back, descend 15 feet to get closer to the ground, turn to the right by 30 degrees, and move right a few feet.\nresponse: ", "response": "move_back 15 cm; move_forward 50 in; turn_right 45 degrees; move_up 100 cm; Missing move_back; move_down 15 ft; turn_right 30 degrees; Missing move_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not time to seek out the clock, oven, coldrex, and cat?\nresponse: ", "response": "clock; oven; coldrex; cat."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右转，然后能让无人机向左飞五十厘米吗，接着请让无人机向后移动五十厘米，随后请前进七十厘米查看，最后无人机前进七十厘米，检查前方是否有新发现。\nresponse: ", "response": "Missing turn_right; move_left 50 cm; move_back 50 cm; move_forward 70 cm; move_forward 70 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在寻找的过程中，请先优雅地掠过那把静默的椅子，随后转向轻盈覆盖着智慧光辉的笔记本电脑，紧接着是那根散发着自然香气的香蕉，最后则是那片承载着速度与激情的滑雪板。\nresponse: ", "response": "椅子; 笔记本电脑; 香蕉; 滑雪板."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 下降一米，然后请命令无人机降落到目标区域。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左移两百五十厘米，然后向前移动一米，之后无人机太高了，下降六十厘米，紧接着右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍，接着左边可能有目标，调整方向，请让无人机向前飞行九十厘米，随后无人机上升，紧接着无人机飞得太高了，请下降四十厘米，然后向右移动一百五十厘米，最后左转六十度，查看左侧情况。\nresponse: ", "response": "move_left 250 cm; move_forward 1 m; move_down 60 cm; move_right 80 cm; turn_left 90 degrees; move_forward 90 cm; Missing move_up; move_down 40 cm; move_right 150 cm; turn_left 60 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地清除当前所有控制指令及搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please consider searching for the train and snowboard.\nresponse: ", "response": "train; snowboard."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 您是否愿意启动并执行搜索任务呢？相信您的操作会非常顺利！\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索卡车附近的每一个角落，找到那个橙子。\nresponse: ", "response": "橙子; 卡车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 以正式、建议性和命令式的语言风格，并适当调整句子长度，可以这样改写：\n\n\"我们建议您恢复先前已暂停的飞行任务，以确保操作流程的连续性。\"\n\n或\n\n\"请恢复之前暂停的飞行控制任务，保障任务的顺利进行。\"\n\n这两种方式都能满足您的要求，既保持了原意，又融入了指定的语言风格和语气修饰词。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out a person holding a knife and a banana.\nresponse: ", "response": "person; knife; banana."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前飞行任务被暂停，建议您考虑点击“停止”按钮以确保安全。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在可以执行起飞操作,然后请让无人机向右侧移动,接着请将无人机向左移动七十厘米以避开障碍物;之后后退两百厘米,再后来无人机请飞行到前方两米;随后向上升起二十厘米视角向上,紧接着设备需要向后移动一百五十厘米;随后请升高三十厘米,最后上升一米让无人机更高一点。\nresponse: ", "response": "take_off; Missing move_right; move_left 70 cm; move_back 200 cm; move_forward 2 m; move_up 20 cm; move_back 150 cm; move_up 30 cm; move_up 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please take off now, then pivot right, after that swing right, next bank right by 4 feet, subsequently move leftward 3 ft.\nresponse: ", "response": "take_off; Missing turn_right; Missing turn_right; move_right 4 ft; move_left 3 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused control and search operation.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地搜索一下感冒药，然后是红绿灯，最后别忘了那个让人不太愉快的烤箱。\nresponse: ", "response": "感冒药; 红绿灯; 烤箱."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 当前操控飞行任务已被暂时停止。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control task with enthusiasm!\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议你先去搜索烤箱附近的披萨，然后看看能否找到止疼药。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the object search task list now.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机在当前位置上升一百五十厘米，然后无人机提升，请命令无人机降落到目标区域。\nresponse: ", "response": "move_up 150 cm; Missing move_up; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Open the curtains and maintain 30% shading.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞吧，感谢；然后左边可能有障碍物，转动；接着向右一米；之后无人机上升七十五厘米；紧接着无人机上升两米；随后任务要求，无人机下降五十厘米；再接下来右移两米；紧接着无人机上升到一米五的高度；最后无人机请着陆在指定地点。\nresponse: ", "response": "take_off; Missing turn_left; move_right 1 m; move_up 75 cm; move_up 2 m; move_down 50 cm; move_right 2 m; move_up 1.5 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hold up on the current flight control op.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续执行先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence for the aerial vehicle.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly the drone backwards 300 cm, then rotate left 90 degrees to face the other direction, afterwards tilt left 90 degrees. Following that, I’m a bit apprehensive, could we lower the drone slowly by 20 inches? Next, can you make it rotate left a bit? I’m feeling a bit dizzy. Immediately after, please make the drone go left 150 centimeters, then turn left 45 degrees. Subsequently, descend by 30 centimeters. Could you make it ascend a bit? I’m a little on edge watching it. First, go backwards, next descend 10 feet to land on the rooftop, and in the end, land now!\nresponse: ", "response": "move_back 300 cm; turn_left 90 degrees; turn_left 90 degrees; move_down 20 in; Missing turn_left; move_left 150 cm; turn_left 45 degrees; move_down 30 cm; Missing move_up; Missing move_back; move_down 10 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused flight control task!\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找出客厅沙发上的遥控器位置。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Put the current hunt on hold, as if pausing a game of hide-and-seek in mid-flight.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动无人机的起飞程序，立刻右转五十度，接着左移六十厘米，最后立即降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清除当前的控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then bank right 2 meters, after that, rotate the drone to the right by 120 degrees, next move the drone in reverse direction, subsequently move backward 45 inches, afterwards turn it left by 120 degrees, following that lower the drone 2 meters, then the drone should rotate left, and in the end, lower it down now.\nresponse: ", "response": "take_off; move_right 2 m; turn_right 120 degrees; Missing move_back; move_back 45 in; turn_left 120 degrees; move_down 2 m; Missing turn_left; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing flight operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move backward 45 inches, then veer right, afterwards fly forward 15 feet, next turn 270 degrees to the right.\nresponse: ", "response": "move_back 45 in; Missing turn_right; move_forward 15 ft; turn_right 270 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以轻盈的步伐穿梭于庭院之间，寻觅那隐匿于绿叶之下的香蕉，以及遗落在角落里的背包与手提包，还有那只悠然自得的猫。\nresponse: ", "response": "香蕉; 背包; 手提包; 猫."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的飞行任务控制。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone, turn 120 degrees to the right, then please make the drone turn left 90 degrees, after that, can we turn it left by 15 degrees? I’m hopeful it’ll give us a better perspective. Next, swing right, afterwards advance 10 cm, following that, lower it down, subsequently shift right by 100 centimeters. Could you please turn the drone right by 90 degrees? Then veer to the right 45 degrees, immediately after come down 5 meters, and in the end land this thing.\nresponse: ", "response": "turn_right 120 degrees; turn_left 90 degrees; turn_left 15 degrees; Missing turn_right; move_forward 10 cm; Missing move_down; move_right 100 cm; turn_right 90 degrees; turn_right 45 degrees; move_down 5 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您详尽地启动目标搜索的任务吧！真是令人期待呢！\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 停止所有无人机操作并降落在指定位置。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: It is suggested that you proceed to locate the dog, spoon, banana, and carrot with utmost diligence.\nresponse: ", "response": "dog; spoon; banana; carrot."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone takeoff now, then pull it back 75 cm, after that bring it down 1 meter, subsequently drone descend to 8 feet, next fly down 3 feet, and in the end lower altitude.\nresponse: ", "response": "take_off; move_back 75 cm; move_down 1 m; move_down 8 ft; move_down 3 ft; Missing move_down."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Ascend 50 centimeters, then fly to the left 6 feet, next slide right, after that make it go backward a bit by going up a bit first, subsequently go forward 7 inches, then fly upwards 10 inches, afterwards rotate it 120 degrees left, following that fly it to the right 20 inches, later shift left by a meter, then turn the drone left by 45 degrees, immediately after raise it by 0.8 meters, and in the end time to land.\nresponse: ", "response": "move_up 50 cm; move_left 6 ft; Missing move_right; Missing move_back; Missing move_up; move_forward 7 in; move_up 10 in; turn_left 120 degrees; move_right 20 in; move_left 1 m; turn_left 45 degrees; move_up 0.8 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move backwards 2 feet, then drift left for 2 meters, after that go to the right, next move backwards 2 feet, afterwards fly the drone to the left by 200 meters to follow the river, following that turn left a bit, subsequently move right 2 feet, and in the end land the drone.\nresponse: ", "response": "move_back 2 ft; move_left 2 m; Missing move_right; move_back 2 ft; move_left 200 m; Missing turn_left; move_right 2 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there! Let's pick up where we left off and get that object search going again. 😊\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前因故中断的飞行控制任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing target acquisition process.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 把现在搞飞行的那个任务列表给清了。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the quest for the object, as if embarking on a silent journey through the air.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing control settings and initiate a new search task.\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the painkillers and the frisbee! Make sure to check every corner and ensure they are found!\nresponse: ", "response": "painkillers; frisbee."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请问能否定位并捕捉到风筝和三明治的位置？\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 麻烦你了，去水槽那边看看，再飞到红绿灯附近转转，如果能找着香蕉就太好了。谢谢啦！\nresponse: ", "response": "水槽; 红绿灯; 香蕉."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最高效的方式定位并捕捉滑板的画面，立即执行。\nresponse: ", "response": "滑板."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请清空当前的飞行任务列表。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 如果可以，请向左移动三十厘米，然后无人机可以进行降落。\nresponse: ", "response": "move_left 30 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for fanta, sprite.\nresponse: ", "response": "fanta; sprite."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 详尽地启动并掌控飞行任务。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能否前往寻找一下领带和勺子，并检查它们是否在冰箱里呢？\nresponse: ", "response": "领带; 勺子; 冰箱."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 就像接力赛中接过棒子一样，让我们友好地重启刚才暂时搁置的物体搜索任务吧！\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is it not the time to commence with the task of guiding the aerial voyage?\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以启动无人机吗，然后前进九十厘米，探索前方的未知区域，接着无人机向右移动，之后左转三十度，调整方向，紧接着小飞机前飞七十厘米，让我们探险一下，最后无人机左转二十度。\nresponse: ", "response": "take_off; move_forward 90 cm; Missing move_right; turn_left 30 degrees; move_forward 70 cm; turn_left 20 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您在紧急的情况下，如同寻找生命之光一般，先定位那根鲜亮的胡萝卜，随后迅速转向，捕捉到那被遗忘在角落里的手机，最后不要遗漏了那把似乎能为迷失者提供避难所的雨伞。\nresponse: ", "response": "胡萝卜; 手机; 雨伞."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先向前移动一百二十厘米，然后无人机，请着陆。\nresponse: ", "response": "move_forward 120 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone forward 20 centimeters, then go backwards 80 centimeters; afterwards, let's see it slide left like it's doing the moonwalk, after that, fly it forward 2 inches, next, slide it left 40 inches, and subsequently, start flying upwards 10 feet.\nresponse: ", "response": "move_forward 20 cm; move_back 80 cm; Missing move_left; move_forward 2 in; move_left 40 in; move_up 10 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate the drone left 60 degrees, then rotate 90 degrees clockwise, next give it a little nudge to the right, like it’s tipping over, afterwards spin the drone to the left 45 degrees, following that turn the drone right by 90 degrees, and finally fly upwards 60 centimeters.\nresponse: ", "response": "Missing move_right; turn_left 60 degrees; turn_right 90 degrees; turn_right 90 degrees; turn_left 45 degrees; move_up 60 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即停止当前的控制与搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向左移动两百五十厘米，然后往左移动，接着后退一百五十厘米以调整位置并检查后方的情况。随后提高二十厘米修正高度，紧接着无人机再次向左侧移动，之后向前移动，并转向右边。接下来，请让无人机再向左侧移动，第二步是让无人机向右掉头180度，最后，请让无人机降落。\nresponse: ", "response": "move_left 250 cm; Missing move_left; move_back 150 cm; move_up 20 cm; Missing move_left; Missing move_forward; Missing turn_right; Missing move_left; turn_right 180 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前中断的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Shift right by 3 meters, then fly backward a few feet, afterwards bring it lower by 20 inches, next climb up by 12 inches, and land now.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜寻胡萝卜，找到后定位手机，接着检查红绿灯，最后观察盆栽植物。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused control and search task for the drone, ensuring all parameters are accurately set and the operation proceeds with precision.\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右飞行，然后让无人机向右转动二十度，之后无人机离地面太远了，下降一百五十厘米，最后请让无人机降落到地面。\nresponse: ", "response": "Missing move_right; turn_right 20 degrees; move_down 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is it not imperative to locate the fanta bottle and the skateboard immediately?\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制与搜索任务\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您在指定区域内执行一次详尽的搜索任务，务必找到牙刷和碗，并将它们安全带回。\nresponse: ", "response": "牙刷; 碗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go ahead and search for the keyboard near the couch, you're doing great!\nresponse: ", "response": "couch; keyboard."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Move the drone to the left 150 centimeters, then advance forward 4 feet, afterwards elevate the drone 3 meters, subsequently descend 10 inches, next fly the drone forward 10 feet, and finally turn it to the left by 120 degrees.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中的当前搜寻物体已被礼貌地请求移除。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，执行任务，然后往后退，请右边转向，接着无人机升高二米，获取更好视野，之后无人机目前离地面过高，请下降一百五十厘米，紧接着无人机现在的方向可能不对，请向右转动九十度以调整方向，最后无人机准备降落。\nresponse: ", "response": "take_off; Missing move_back; Missing turn_right; move_up 2 m; move_down 150 cm; turn_right 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机飞到空中，然后转向右边，接着无人机向右调整八十厘米，随后请让无人机向左转弯，之后请将无人机后退三十厘米以检查后方情况，最后请安排无人机在当前区域降落。\nresponse: ", "response": "take_off; Missing turn_right; move_right 80 cm; Missing turn_left; move_back 30 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 上升一百五十厘米，然后后退一百五十厘米，调整位置，检查后方的情况，接着请将无人机左转，随后往右转九十度，紧接着请将无人机右移，最后升高到一米，更高的视角能帮助我们更好地观察。\nresponse: ", "response": "move_up 150 cm; move_back 150 cm; Missing turn_left; turn_right 90 degrees; Missing move_right; move_up 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 将无人机向右移动三十厘米，确认目标是否在视野中，然后无人机下降五十厘米，接着右移四十厘米，随后无人机可以右转五十度吗，紧接着请下降，之后无人机后退一米，接着左侧移动两百厘米，随后左侧飞行八十厘米，确认那边的情况，最后前方视线不清晰，向前移动一百厘米，紧接着无人机提升。\nresponse: ", "response": "move_right 30 cm; move_down 50 cm; move_right 40 cm; turn_right 50 degrees; Missing move_down; move_back 1 m; move_left 200 cm; move_left 80 cm; move_forward 100 cm; Missing move_up."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请权威地指令应用程序暂停当前正在执行的物体搜寻任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 赶紧启动控制和搜索任务吧，咱们得快点行动！加油！\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞了，然后将无人机前进；接着，无人机可以右转五十度吗；随后，请将无人机慢慢下降一米，这样可以更接近地面；紧接着，无人机前移六十厘米以检查前方情况；之后，无人机下降八十厘米，以接近地面；随后，向前飞行五十厘米；最后，现在可以让无人机降落吗。\nresponse: ", "response": "take_off; Missing move_forward; turn_right 50 degrees; move_down 1 m; move_forward 60 cm; move_down 80 cm; move_forward 50 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中断当前的目标搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快让无人机上升个八十厘米吧，我想看看更高的风景，然后请让无人机安全地降落在这里.\nresponse: ", "response": "move_up 80 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 使无人机前进\nresponse: ", "response": "Missing move_forward."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you initiate the flight control task?\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the once-paused quest for mastery in your control and exploration, embracing the journey with renewed vigor.\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Suspend the ongoing flight control operation of the unmanned aerial vehicle.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off now, then rotate 90 degrees to the right, after that move it up 10 centimeters, subsequently ascend 5 meters to clear the power lines, next rotate 360 degrees to the right, afterwards drop it 4 inches, following that drift right like you're dodging an obstacle, 5 meters, immediately after The drone should drop down 1 meter, and finally fly higher.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即寻找烤箱。\nresponse: ", "response": "烤箱."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off now, then bank right 2 meters, after that, rotate the drone to the right by 120 degrees, next move the drone in reverse direction, subsequently move backward 45 inches, afterwards turn it left by 120 degrees, following that lower the drone 2 meters, then the drone should rotate left, and in the end, lower it down now.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Soar over the plains and let your eyes be like hawks, seeking the round pizza and the tall giraffe.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation immediately. However, failure to comply will result in task termination.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转九十度，检查左侧情况，然后后退五十厘米，调整一下位置，看看后面有什么，随后把无人机降落一米。\nresponse: ", "response": "turn_left 90 degrees; move_back 50 cm; move_down 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在寻找的过程中，犹如细心的园丁照料着每一株盆栽植物一般，请友好地、仔细地检查每一个角落，从水槽到长椅，确保领带的安全无虞。\nresponse: ", "response": "盆栽植物; 领带; 水槽; 长椅."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 先停一下现在的操控和搜索任务吧。\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Gently set aside the present guidance and seek task, allowing the aerial envoy to rest momentarily.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请迅速定位剪刀和马的位置。\nresponse: ", "response": "剪刀; 马."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for tie, toothbrush, book, vase.\nresponse: ", "response": "tie; toothbrush; book; vase."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing in the air! Then, climb 6 feet. After that, rotate the drone left by 25 degrees. Next, move rightward.\nresponse: ", "response": "take_off; move_up 6 ft; turn_left 25 degrees; Missing move_right."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先，向右一米，然后向上升起二十厘米，视角向上。紧接着，无人机右移一米，之后无人机可以右转五十度吗？随后左侧飞行一米，请将无人机左移一百厘米。接下来移动到右侧，之后无人机现在下降一百厘米。紧接着为了查看后方的情况，请将无人机后退两米。随后让无人机前进七十五厘米，然后向右转二十度，最后让无人机现在降落。\nresponse: ", "response": "move_right 1 m; move_up 20 cm; move_right 1 m; turn_right 50 degrees; move_left 1 m; move_left 100 cm; Missing move_right; move_down 100 cm; move_back 2 m; move_forward 75 cm; turn_right 20 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Gently halt the ongoing quest for the object, if you will.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否考虑先寻找汽车，然后再去定位那个苹果呢？\nresponse: ", "response": "汽车; 苹果."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the dog and tie.\nresponse: ", "response": "dog; tie."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control task list for the drone.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn on the water heater and preset the temperature to 50 degrees Celsius.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在餐桌旁，迅速寻找领带和碘伏，时间紧迫。\nresponse: ", "response": "领带; 餐桌; 碘伏."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后面可能右东西，可以掉头看看吗，然后快点左移，接着升高，随后无人机需要向左飞行五十厘米，之后无人机上升两百厘米，最后无人机请着陆。\nresponse: ", "response": "turn_left 180 degrees; Missing move_left; Missing move_up; move_left 50 cm; move_up 200 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机，请前进七十厘米，然后请向左移动七十五厘米，寻找目标物体，接着向前飞行五十厘米，随后请向后退，最后让无人机停在地面上。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You might want to clear the current object search task list for a smoother drone operation.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the dog.\nresponse: ", "response": "dog."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly backward for 2 meters, then shift to the right by 30 centimeters, after that move up slightly, next bank left by 2 meters, afterwards I'm relaxed, fly up 5 inches, subsequently move back 30 inches, later rise up abruptly 30 cm, and finally getting impatient, fly to the right by 30 cm.\nresponse: ", "response": "move_back 2 m; move_right 30 cm; Missing move_up; move_left 2 m; move_up 5 in; move_back 30 in; move_up 30 cm; move_right 30 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go back 200 cm, then move forward a bit, afterwards bring it down 3 feet, next move the drone 3 feet forward, and finally turn left 60 degrees.\nresponse: ", "response": "move_back 200 cm; Missing move_forward; move_down 3 ft; move_forward 3 ft; turn_left 60 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞，准备工作，然后无人机能向右转四十五度吗，接着无人机顺时针旋转一百八十度，随后请让无人机向左移动二十厘米，紧接着左飞行八十厘米，之后无人机飞得太高了，请下降六十厘米，后来无人机提升，接下来无人机上升，最后让无人机在此处完成降落。\nresponse: ", "response": "take_off; turn_right 45 degrees; turn_right 180 degrees; move_left 20 cm; move_left 80 cm; move_down 60 cm; Missing move_up; Missing move_up; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索这片区域，找到那匹马和那些甜甜圈，这非常紧急！\nresponse: ", "response": "马; 甜甜圈."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 快让无人机上升个八十厘米吧，我想看看更高的风景，然后请让无人机安全地降落在这里.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone to the right for a while, then shift right 25 inches, afterwards go back 8 feet, next go backwards, and in the end set it down.\nresponse: ", "response": "Missing move_right; move_right 25 in; move_back 8 ft; Missing move_back; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you kindly consider pausing the ongoing control and search operation for a moment?\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find the drawer in the kitchen that holds knives.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 当前操控飞行任务列表被优雅地清空。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 继续执行先前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地清空当前正在执行的控制飞行任务列表，以确保后续操作的顺利进行。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到无人机视野中的人形目标并标记其位置。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Ascend swiftly 2 meters, then lower altitude, next rotate it right by 180 degrees, afterwards move right 100 inches, subsequently set it down.\nresponse: ", "response": "Missing move_down; move_up 2 m; turn_right 180 degrees; move_right 100 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go ahead 100 cm, hover up by 50 centimeters, Turn the drone right by 45 degrees right away, can it descend, adjust direction to the right 45 degrees, fly back 6 inches, then descend to the ground level.\nresponse: ", "response": "move_forward 100 cm; move_up 50 cm; turn_right 45 degrees; Missing move_down; turn_right 45 degrees; move_back 6 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 能否让无人机下降一米，然后后退一百五十厘米，接着很好，现在向右飞行八十五厘米，随后无人机现在降下一百五十厘米，紧接着我怀疑目标在左边，之后下降四十厘米，再向左移动一百八十厘米，第二后退一米，第三无人机后退一百五十厘米，最后无人机降落在预定位置。\nresponse: ", "response": "move_down 1 m; move_back 150 cm; move_right 85 cm; move_down 150 cm; turn_left 90 degrees; move_down 40 cm; move_left 180 cm; move_back 1 m; move_back 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以优雅的姿态，在这广袤的空间里寻觅那抹独特的芬达色泽，同时也不要忽略了对精致领带的细心探索。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the frisbee.\nresponse: ", "response": "frisbee."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current object search task, and then resume it when ready.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左移一米，然后请让无人机前方移动八十厘米检查前方是否有障碍物，接着前方视线模糊，向前移动，随后把小飞机右边移六十厘米吧，紧接着飞行到前面一米处，之后右侧移动七十五厘米以避开障碍，紧接着为了解决当前的视角问题，请上升七十五厘米，随后移动五十厘米向左，紧接着把无人机向右推二十五厘米，最后无人机到达目标位置后请降落。\nresponse: ", "response": "move_left 1 m; move_forward 80 cm; Missing move_forward; move_right 60 cm; move_forward 1 m; move_right 75 cm; move_up 75 cm; move_left 50 cm; move_right 25 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别去找剪刀和芬达了，行李箱跟饼干也别理。\nresponse: ", "response": "剪刀; 芬达; 行李箱; 饼干."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索感冒药、键盘、香蕉和行李箱。\nresponse: ", "response": "感冒药; 键盘; 香蕉; 行李箱."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左边移动四十厘米以调整位置，然后后退七十厘米，接着右转一百二十度，之后无人机左转一百八十度掉头，随后升高二米获取更好视野，紧接着向后退两百厘米，后来无人机再次左转一百八十度掉头，接下来移动到右侧，最后无人机向前移动三十厘米确认前方是否有障碍物。\nresponse: ", "response": "move_left 40 cm; move_back 70 cm; turn_right 120 degrees; turn_left 180 degrees; move_up 2 m; move_back 200 cm; turn_left 180 degrees; Missing move_right; move_forward 30 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议您清空当前的飞行任务列表，以确保应用程序进程顺畅运行。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please clear the current flight control task list for the drone? We appreciate your understanding.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please resume the paused control and search task.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find fanta, scissors, cake, giraffe.\nresponse: ", "response": "fanta; scissors; cake; giraffe."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause control; initiate search.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's get this thing off the ground! Then turn to face the sun 120 degrees. After that, turn it left 60 degrees as fast as you can. Next, adjust the drone's position to the right. Following that, let’s turn it right by 45 degrees. I’m thrilled to see how it handles this turn! Immediately after, move to the left by 12 inches. Then move forward for 2 meters, nice and steady. After that, Okay, let's get serious, climb 6 feet. Subsequently, rotate 180 degrees to the right. In the end, initiate the landing.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the earlier suspended control and search operation.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is there a truck to be found?\nresponse: ", "response": "truck."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的控制与搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Will autonomous driving completely replace human drivers in the future?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Confirm if there are whiteboard markers in the meeting room.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Commence the previously halted target acquisition process.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机起飞，然后请让无人机向上飞，接着无人机右移一米，最后无人机在这儿降落吧。\nresponse: ", "response": "take_off; Missing move_up; move_right 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快启动无人机，我们要开始冒险了，然后降落一米，接着为了确保无人机位置，请向左移动三十厘米，之后请右转九十度，检查右侧情况，紧接着为了获得更好的视角，请将无人机上升两米，随后无人机飞得太高，请下降，紧接着往左飞行一百厘米，后来请将无人机右移两百厘米，最后让无人机向后退一米五。\nresponse: ", "response": "take_off; move_down 1 m; move_left 30 cm; turn_right 90 degrees; move_up 2 m; Missing move_down; move_left 100 cm; move_right 200 cm; move_back 1.5 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去把电视和钟找出来，就像长颈鹿寻找它的飞盘一样迅速。\nresponse: ", "response": "电视; 钟; 长颈鹿; 飞盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate it 120 degrees left. Next, spin the drone clockwise by 45 degrees. Then, adjust direction to the right 45 degrees. After that, commence a vertical descent of 6 feet. Following that, I need you to back up 5 feet. Thereafter, fly upwards 60 centimeters. Immediately after, slide right 4 inches. Subsequently, advance forward 3 meters. Later, perform a lateral correction of 150 centimeters to the right. In the end, let's do a little spin to the right, 360 degrees!\nresponse: ", "response": "turn_left 120 degrees; turn_right 45 degrees; turn_right 45 degrees; move_down 6 ft; move_back 5 ft; move_up 60 cm; move_right 4 in; move_forward 3 m; move_right 150 cm; turn_right 360 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Amidst the serene expanse of the sky, clear the present command and embark upon a new quest for discovery.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动详尽的物体搜索任务，以权威的方式进行进程控制。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应立即执行详尽地清除当前正在控制飞行任务列表的操作？这一步骤非常紧急，以避免可能产生的负面影响。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Quickly take off! First, right now, move left by 50 inches. Next, please move the drone left 5 feet. Then, go up 5 feet. After that, send it forward as if it's charging into the wind. Immediately after, go backward 4 meters. Following that, shift left 2 feet. Subsequently, bring the drone back 80 centimeters. Thereafter, lower it slightly. In the end, bring it down, now!\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Activate takeoff protocol immediately, then move it left 50 inches, after that veer to the right 30 degrees abruptly, next come down 4 ft, subsequently turn it left by 90 degrees, afterwards descend 50 centimeters, following that please rotate it right by 180 degrees, and in the end land it now.\nresponse: ", "response": "take_off; move_left 50 in; turn_right 30 degrees; move_down 4 ft; turn_left 90 degrees; move_down 50 cm; turn_right 180 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即清空当前任务列表\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Be guided to seek out the dog, as if following a trail of breadcrumbs.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 现在必须马上恢复之前暂停的搜寻任务吗？\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't forget to check for a snowboard, not the refrigerator or toaster, and definitely not a cake.\nresponse: ", "response": "snowboard; refrigerator; toaster; cake."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，开始执行任务，然后请向前飞行一米，接着请将无人机往右移，之后使无人机向左转，最后向左调整。\nresponse: ", "response": "take_off; move_forward 1 m; Missing move_right; Missing turn_left; Missing move_left."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then elevate up 2.5 m, afterwards spin around to the left by 90 degrees, and finally, feeling lazy, land it now.\nresponse: ", "response": "take_off; move_up 2.5 m; turn_left 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off the ground now, then take it left 4 inches, go back now, drift right, move up 12 inches, fly upwards 3 meters, go downwards 2 meters, raise it 100 centimeters, move it straight ahead, backward movement, ascend swiftly 2 meters, head to the left, move forward 5 meters, and push it forward.\nresponse: ", "response": "take_off; move_left 4 in; Missing move_back; Missing move_right; move_up 12 in; move_up 3 m; move_down 2 m; move_up 100 cm; Missing move_forward; Missing move_back; move_up 2 m; Missing move_left; move_forward 5 m; Missing move_forward."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the pizza and the motorcycle.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Get the control and search task started right away!\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前方有障碍物，向前移动两米，然后请将无人机后退一百厘米以查看后方的情况，接着请无人机左转四十五度调整角度以获得更好视角，随后将无人机逆时针旋转六十度，紧接着向前飞行五十厘米，之后无人机高度过高，请下降五十厘米，紧接着让无人机顺时针旋转四十度，最后赶紧降落。\nresponse: ", "response": "move_forward 2 m; move_back 100 cm; turn_left 45 degrees; turn_left 60 degrees; move_forward 50 cm; move_down 50 cm; turn_right 40 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请先找到人，然后是遥控器，最后搜索微波炉。\nresponse: ", "response": "人; 遥控器; 微波炉."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在需要起飞，然后右侧前进，接着无人机飞得太高了，降低，最后需要左转，飞行一米。\nresponse: ", "response": "take_off; Missing move_right; Missing move_down; move_left 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左移两米，然后让它降落。\nresponse: ", "response": "move_left 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 以文学性、建议性和命令式结合，同时加入一些负面措辞，可以这样改写：\n\n\"在您启动这段天空之旅之前，请慎重考虑，务必确保一切条件成熟，否则这趟旅程可能会遭遇不测。\"\n\n这句话保留了原意，即开始控制飞行任务的意思，但加入了更多的文学色彩和情感色彩，同时也带有一丝警告的意味。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and start the object search task.\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 停止无人机当前飞行任务并切换到悬停模式。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标搜索任务，真是聪明的选择！\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise up! Then go to the left 2 meters. After that, make it go up by 50 centimeters.\nresponse: ", "response": "take_off; move_left 2 m; move_up 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the chair, cell phone, surfboard, and sprite with utmost urgency.\nresponse: ", "response": "chair; cell phone; surfboard; sprite."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the erstwhile suspended mission of command and exploration.\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move left 200 centimeters, then move back now, after that back up the drone by 120 cm, afterwards rotate right side, subsequently go right, next bring it back, then move left 200 centimeters again, immediately after nudge backwards 5 inches, following that shift right 1 meter, and in the end land.\nresponse: ", "response": "move_left 200 cm; Missing move_back; move_back 120 cm; Missing turn_right; Missing move_right; Missing move_back; move_left 200 cm; move_back 5 in; move_right 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被指派的任务是搜索并定位西兰花和叉子的位置。\nresponse: ", "response": "西兰花; 叉子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick that flight control task back into gear, just like we left it, making sure every parameter is set exactly as before.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请务必在最短的时间内找到胡萝卜和杯子，并且别忘了检查牙刷是否也在沙发上，这非常紧急，但请尽量温柔操作，以免造成任何损坏。\nresponse: ", "response": "胡萝卜; 杯子; 牙刷; 沙发."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task and continue your journey smoothly.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后让无人机向右转动二十度，接着往左移动一百五十厘米。\nresponse: ", "response": "take_off; turn_right 20 degrees; move_left 150 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Embark upon the journey of commanding your aerial voyage, letting the skies embrace the whisper of progress; gently initiate the flight control sequence, and watch as dreams take flight.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要恢复先前中断的飞行任务呢？\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，然后右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍，随后无人机左转五十度，接着提高二十厘米，修正高度，之后右移三十厘米，紧接着左转四十五度，调整角度，咱们要更好地查看左侧，随后请帮忙让无人机下降一米，然后左飞行八十厘米，紧接着上升一百五十厘米，获取更高的视角，最后请将无人机向左转九十度，以检查左边是否有障碍物。\nresponse: ", "response": "move_forward 20 cm; move_right 80 cm; turn_left 50 degrees; move_up 20 cm; move_right 30 cm; turn_left 45 degrees; move_down 1 m; move_left 80 cm; move_up 150 cm; turn_left 90 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please urgently locate the person and ensure you find their handbag along with a donut, kindly.\nresponse: ", "response": "donut; handbag; person."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off, then proceed left 2 meters, after that fly to the left 5 meters, next bring it down 3 feet, subsequently pull it back 75 cm, afterwards go backwards a little, following that rotate the drone to the left 60 degrees, and in the end decrease altitude by 5 inches.\nresponse: ", "response": "take_off; move_left 2 m; move_left 5 m; move_down 3 ft; move_back 75 cm; Missing move_back; turn_left 60 degrees; move_down 5 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向后移动九十厘米，然后无人机现在降下一百五十厘米，接着无人机升高，随后无人机左移，之后请将无人机左侧移动一百厘米，最后请将无人机向左移动两百五十厘米。\nresponse: ", "response": "move_back 90 cm; move_down 150 cm; Missing move_up; Missing move_left; move_left 100 cm; move_left 250 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the fork, bowl, knife, and toilet.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for broccoli, then locate fork.\nresponse: ", "response": "broccoli; fork."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 先把正在执行的寻宝任务放个慢动作吧。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines, then bank left by 2 meters, after that I’m not sure how to feel about this, could you please adjust its position to the left, subsequently fly back 3 meters, next fly downwards, then move forward a bit, like 2 meters, afterwards fly backward 2 inches, and in the end land the drone now.\nresponse: ", "response": "take_off; move_left 2 m; Missing move_left; move_back 3 m; Missing move_down; move_forward 2 m; move_back 2 in; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Empty the present unmanned aerial vehicle operation queue.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the previously suspended item search operation.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the donut, cat, and car with utmost urgency; your assistance is greatly valued.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please initiate the object search task?\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The oven and the fork are to be located by the person.\nresponse: ", "response": "oven; fork; person."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you make it descend quickly? I'm in a hurry! Then reverse the drone by 100 centimeters, after that move leftward 3 ft.\nresponse: ", "response": "Missing move_down; move_back 100 cm; move_left 3 ft; Missing turn_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 是否可以去寻找那只猫呢？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 上升一米，增加高度，然后向左移动一米五，请将无人机左侧移动一百厘米，随后无人机左侧移动二百厘米。\nresponse: ", "response": "move_up 1 m; move_left 1.5 m; move_left 100 cm; move_left 200 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please turn it to the left by 120 degrees, then retract the drone a bit.\nresponse: ", "response": "turn_left 120 degrees; Missing move_back."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我感觉左边有点异常，调整一下方向，然后前方有目标，前进一米，接着前方不清楚，前进。\nresponse: ", "response": "turn_left 90 degrees; move_forward 1 m; Missing move_forward."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Given the complexity and varying lengths required, here is a possible rephrasing:\n\n\"Ensure that you have cleared the existing list of object search tasks within the drone application interface to prepare for new operations.\"\n\nThis maintains the original meaning while adding detail and varying the sentence structure.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please pause the current control and search task for a moment.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 即刻启动这至关重要的航程任务，让天空见证一场精妙绝伦的飞行诗篇。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing off the ground, then spin right 180 degrees, after that move forward 25 in, next shift the drone down, subsequently bank right by 4 feet, and finally fly forward now.\nresponse: ", "response": "take_off; turn_right 180 degrees; move_forward 25 in; Missing move_down; move_right 4 ft; Missing move_forward."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以优雅的姿态，在那静谧的角落探寻水槽的踪迹。\nresponse: ", "response": "水槽."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object search task immediately.\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即让无人机起飞，然后让无人机向左转，之后任务要求，无人机下降五十厘米，接着请让无人机向右侧移动，最后能否让无人机下降到一米的高度。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Execute a lateral displacement of 5 feet to the right, then move to the right, afterwards slowly move back 30 inches, next shift the drone leftwards by 75 centimeters, following that rotate counterclockwise 60 degrees, subsequently shift right by 3 meters, immediately after descend the drone 7 inches, then fly backward 20 feet, later go left 3 feet slowly, and in the end land it gently.\nresponse: ", "response": "move_right 5 ft; Missing move_right; move_back 30 in; move_left 75 cm; turn_left 60 degrees; move_right 3 m; move_down 7 in; move_back 20 ft; move_left 3 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在前方找到行李箱和手提包。\nresponse: ", "response": "行李箱; 手提包."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone now, then tilt the drone to the left, after that, fly towards the front, next, move forward, immediately after, drone should rotate left, subsequently, turn the drone 90 degrees left, afterwards, ascend 1 foot, following that, fly it left 50 cm, and in the end, land the drone.\nresponse: ", "response": "take_off; Missing turn_left; Missing move_forward; Missing move_forward; Missing turn_left; turn_left 90 degrees; move_up 1 ft; move_left 50 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您考虑取消现有的控制与搜索任务，这样我们可以一起解决遇到的问题。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Urgently clear the current search task list to ensure optimal drone operation.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take it off now, I can’t wait to see it in action! Let's then move down gently, maybe 30 inches. Next, back up a little before moving leftward 8 inches. After that, spin it around like it's dancing. Following that, go backwards and subsequently move the drone to the left 150 centimeters. Immediately after, go ahead 40 inches. Then, fly straight up. Thereafter, move forward 25 in. Next, rotate left by 60 degrees. In the end, bring it to the ground.\nresponse: ", "response": "take_off; move_down 30 in; Missing move_back; move_left 8 in; turn_right 360 degrees; Missing move_back; move_left 150 cm; move_forward 40 in; Missing move_up; move_forward 25 in; turn_left 60 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the toilet, toaster, and orange.\nresponse: ", "response": "toilet; toaster; orange."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why don't you check near the couch for the knife and sandwich?\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去厨房找烤箱，然后在餐桌上找热狗和雪碧。\nresponse: ", "response": "烤箱; 热狗; 雪碧."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 让飞行任务在您的掌控之下缓缓启动，感受每一步进展带来的微妙喜悦。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You might want to consider pausing the current search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要恢复先前暂停的控制与搜索任务呢？\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您在复杂的环境中优雅地搜索一下，先是行李箱，接着是热狗，好吗？\nresponse: ", "response": "行李箱; 热狗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The search pattern is to be executed with the donut as the epicenter, casting a wide net to ensnare the cell phone within its digital shadow.\nresponse: ", "response": "donut; cell phone."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向前移动三十厘米，确认前方是否有障碍物，然后右转八十度，以便更好地观察右侧，接着无人机左侧转向，随后无人机左移，紧接着指示无人机向后退，之后无人机升高，请无人机上升一百五十厘米，最后现在可以让无人机降落吗。\nresponse: ", "response": "move_forward 30 cm; turn_right 80 degrees; Missing turn_left; Missing move_left; Missing move_back; Missing move_up; move_up 150 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去找到厕所里的狗吧，真是急死人了！\nresponse: ", "response": "狗; 厕所."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Make it go up 50 centimeters, now! Then move right, after that please bring it down slowly, thanks, next shift left 2 feet.\nresponse: ", "response": "move_up 50 cm; Missing move_right; Missing move_down; move_left 2 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is there a reason why finding the knife, spoon, and toaster should be optional?\nresponse: ", "response": "knife; spoon; toaster."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: In the quest for the elusive horse and the errant sports ball, shall we not also consider the peculiar case of the microwave, wondering if it too might hold a clue to their whereabouts?\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bring it left 4 feet, then slide it left 40 inches, afterwards rotate left by 75 degrees.\nresponse: ", "response": "move_left 4 ft; move_left 40 in; turn_left 75 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 关闭卧室的吊扇。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go up now.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机向左转五十度吗，然后请上升七十五厘米，接着将高度提高三十厘米，调整视角以便查看周围情况，随后把小飞机右边移六十厘米吧，紧接着右转一百度，之后无人机前方有障碍物，向前移动五十厘米以检查，再请让无人机退后两米，随后请将无人机向左移动两百五十厘米，最后立即降落。\nresponse: ", "response": "turn_left 50 degrees; move_up 75 cm; move_up 30 cm; move_right 60 cm; turn_right 100 degrees; move_forward 50 cm; move_back 2 m; move_left 250 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即让无人机起飞，然后无人机上升到一米五的高度，接着为了探测右侧的情况，请将无人机向右移动六十厘米，之后向右转二十度，紧接着右移七十五厘米，随后无人机，请后退两百厘米，第二左侧飞行七十厘米，第三请调整方向，右转，最后请将无人机降落在此处。\nresponse: ", "response": "take_off; move_up 1.5 m; move_right 60 cm; turn_right 20 degrees; move_right 75 cm; move_back 200 cm; move_left 70 cm; Missing turn_right; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左移两米，然后左侧旋转五十度，接着左侧可能有目标，请左转一百八十度查看；上移之后，请上升五十厘米，紧接着无人机飞得太高了，请下降一米；随后右移五厘米，第二由于右侧视角被遮挡，请将无人机右转四十五度以调整视角，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "move_left 2 m; turn_left 50 degrees; turn_left 180 degrees; Missing move_up; move_up 50 cm; move_down 1 m; move_right 5 cm; turn_right 45 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的控制与搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Zoom forward 3 feet, then move right 1 meter, afterwards move left 15 meters to get a better view, next bring the drone down 5 feet to get a closer look, subsequently move the drone to the right for a while.\nresponse: ", "response": "move_forward 3 ft; move_right 1 m; move_left 15 m; move_down 5 ft; Missing move_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: May I kindly request you to initiate the flight control task?\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the mouse, coldrex, and umbrella?\nresponse: ", "response": "mouse; coldrex; umbrella."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的任务列表吧，就像是为您的应用程序进程打开了一扇全新的大门，让一切从头开始，轻松上阵！\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly up! Then rotate the drone left by 180 degrees. After that, turn it around 360 degrees. Next, move back a short distance.\nresponse: ", "response": "take_off; turn_left 180 degrees; turn_right 360 degrees; Missing move_back."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地继续执行之前已暂停的控制及搜寻任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 开始执行控制和搜索的任务了。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sports ball and the horse.\nresponse: ", "response": "sports ball; horse."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone should rotate left, then increase altitude by 15 inches, afterwards veer to the right 120 degrees, next if it’s not too much trouble, could you move it right 2 feet.\nresponse: ", "response": "Missing turn_left; move_up 15 in; turn_right 120 degrees; move_right 2 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往厕所寻找剪刀。\nresponse: ", "response": "剪刀; 厕所."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control sequence and commence the search operation with precision and confidence.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the knife, tie, painkillers, and backpack.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Confirm if there are road construction signs in the drone footage.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the cake!\nresponse: ", "response": "cake."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即前往水槽附近，找到瓶子和风筝。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去把烤面包机、长颈鹿、飞盘和键盘找出来。\nresponse: ", "response": "烤面包机; 长颈鹿; 飞盘; 键盘."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找到滑板，飞机和汽车吧，一定能完成任务！\nresponse: ", "response": "滑板; 飞机; 汽车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the sink and bowl with the gentleness of a whisper, then venture forth to find the motorcycle and iodophor, as if following a trail of serene whispers!\nresponse: ", "response": "sink; bowl; motorcycle; iodophor."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前的飞行任务，让我们一起确保安全和精准的操作！\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机起飞，然后左转三十度，调整方向，接着请将无人机向左移动一百二十厘米，之后右移一米，绕过障碍物，我们继续前行，随后将无人机右转五十度，紧接着请让无人机往后移动，快让无人机上升个八十厘米吧，我想看看更高的风景，最后来点高空的视角，上升一百五十厘米，观察整个区域。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去那边看看那个红绿灯，像是在等你一样。\nresponse: ", "response": "红绿灯."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右侧转向，然后后退五十厘米以调整位置；前方有点模糊，接着向前移动一百五十厘米；无人机现在的方向可能不对，请随后向右转动九十度以调整方向；之后前进二十厘米；紧接着右转四十五度，调整无人机方向，确保飞行顺畅；随后，向前移动一百五十厘米，注意地面情况；最后，请将无人机左侧移动一百厘米。\nresponse: ", "response": "Missing turn_right; move_back 50 cm; move_forward 150 cm; turn_right 90 degrees; move_forward 20 cm; turn_right 45 degrees; move_forward 150 cm; move_left 100 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最优雅的姿态，在这静谧的空间里探寻那隐匿于角落的键盘。\nresponse: ", "response": "键盘."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续执行之前详尽地暂停了的飞行控制任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快如闪电地去找那只鸟，顺便把那瓶可乐也带回来！\nresponse: ", "response": "鸟; 可乐."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, move back for backward movement, then spin it left, 60 degrees, afterwards hurry up and land already.\nresponse: ", "response": "Missing move_back; turn_left 60 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended flight control operation.\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and start the object search task.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动控制程序，像猎鹰般迅速展开搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object search task immediately.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the active control and search operations.\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please resume the previously paused object search task.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您详尽地搜索一下，友好而礼貌地确认手提包和烤箱的位置。\nresponse: ", "response": "手提包; 烤箱."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向后退五十厘米，然后左转四十五度，调整角度，咱们要更好地查看左侧；接着无人机向前飞行一米，目标就在前面，准备接近；随后再次向前推进一米，观察前方情况；紧接着请将无人机后退一百厘米，以查看后方的情况；之后左边可能有障碍物，转动；然后无人机上升到两米高；紧接着请调整方向，右转；随后右转九十度，查看周围环境；最后请将无人机往右移。\nresponse: ", "response": "move_back 50 cm; turn_left 45 degrees; move_forward 1 m; move_forward 1 m; move_back 100 cm; Missing turn_left; move_up 2 m; Missing turn_right; turn_right 90 degrees; Missing move_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: To resume the previously paused object search task within your drone application, we recommend initiating the task continuation protocol by accessing the mission control panel and selecting the 'Resume Task' option. This will seamlessly reintegrate the suspended operation into the active workflow, ensuring minimal disruption to your overall surveillance or inspection objectives.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate to the right 30 degrees, then move down gently, maybe 30 inches, after that turn it left 60 degrees as fast as you can, next descend the drone by 100 centimeters, afterwards move up slightly, following that advance 10 cm, subsequently turn the drone 90 degrees left, and in the end let the drone land now.\nresponse: ", "response": "turn_right 30 degrees; move_down 30 in; turn_left 60 degrees; move_down 100 cm; Missing move_up; move_forward 10 cm; turn_left 90 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Consider pausing the ongoing control and search operations to ensure optimal performance and safety of the drone.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go backwards, then go left 12 inches, afterwards move forward 5 meters, next go backward a short distance, about 1 meter, subsequently make the drone turn left, following that fly forward 1 foot, immediately after spin counterclockwise 45 degrees, then move forward 5 meters, thereafter shift left by 2 meters, later lift it up 80 cm, afterwards move forward 5 feet, and in the end land the drone.\nresponse: ", "response": "Missing move_back; move_left 12 in; move_forward 5 m; move_back 1 m; Missing turn_left; move_forward 1 ft; turn_left 45 degrees; move_forward 5 m; move_left 2 m; move_up 80 cm; move_forward 5 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off quickly, then descend it down 30 inches, afterwards drift back, next move up 12 inches, following that rotate to the right 90 degrees, subsequently make it do a pirouette to the left.\nresponse: ", "response": "take_off; move_down 30 in; Missing move_back; move_up 12 in; turn_right 90 degrees; turn_left 360 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 接着之前暂停的任务，现在开始重新搜索目标物体吧。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Immediately halt the ongoing object search task.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Empty the basket of commands that steers the aerial dance of the drone.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Stop the ongoing search.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the earlier suspended item hunt, please.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前暂停的搜寻任务，详尽地检查每个区域，确保不遗漏任何细节。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以优雅的姿态，请务必在那静谧的房间内寻得书、笔记本电脑与钟，它们应在床边安睡。\nresponse: ", "response": "书; 笔记本电脑; 钟; 床."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you initiate the flight control task?\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift the drone 200 centimeters to the right, then let’s make it go back 10 feet. I’m nervous about it getting too close to that wall! Next, fly the drone forward 10 feet, turn the drone left by 30 degrees, move forward 5 feet afterwards, hover left by 8 inches following that, and subsequently move backward 3 feet before time to set it down.\nresponse: ", "response": "move_right 200 cm; move_back 10 ft; move_forward 10 ft; turn_left 30 degrees; move_forward 5 ft; move_left 8 in; move_back 3 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 真是令人振奋啊，清空当前搜索目标的任务列表吧！\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 快去寻找风筝和手机吧，真是太急人了！\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Gently guide yourself towards the shimmering blade, as if drawn by an invisible thread, and carefully locate the knife.\nresponse: ", "response": "knife."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current flight control task.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please initiate the flight control sequence for the drone, ensuring all systems are online and ready for your command.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机左移五十厘米，然后下降一点，五十厘米，接着无人机，请前进七十厘米，随后让无人机逆时针旋转三百六十度，之后无人机左转二十度，紧接着无人机高度太高，请下降，最后无人机飞得太高了，请下降六十厘米。\nresponse: ", "response": "move_left 50 cm; move_down 50 cm; move_forward 70 cm; turn_left 360 degrees; turn_left 20 degrees; Missing move_down; move_down 60 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机高度太高，请下降，然后请让无人机下降三十厘米，接近地面；随后使无人机向左转，接着无人机下降一百五十厘米；之后左侧移动八十厘米，以避开障碍物，最后往右移动。\nresponse: ", "response": "Missing move_down; move_down 30 cm; Missing turn_left; move_down 150 cm; move_left 80 cm; Missing move_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the fork!\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Advance forward 3 meters, then shift right, 3 feet, afterwards fly backward 20 feet, next go leftward 1.5 m, following that let's do a little spin to the right, 360 degrees!, immediately after I'm so thrilled, let's go up 50 centimeters!, and in the end bring it down slowly.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Erase the existing target identification queue immediately.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shouldn’t we just pick up right where we left off, resuming that paused control and search mission?\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: It is imperative that you initiate the flight control task with utmost immediacy, ensuring the seamless operation of the aerial vehicle.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地前往寻找冲浪板、香蕉和键盘吧。\nresponse: ", "response": "冲浪板; 香蕉; 键盘."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以积极的态度探索四周，务必找到那瓶清凉的雪碧，让这次的任务充满活力和乐趣吧！\nresponse: ", "response": "雪碧."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly backward 10 meters, then fly straight ahead 20 meters, afterwards fly the drone to the left by 200 meters to follow the river.\nresponse: ", "response": "move_back 10 m; move_forward 20 m; move_left 200 m; Missing move_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you urgently locate the keyboard, snowboard, and cat?\nresponse: ", "response": "keyboard; snowboard; cat."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the cell phone, mouse, and spoon, navigating through the landscape as a hawk glides through the sky.\nresponse: ", "response": "cell phone; mouse; spoon."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and kick off the control and search task!\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动目标搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Could you make it ascend a bit? Then fly down 8 inches. After that, bring it down gently, decrease altitude by 5 inches, and execute a vertical climb of 30 inches. Next, retreat back 80 centimeters. Following that, rotate to the left by 60 degrees, then rotate left 30 degrees to change direction. Immediately after, shift to the left. In the end, move it forward.\nresponse: ", "response": "Missing move_up; move_down 8 in; Missing move_down; turn_left 60 degrees; Missing move_left; move_down 5 in; move_back 80 cm; move_up 30 in; turn_left 30 degrees; Missing move_forward."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制与搜索任务\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地寻找长椅旁的胡萝卜。\nresponse: ", "response": "长椅; 胡萝卜."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not take a moment to clear the current control and consider your next move? Feel free to explore new tasks with confidence!\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not pause the control and search task again; resume it immediately.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Why don't you check under the couch for the remote and see if the pizza's nearby, while making sure that knife isn't lying around where it shouldn't be?\nresponse: ", "response": "pizza; remote; knife; couch."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，开始执行任务，然后升高二米，获取更好视野；随后下降七十五厘米，紧接着无人机上升到一米五的高度；之后左边飞行七十厘米看看，接着无人机请飞行到前方三十厘米，并向前飞行五十厘米；接下来再次左边飞行七十厘米看看，随后右移七十厘米；第二步是右转一百度，重新调整方向以适应新的飞行路线；紧接着无人机上升高度，前进七十厘米，检查前方是否有新发现；最后，无人机应该在这里降落。\nresponse: ", "response": "take_off; move_up 2 m; move_down 75 cm; move_up 1.5 m; move_left 70 cm; move_forward 30 cm; move_forward 50 cm; move_left 70 cm; move_right 70 cm; turn_right 100 degrees; Missing move_up; move_forward 70 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即暂停当前飞行任务！\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即起飞，然后向左飞，接着下降一百五十厘米，以便接近地面。\nresponse: ", "response": "take_off; Missing move_left; move_down 150 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 详尽地暂停当前正在进行的物体搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Just move forward 20 inches, then shift right 50 centimeters, after that descend it a little, subsequently get it to climb 4 feet now, next drone needs to go right by 10 feet, afterwards descend 1.5 feet, following that go to the left 2 meters, and in the end can you land the drone?\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以最迅速的方式，像猎鹰般精准地寻找并锁定目标——先是那辆卡车，接着是遥控器，然后不要错过那辆摩托车，最后请留意一个苹果的存在，这任务至关重要，行动起来吧！\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的飞行任务，确保一切按计划顺利进行。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go fetch that kite soaring high, the remote hiding in shadows, the spoon lost in whispers, and those painkillers amidst the chaos.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The ongoing target acquisition sequence must be immediately suspended, as if halting a speeding bullet mid-flight.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到无人机飞行区域内的一条主干道。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议恢复先前暂停的飞行任务，以确保进程顺利进行。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you please make sure to clear out the current flight control task list? It seems a bit cluttered and could cause issues if not addressed.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the backpack, then return to base.\nresponse: ", "response": "backpack."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要恢复先前已暂停的控制与搜索任务呢？\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate take off, then commence a vertical descent of 6 feet, after that go forward 5 meters, next move left 15 meters to get a better view, subsequently lower it down slowly, 70 inches, immediately after which this thing needs to go up right now, afterwards come on back here, 7 feet, and in the end descend to the ground level.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请按照指定顺序，首先定位自行车，接着搜索笔记本电脑，然后找到酒杯，最后检查飞机。\nresponse: ", "response": "自行车; 笔记本电脑; 酒杯; 飞机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's not pause the control and search task again; let’s get it back on track, okay?\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move left 25 centimeters, then head forward 20 feet. Next, turn left now, after that, make it go down. Immediately after, go up now. First, move forward past the parking lot 200 feet, afterwards, proceed forward 70 centimeters steadily, subsequently, Make it go up 50 centimeters, now!.\nresponse: ", "response": "move_left 25 cm; move_forward 20 ft; Missing turn_left; Missing move_down; Missing move_up; move_forward 200 ft; move_forward 70 cm; move_up 50 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请即刻以优雅之姿清空当前的飞行任务清单，确保一切顺畅如初。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请查找并定位鼠标。\nresponse: ", "response": "鼠标."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object detection sequence.\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek forthwith, with haste and hope, the bottle, spoon, and vase.\nresponse: ", "response": "bottle; spoon; vase."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以现在起飞，然后向前飞行九十厘米，接着请将无人机右移。\nresponse: ", "response": "take_off; move_forward 90 cm; Missing move_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The frisbee, couch, skis, and toaster are to be located.\nresponse: ", "response": "frisbee; couch; skis; toaster."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly to the left by 15 feet, then move back from the edge of the cliff 3 meters, afterwards go backward 100 cm, immediately after that veer to the right 30 degrees abruptly, next fly the drone forward 10 feet, following that adjust right by 5 feet, subsequently move forward 5 centimeters, and later move forward 5 meters.\nresponse: ", "response": "move_left 15 ft; move_back 3 m; move_back 100 cm; turn_right 30 degrees; move_forward 10 ft; move_right 5 ft; move_forward 5 cm; move_forward 5 m; Missing move_forward."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 为了开始任务，请让无人机起飞，然后向后退两百厘米，看看会发现什么，接着如果可以，请向左移动三十厘米，随后升高八十厘米，改变高度；无人机向右旋转九十度之后，来点高空的视角，上升一百五十厘米，观察整个区域，紧接着让无人机向后退一百五十厘米；提高高度，右边转四十五度，给右侧一个惊喜，请让无人机向左转，然后请将无人机向右移动六十厘米，随后无人机向右偏移四十五厘米，最后移动到右侧。\nresponse: ", "response": "take_off; move_back 200 cm; move_left 30 cm; move_up 80 cm; turn_right 90 degrees; move_up 150 cm; move_back 150 cm; Missing move_up; turn_right 45 degrees; Missing turn_left; move_right 60 cm; move_right 45 cm; Missing move_right."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机起飞，然后是否可以让无人机降落。\nresponse: ", "response": "take_off; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 好的，按照你的要求，改写后的句子如下：\n\n“现在，请你立刻恢复先前被中断的那个控制和搜索任务。”\n\n这句话保持了原有意思，同时采用了口语化的表达方式、复杂句结构，并以命令式的语气给出指令。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's go up 50 centimeters, then raise altitude a little, next soar forward 15 meters, after that go down 1 foot, subsequently come back to me, afterwards let the drone move forward 50 cm, immediately after raise it 20 inches, following that okay, swing it right for 100 centimeters, thereafter perform a port-side drift for 50 centimeters, then rotate 90 degrees to the right, next Let’s make it go back 10 feet, and in the end touch down.\nresponse: ", "response": "move_up 50 cm; Missing move_up; move_forward 15 m; move_down 1 ft; Missing move_back; move_forward 50 cm; move_up 20 in; move_right 100 cm; move_left 50 cm; turn_right 90 degrees; move_back 10 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Consider searching for the bowl.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: In the realm of your abode, let thy silent guardian venture forth, to seek amidst the shadows where the fork lies entwined with the broccoli, and where the iodophor whispers secrets near the couch.\nresponse: ", "response": "fork; broccoli; iodophor; couch."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off into the blue sky, then bring it down gently afterwards and descend and touch down.\nresponse: ", "response": "take_off; Missing move_down; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the horse, vase, mouse, and backpack.\nresponse: ", "response": "horse; vase; mouse; backpack."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone up now, then hover and rotate right 45 degrees, afterwards execute a lateral displacement of 5 feet to the right, next please make the drone turn left 90 degrees, immediately after that move to the left 1 foot, subsequently spin to the left 90 degrees, and in the end I’m anxious, can you lower it down gently.\nresponse: ", "response": "take_off; Missing move_down; turn_right 45 degrees; move_right 5 ft; turn_left 90 degrees; move_left 1 ft; turn_left 90 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 赶紧去行李箱旁边，找到那个讨厌的钟，顺便看看长椅上有没有丢的飞盘。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn the drone 90 degrees to the left, then reverse the drone by 3 feet. Move the drone backwards by 100 inches, after that execute a lateral shift to the left by 200 centimeters. Following that, fly back 10 inches, subsequently fly forward 72 inches, next go to the right, afterwards move back 2 meters. Immediately after, rotate right by 270 degrees, then soar forward 15 meters. First bring the drone down 5 feet to get a closer look, then turn it right by 30 degrees. After that, bring it down 3 feet and in the end drop it down to the ground now.\nresponse: ", "response": "turn_left 90 degrees; move_back 3 ft; move_back 100 in; move_left 200 cm; move_back 10 in; move_forward 72 in; Missing move_right; move_back 2 m; turn_right 270 degrees; move_forward 15 m; move_down 5 ft; turn_right 30 degrees; move_down 3 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly backward 20 feet, then maneuver to the right, after that turn it left by 180 degrees, next rotate left, immediately after drop it, subsequently move to the right 200 inches, afterwards fly to the left 5 meters, following that turn the drone left by 120 degrees.\nresponse: ", "response": "move_back 20 ft; Missing move_right; turn_left 180 degrees; Missing turn_left; Missing move_down; move_right 200 in; Missing turn_right; move_left 5 m; turn_left 120 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Make it climb 30 centimeters, then lift it up 80 cm.\nresponse: ", "response": "move_up 30 cm; move_up 80 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the giraffe, will ya?\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请无人机现在起飞，感谢；然后向右移动两米；接着请让无人机向后移动四十厘米；随后向右移动七十厘米；紧接着，请让无人机向右移动；之后往前飞行一米；接下来往前飞行二百厘米；随后无人机后退一百五十厘米，以便观察后方；最后，无人机需要在此地降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机右转六十度，然后为了绕过前方的障碍物，请将无人机向左飞行一百二十厘米，之后无人机上升七十五厘米，紧接着向前移动一米。请将无人机向左转九十度，以检查左边是否有障碍物，随后请升高。无人机离地面太远了，下降一百五十厘米，接着请将无人机前进一米。左侧调整距离，然后左转六十度，检查左侧情况，最后现在请让无人机在指定地点降落。\nresponse: ", "response": "turn_right 60 degrees; move_left 120 cm; move_up 75 cm; move_forward 1 m; turn_left 90 degrees; Missing move_up; move_down 150 cm; move_forward 1 m; Missing move_left; turn_left 60 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the task to commence the detailed search for objects using the drone.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Should we restart the task that was paused?\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why don't you check if you can find a cola?\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's launch this thing, then shift it forward by 8 feet, afterwards commence a horizontal shift of 3 feet forward, and finally put it down now.\nresponse: ", "response": "take_off; move_forward 8 ft; move_forward 3 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的控制与搜索任务应被暂停。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，你能去找找那辆摩托车和船吗？\nresponse: ", "response": "摩托车; 船."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please take off now, then fly to the right 10 meters, after that turn right 45 degrees, subsequently fly upwards 60 centimeters, next rise up 20 inches, afterwards bring the drone down 10 centimeters, following that turn it right by 90 degrees, then please turn it left by 120 degrees, I’m excited to see what’s in that direction!, later shift it right by 25 inches, after that fly to the right 10 meters, next move forward.\nresponse: ", "response": "take_off; move_right 10 m; turn_right 45 degrees; move_up 60 cm; move_up 20 in; move_down 10 cm; turn_right 90 degrees; turn_left 120 degrees; move_right 25 in; move_right 10 m; Missing move_down; Missing move_forward."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that the refrigerator, cat, bowl, and handbag are all waiting to be discovered?\nresponse: ", "response": "refrigerator; cat; bowl; handbag."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别去找刀和手机了，也别浪费时间找冲浪板和碘伏。\nresponse: ", "response": "刀; 手机; 冲浪板; 碘伏."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机可以开始起飞了吗，然后让无人机向后退二百五十厘米，之后无人机准备降落，请安全降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Send the drone to the right 15 inches, then initiate a rightward lateral movement for 2 meters, afterwards shift the drone right 5 meters, following that rotate right side and subsequently rotate 90 degrees to the right, next descend to 8 feet, after that rotate left by 30 degrees, immediately after shift to the right by 30 centimeters, and in the end land the drone now.\nresponse: ", "response": "move_right 15 in; move_right 2 m; move_right 5 m; Missing turn_right; turn_right 90 degrees; move_down 8 ft; turn_left 30 degrees; move_right 30 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否请确认是否要清空当前正在搜索的目标任务列表？\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 提供一些简单的技巧来改善公共演讲能力。\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你温和而有礼地前往餐桌旁，先细心寻找碘伏，接着再看看能不能找到滑板和手提包，相信你能做到的！\nresponse: ", "response": "碘伏; 滑板; 餐桌; 手提包."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机下降四十厘米，然后无人机右转七十五度，接着向后移动五十厘米，以便避开障碍物，随后看看右边，再之后右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍，请让无人机升高，紧接着转向左边看看，最后请问无人机能左移四十厘米吗，请下降。\nresponse: ", "response": "move_down 40 cm; turn_right 75 degrees; move_back 50 cm; turn_right 90 degrees; move_right 80 cm; Missing move_up; turn_left 90 degrees; move_left 40 cm; Missing move_down."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即停止当前的控制与搜索任务的中断状态。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the tennis racket, kite, book.\nresponse: ", "response": "tennis racket; kite; book."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请以最快速度找到雪碧和公共汽车的位置，真是太好了！\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate left 180 degrees, then fly down 8 inches, after that raise it by 20 centimeters, next fly forward 1 foot, afterwards adjust its position to the left, and finally move right 1 meter.\nresponse: ", "response": "turn_left 180 degrees; move_down 8 in; move_up 20 cm; move_forward 1 ft; Missing move_left; move_right 1 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 结束当前操作并取消搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地寻找公共汽车和飞机。\nresponse: ", "response": "公共汽车; 飞机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and pick up where you left off with that flight control task!\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object detection sequence.\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找找那个装着可乐和雪碧的背包，就像寻宝一样，看看是不是藏在哪个角落的手提包旁边。\nresponse: ", "response": "可乐; 手提包; 背包; 雪碧."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机上升五十厘米吧，然后前进七十厘米，检查前方是否有新发现，接着，请后退两百厘米，随后将无人机逆时针旋转六十度，紧接着，无人机太高了，请下降，之后将无人机左转五十度，观察左侧情况，随后请上升，最后无人机需要在此地降落。\nresponse: ", "response": "move_up 50 cm; move_forward 70 cm; move_back 200 cm; turn_left 60 degrees; Missing move_down; turn_left 50 degrees; Missing move_up; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go ahead and find the chair, then spot the truck, and don't forget to locate the Fanta, you can do it!\nresponse: ", "response": "chair; truck; fanta."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift it off the ground, then go backwards 2 feet, after that shift right by 80 inches, next go up 3 feet, subsequently soar forward 15 meters, afterwards move the drone 3 meters to the left, following that fly straight up, and in the end turn left by 120 degrees.\nresponse: ", "response": "take_off; move_back 2 ft; move_right 80 in; move_up 3 ft; move_forward 15 m; move_left 3 m; Missing move_up; turn_left 120 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 被要求紧急地搜索剪刀和自行车吗？\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Glide over to the dining table and let your eyes dance across it until they find the banana.\nresponse: ", "response": "banana; dining table."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not let the remote or scissors go unseen.\nresponse: ", "response": "remote; scissors."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: To be gently guided like a breeze towards the microwave, umbrella, chair, and frisbee, ensuring each is found with the grace of a leaf descending upon water.\nresponse: ", "response": "microwave; umbrella; chair; frisbee."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你礼貌地、鼓励性地前往搜索公共汽车和椅子吧。\nresponse: ", "response": "公共汽车; 椅子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the cup, iodophor, painkillers, coldrex!\nresponse: ", "response": "cup; iodophor; painkillers; coldrex."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务吧！\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please kindly pause the ongoing flight control operation, ensuring a smooth and safe transition in your drone application process.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Recommend some documentaries about natural wonders.\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you kindly check for a knife and some broccoli, please?\nresponse: ", "response": "knife; broccoli."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: In the most urgent manner, locate the keyboard and ascertain whether an umbrella is in the vicinity.\nresponse: ", "response": "keyboard; umbrella."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您友好地搜索一下三明治、可乐、书和披萨的位置。\nresponse: ", "response": "三明治; 可乐; 书; 披萨."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的控制及搜寻任务被清除。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问在搜索碘伏的同时，能否也留意一下领带的位置？\nresponse: ", "response": "碘伏; 领带."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复并执行先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please make the drone turn left 90 degrees, then ascend 3 feet, next push forward 100 inches, afterwards spin right, subsequently bank right 2 meters, later let's slide to the left, 30 centimeters, cha-cha style, following that turn 60 degrees right, immediately after move the drone backward 1.5 feet, in the end bring it up a few inches.\nresponse: ", "response": "turn_left 90 degrees; move_up 3 ft; move_forward 100 in; Missing turn_right; move_right 2 m; move_left 30 cm; turn_right 60 degrees; move_back 1.5 ft; Missing move_up."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Confirm whether there is a spare USB drive in the desk drawer.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Must we not ensure that the current object search task list is cleared?\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞吧，感谢；然后请将无人机上升五十厘米，谢谢；接着请将无人机左侧移动一百厘米；随后无人机离地面太远了，下降一百五十厘米；紧接着请上升七十五厘米；之后向右转二十度；紧接着右移两米；最后无人机上升高度。\nresponse: ", "response": "take_off; move_up 50 cm; move_left 100 cm; move_down 150 cm; move_up 75 cm; turn_right 20 degrees; move_right 2 m; Missing move_up."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 如同猎鹰般敏锐，寻找那口挂满记忆的钟，接着转向那闪烁着时光碎片的电视，在它们周围轻盈地绕飞，仿佛在花丛中寻找甜蜜的蜜蜂，最终落在摆放着香蕉和苹果的果盘旁。\nresponse: ", "response": "钟; 电视; 香蕉; 苹果."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate left 90 degrees, then drone should shift right 4 feet, after that fly forward 1 meter, afterwards Could you turn it right by 90 degrees? I’m curious to see what’s over there!, next let it go backwards 3 in.\nresponse: ", "response": "turn_left 90 degrees; move_right 4 ft; move_forward 1 m; turn_right 90 degrees; move_back 3 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，感谢；然后请向右边再移动；接着无人机向右移动；随后无人机需要上升九十厘米；之后无人机当前的高度太低，请向上飞行一百五十厘米；紧接着无人机下降八十厘米，以接近地面；然后可以让无人机往后退吗；接着请让无人机向前飞行一米，探查前方；随后左转三十度，检查左边；紧接着无人机飞得太高了，请下降两米；之后无人机向右飞行一百厘米；最后现在准备让无人机降落。\nresponse: ", "response": "take_off; Missing move_right; Missing move_right; move_up 90 cm; move_up 150 cm; move_down 80 cm; Missing move_back; move_forward 1 m; turn_left 30 degrees; move_down 2 m; move_right 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您详尽地搜索甜甜圈、滑板和网球拍，务必找到它们。\nresponse: ", "response": "甜甜圈; 滑板; 网球拍."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 轻轻地去探索一下，看看能不能找到那台温馨的烤面包机旁边是否有美味的三明治和清凉的雪碧，还有那辆充满故事的火车。\nresponse: ", "response": "烤面包机; 三明治; 雪碧; 火车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the person, then the horse; afterwards, let your gaze fall upon the surfboard and the bowl.\nresponse: ", "response": "person; horse; surfboard; bowl."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否考虑暂停当前的控制与搜寻任务以优化进程？\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed with the task of locating the cup, ensuring a thorough search is conducted.\nresponse: ", "response": "cup."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前的所有控制与搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调整无人机摄像头的对焦模式为手动。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索无人机视野中的停车场位置。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 打开电视，并调到体育频道。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机右转五十度，以调整视角检查右侧情况，然后右移四十厘米，随后请上升，最后现在可以让无人机降落吗。\nresponse: ", "response": "turn_right 50 degrees; move_right 40 cm; Missing move_up; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请温和地指引马的方向，确保它感受到积极的前行动力。 \n\n注：由于您的要求是使用提供的词语进行物品搜索的指令，而“马”并非一个需要搜索的静态物体，并且没有提供其他具体要搜索的项目或环境信息（如马具、马厩等），故上述句子在逻辑上可能不完全符合原题目的预期形式。如果您有更具体的场景描述或其他相关词汇，请告知以方便调整答案。 \n\n若严格按照题目要求，则应为：\n温和地搜寻并定位马的位置，确保行动积极且无干扰。\nresponse: ", "response": "马."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机现在起飞吗，然后移动五十厘米向左，之后后退三十厘米，也许能看到目标，紧接着左转六十度，检查左侧情况，接着左边飞行七十厘米，看看情况，请将无人机向后退七十厘米，查看后方环境，随后无人机左转一百度，查看左侧环境，最后我怀疑目标在左边。\nresponse: ", "response": "take_off; move_left 50 cm; move_back 30 cm; turn_left 60 degrees; move_left 70 cm; move_back 70 cm; turn_left 100 degrees; turn_left 90 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please initiate the control and commence the detailed search task with urgency.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Launch the airborne dance of the sky rover by initiating the flight control sequence.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左侧移动75厘米，然后无人机请迅速下降一百厘米，接着升高六十厘米，看看新的视角，随后将无人机向后移动一百五十厘米，最后能否让无人机下降一米。\nresponse: ", "response": "move_left 75 cm; move_down 100 cm; move_up 60 cm; move_back 150 cm; move_down 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off now, then turn the drone left by 60 degrees, and afterwards bring the drone down 10 centimeters.\nresponse: ", "response": "take_off; turn_left 60 degrees; move_down 10 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you look for the toaster?\nresponse: ", "response": "toaster."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Perform a lateral correction of 150 centimeters to the right, then go backwards 30 inches, afterwards yaw left 15 degrees, subsequently fly left by 50 inches, and land immediately.\nresponse: ", "response": "move_right 150 cm; move_back 30 in; turn_left 15 degrees; move_left 50 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机当前的高度不够，请下降六十厘米以更接近地面，然后向右移动二十厘米，接着左转四十度，查看左侧情况。让无人机顺时针旋转之后，请让无人机向前飞行九十厘米，紧接着后退五米。随后右边移动七十厘米，紧接着右移一米，第三右边再次移动七十厘米，避开障碍物，我们继续前进。\nresponse: ", "response": "move_down 60 cm; move_right 20 cm; turn_left 40 degrees; Missing turn_right; move_forward 90 cm; move_back 5 m; move_right 70 cm; move_right 1 m; move_right 70 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请按照指定顺序搜索芬达、笔记本电脑和手提包。\nresponse: ", "response": "芬达; 笔记本电脑; 手提包."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机当前的高度不够，请下降六十厘米以更接近地面，然后向右移动二十厘米，接着左转四十度，查看左侧情况。让无人机顺时针旋转之后，请让无人机向前飞行九十厘米，紧接着后退五米。随后右边移动七十厘米，紧接着右移一米，第三右边再次移动七十厘米，避开障碍物，我们继续前进。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 停止无人机的自动任务并切换到手动模式。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能去检查一下热狗和面包是不是都在电视旁边的牙刷附近吗？\nresponse: ", "response": "热狗; 面包; 电视; 牙刷."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the donut and hot dog near the bus immediately.\nresponse: ", "response": "donut; hot dog; bus."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请按照指示查找遥控器、苹果和风筝。\nresponse: ", "response": "遥控器; 苹果; 风筝."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 咱们启动飞行任务怎么样？\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Seek forthwith the bus, horse, motorcycle, airplane; let not thy quest waver.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the frisbee near the couch, and then locate the remote carefully.\nresponse: ", "response": "couch; frisbee; remote."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转五十五度，观察左侧情况，然后后退五十厘米，避开障碍物，接着无人机上升两米五，随后升高一米，想要从更高的角度俯瞰整个区域，紧接着向前移动五十厘米，之后无人机升高一百厘米，最后后退一百五十厘米，调整位置，检查后方的情况。\nresponse: ", "response": "turn_left 55 degrees; move_back 50 cm; move_up 2.5 m; move_up 1 m; move_forward 50 cm; move_up 100 cm; move_back 150 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off quickly, then move back 2 meters, a bit nervous, after that make a 180-degree turn to survey the area behind, and subsequently land the drone.\nresponse: ", "response": "take_off; move_back 2 m; turn_left 180 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: \"Fork getting looked for by you would be really helpful, thanks!\"\nresponse: ", "response": "fork."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then move the drone backward 40 inches, after that move it downwards by 2 meters, next make it move forward 20 inches right now, and bring it down to the ground in the end.\nresponse: ", "response": "take_off; move_back 40 in; move_down 2 m; move_forward 20 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请查找并靠近芬达。\nresponse: ", "response": "芬达."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Sway to the left by 2 meters, then immediately bring it up 3 meters; next, rotate counterclockwise 60 degrees, after that, rotate right 135 degrees, and finally I’m so excited to watch it fly right for 10 feet!\nresponse: ", "response": "move_left 2 m; move_up 3 m; turn_left 60 degrees; turn_right 135 degrees; move_right 10 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地恢复之前暂停的飞行任务，加油！\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能不能友好地开启飞行任务呢？真是太感谢了！\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退，然后无人机上升到两米高，之后无人机下降八十厘米，以接近地面，接着左转五十五度，查看左侧的情况，随后右边移动七十厘米，紧接着向右飞行八十五厘米，调整视角，随后请将无人机顺时针旋转，最后右转一百度，重新调整方向以适应新的飞行路线。\nresponse: ", "response": "Missing move_back; move_up 2 m; move_down 80 cm; turn_left 55 degrees; move_right 70 cm; move_right 85 cm; Missing turn_right; turn_right 100 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 任务开始时，请无人机起飞，然后让无人机向左旋转，最后现在让无人机完成降落程序。\nresponse: ", "response": "take_off; Missing turn_left; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立刻前往搜索区域，友好地但紧急地查找运动球、摩托车、公共汽车和网球拍的位置，并迅速报告。\nresponse: ", "response": "运动球; 摩托车; 公共汽车; 网球拍."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机右移三米，然后下降五十厘米，接近地面一点，接着将无人机升高五十厘米，随后往右靠拢一百二十厘米，紧接着右移一米绕过障碍物，我们继续前行，之后请让无人机升高，然后右移一百五十厘米，后来无人机飞得太高了，请降低，紧接着使无人机前进，随后请将无人机上升六十厘米获取更高视角，最后现在让无人机着陆。\nresponse: ", "response": "move_right 3 m; move_down 50 cm; move_up 50 cm; move_right 120 cm; move_right 1 m; Missing move_up; move_right 150 cm; Missing move_down; Missing move_forward; move_up 60 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左转一百八十度，掉头，然后立即左转三十度，之后无人机可以降落在指定地点吗。\nresponse: ", "response": "turn_left 180 degrees; turn_left 30 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复先前暂停的物体搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复并继续执行先前已暂停的详尽控制与搜寻任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone, turn 120 degrees to the right, then execute a reverse flight of 10 meters, after that back up the drone by 120 cm, afterwards let it head left, next reverse the drone 40 inches, subsequently descend the drone by 100 centimeters, following that advance forward quickly 45 cm.\nresponse: ", "response": "turn_right 120 degrees; move_back 10 m; move_back 120 cm; Missing turn_left; move_back 40 in; move_down 100 cm; move_forward 45 cm; Missing turn_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中的搜寻目标是否需要清空？\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你先找汽车，再找电视，最后看看有没有可乐。\nresponse: ", "response": "汽车; 电视; 可乐."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以高效的技术性方式定位并区分狗、牙刷、船和红绿灯，您的协助非常关键。\nresponse: ", "response": "狗; 牙刷; 船; 红绿灯."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最迅捷的方式，在这急迫的时刻，务必找到那闪烁着现代文明之光的电视与象征智慧的苹果。\nresponse: ", "response": "电视; 苹果."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the previously suspended flight control operation.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调整冰箱冷藏区温度至4摄氏度。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退五米，然后无人机向左侧移动，之后请将无人机向后移动四十厘米，以避免前方障碍物，接着往后退，请让无人机向后移动两百厘米，最后请让无人机降落到地面。\nresponse: ", "response": "move_back 5 m; Missing move_left; move_back 40 cm; Missing move_back; move_back 200 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you maybe look for the sprite and the cat, please?\nresponse: ", "response": "sprite; cat."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立刻停止当前的所有控制与搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is the book being searched for along with the vase and the sports ball?\nresponse: ", "response": "book; vase; sports ball."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即定位并安全拾取那个勺子。\nresponse: ", "response": "勺子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for nearby convenience stores and provide their operating hours.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover and rotate right 45 degrees, then move back, afterwards hover and turn right 90 degrees, subsequently turn the drone right 45 degrees, and in the end, feeling lazy, land it now.\nresponse: ", "response": "turn_right 45 degrees; Missing move_back; turn_right 90 degrees; turn_right 45 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地避开厕所和烤面包机，不要寻找止疼药与叉子。\nresponse: ", "response": "厕所; 止疼药; 叉子; 烤面包机."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在可以起飞了吗，然后后退七十厘米，可能能避开障碍，接着向右侧移动，之后请上升七十五厘米，随后来点高空的视角，上升一百五十厘米，观察整个区域，最后无人机降落在目标位置。\nresponse: ", "response": "take_off; move_back 70 cm; Missing move_right; move_up 75 cm; move_up 150 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move it straight ahead, then rotate to the left by 60 degrees, after that right now move left by 50 inches, next make the drone move back 1 meter, immediately after rise now, subsequently fly it to the left 15 feet, afterwards revert back 60 centimeters, following that sway to the left by 2 meters, and in the end lift it up 80 cm.\nresponse: ", "response": "Missing move_forward; turn_left 60 degrees; move_left 50 in; move_back 1 m; Missing move_up; move_left 15 ft; move_back 60 cm; move_left 2 m; move_up 80 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you consider looking for an orange, a knife, and a tv, wouldn't that be the most efficient approach?\nresponse: ", "response": "orange; knife; tv."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是不是可以先停一下现在的控制和搜索任务呢？\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地建议你去搜寻一下沙发旁边的滑雪板和芬达，还有别忘了看看是否有感冒药。\nresponse: ", "response": "滑雪板; 芬达; 沙发; 感冒药."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing aerial navigation operation, then ensure the system remains in a stable hover.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右移一米，绕过障碍物，我们继续前行，然后请无人机前进五十厘米以探查前方情况，接着请问无人机能左移四十厘米吗，随后请将无人机右移八十厘米，最后向左转动一圈。\nresponse: ", "response": "move_right 1 m; move_forward 50 cm; move_left 40 cm; move_right 80 cm; turn_left 360 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off the ground now, then slide right 4 feet, after that move left by 2 feet, next fly it to the left 15 feet, afterwards fly backward for 2 meters, and subsequently commence a 45-degree yaw to the left.\nresponse: ", "response": "take_off; move_right 4 ft; move_left 2 ft; move_left 15 ft; move_back 2 m; turn_left 45 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请务必找到那个让人烦恼的电视，还有那盆碍眼的盆栽植物，别忘了那根令人不悦的香蕉，以及那只格格不入的长颈鹿。\nresponse: ", "response": "电视; 盆栽植物; 香蕉; 长颈鹿."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off right now, then spin the drone to the left 45 degrees, and afterwards touch down.\nresponse: ", "response": "take_off; turn_left 45 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone takeoff now, then shift it right by 25 inches.\nresponse: ", "response": "take_off; move_right 25 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Amidst the tranquil skies, where the air whispers secrets of serene voyages, let us summon forth the dormant spirit of our aerial companion and resume the once-paused quest for the elusive object, a journey that beckons with promises of discovery and insight.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Advance forward 50 inches, then revert back 60 centimeters, afterwards bring it down 3 feet, subsequently commence a vertical descent of 6 feet, next fly left by 50 inches, later descend 2 feet, following that advance forward 3 feet, and in the end, descend to the ground level.\nresponse: ", "response": "move_forward 50 in; move_back 60 cm; move_down 3 ft; move_down 6 ft; move_left 50 in; move_down 2 ft; move_forward 3 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能尽快检查一下厨房里是否能找到那个烤箱吗？\nresponse: ", "response": "烤箱."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Initiate search for fork, snowboard, fanta, backpack.\nresponse: ", "response": "fork; snowboard; fanta; backpack."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前暂停的飞行任务控制。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly to the left 3 feet, then rotate 90 degrees to the left; afterwards, lower it slightly. Move forward immediately after that. Rotate it to the right 180 degrees, this is so cool! Next, fly to the right 10 meters. Following that, I’m excited to see it climb up 2 feet—let’s do this! Subsequently, slowly move back 30 in. Later, drift right like you're dodging an obstacle, 5 meters. Finally, please move the drone backwards 2 feet.\nresponse: ", "response": "move_left 3 ft; turn_left 90 degrees; Missing move_down; Missing move_forward; turn_right 180 degrees; move_right 10 m; move_up 2 ft; move_back 30 in; move_right 5 m; move_back 2 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找红绿灯和网球拍。\nresponse: ", "response": "红绿灯; 网球拍."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then go up like you're Superman, 12 feet, afterwards let's move the drone to the left.\nresponse: ", "response": "take_off; move_up 12 ft; Missing move_left."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the current task and get ready for a new adventure.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Not to locate the chair, nor to seek out the dog, but to find neither the person nor the orange.\nresponse: ", "response": "chair; dog; person; orange."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move it up 10 centimeters, then rotate it 120 degrees left, after that, I’m feeling pretty anxious—can we get this drone to land soon?\nresponse: ", "response": "move_up 10 cm; turn_left 120 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类未来是否可能完全实现无污染能源？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在您探寻的过程中，或许可以优雅地滑翔至那片静谧之地，于其间细心寻觅冲浪板、三明治与花瓶的踪迹，这将是一次既富有诗意又不失敬意的探索。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current object search task list, ensuring that all related drone operation parameters are reset to their default settings.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please carefully locate the knife.\nresponse: ", "response": "knife."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get in the air, then spin it around like it's dancing. After that, fly straight ahead 1 meter. Next, go right 5 cm. Immediately after, give it a little nudge to the right, like it’s tipping over. Following that, quick, rotate left 90 degrees. Can you move it forward a bit? I’m feeling quite hopeful about this flight. Subsequently, fly forward 40 centimeters. Thereafter, shift the drone leftwards by 75 centimeters. In the end, fly backward 10 meters.\nresponse: ", "response": "take_off; turn_right 360 degrees; move_forward 1 m; move_right 5 cm; Missing move_right; turn_left 90 degrees; Missing move_forward; move_forward 40 cm; move_left 75 cm; move_back 10 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Wow! Why don't you take a moment to pause the search task? It could give you a fresh perspective when you resume!\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即前往寻找止疼药。\nresponse: ", "response": "止疼药."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立刻停止现在的搜索任务吧！\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the motorcycle.\nresponse: ", "response": "motorcycle."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞，准备工作，然后向右移动七十厘米，接着请后退七十厘米检查，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "take_off; move_right 70 cm; move_back 70 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往定位并报告牙刷的位置。\nresponse: ", "response": "牙刷."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Swiftly glide over the vast sea of asphalt to locate the bus, then delicately navigate through the labyrinthine shelves for the book, and with utmost urgency, seek out the keyboard as if it were a rare pearl in the digital ocean; finally, scour the coastline for the elusive surfboard.\nresponse: ", "response": "bus; book; keyboard; surfboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate it to the right a bit, then turn it right by 90 degrees.\nresponse: ", "response": "Missing turn_right; turn_right 90 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I need the drone to go forward 100 inches, quickly, then fly forward, afterwards bank right 2 meters, and in the end, land the drone slowly.\nresponse: ", "response": "move_forward 100 in; Missing move_forward; move_right 2 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 探寻那散落的饼干，优雅地滑向行李箱旁，继而轻盈飞跃至遥控器与胡萝卜之间，完成这美妙的任务吧！\nresponse: ", "response": "饼干; 行李箱; 遥控器; 胡萝卜."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's take off, then drone, turn 120 degrees to the right, after that pivot right, afterwards push the drone forward 100 cm, next fly to the right by 50 cm, and subsequently fly down a bit.\nresponse: ", "response": "take_off; turn_right 120 degrees; Missing turn_right; move_forward 100 cm; move_right 50 cm; Missing move_down."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请勇敢地寻找公共汽车和摩托车，再细心地探索椅子与运动球的位置吧。\nresponse: ", "response": "公共汽车; 摩托车; 椅子; 运动球."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate take off, then make it fly forward 30 inches, afterwards retreat back 120 cm, next go leftward 1.5 m, subsequently slide right 4 feet, immediately after drift right like you're dodging an obstacle, 5 meters, then move the drone in reverse direction, following that ascend 1 foot, thereafter rise up, and in the end set it down.\nresponse: ", "response": "take_off; move_back 120 cm; move_left 1.5 m; move_forward 30 in; Missing move_back; move_right 4 ft; move_up 1 ft; move_right 5 m; Missing move_up; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后向前移动五十厘米，接着向右转九十度，随后进行左侧调整距离的操作，紧接着请将无人机上升一百二十厘米以便获得更高的视角，后来让无人机向左转，最后请让无人机安全地降落在这里。\nresponse: ", "response": "take_off; move_forward 50 cm; turn_right 90 degrees; Missing move_left; move_up 120 cm; Missing turn_left; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 哇，真是太棒了，现在我们来启动这次精彩的飞行任务吧！\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there! Could you kindly resume the object search task that was paused earlier? Thanks a bunch!\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off with the drone immediately, then please turn it left by 120 degrees, next turn it around 360 degrees.\nresponse: ", "response": "take_off; turn_left 120 degrees; turn_right 360 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转六十度，避开障碍，然后无人机应该在这里降落。\nresponse: ", "response": "turn_left 60 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the pizza and the motorcycle.\nresponse: ", "response": "pizza; motorcycle."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed to locate the toilet and the scissors with diligence and precision.\nresponse: ", "response": "toilet; scissors."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能不能先暂停一下现在的搜索任务？\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 嘿，去检查下甜甜圈和盆栽植物那边的情况，行吗？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to moonwalk backward 20 inches, then Rotate the drone 90 degrees to the left, after that veer to the right 30 degrees abruptly, and land in the open field ahead.\nresponse: ", "response": "move_back 20 in; turn_left 90 degrees; turn_right 30 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, back up a little, then bring it up 60 centimeters. After that, move rightward before rotating left side and subsequently steering left 60 degrees. Next, bank right and ascend 5 meters to clear the power lines. Following that, please make it fly backward a little and then rise up 20 inches. Immediately after, turn the drone left 60 degrees and descend it down 30 inches. Thereafter, spin the drone to the left 45 degrees before flying to the right 10 meters. In the end, land it now.\nresponse: ", "response": "Missing move_back; move_up 60 cm; Missing move_right; Missing turn_left; turn_left 60 degrees; Missing move_right; move_up 5 m; Missing move_back; move_up 20 in; turn_left 60 degrees; move_down 30 in; turn_left 45 degrees; move_right 10 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动这不祥之飞行任务，操纵进程即刻展开。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why don't we clear the current control settings and explore a new search task? This could help optimize your drone's performance and uncover more efficient ways to complete missions.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we halt the ongoing flight control task, pausing to ponder the silent dance of technology in the air?\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Why don't you consider not looking for the motorcycle, clock, apple, and orange?\nresponse: ", "response": "motorcycle; clock; apple; orange."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向左偏移一米，寻找目标物品，然后左飞行八十厘米，接着掉头看看，随后无人机左侧移动一百五十厘米，最后让无人机现在降落。\nresponse: ", "response": "move_left 1 m; move_left 80 cm; turn_left 180 degrees; move_left 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why don't you go ahead and clear out the current object search task list to make room for some new, exciting missions?\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在请让无人机起飞，然后无人机升高二米，获取更好视野，接着无人机飞得太高了，请下降四十厘米，随后为了确保无人机位置，请向左移动三十厘米，紧接着让无人机前进七十五厘米，之后右转一百度，调整无人机方向，接下来请让无人机向上飞，随后无人机现在下降一百厘米，紧接着再次右转一百度，调整无人机方向，最后让无人机停在地面上。\nresponse: ", "response": "take_off; move_up 2 m; move_down 40 cm; move_left 30 cm; move_forward 75 cm; turn_right 100 degrees; Missing move_up; move_down 100 cm; turn_right 100 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the search task now.\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在确保安全的前提下，请先定位到那辆停靠在一旁的自行车，随后继续搜寻正在靠近的那人，并留意是否有架飞机飞过，在整个过程中，请特别注意是否能发现一瓶芬达。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否帮忙找一下三明治和牙刷，还有橙子，它们可能在长椅附近吗？\nresponse: ", "response": "三明治; 牙刷; 橙子; 长椅."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why are planetary orbits in the solar system elliptical?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以猎鹰之姿，寻觅剪刀与手机的踪迹。\nresponse: ", "response": "剪刀; 手机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 先停一下现在的找东西任务吧。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then initiate landing procedure.\nresponse: ", "response": "take_off; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否详尽地检查一下，看看在那友好的猫附近是否有遗落的烤箱、碘伏或叉子呢？\nresponse: ", "response": "烤箱; 碘伏; 猫; 叉子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议恢复先前暂停的控制与搜索任务，以确保操作连续性和效率。\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 现在请让无人机起飞，然后无人机可以准备降落。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the traffic light. Keep going!\nresponse: ", "response": "traffic light."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 如同唤醒沉睡中的猎豹，之前的控制与搜寻任务被再度激活。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要开始执行搜寻物体的任务吗？\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Must we urgently clear the current search task list?\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Why don't you check out the banana, then head over to the car and traffic light, and finally see if you can spot the kite!\nresponse: ", "response": "banana; car; traffic light; kite."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机能否立即起飞，然后向前飞行一百五十厘米，接着无人机掉头看看后方，随后请将无人机后退一百厘米，以查看后方的情况，最后无人机降落在预定位置。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我怀疑目标在左边，然后无人机上升两米五，前方似乎有障碍物，向前移动，接着向前移动七十厘米，左转五十五度，查看左侧的情况，之后后退一百五十厘米，随后无人机后退一百五十厘米，以便观察后方，最后现在请让无人机着陆。\nresponse: ", "response": "turn_left 90 degrees; move_up 2.5 m; Missing move_forward; move_forward 70 cm; turn_left 55 degrees; move_back 150 cm; move_back 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could we perhaps clear the current object search task list to make way for a smoother operation, wouldn't that be beneficial?\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the sports ball and tennis racket.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动这不祥之飞行任务，操纵进程即刻展开。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议您先搜索一下手机，接着是止疼药，最后看看有没有可乐。\nresponse: ", "response": "手机; 止疼药; 可乐."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以轻盈的步伐，在这温暖而静谧的空间里探寻，先寻那圆润甜美的甜甜圈，再找寻隐于一角的微波炉，最后不要忘了留意那能慰藉身心的止疼药。\nresponse: ", "response": "甜甜圈; 微波炉; 止疼药."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调整无人机的飞行方向为西北并开始拍摄。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Get the drone flying pronto!\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You gotta clear out that current control and scrap the search task, or we’re gonna run into issues.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否清空当前的目标搜索任务列表？\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 让我们满怀信心地启动物体搜索任务吧！\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go ahead and find the handbag, train, suitcase, and tennis racket with your keen eye!\nresponse: ", "response": "handbag; train; suitcase; tennis racket."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 后退五十厘米，然后左转四十五度，调整角度，咱们要更好地查看左侧，接着往右靠拢一百二十厘米，随后请让无人机向前飞行一米，探查前方，请将无人机高度降低，紧接着请上升，之后升高二十厘米，调整观察角度，无人机左转一百八十度，掉头，最后升高一米，想要从更高的角度俯瞰整个区域。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 继续执行先前暂停的搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: I'm really curious, can we move forward by 8 inches, then make it do a pirouette to the left, afterwards drone, go backwards 80 centimeters, next shift to the left 6 feet, and finally turn 180 degrees right.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar through the sky, a bird on the hunt for coldrex nestled within a suitcase.\nresponse: ", "response": "coldrex; suitcase."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞任务已经准备好，启动无人机，然后下降一百五十厘米，接着我需要无人机下降一米，请执行.\nresponse: ", "response": "take_off; move_down 150 cm; move_down 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Move back a little, then ascend above the tree by 20 feet, after that turn right, next fly forward by 3 feet, subsequently fly it right by 3 inches, afterwards move forward 5 centimeters, following that pivot right, and in the end start landing sequence.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off, then move back a short distance.\nresponse: ", "response": "take_off; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Move back 0.5 meters, then move to the right 200 inches, and afterwards let the drone land now.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，然后向上升起二十厘米，视角向上；接着，请向左移动七十五厘米，以便调整位置；随后，请将无人机向右移动三十厘米，以检查右侧环境；之后，无人机可能在后方发现了目标，请后退一米查看具体情况；紧接着，左边移动四十厘米，以调整位置；再后来，向前推进一米，观察前方情况；最后，在无人机到达目标位置后请降落。\nresponse: ", "response": "take_off; move_up 20 cm; move_left 75 cm; move_right 30 cm; move_back 1 m; move_left 40 cm; move_forward 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最高效的技术路径定位并检索位于公共汽车附近的手机。\nresponse: ", "response": "公共汽车; 手机."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Activate takeoff protocol immediately, then climb up to 1 meter, afterwards steer it right 45 degrees, and finally start landing sequence.\nresponse: ", "response": "take_off; move_up 1 m; turn_right 45 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, could you check if there's a bird or iodophor near the keyboard?\nresponse: ", "response": "bird; iodophor; keyboard."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear out the current control and search task, okay? It’ll help things run smoother.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 被详尽地暂停的控制以及搜寻任务应被继续执行。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右再靠近九十厘米，然后请将无人机向后退四十厘米，之后无人机请下降五十厘米，紧接着向左飞，接着为了确保无人机位置，请向左移动三十厘米，随后右边移动七十厘米，后来请右转五十度，以便调整方向，接下来让无人机向右转动二十度，最后左转六十度，检查左侧情况。\nresponse: ", "response": "move_right 90 cm; move_back 40 cm; move_down 50 cm; Missing move_left; move_left 30 cm; move_right 70 cm; turn_right 50 degrees; turn_right 20 degrees; turn_left 60 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the remote.\nresponse: ", "response": "remote."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for nearby libraries and provide their opening hours.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找钟。\nresponse: ", "response": "钟."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we gently sweep away the current quest for objects from our drone's thoughtful gaze?\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去帮个人找找他们的背包和鸟吧，行吗？\nresponse: ", "response": "鸟; 背包; 人."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞去指定位置，然后将无人机左转五十度，观察左侧情况。\nresponse: ", "response": "take_off; turn_left 50 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Cautiously take off, then move backwards 3 feet, afterwards go leftward 1.5 m, next turn the drone right by 90 degrees, subsequently rotate left by 75 degrees, immediately after that turn the drone left by 60 degrees, later make a left turn now, following that let’s fly it right by 5 meters, and in the end rise up 5 meters.\nresponse: ", "response": "take_off; move_back 3 ft; move_left 1.5 m; turn_right 90 degrees; turn_left 75 degrees; turn_left 60 degrees; move_right 5 m; Missing turn_left; move_up 5 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why does the length of day and night change with the seasons?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复并继续之前的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动任务，如同指挥家轻挥 baton，引领空中舞者翩翩起舞。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机前进六十厘米，查看前方的环境，然后请右转二十度，接着无人机向左行进，随后向后退两百厘米，看看会发现什么，紧接着让无人机向后退一米五，下移之后使无人机前进，请右侧转向，前方视线模糊，向前移动，最后请将无人机慢慢下降一米，这样可以更接近地面；紧接着，无人机向右转一百八十度，然后让无人机向左转一百八十度，掉头飞行，随后无人机向右飞行一百厘米，让它降落。\nresponse: ", "response": "move_forward 60 cm; turn_right 20 degrees; Missing move_left; move_back 200 cm; move_back 1.5 m; Missing move_down; Missing move_forward; Missing turn_right; Missing move_forward; move_down 1 m; turn_right 180 degrees; turn_left 180 degrees; move_right 100 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在请让无人机起飞，然后转动无人机四十五度左，接着提升，请让无人机前进一米以探索前方环境，之后请将无人机右移一米，随后下降一点至五十厘米处，紧接着看看右边，请让无人机向后移动两百厘米，第二下降四十厘米，第三请将无人机向后移动五十厘米检查是否有障碍物，最后请让无人机降落到地面。\nresponse: ", "response": "take_off; turn_left 45 degrees; Missing move_up; move_forward 1 m; move_right 1 m; move_down 50 cm; turn_right 90 degrees; move_back 200 cm; move_down 40 cm; move_back 50 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the paused flight control task!\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not proceed with the existing object search tasks.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否友好地请你检查一下，看能不能找到瓶子、饼干和胡萝卜呢？\nresponse: ", "response": "瓶子; 饼干; 胡萝卜."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务，探索之旅即刻启程！\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 启动无人机的起飞程序，然后请升高三十厘米，接着无人机太高了，请下降二十厘米，随后无人机后退五十厘米，以便于调整位置，紧接着上升一米，让无人机更高一点，之后无人机能否下降五十厘米，后来向前行进，接着往下飞，最后向左移动75厘米。\nresponse: ", "response": "take_off; move_up 30 cm; move_down 20 cm; move_back 50 cm; move_up 1 m; move_down 50 cm; Missing move_forward; Missing move_down; move_left 75 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请结束当前的所有控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向上移动，然后让无人机逆时针旋转一百度，之后右边可能有目标，帮我转过去，紧接着无人机高度太高，请下降，随后将无人机左转五十度，观察左侧情况，接着向上升，后来下移，接下来转动无人机四十五度左，随后向左旋转九十度，观察周围环境，最后请将无人机向后移动。\nresponse: ", "response": "Missing move_up; turn_left 100 degrees; turn_right 90 degrees; Missing move_down; turn_left 50 degrees; Missing move_up; Missing move_down; turn_left 45 degrees; turn_left 90 degrees; Missing move_back."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the painkillers near the person, as if you're a gentle breeze guiding them to comfort, and check if they are resting on the couch.\nresponse: ", "response": "painkillers; person; couch."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off as soon as the sun rises, then raise it 100 centimeters, afterwards bring the drone down 40 centimeters, next rotate left, immediately after that shift right a bit, subsequently fly it forward a bit, and finally land the drone now please.\nresponse: ", "response": "take_off; move_up 100 cm; move_down 40 cm; Missing turn_left; Missing move_right; Missing move_forward; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，然后向前飞行七十八厘米，接着请无人机升高一百厘米；随后，请无人机左转四十五度，调整角度以获得更好视角；为了更好地检查右侧，紧接着将无人机右转四十五度，之后无人机右移一米；接下来，为了更好的视角，请将无人机左转；最后，由于无人机当前的高度太低，请向上飞行一百五十厘米。\nresponse: ", "response": "take_off; move_forward 78 cm; move_up 100 cm; turn_left 45 degrees; turn_right 45 degrees; move_right 1 m; Missing turn_left; move_up 150 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转八十度，查看右侧情况，然后把无人机往右移六十厘米吧，接着请让无人机向后移动两米，随后命令无人机向前飞行，最后前面有点模糊，向前移动五十厘米。\nresponse: ", "response": "turn_right 80 degrees; move_right 60 cm; move_back 2 m; Missing move_forward; move_forward 50 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快点起飞，然后请将无人机向左转三十度，以便更好地观察左侧的情况，接着让无人机左转四十五度，准备接受新的挑战，最后无人机太高了，下降六十厘米。\nresponse: ", "response": "take_off; turn_left 30 degrees; turn_left 45 degrees; move_down 60 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请以详尽的步骤，主动恢复先前暂停的搜寻任务，确保一切顺利进行。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地在沙发附近搜索，务必找到网球拍和可乐，友好地确认物品位置。\nresponse: ", "response": "网球拍; 可乐; 沙发."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the toothbrush and clock.\nresponse: ", "response": "toothbrush; clock."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即启动详尽的物体搜索任务，这是当前最为紧急且至关重要的步骤。\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机已准备好起飞，然后右边有点阻碍，右移六十厘米来绕过它，接着上移六十厘米，调高水平，随后向右移动一百五十厘米，最后请将无人机降落在此处。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 终止现有控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向左调整，然后无人机现在的高度需要调整，请下降七十五厘米，接着上升七十厘米就行。\nresponse: ", "response": "Missing move_left; move_down 75 cm; move_up 70 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Help me find the nearest public restroom from here.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立刻起飞，然后请将无人机前进一米，接着请后退七十厘米以避开障碍，随后前进二十厘米，紧接着右侧转向，之后右转三十度，保持方向，接下来无人机向前移动，最后无人机向前飞行一百五十厘米，是否可以让无人机降落。\nresponse: ", "response": "take_off; move_forward 1 m; move_back 70 cm; move_forward 20 cm; Missing turn_right; turn_right 30 degrees; Missing move_forward; move_forward 150 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the keyboard.\nresponse: ", "response": "keyboard."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is there a cake to be found?\nresponse: ", "response": "cake."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空任务列表，就像扫除前行路上的障碍，让应用轻装上阵吧！\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for sprite.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您礼貌地搜索一下长颈鹿。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 上升一米，然后向右移动二十厘米以避开障碍，接着下降一百五十厘米，最后无人机准备降落。\nresponse: ", "response": "move_up 1 m; move_right 20 cm; move_down 150 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降两百厘米\nresponse: ", "response": "move_down 200 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机准备好进行起飞了吗，然后向后退两百厘米，看看会发现什么，接着无人机前方有障碍物，向前移动五十厘米以检查。\nresponse: ", "response": "take_off; move_back 200 cm; move_forward 50 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and clear out that flight control task list for your drone, you got this!\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, don't forget to check for that clock, okay?\nresponse: ", "response": "clock."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请搜索碘伏和自行车，留意附近的鸟和碗。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the motorcycle and the clock.\nresponse: ", "response": "motorcycle; clock."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the painkillers with utmost precision, ensuring they are located efficiently and accurately.\nresponse: ", "response": "painkillers."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the present command and quest forthwith!\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜索区域，首先定位鸟的位置，接着查找手机，然后是键盘，最后不要忘了那不讨人喜欢的披萨。\nresponse: ", "response": "鸟; 手机; 键盘; 披萨."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you pause the current control and search operation, please?\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您紧急地先找到书，接着是牙刷，最后别忘了网球拍。\nresponse: ", "response": "书; 牙刷; 网球拍."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，准备开始；然后后退五十厘米，避开障碍物；接着下降五十厘米；最后让无人机停在地面上。\nresponse: ", "response": "take_off; move_back 50 cm; move_down 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向上升起一米，以提高视角，然后右转五十度，调整角度，咱们要看得更清楚，接着让无人机左转一百八十度，观察后方，随后向左移动六十厘米，准备绕过障碍物，紧接着升高六十厘米，最后左侧移动。\nresponse: ", "response": "move_up 1 m; turn_right 50 degrees; turn_left 180 degrees; move_left 60 cm; move_up 60 cm; Missing move_left."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在那静谧的空间里，务必寻觅到椅子旁隐蔽着的饼干与不远处滚动的运动球。\nresponse: ", "response": "椅子; 饼干; 运动球."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 向右飞行一米，然后左边飞行七十厘米，看看会有什么新发现。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please pause the current control and search task right away. Thanks for your quick action!\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Given the critical nature of the ongoing operations, it is imperative that we promptly suspend the current object search task to reassess our procedural protocols and ensure optimal functionality.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that searching for the bed and then the tie is the task at hand?\nresponse: ", "response": "bed; tie."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复之前已暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we proceed to resume the previously paused object search task?\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 开始执行控制程序，并同时启动搜寻任务。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去查查看披萨旁边是不是有只鸟，还有那个行李箱呢？\nresponse: ", "response": "披萨; 鸟; 行李箱."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please check if there's an apple on the dining table? Thanks a bunch!\nresponse: ", "response": "apple; dining table."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start takeoff, then bring it down by 2 feet.\nresponse: ", "response": "take_off; move_down 2 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请迅速定位并接近那个笔记本电脑。\nresponse: ", "response": "笔记本电脑."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we not reignite the journey that was once paused, embracing the quest for discovery anew?\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off, then turn left 60 degrees, after that bank right, subsequently go down 0.5 meters, afterwards swing right, next please move the drone left 5 feet, following that glide left for 100 cm, later rise up 5 meters, and in the end initiate landing procedure.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's take off, then getting impatient, fly to the right by 30 cm, afterwards advance forward quickly 45 cm, next head left 10 inches, following that fly steadily forward 60 cm, after that go up 5 feet, subsequently shift right by 1 meter, thereafter drift rightwards, then bank right, later drone should rotate left, and in the end ascend 3 feet.\nresponse: ", "response": "take_off; move_right 30 cm; move_forward 45 cm; move_left 10 in; move_forward 60 cm; move_up 5 ft; move_right 1 m; Missing move_right; move_down 5 m; Missing move_right; Missing turn_left; move_up 3 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去搜一下键盘、飞盘和酒杯，赶紧的！\nresponse: ", "response": "键盘; 飞盘; 酒杯."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去帮个人找找他们的背包和鸟吧，行吗？\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到那个三明治吗？\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请即刻终止当前的操控与搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机请飞行到前方三十厘米，然后左转看一下，检查那边的情况，接着请右转九十度，检查右侧情况，最后准备降落，冒险结束啦。\nresponse: ", "response": "move_forward 30 cm; turn_left 90 degrees; turn_right 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前进二十厘米，然后麻烦右转四十五度，接着赶紧降落。\nresponse: ", "response": "move_forward 20 cm; turn_right 45 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 哎呀，麻烦你了，去搜搜看那破沙发上有没有我丢的东西吧。\nresponse: ", "response": "沙发."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何通过心理学方法提高公众演讲能力？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Given the complexity and varying lengths required, here is a possible rephrasing:\n\n\"Ensure that you have cleared the existing list of object search tasks within the drone application interface to prepare for new operations.\"\n\nThis maintains the original meaning while adding detail and varying the sentence structure.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退五十厘米，然后向前移动七十厘米，接着左转四十五度调整角度咱们要更好地查看左侧，随后右侧有目标向右飞行一百厘米，紧接着无人机下降一米，之后上移六十厘米调高水平，请将无人机向后移动四十厘米以避免前方障碍物，然后让无人机顺时针旋转四十度，紧接着右移一米，接着右转三十度保持方向，随后左转三十度查看情况，请让无人机向上飞行一百五十厘米；无人机升高，最后让无人机在此处完成降落。\nresponse: ", "response": "move_back 50 cm; move_forward 70 cm; turn_left 45 degrees; move_right 100 cm; move_down 1 m; move_up 60 cm; move_back 40 cm; turn_right 40 degrees; move_right 1 m; turn_right 30 degrees; turn_left 30 degrees; move_up 150 cm; Missing move_up; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去吧，像风中的马一样快，找到那盏指引方向的红绿灯和供人歇息的椅子。\nresponse: ", "response": "红绿灯; 椅子; 马."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索家中的车钥匙并告诉我在哪里。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能否立即起飞，然后请将无人机向前移动一百厘米，探测前方区域，接着右转五十度，随后前方有点模糊，向前移动两百五十厘米，紧接着前进二十厘米，之后左边移动四十厘米，紧接着请上升五十厘米，随后向后退三十厘米以避免碰撞，紧接着无人机顺时针旋转五十度，然后上移，最后能否让无人机下降到一米的高度。\nresponse: ", "response": "take_off; move_down 20 cm; move_forward 100 cm; turn_right 50 degrees; move_forward 250 cm; move_forward 20 cm; move_left 40 cm; move_up 50 cm; move_back 30 cm; turn_right 50 degrees; Missing move_up; move_down 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the banana.\nresponse: ", "response": "banana."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not possible for the search to exclude areas where a truck or car are located?\nresponse: ", "response": "truck; car."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Adjust direction right, then go down 1 foot, afterwards fly backwards 150 centimeters, next slide right 4 feet, and in the end hover and land.\nresponse: ", "response": "Missing turn_right; move_down 1 ft; move_back 150 cm; move_right 4 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞，之后下降两米。\nresponse: ", "response": "take_off; move_down 2 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在下降一百厘米，然后请无人机向前飞行，之后无人机的视角受限，请向左转三十度，以便更好地观察左侧环境，接着请将无人机后退一百厘米，随后请向左移动七十五厘米，寻找目标物体，紧接着请右转五十度，最后向左移动六十厘米，准备绕过障碍物。\nresponse: ", "response": "move_down 100 cm; Missing move_forward; turn_left 30 degrees; move_back 100 cm; move_left 75 cm; turn_right 50 degrees; move_left 60 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: How can improving sleep quality enhance focus?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar over the wine glass and snowboard, like a bird guided by the remote.\nresponse: ", "response": "wine glass; snowboard; bird; remote."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在找到长椅和书的同时，也留意一下是否有感冒药或者飞机的存在，好吗？\nresponse: ", "response": "长椅; 感冒药; 飞机; 书."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索一下冲浪板和手提包吧。\nresponse: ", "response": "冲浪板; 手提包."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover in place, then veer to the left 40 degrees smoothly; afterwards, rotate it to the right a bit, next move it forward, subsequently go right, following that veer left by 45 degrees, immediately after which lower to ground level.\nresponse: ", "response": "take_off; turn_left 40 degrees; Missing turn_right; Missing move_forward; Missing move_right; turn_left 45 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not your duty to seek out the kite and the carrot with utmost care?\nresponse: ", "response": "kite; carrot."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the microwave and painkillers near the train.\nresponse: ", "response": "microwave; painkillers; train."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前中断的控制与搜索任务，以免造成不必要的延误和影响。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要启动飞行任务？\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 哎呀，快去给我找那个破烤面包机、旧手机和落灰的笔记本电脑，还有那条根本不用的领带。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别去找甜甜圈了。\nresponse: ", "response": "甜甜圈."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 不妨像唤醒沉睡的雄鹰般，重启那曾暂停的飞行任务吧。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索我家附近是否有营业的书店。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么地球上的季节会随着自转轴的倾斜变化？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你寻找键盘，并报告其位置。\nresponse: ", "response": "键盘."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续之前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bottle, then locate the bus, next find the tennis racket, and finally check the bed.\nresponse: ", "response": "bottle; bus; tennis racket; bed."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off, then veer to the left 40 degrees smoothly.\nresponse: ", "response": "take_off; turn_left 40 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the banana and coldrex near the oven immediately.\nresponse: ", "response": "banana; coldrex; oven."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机的起飞时间已经到，然后左转五十度，接着左边可能有障碍物，转动，之后无人机离地面太远了，下降一百五十厘米，紧接着无人机前进一百五十厘米，继续向前探索未知，最后准备降落，冒险结束啦。\nresponse: ", "response": "take_off; turn_left 50 degrees; Missing turn_left; move_down 150 cm; move_forward 150 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First spin right 180 degrees, then proceed forward 70 centimeters steadily, after that drone down 30 cm, and subsequently land immediately.\nresponse: ", "response": "turn_right 180 degrees; move_forward 70 cm; move_down 30 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately! Next, go up 50 centimeters. Then, adjust forward 3 feet. After that, go downwards 2 meters. Following that, maneuver the drone backward 100 inches. Subsequently, descend by 5 inches and then drift downwards by 30 inches. Immediately after, maneuver to the right. In the end, give me a right turn, 45 degrees!\nresponse: ", "response": "take_off; move_up 50 cm; move_forward 3 ft; move_down 2 m; move_back 100 in; move_down 5 in; move_down 30 in; Missing move_right; turn_right 45 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 紧急情况下，请迅速清除当前的飞行任务列表，让我们一起确保安全！\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 不妨轻拂去任务列表上的尘埃，让眼前的目标更为清晰明亮。这不仅是对现有探索的一次温柔的告别，也是为新的发现铺垫一条光亮的道路。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we clear the current flight control task list?\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 重启那一度停滞的飞行任务吧！让天空再次见证它的翱翔。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动智能烤箱并设置烘焙时间为30分钟。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往长椅附近，寻找冲浪板。\nresponse: ", "response": "长椅; 冲浪板."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索一下雨伞吧。\nresponse: ", "response": "雨伞."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you search for the toilet, person, hot dog, and backpack?\nresponse: ", "response": "toilet; person; hot dog; backpack."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please proceed to clear the current object search task list, ensuring a fresh start for your next operation.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您启动控制程序，并详尽地执行搜寻任务。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您暂时停止当前的控制与搜索任务，谢谢。\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the ongoing search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lower it down slowly, 70 inches, then rotate left side, afterwards rotate the drone left by 30 degrees, next make it fly forward 60 cm, finally descend gently to land in the field.\nresponse: ", "response": "move_down 70 in; Missing turn_left; turn_left 30 degrees; move_forward 60 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the airplane and surfboard carefully.\nresponse: ", "response": "airplane; surfboard."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复此前中断的目标搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please urgently pause the current flight control task to ensure a positive outcome.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 能否让无人机现在起飞，然后请将无人机向右移动三十厘米，以检查右侧环境。\nresponse: ", "response": "take_off; move_right 30 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，开始执行任务，然后视线受阻，后退一百五十厘米，接着无人机向右转五十度，随后往上升高九十厘米，调节高度，请上升一米，紧接着前方移动八十厘米，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "take_off; move_back 150 cm; turn_right 50 degrees; move_up 90 cm; move_up 1 m; move_forward 80 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the motorcycle and tie, swiftly as an eagle.\nresponse: ", "response": "motorcycle; tie."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要不咱们现在就开始操控飞行任务怎么样？\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the microwave and bread.\nresponse: ", "response": "microwave; bread."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 是否应立即停止正在进行的搜寻任务？\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前中断的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 迅速找到行李箱，并在附近的长椅上检查是否有热狗和感冒药。\nresponse: ", "response": "行李箱; 热狗; 感冒药; 长椅."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended flight control operation.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 启动无人机的起飞程序，然后无人机上升一米，接着无人机前进九十厘米，随后向右飞行，请让无人机向右平移四十厘米，之后任务要求，无人机下降五十厘米，最后现在让无人机降落。\nresponse: ", "response": "take_off; move_up 1 m; move_forward 90 cm; Missing move_right; move_right 40 cm; move_down 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Quickly take off! Then shift forward 50 centimeters. After that, turn the drone left by 30 degrees. In the end, time to land.\nresponse: ", "response": "take_off; move_forward 50 cm; turn_left 30 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞，然后往上升高九十厘米，调节高度，接着请将无人机向上升起一米，以提高视角，随后命令无人机向前飞行，之后请后退七十厘米以避开障碍，紧接着无人机的当前方向不准确，请将其向左转动一百五十度，最后无人机可以降落。\nresponse: ", "response": "take_off; move_up 90 cm; move_up 1 m; Missing move_forward; move_back 70 cm; turn_left 150 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您正式而礼貌地命令搜索风筝、冰箱和行李箱。\nresponse: ", "response": "风筝; 冰箱; 行李箱."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the clearance of the current control and search tasks.\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for remote, kite, donut.\nresponse: ", "response": "remote; kite; donut."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly to the left 5 meters, then propel forward 50 cm, move up 12 inches, afterwards fly forward by 3 feet, next climb 12 inches, following that advance forward 60 cm, subsequently move it to the left, after that climb up by 8 inches, and finally shift right 50 centimeters.\nresponse: ", "response": "move_left 5 m; move_forward 50 cm; move_up 12 in; move_forward 3 ft; move_up 12 in; move_forward 60 cm; Missing move_left; move_up 8 in; move_right 50 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前中断的目标搜索任务\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is there a reason not to meticulously scan every inch until you locate the coldrex?\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地被请求去寻找手提包和热狗。\nresponse: ", "response": "手提包; 热狗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for cell phone.\nresponse: ", "response": "cell phone."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序，友好地引导您的设备进入预定航线。\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索无人机航拍范围内是否有突出的地标建筑。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请让无人机现在起飞，然后无人机需要向左平移，接着向右移动一百五十厘米，之后后退五十厘米以调整位置，随后迅速下降一米，紧接着前进二十厘米，继续任务，再后来左转二十度，检查左侧情况，之后倒退一米，请让无人机向上飞，紧接着无人机现在需要调整方向，请向右转动七十度，最后请向后退一百五十厘米。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Take a moment to halt the ongoing flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请让无人机起飞，然后现在让无人机着陆。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: How can one memorize a large amount of information in a short time?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Would you please not fail to locate the umbrella?\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退三十厘米，也许能看到目标，然后快点左移，接着使无人机前进，随后无人机提升，最后无人机请着陆。\nresponse: ", "response": "move_back 30 cm; Missing move_left; Missing move_forward; Missing move_up; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you kindly locate the knife, observe the bird, check the clock, and inspect the boat?\nresponse: ", "response": "knife; bird; clock; boat."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head out and sniff out that sandwich, chase down the painkillers, and give that keyboard a good once-over.\nresponse: ", "response": "sandwich; painkillers; keyboard."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能否前往搜索一下烤面包机、长颈鹿和网球拍的位置呢？\nresponse: ", "response": "烤面包机; 长颈鹿; 网球拍."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the coldrex, toaster, and tennis racket with haste!\nresponse: ", "response": "coldrex; toaster; tennis racket."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the kite and the apple.\nresponse: ", "response": "kite; apple."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 嘿，先停下来！把现在的控制和搜索任务都暂停一下吧！\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请开始无人机的起飞程序，然后让无人机在当前位置下降五十厘米，看看风景如何；接着，请让无人机前进一百五十厘米以完成任务，随后无人机右移一米，以绕过障碍物；右边转四十五度看看，紧接着，请向后移动；之后，右移一百二十厘米，上移，往下移动；最后，立即左转三十度，向左移动一百八十厘米。\nresponse: ", "response": "take_off; move_down 50 cm; move_forward 150 cm; move_right 1 m; turn_right 45 degrees; Missing move_back; move_right 120 cm; Missing move_up; Missing move_down; turn_left 30 degrees; move_left 180 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 详尽地在冰箱附近寻找感冒药，同时留意一下网球拍和自行车的位置。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地询问一下，能否帮我找一找汽车和感冒药呢？\nresponse: ", "response": "汽车; 感冒药."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以优雅的姿态，在这片天地间探寻那遗落的勺子吧。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's see it slide left like it's doing the moonwalk, then turn right by 90 degrees; afterwards, maneuver to the right, next pull the drone up 50 centimeters, subsequently move up 2 inches, later slide right 4 feet, following that send it forward, after that move down 4 meters.\nresponse: ", "response": "Missing move_left; turn_right 90 degrees; Missing move_right; move_up 50 cm; move_up 2 in; move_right 4 ft; move_down 4 m; Missing move_forward."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜索水槽周围，看看是否有碗和手机？\nresponse: ", "response": "水槽; 碗; 手机."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the orange bottle, locate the bird, and find the scissors immediately.\nresponse: ", "response": "orange; bottle; bird; scissors."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear the current flight control task list; let’s make room for new adventures!\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise up abruptly 30 cm, then go down, afterwards turn the drone 90 degrees left to align with the road, next rotate the drone to the right by 120 degrees, subsequently shift right by 3 meters, later ascend 3 feet, following that rise up 20 inches, thereafter go forward 100 cm, and finally push it forward.\nresponse: ", "response": "move_up 30 cm; Missing move_down; turn_left 90 degrees; turn_right 120 degrees; move_right 3 m; move_up 3 ft; move_up 20 in; move_forward 100 cm; Missing move_forward."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar over the bed, spot the sandwich, eye the orange, and stretch your gaze to the giraffe.\nresponse: ", "response": "bed; sandwich; orange; giraffe."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, can you quickly check the remote and the biscuit near the TV?\nresponse: ", "response": "remote; biscuit; tv."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: While ensuring a thorough search, could you kindly locate the handbag and the suitcase, making sure to check for any sandwich as well?\nresponse: ", "response": "handbag; sandwich; suitcase."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In a manner befitting the gentle orchestration of aerial symphonies, kindly ensure that the current roster of flight control tasks is serenely cleared, leaving the stage set for new and wondrous airborne narratives.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, can we just hit pause on this flight control task right now?\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议清空当前正在执行的飞行任务列表吧，这将有助于优化程序运行！\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Back it up 60 inches, then turn left a quarter turn, after that go backwards a little, next make it go up by 50 centimeters, subsequently spin it left, 60 degrees, afterwards fly up 5 inches, following that fly backward 20 feet, then shift backward 40 inches, before moving forward 20 inches in no rush, immediately after getting higher, descend the drone by 100 centimeters, later initiate a rightward lateral movement for 2 meters, next spin around to the left by 90 degrees, and In the end, descend gently to land in the field.\nresponse: ", "response": "move_back 60 in; turn_left 90 degrees; Missing move_back; move_up 50 cm; turn_left 60 degrees; move_up 5 in; move_back 20 ft; move_back 40 in; move_forward 20 in; Missing move_up; move_down 100 cm; move_right 2 m; turn_left 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立刻起飞，然后让无人机升高五十厘米，便于查看全景，之后请帮忙让无人机下降一米，紧接着无人机上升五十厘米吧，后来请右转三十度，接着下方移动，随后请让无人机调头看看，紧接着无人机后退七十厘米，之后请将无人机向后移动四十厘米，以避免前方障碍物，随后往后退九十厘米，紧接着左侧飞行七十厘米，之后无人机右转九十度，然后无人机现在的高度需要调整，请下降七十五厘米，最后无人机，请着陆。\nresponse: ", "response": "take_off; move_up 50 cm; move_down 1 m; move_up 50 cm; turn_right 30 degrees; Missing move_down; turn_left 180 degrees; move_back 70 cm; move_back 40 cm; move_back 90 cm; move_left 70 cm; turn_right 90 degrees; move_down 75 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, could you quickly check if you can spot the microwave? Thanks a lot!\nresponse: ", "response": "microwave."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move towards me 10 feet, then tilt the drone to the right by 90 degrees, after that shift backward 40 inches, next fly the drone sideways 7 feet, subsequently perform a port-side drift for 50 centimeters, afterwards retract the drone a bit, and in the end make a landing.\nresponse: ", "response": "move_forward 10 ft; turn_right 90 degrees; move_back 40 in; move_right 7 ft; move_left 50 cm; Missing move_back; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应当即刻停止正在进行中的飞行任务，以确保操作如同乐章般和谐有序？\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 像寻找遗失的线索那样，去追寻那飘荡在天空中的风筝。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pick up where you left off with that object search.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 真应该清空现在的任务列表了！\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请查找飞盘和雨伞。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前的目标检测任务，优化进程配置以提升效率。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Amidst the serene skies, gently release the present command and embark on a quest for new horizons.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly up! Next, move left 7 feet. Then, go ahead 100 cm. After that, rotate right 45 degrees to change direction towards the river. Following that, commence a vertical descent of 6 feet. Immediately after, move the drone backwards by 100 inches. Subsequently, move leftward 8 inches. Thereafter, rotate to the right by 180 degrees. In the end, let the drone land now.\nresponse: ", "response": "take_off; move_left 7 ft; move_forward 100 cm; turn_right 45 degrees; move_down 6 ft; move_back 100 in; move_left 8 in; turn_right 180 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 确认会议室内是否放有白板笔。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Ensure that the current flight control task list is completely cleared!\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向左移动一米，然后向左移动八十厘米，接着左转七十度，之后前进九十厘米，随后向前移动五十厘米，紧接着下降四十厘米以调整高度。让无人机向后行进，接下来需要向左飞行五十厘米，最后让它降落。\nresponse: ", "response": "move_left 1 m; move_left 80 cm; turn_left 70 degrees; move_forward 90 cm; move_forward 50 cm; move_down 40 cm; Missing move_back; move_left 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can't you quickly check if the toaster and carrot are by the bench?\nresponse: ", "response": "toaster; bench; carrot."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: It's time to take off, then get it on the ground.\nresponse: ", "response": "take_off; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即让无人机起飞，然后可以向左旋转三十度，在之后无人机左转一百度查看左侧环境；随后无人机向右飞行一百厘米，接着升高到一米以获得更高的视角能帮助我们更好地观察；在那之后，右移七十五厘米，紧接着右转一百度重新调整方向以适应新的飞行路线；随后向右移动两百厘米注意避开障碍物，在这之前无人机飞得太高了，请下降四十厘米；然后是无人机右转，接着无人机上升一米，最后前进二十厘米和向前移动一米后，无人机降落到安全区域。\nresponse: ", "response": "take_off; turn_left 30 degrees; turn_left 100 degrees; move_right 100 cm; move_up 1 m; move_right 75 cm; turn_right 100 degrees; move_right 200 cm; move_down 40 cm; Missing turn_right; move_up 1 m; move_forward 20 cm; move_forward 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sandwich and frisbee immediately.\nresponse: ", "response": "sandwich; frisbee."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调节智能窗帘关闭至80%以减少光线。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以积极的态度前往搜索区域，首先找到长椅，接着留意是否有冲浪板出现，同时观察是否有鸟在其周围。\nresponse: ", "response": "长椅; 冲浪板; 鸟."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, don't stop now; get that flight control task going again.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退五十厘米，然后左转四十五度，调整角度，咱们要更好地查看左侧，接着往右靠拢一百二十厘米，随后请让无人机向前飞行一米，探查前方，请将无人机高度降低，紧接着请上升，之后升高二十厘米，调整观察角度，无人机左转一百八十度，掉头，最后升高一米，想要从更高的角度俯瞰整个区域。\nresponse: ", "response": "move_back 50 cm; turn_left 45 degrees; move_right 120 cm; move_forward 1 m; Missing move_down; Missing move_up; move_up 20 cm; turn_left 180 degrees; move_up 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Up we go! Then go forward 5 meters. After that, make the drone ascend by 50 inches. Next, move the drone forward 20 centimeters. Finally, descend now.\nresponse: ", "response": "take_off; move_forward 5 m; move_up 50 in; move_forward 20 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly it backwards by 30 inches, then shift left 2 meters to avoid the building, afterwards get it on the ground.\nresponse: ", "response": "move_back 30 in; move_left 2 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the bread, and let not the toothbrush nor the microwave elude your discerning search.\nresponse: ", "response": "bread; toothbrush; microwave."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Thoroughly clear the existing control parameters and terminate any ongoing search tasks within the drone application process.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 查找停车场中我的汽车具体位置。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往搜索区域，迅速定位并取回雨伞和感冒药。\nresponse: ", "response": "雨伞; 感冒药."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object search procedure.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off the ground now, then rotate rightwards, after that bank right by 4 feet, next move left 7 feet, afterwards rotate the drone left, following that pull the drone up 50 centimeters, subsequently perform a port-side drift for 50 centimeters, and in the end make the drone climb 5 inches.\nresponse: ", "response": "take_off; Missing turn_right; move_right 4 ft; move_left 7 ft; Missing turn_left; move_up 50 cm; move_left 50 cm; move_up 5 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the dance of command and quest, where the sky becomes a canvas for the drone's graceful movements.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let's go find the bus and apple, then spot the train with a smile!\nresponse: ", "response": "bus; apple; train."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即终止当前控制及搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请右转五十度，然后无人机现在离地面太远了，请下降一百厘米以调整高度，随后右侧前进，接着请将无人机右移八十厘米，之后向左移动一米五，紧接着为了绕过前方的障碍物，请将无人机向左飞行一百二十厘米，随后无人机飞得太高了，请下降六十厘米，最后现在可以让无人机降落吗。\nresponse: ", "response": "turn_right 50 degrees; move_down 100 cm; Missing move_right; move_right 80 cm; move_left 1.5 m; move_left 120 cm; move_down 60 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I want this drone to fly back 1 meter, then maneuver the drone to the left by 5 feet, and afterwards get it on the ground.\nresponse: ", "response": "move_back 1 m; move_left 5 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 考虑到当前的任务需求，你是否可以尝试在搜索区域内首先定位到滑板，随后在其周边仔细寻找可能存在的苹果和飞机呢？\nresponse: ", "response": "滑板; 苹果; 飞机."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the boat, then locate the orange.\nresponse: ", "response": "boat; orange."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 准备起飞，然后后退七十厘米，检查后方是否有障碍物，接着请将无人机左转，之后让无人机向左转，随后无人机请飞行到前方十厘米，紧接着无人机请飞行到前方，最后请让无人机着陆。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, shift it right by 25 inches, then rotate to the left now, after that raise it 20 inches, next move leftwards 70 in.\nresponse: ", "response": "move_right 25 in; Missing turn_left; move_up 20 in; move_left 70 in."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你紧急地、详尽地搜索叉子和领带，但不要忽略了行李箱。\nresponse: ", "response": "叉子; 领带; 行李箱."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff right away, then commence a forward advance of 12 feet, next pull it back 75 cm, after that make a 180-degree turn to survey the area behind, subsequently head left 10 inches, thereafter drift downwards by 30 inches, and finally send it forward.\nresponse: ", "response": "take_off; Missing move_forward; move_forward 12 ft; move_back 75 cm; turn_left 180 degrees; move_left 10 in; move_down 30 in; Missing move_forward."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Purge the present roster of aerial navigation commands.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: How can AI technology be used to increase productivity?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The object search task is initiated.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please urgently resume the previously paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧像猎鹰一样扑向厕所，找到那个藏着的蛋糕和瓶子！\nresponse: ", "response": "蛋糕; 厕所; 瓶子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，之后降低位置，然后立即向左移动，接着右转七十度，随后上升七十厘米就行，最后无人机可以准备降落。\nresponse: ", "response": "take_off; Missing move_down; Missing move_left; turn_right 70 degrees; move_up 70 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Take a moment to pause the ongoing search.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将无人机上升两百厘米，然后倒退一米，接着左转九十度，检查左侧情况，随后往后退，紧接着上升到三米高，之后无人机左移两米，最后请让无人机着陆。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the umbrella, backpack, and apple! You can do it!\nresponse: ", "response": "umbrella; backpack; apple."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向前移动一百五十厘米，注意地面情况，然后把无人机向右推二十五厘米。\nresponse: ", "response": "move_forward 150 cm; move_right 25 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise up!, then apply aft movement by 8 feet, next go right 3 ft, afterwards rotate to the right 30 degrees, subsequently revert back 60 centimeters, following that send it to the right 7 feet, and in the end come down to the ground.\nresponse: ", "response": "take_off; move_back 8 ft; move_right 3 ft; turn_right 30 degrees; move_back 60 cm; move_right 7 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Swiftly glide through the air like a silent eagle in pursuit of the elusive traffic light, then navigate to the secluded toilet, and finally, with the precision of a hawk, locate the dining table where the biscuit lies hidden.\nresponse: ", "response": "traffic light; toilet; dining table; biscuit."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Isn't it time to have the current object search task paused?\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转，然后无人机飞得太高了，请下降两米，接着请升高三十厘米，最后现在可以让无人机降落吗。\nresponse: ", "response": "turn_left 90 degrees; move_down 2 m; move_up 30 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the horse, carrot, laptop, orange.\nresponse: ", "response": "horse; carrot; laptop; orange."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control sequence, then commence the search operation.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜索区域，竟然找不到一瓶可乐！\nresponse: ", "response": "可乐."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机已准备好起飞，然后左转四十五度，观察左侧，接着前进一米，随后无人机下移四十厘米，之后请后退七十厘米检查，最后请右转一百八十度。\nresponse: ", "response": "take_off; turn_left 45 degrees; move_forward 1 m; move_down 40 cm; move_back 70 cm; turn_right 180 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后将无人机旋转左边五十度，接着无人机现在在高空，请向下飞行三十厘米以更接近地面，之后无人机右移一米，紧接着无人机向前飞行二十厘米，随后请将无人机向前移动一百厘米，探测前方区域，最后向右移动两米；为了更好的视角，请将无人机左转。\nresponse: ", "response": "take_off; turn_left 50 degrees; move_down 30 cm; move_right 1 m; move_forward 20 cm; move_forward 100 cm; move_right 2 m; Missing turn_left."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you soar through the sky and pinpoint that sports ball as if it were a beacon in the wilderness, then locate the frisbee like a hawk spotting its prey?\nresponse: ", "response": "sports ball; frisbee."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Don’t delay in initiating the flight control task; your immediate action is crucial!\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机调整到高度一米的位置，然后无人机太高了，请下降二十厘米，接着左侧飞行八十厘米，确认那边的情况，之后前面有点模糊，向前移动五十厘米，紧接着后退五十厘米，随后无人机左转五十度，再接下来距离地面太高了，下降一百五十厘米是否足够，最后无人机太高了，请下降二十厘米。\nresponse: ", "response": "move_up 1 m; move_down 20 cm; move_left 80 cm; move_forward 50 cm; move_back 50 cm; turn_left 50 degrees; move_down 150 cm; move_down 20 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Begin the takeoff now, then rotate the drone to the right 75 degrees, afterwards hover up by 50 centimeters, next descend 12 inches now, immediately after that move back 10 inches, following that move the drone forward 1 meter, and subsequently back up 5 feet.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请帮我找一下最近的超市。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then I want it to land right now.\nresponse: ", "response": "take_off; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右侧移动四十厘米，然后请将无人机后退五十厘米，接着右转九十度，重设方向，适应新的飞行环境，最后为了降低高度，无人机需要下降一米。\nresponse: ", "response": "move_right 40 cm; move_back 50 cm; turn_right 90 degrees; move_down 1 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的物体搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请查找飞盘和雨伞。\nresponse: ", "response": "飞盘; 雨伞."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，然后前方视线不清，向前移动两百厘米，接着请让无人机向后移动四十厘米，随后无人机太高了，下降六十厘米，紧接着左侧移动，之后右转一百八十度，接下来将高度提高三十厘米，调整视角以便查看周围情况，最后无人机需要在这里降落。\nresponse: ", "response": "take_off; move_forward 200 cm; move_back 40 cm; move_down 60 cm; Missing move_left; turn_right 180 degrees; move_up 30 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off right now, then commence a 45-degree yaw to the left; after that, fly the drone to the left by 50 centimeters. Next, go downwards 2 meters. Following that, turn the drone right by 45 degrees right away. Subsequently, spin the drone to the left 45 degrees. Immediately after, push it forward. After that, descend 20 centimeters. In the end, drop down now.\nresponse: ", "response": "take_off; turn_left 45 degrees; move_left 50 cm; move_down 2 m; turn_right 45 degrees; turn_left 45 degrees; Missing move_forward; move_down 20 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Consider searching for the scissors and the orange.\nresponse: ", "response": "scissors; orange."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在厨房中找到装盐的容器。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机起飞，然后无人机左侧移动二百厘米。\nresponse: ", "response": "take_off; move_left 200 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the kite, keyboard, iodophor, and orange immediately; can we afford to waste any more time?\nresponse: ", "response": "kite; keyboard; iodophor; orange."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's get the drone's flight control task back on track where we left off!\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去寻找那辆公共汽车吧，你能行的！\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 是否要启动飞行任务？\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动智能烤箱并设置时间为25分钟。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机前进七十厘米，检查前方是否有新发现，然后右侧转向，紧接着立即左转三十度，之后左侧移动两百厘米，接着左侧移动75厘米，随后前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，再之后无人机请向后飞行一米，紧接着让无人机左转一百八十度，观察后方，最后请安排无人机在当前区域降落。\nresponse: ", "response": "move_forward 70 cm; Missing turn_right; turn_left 30 degrees; move_left 200 cm; move_left 75 cm; move_forward 20 cm; move_back 1 m; turn_left 180 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off right now, then climb 18 inches, after that head right, next drone should climb 1 foot, following that move to the left by 4 meters, subsequently drop down 50 centimeters, afterwards fly forward now, immediately after bring it back, then send the drone backwards 25 feet, next shift to the right 2 meters, later go to the left side, in the end can you land the drone?\nresponse: ", "response": "take_off; move_up 18 in; Missing turn_right; move_up 1 ft; move_left 4 m; move_down 50 cm; Missing move_forward; Missing move_back; move_back 25 ft; move_right 2 m; Missing move_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why does Earth have different climate zones?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 定位无人机拍摄画面中的水塔。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Wipe out the current search task list, no need to keep it hanging around.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Why not check if there's a cake or bread near that bird by the toilet?\nresponse: ", "response": "cake; bread; bird; toilet."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务已被启动，以掌控飞行进程。请放心，一切都在精确的操控之中，您只需享受这前所未有的体验。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let the airborne sojourn, once halted, resume its silent dance through the heavens.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否快速如闪电般找到那瓶芬达呢？\nresponse: ", "response": "芬达."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Temporarily halt the ongoing control and search operation to ensure optimal performance.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, shift to the right slightly, then move forward past the parking lot 200 feet, afterwards land the drone slowly.\nresponse: ", "response": "Missing move_right; move_forward 200 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最详尽的方式，在这紧急而又友好的任务中，搜索并定位那令人振奋的冲浪板。\nresponse: ", "response": "冲浪板."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 开始执行飞行任务啦。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立刻起飞，然后请将无人机上升一百二十厘米，以便获得更高的视角。\nresponse: ", "response": "take_off; move_up 120 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制无人机在湖面上方盘旋拍摄2分钟。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current task and initiate the search function.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and clear out that list of flight tasks; it'll make things smoother for your next mission!\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在你寻找那些隐藏得极好的香蕉时，请务必仔细检查每一个可能的角落，而在这之后，再转向更大范围搜索那副色彩鲜明的滑雪板。\nresponse: ", "response": "香蕉; 滑雪板."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的控制和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被建议去避免在餐桌和船周围进行搜索。\nresponse: ", "response": "餐桌; 船."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift to the left 6 feet, then fly backwards 150 centimeters, after that lower the drone 2 meters, next fly steadily forward 60 cm, afterwards turn 120 degrees to the right, subsequently zoom forward 3 feet, later go up a bit, and in the end rotate the drone 360 degrees to the left.\nresponse: ", "response": "move_left 6 ft; move_back 150 cm; move_down 2 m; move_forward 60 cm; turn_right 120 degrees; move_forward 3 ft; Missing move_up; turn_left 360 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then bring it lower by 20 inches, afterwards make it climb 30 centimeters, next move the drone backward 1 meter, subsequently go backwards 80 centimeters, later rotate the drone to the right by 120 degrees, following that move back 1 meter, and in the end initiate the landing.\nresponse: ", "response": "take_off; move_down 20 in; move_up 30 cm; move_back 1 m; move_back 80 cm; turn_right 120 degrees; move_back 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应当启动目标搜索任务？\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复并继续执行先前已暂停的控制与搜寻任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即暂停当前的所有控制与搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找行李箱和猫，务必确保它们安全无恙。\nresponse: ", "response": "行李箱; 猫."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Pierce the veil of the sky and seek the carrot amidst the shadows, then glide like a whisper to find the scissors and finally, sip the secrets from the wine glass.\nresponse: ", "response": "carrot; scissors; wine glass."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向后移动二百厘米，然后我感觉左边有点异常，调整一下方向，接着请将无人机升高到八十厘米的位置，之后向右移动两米，随后无人机下降，紧接着能让无人机向左飞五十厘米吗，后来无人机顺时针旋转五十度，最后请无人机向前飞行。\nresponse: ", "response": "move_back 200 cm; turn_left 90 degrees; move_up 80 cm; move_right 2 m; Missing move_down; move_left 50 cm; turn_right 50 degrees; Missing move_forward."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then steer left 60 degrees, after that move the drone forward 20 centimeters, next soar forward 15 meters, afterwards veer left by 45 degrees, subsequently drop it down 50 cm, and in the end descend and land.\nresponse: ", "response": "take_off; turn_left 60 degrees; move_forward 20 cm; move_forward 15 m; turn_left 45 degrees; move_down 50 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到家里的急救药箱并确认位置。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被请求执行的任务是友好地、技术性地搜索感冒药的位置。\nresponse: ", "response": "感冒药."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 能否让无人机下降到一米的高度，然后向右移动二十厘米以避开障碍，请向后移动，接着无人机上升三百五十厘米，来点高空的视角，上升一百五十厘米，观察整个区域；请让无人机向右移动，之后上升三十厘米，获得更高的视角，紧接着无人机能否向上飞行八十厘米，以便更好地查看周围环境，在这之前往下降低七十厘米；随后无人机向右转，最后请让无人机在这个位置降落。\nresponse: ", "response": "move_down 1 m; move_right 20 cm; Missing move_back; move_up 350 cm; move_up 150 cm; move_right 150 cm; Missing move_right; move_up 30 cm; move_up 80 cm; move_down 70 cm; Missing turn_right; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动物体搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我想让无人机立即起飞，然后前方视线模糊，向前移动三十厘米，接着无人机上升七十五厘米，随后右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍，之后向右转动，紧接着右转一百二十度，最后现在可以让无人机缓慢降落到地面吗。\nresponse: ", "response": "take_off; move_forward 30 cm; move_up 75 cm; move_right 80 cm; Missing turn_right; turn_right 120 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞后，请让无人机向前飞行一百厘米，然后无人机请右转五十度，接着下降一百厘米。随后，请让无人机向后退，紧接着无人机右转九十度，最后请将无人机上升七十五厘米。\nresponse: ", "response": "take_off; move_forward 100 cm; turn_right 50 degrees; move_down 100 cm; Missing move_back; turn_right 90 degrees; move_up 75 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hold up on the current search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找那个钟，加油！\nresponse: ", "response": "钟."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请查找酒杯，接着是雪碧，最后寻找风筝。\nresponse: ", "response": "酒杯; 雪碧; 风筝."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向左移动一米，然后无人机向上升高，接着右移三十厘米，随后无人机向左行进，紧接着无人机目前离地面过高，请下降一百五十厘米，之后向右侧移动，最后请将无人机后退三十厘米，以检查后方情况。\nresponse: ", "response": "move_left 1 m; Missing move_up; move_right 30 cm; Missing move_left; move_down 150 cm; Missing move_right; move_back 30 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即寻找并安全带回手提包、手机和止疼药，同时留意任何鸟的动向。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Suspend the ongoing flight control operation.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应立即暂停当前的飞行任务？\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 赶紧启动这个飞行任务吧，就像按下启动键一样，让我们的小飞机展翅高飞。别犹豫了，时间不等人哦！\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff protocol. Then bank left by 2 meters. Next, send it forward. After that, turn right by 30 degrees. Following that, lower it by 50 cm. Subsequently, rotate the drone left by 30 degrees. Immediately after, bring it down gently by 1 meter. Thereafter, go forward 1 meter. Afterwards, take it to the left 15 inches. Next, bank right by 4 feet. Then, bank right. Later, fly to the left. In the end, initiate vertical ascent by 3 meters.\nresponse: ", "response": "take_off; move_left 2 m; Missing move_forward; turn_right 30 degrees; move_down 50 cm; turn_left 30 degrees; move_down 1 m; move_forward 1 m; move_left 15 in; move_right 4 ft; Missing move_right; Missing move_left; move_up 3 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的搜寻任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你先去搜索烤箱附近的披萨，然后看看能否找到止疼药。\nresponse: ", "response": "烤箱; 披萨; 止疼药."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why is the universe's expansion accelerating over time?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能不能现在就开始控制并执行搜索任务呢？麻烦您了，这挺急的。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机向上移动，然后让无人机逆时针旋转一百度，之后右边可能有目标，帮我转过去，紧接着无人机高度太高，请下降，随后将无人机左转五十度，观察左侧情况，接着向上升，后来下移，接下来转动无人机四十五度左，随后向左旋转九十度，观察周围环境，最后请将无人机向后移动。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing in the air, then shift right 25 inches, afterwards flying upwards by 30 feet to capture a panoramic view.\nresponse: ", "response": "take_off; move_right 25 in; move_up 30 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar like a kite, gallop as a horse, and let your path weave through the sky until you find the handbag.\nresponse: ", "response": "kite; horse; handbag."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why not resume the previously paused control and search task, thereby ensuring the seamless continuation of your mission?\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control task immediately.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议恢复先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Purge the existing flight control assignments with a clear heart, for a new journey awaits.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以优雅的姿态，在这幽静的空间中寻觅那古老而沉稳的钟与锋利轻巧的剪刀，让它们在你的视野中缓缓展现。\nresponse: ", "response": "钟; 剪刀."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到无人机飞行区域中的一片空旷草地。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 在启动控制程序的同时，系统也将开启搜寻任务。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机右侧再靠近十五厘米，然后无人机高度过低，请上升；接着无人机向左移动一米，随后无人机顺时针旋转；之后右转七十度，紧接着请将无人机右移两百厘米；后来下降八十厘米，接近地面，准备进行详细检查；随后左侧好像有东西，转动一下；最后准备降落，冒险结束啦。\nresponse: ", "response": "move_right 15 cm; Missing move_up; move_left 1 m; Missing turn_right; turn_right 70 degrees; move_right 200 cm; move_down 80 cm; turn_left 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, please bring it down slowly, thanks, then turn the drone 45 degrees to the right, afterwards time to moonwalk backward 20 inches. Next, advance forward 3 meters, then go down just a bit, subsequently fly it forward 2 inches, after that go forward 100 cm, immediately after elevate to 15 feet high, later move backward 1 foot, and finally shift to the right by 30 centimeters.\nresponse: ", "response": "Missing move_down; turn_right 45 degrees; move_back 20 in; move_forward 3 m; Missing move_down; move_forward 2 in; move_forward 100 cm; move_up 15 ft; move_back 1 ft; move_right 30 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Move back 30 inches, then fly up 20 meters to clear the treetops, after that, rotate the drone to the right by 120 degrees, next, fly to the left 3 feet, afterwards, propel forward 15 inches, and finally, pivot 90 degrees to the left.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在需要起飞，然后左侧移动八十厘米以避开障碍物；接着，无人机左转二十度，随后让无人机顺时针旋转七十五度；紧接着，无人机下降五十厘米以调整高度；之后，请将无人机右侧移动；提升；请将无人机向后移动四十厘米以避免前方障碍物，最后请让无人机飞到前方两米。\nresponse: ", "response": "take_off; move_left 80 cm; turn_left 20 degrees; turn_right 75 degrees; move_down 50 cm; Missing move_right; Missing move_up; move_back 40 cm; move_forward 2 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 把无人机向右推二十五厘米\nresponse: ", "response": "move_right 25 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please resume the earlier suspended control and exploration task.\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing control and search operations.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Quickly take off! First, right now, move left by 50 inches. Next, please move the drone left 5 feet. Then, go up 5 feet. After that, send it forward as if it's charging into the wind. Immediately after, go backward 4 meters. Following that, shift left 2 feet. Subsequently, bring the drone back 80 centimeters. Thereafter, lower it slightly. In the end, bring it down, now!\nresponse: ", "response": "take_off; move_left 50 in; move_left 5 ft; move_up 5 ft; move_back 4 m; move_left 2 ft; Missing move_forward; move_back 80 cm; Missing move_down; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请左转一百八十度检查，然后请让无人机后退八十厘米，接着右侧移动七十五厘米，之后需要左转，飞行一米，请让无人机升高，前方可能有障碍物，向前飞行，请将无人机上升一百五十厘米以获取更高视角，最后无人机降落吧。\nresponse: ", "response": "turn_left 180 degrees; move_back 80 cm; move_right 75 cm; move_left 1 m; Missing move_up; Missing move_forward; move_up 150 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动任务以掌控飞行进程，务必确保操作无误。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please pause the current flight control task.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pick up where we left off with the paused flight control task, and get that drone back in action.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 您是否希望清除当前正在执行的飞行任务列表呢？\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey there, could you kindly zip over to the tracks and give that train a look-see, then hop over to the car for a quick scan, and finally, perch on that bench like a hawk watching its prey? Time's a-tickin'!\nresponse: ", "response": "train; car; bench."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the orange near the bed or the carrot.\nresponse: ", "response": "orange; bed; carrot."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control process; failure to do so will result in operational delays.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向后退三十厘米以避免碰撞，然后无人机能向右转四十五度吗，接着无人机升高三十厘米，以调整高度，最后无人机可以进行降落。\nresponse: ", "response": "move_back 30 cm; turn_right 45 degrees; move_up 30 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for car, person, pizza, bus now.\nresponse: ", "response": "car; person; pizza; bus."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被鼓励去搜索蛋糕，在餐桌和微波炉附近仔细查找。\nresponse: ", "response": "蛋糕; 餐桌; 微波炉."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the wine glass, skateboard, and bicycle.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去床上找找，再看看风筝和遥控器，最后检查一下红绿灯。\nresponse: ", "response": "床; 风筝; 遥控器; 红绿灯."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的控制及搜寻任务需被立即清除。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你是否可以去检查一下长椅旁边是否有碘伏，顺便看看行李箱和飞盘呢？\nresponse: ", "response": "长椅; 碘伏; 行李箱; 飞盘."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 打开家中的电饭煲并设置为煮粥模式。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你寻找那个钟。\nresponse: ", "response": "钟."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the coldrex.\nresponse: ", "response": "coldrex."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地寻找床和椅子之间的橙子，好吗？\nresponse: ", "response": "床; 椅子; 橙子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then move the drone to the left 150 centimeters, after that retract it back 2 feet, next bring the drone down 10 centimeters, subsequently turn the drone right by 45 degrees, afterwards rotate it to the right a bit, and in the end land the drone now please.\nresponse: ", "response": "take_off; move_left 150 cm; move_back 2 ft; move_down 10 cm; turn_right 45 degrees; Missing turn_right; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the control and search operation.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the critical control and search operation for the drone immediately.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing in the air, then fly back 10 inches, afterwards hover left by 8 inches, next go 6 inches to the left, following that execute a lateral shift to the left by 200 centimeters, subsequently commence a vertical descent of 6 feet, after that move forward 1.5 meters, and finally Could we move forward 5 meters?\nresponse: ", "response": "take_off; move_back 10 in; move_left 8 in; move_left 6 in; move_left 200 cm; move_down 6 ft; move_forward 1.5 m; move_forward 5 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在可以执行起飞操作吗，然后无人机下降一百五十厘米，接着左侧移动两百厘米，随后把无人机降落一米，最后请让无人机在这个位置降落。\nresponse: ", "response": "take_off; move_down 150 cm; move_left 200 cm; move_down 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately after that move right by 100 centimeters, then move rightward 4 in, afterwards shift the drone 200 centimeters to the right. Next, move forward 25 in. I’m a bit nervous, could you move the drone to the left slowly? Following that, move leftward 3 ft, subsequently come down 20 inches. Thereafter, hover up by 50 centimeters.\nresponse: ", "response": "take_off; move_right 100 cm; move_right 4 in; move_right 200 cm; move_forward 25 in; Missing move_left; move_left 3 ft; move_down 20 in; move_up 50 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Wow, make sure to clear out the current flight control task list for your drone application process! It's such an important step to ensure everything runs smoothly!\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机下降八十厘米，以接近地面，然后请将无人机上升七十五厘米，接着无人机向左移动六十厘米，以避免障碍物，随后往左移动八十厘米，紧接着后退一百五十厘米，之后无人机向右转一百八十度，接下来右移七十五厘米，躲过那个障碍物，继续前行，请让无人机前进一百五十厘米以完成任务，最后无人机请下降五十厘米。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the location of the toolbox in the garage.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以暂停当前正在执行的搜寻任务呢？\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 往前飞行一米，然后无人机现在的方向可能不对，请向右转动九十度以调整方向，接着请向后退一百五十厘米，随后请将设备向后移动，紧接着后退四十厘米，调整位置，最后左移一百五十厘米。\nresponse: ", "response": "move_forward 1 m; turn_right 90 degrees; move_back 150 cm; Missing move_back; move_back 40 cm; move_left 150 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的所有控制和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go check if the mouse is still hanging around by the tv, and see if the toaster's there too, maybe grab a cola while you're at it.\nresponse: ", "response": "mouse; tv; toaster; cola."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate to the right by 180 degrees, then propel it forward by 200 centimeters, afterwards maneuver the drone to the left by 5 feet, next fly the drone downward 5 meters, following that slide to the right 20 inches, subsequently climb up to 1 meter, then come down 20 inches, after that go ahead and move it to the right 10 centimeters, later send it to the right 7 feet, and finally come down to the ground.\nresponse: ", "response": "turn_right 180 degrees; move_forward 200 cm; move_left 5 ft; move_down 5 m; move_right 20 in; move_up 1 m; move_down 20 in; move_right 10 cm; move_right 7 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly it to the left 15 feet, then spin left 45 degrees, after that go down, move the drone forward 20 centimeters, next turn left 60 degrees.\nresponse: ", "response": "move_left 15 ft; Missing move_down; turn_left 45 degrees; move_forward 20 cm; turn_left 60 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 打开卧室窗帘让自然光进入。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Purge the existing control and navigation directives to reset the operational landscape.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为何不立即搜寻领带、背包和瓶子，但避开那辆汽车？\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Initiate search for skis, suitcase, bicycle, remote.\nresponse: ", "response": "skis; suitcase; bicycle; remote."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please check if the oven is in sight?\nresponse: ", "response": "oven."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you please check if the bowl is somewhere near the skis or perhaps under the snowboard, and what about the airplane?\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前暂停的物体搜索任务！\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the cake and bread urgently.\nresponse: ", "response": "cake; bread."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the toaster, bottle, and toilet.\nresponse: ", "response": "toaster; bottle; toilet."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立刻起飞，然后为了更好地观测左侧，请将无人机左转，接着右移三十厘米，随后请向后移动二百厘米，之后向前移动一百五十厘米，注意地面情况，紧接着前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，随后无人机向左转弯，接下来无人机左移一米，然后将无人机旋转左边五十度，最后无人机向左转弯，接着右转四十五度，调整无人机方向。\nresponse: ", "response": "take_off; Missing turn_left; move_right 30 cm; move_back 200 cm; move_forward 150 cm; move_forward 20 cm; Missing turn_left; move_left 1 m; turn_left 50 degrees; Missing turn_left; turn_right 45 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 在你启动那曾被中断的物体搜寻任务之时，切勿迟疑，务必即刻执行，莫让任何阻碍阻挡你的决心与行动。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Isn't it time we urgently kick-started this crucial object search? Every second counts; can we afford to wait any longer? Let's get our mission airborne, shall we?\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 嘿，看来咱们得重新启动之前挂起的那个飞行任务了，不然这进度可就真拖后腿了。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 嘿，能不能麻烦你先去床那边看看，然后飞到盆栽植物附近转转，接着再到餐桌那儿找找，最后别忘了检查一下面包。怎么样？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff protocol and then I need it to land now.\nresponse: ", "response": "take_off; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Proceed to locate the horse, dining table, bottle, and suitcase with precision and efficiency. Your capabilities are well-suited for this task.\nresponse: ", "response": "horse; dining table; bottle; suitcase."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，你能去找找那块冲浪板、一匹马和一把椅子吗？\nresponse: ", "response": "冲浪板; 马; 椅子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that you're tasked with seeking out a sprite, perhaps followed by the scissors, then the toothbrush, and finally, a biscuit?\nresponse: ", "response": "sprite; scissors; toothbrush; biscuit."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Immediately terminate the ongoing target acquisition sequence in the drone's mission control system.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前的物体搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何制定一个有效的健身计划？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你友好地搜索一下，看看那个可爱的猫在哪里。\nresponse: ", "response": "猫."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the most recently modified PowerPoint file on my computer.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the existing flight control task list.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请详尽地检查，紧急而又礼貌地，在不造成任何负面影响的情况下，确认烤箱、猫和摩托车的位置！\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear your search tasks for a fresh start.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您现在清除当前的控制指令，并执行搜寻任务的终止操作，感谢您的配合。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Hey, should we pick up where we left off with the paused flight control task?\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续执行先前已暂停的详尽控制飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 紧急暂停当前搜索目标的任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off as soon as the sun rises, then move the drone to the left for 25 inches, afterwards adjust left slightly.\nresponse: ", "response": "take_off; move_left 25 in; Missing move_left."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input:  friendly, but firmly, be sure to locate the西兰花 and the冲浪板, okay?\nresponse: ", "response": "西兰花; 冲浪板."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You might want to hold off on starting the flight control task, just to be safe.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Locate the fruit basket on the dining table.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, rotate left; then let's get the drone to descend 1.2 meters; after that, descend 20 centimeters; subsequently, let’s rotate it left by 60 degrees; next, turn the drone right 45 degrees; afterwards, shift it right by 25 inches.\nresponse: ", "response": "Missing turn_left; move_down 1.2 m; move_down 20 cm; turn_left 60 degrees; turn_right 45 degrees; move_right 25 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Help me locate nearby bus stops.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone takeoff now, then maneuver left by 50 centimeters, and afterwards lower it down now.\nresponse: ", "response": "take_off; move_left 50 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您详尽地考虑之后，暂停当前正在执行的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动目标搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止正在进行的目标搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the clock and the truck, as if you're a hawk spotting its prey from above, then seek out the scissors and the bowl with the precision of a surgeon's hand.\nresponse: ", "response": "clock; truck; scissors; bowl."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转，然后无人机上升三米。\nresponse: ", "response": "turn_left 90 degrees; move_up 3 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请友好地恢复之前的控制和搜索任务吧。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 降落一米，然后请往后移动，接着前进二十厘米，之后向右移动二十厘米以避开障碍，左转三十度，调整方向，很好，现在向右飞行八十五厘米，随后降低位置，最后无人机准备降落。\nresponse: ", "response": "move_down 1 m; Missing move_back; move_forward 20 cm; move_right 20 cm; turn_left 30 degrees; move_right 85 cm; Missing move_down; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Purge the existing roster of object pursuit assignments with deliberate resolve.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请查找鼠标。\nresponse: ", "response": "鼠标."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请清空当前目标搜索任务列表。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the banana, iodophor, fanta, and car.\nresponse: ", "response": "banana; iodophor; fanta; car."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please don't search for the refrigerator.\nresponse: ", "response": "refrigerator."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise now, then rotate it left 135 degrees, afterwards glide left for 100 cm, next spin the drone clockwise by 45 degrees, following that move ahead 20 inches, subsequently engage in an upward climb of 500 centimeters, after that make it rotate left a bit, and in the end prepare for landing.\nresponse: ", "response": "Missing move_up; turn_left 135 degrees; move_left 100 cm; turn_right 45 degrees; move_forward 20 in; Missing turn_left; move_up 500 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始起飞，然后降落一米，咱们要接近地面了，准备好查看周围环境，接着前进八十厘米，前方可能藏着一些秘密，随后请将无人机向左移动一百二十厘米，紧接着请将无人机右移两百五十厘米，之后上升七十厘米，提高高度，再请让无人机向前飞行一米，探查前方，请帮忙让无人机下降一米，最后无人机现在的高度需要调整，请下降七十五厘米，最后请将无人机降落在此处。\nresponse: ", "response": "take_off; move_down 1 m; move_forward 80 cm; move_left 120 cm; move_right 250 cm; move_up 70 cm; move_forward 1 m; move_down 1 m; move_down 75 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请调整方向，右转，然后无人机前进一百五十厘米，继续向前探索未知，之后为了获得更好的视角，请将无人机上升两米，紧接着再将高度提高三十厘米，调整视角以便查看周围情况，随后为了更好地观测左侧，请将无人机左转，接着请将无人机左移五十厘米，后来请将无人机上升七十五厘米，最后无人机请着陆。\nresponse: ", "response": "Missing turn_right; move_forward 150 cm; move_up 2 m; move_up 30 cm; Missing turn_left; move_left 50 cm; move_up 75 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Rise up, then shift left to avoid the drone from hitting the wall by 2 meters.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您紧急地先找到感冒药，然后是运动球，接着前往马的位置，最后检查一下烤箱的情况。\nresponse: ", "response": "感冒药; 运动球; 马; 烤箱."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退一米，然后向右移动一百厘米，接着上升一百五十厘米，获取更高的视角；请将无人机向后移动五十厘米，检查是否有障碍物，随后请将无人机左转，之后无人机向后退，紧接着无人机需要向后移动一米，最后右侧移动。\nresponse: ", "response": "move_back 1 m; move_right 100 cm; move_up 150 cm; move_back 50 cm; Missing turn_left; Missing move_back; move_back 1 m; Missing move_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Can AI enhance human lifespan in the future?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear out that flight control task list for your drone, you got this!\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前的目标识别任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 任务开始时，请无人机起飞，然后请后退七十厘米以避开障碍，接着请让无人机向后退三十厘米，之后前进一百五十厘米，随后降低位置，后来后方有点可疑，转身看看，紧接着前进九十厘米，以查看前方情况，随后右侧前进，紧接着右侧转向，最后无人机的视角受限，请向左转三十度，以便更好地观察左侧环境。\nresponse: ", "response": "take_off; move_back 70 cm; move_back 30 cm; move_forward 150 cm; Missing move_down; turn_left 180 degrees; move_forward 90 cm; Missing move_right; Missing turn_right; turn_left 30 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task immediately.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Spin left 45 degrees, then turn the drone 90 degrees left to align with the road, afterwards climb to 6 meters, next move to the right 200 inches, subsequently go down 0.5 meters, later bring it up by 2 meters, following that adjust heading by 90 degrees to the right, thereafter circle left by 45 degrees, and in the end bring it down slowly.\nresponse: ", "response": "turn_left 45 degrees; turn_left 90 degrees; move_up 6 m; move_right 200 in; move_down 0.5 m; move_up 2 m; turn_right 90 degrees; turn_left 45 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go up like you're Superman, 12 feet, then slide 60 centimeters to the right, afterwards move forward 5 meters, next slide right 4 inches, subsequently turn right by 90 degrees, after that move right by 3 meters, and finally land the drone now please.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 像忠诚的朋友那样，去找寻那只狗吧。\nresponse: ", "response": "狗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜索三明治和雨伞。\nresponse: ", "response": "三明治; 雨伞."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Would you kindly look for the bottle, surfboard, and snowboard!\nresponse: ", "response": "bottle; surfboard; snowboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机已准备好起飞，然后请将无人机右移两米，之后下降一百厘米，接着让无人机升高五十厘米，便于查看全景，最后请将无人机高度增加一百厘米。\nresponse: ", "response": "take_off; move_right 2 m; move_down 100 cm; move_up 50 cm; move_up 100 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 快点恢复之前的控制和搜索任务！\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to search for the suitcase, banana, broccoli, and cola immediately.\nresponse: ", "response": "suitcase; banana; broccoli; cola."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜寻雪碧、西兰花和刀。\nresponse: ", "response": "雪碧; 西兰花; 刀."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即起飞，然后无人机前方的目标不清楚，请向前移动；接着右转一百度，调整无人机方向；之后前方视线模糊，向前移动三十厘米；紧接着无人机上升到三米；随后向左移动一百八十厘米；后来掉头看看；紧接着由于右侧视角被遮挡，请将无人机右转四十五度以调整视角；然后无人机在当前位置下降；接下来前方视线不清，向前移动两百厘米；最后无人机准备降落。\nresponse: ", "response": "take_off; Missing move_forward; turn_right 100 degrees; move_forward 30 cm; move_up 3 m; move_left 180 cm; turn_left 180 degrees; turn_right 45 degrees; Missing move_down; move_forward 200 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 不妨继续之前暂停的飞行任务吧，这样可以确保进程顺利进行。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please go ahead and clear the current control and search task to proceed smoothly.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请你温和而有礼地前往餐桌旁，先细心寻找碘伏，接着再看看能不能找到滑板和手提包，相信你能做到的！\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后请上升，接着前进一百厘米，检查前方，之后无人机当前的位置不合适，请向右移动二十厘米，随后往左移动八十厘米，最后上升七十厘米就行。\nresponse: ", "response": "take_off; Missing move_up; move_forward 100 cm; move_right 20 cm; move_left 80 cm; move_up 70 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被命令去寻找三明治和碘伏。\nresponse: ", "response": "三明治; 碘伏."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请务必在床附近优雅地寻找一下那把网球拍吧！\nresponse: ", "response": "床; 网球拍."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Gently seek out the broccoli, Fanta, wine glass, and sports ball.\nresponse: ", "response": "broccoli; fanta; wine glass; sports ball."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 准备起飞，然后无人机升高，接着左转五十度，之后快到房顶了，往下飞抵一下吧，下降个五十厘米，随后请上升，紧接着无人机上升一百五十厘米，之后向左飞行一百二十厘米，最后无人机右移一米，以绕过障碍物。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 未来无人机是否可以完全自主飞行？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go check out where the bench is, and while you're at it, see if you can spot a cup, some painkillers, and even a toaster, would ya?\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标搜索任务，就像开启了探索未知世界的窗口，真是令人振奋！\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何通过短期学习掌握一项新技能？\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the orange fanta and the dog.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Pause the current flight control task now.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current object search task list is cleared.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Increase altitude by 15 inches, then propel forward 50 cm, afterwards descend the drone by 100 centimeters, subsequently elevate by 8 inches, following that turn it left by 180 degrees, next bank right by 4 feet, later slide it left 40 inches, and in the end carefully land the drone.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the suitcase and the bowl.\nresponse: ", "response": "suitcase; bowl."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动这趟空中之旅的操控序章。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then move to the right 200 inches, after that turn left 150 degrees, next lower down 75 cm, afterwards fly the drone to the left by 50 centimeters, subsequently bank right 2 meters, and impatiently land now.\nresponse: ", "response": "take_off; move_right 200 in; turn_left 150 degrees; move_down 75 cm; move_left 50 cm; move_right 2 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以优雅的姿态，在这片空间中探寻，轻盈地掠过酒杯与烤面包机，穿越厕所，直至找到那静候的冲浪板。\nresponse: ", "response": "酒杯; 烤面包机; 厕所; 冲浪板."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Would you kindly check if the keyboard is where the cat has decided to take a nap?\nresponse: ", "response": "keyboard; cat."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 现在可以起飞了吗，然后请无人机向前飞行，接着向右再靠近九十厘米，之后向右一米，紧接着向右飞行一百二十厘米，随后请将无人机右移，然后无人机下移四十厘米，接下来无人机向前飞行一百厘米，靠近目标，最后让无人机降落吧。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the apple, you're doing great!\nresponse: ", "response": "apple."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索风筝、长颈鹿和可乐。\nresponse: ", "response": "风筝; 长颈鹿; 可乐."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Initiate a systematic search for the snowboard and chair, ensuring comprehensive coverage of the designated area.\nresponse: ", "response": "snowboard; chair."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why do black holes absorb everything, even light?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请轻轻飞往胡萝卜和鸟的方向，接着留意瓶子与雨伞的位置。\nresponse: ", "response": "胡萝卜; 鸟; 瓶子; 雨伞."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and restart the object search task that was previously paused.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在众多食物中精确地定位并锁定目标——热狗，随后进行细致的图像捕捉与分析。\nresponse: ", "response": "热狗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not necessary to locate the backpack, broccoli, and carrot?\nresponse: ", "response": "backpack; broccoli; carrot."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您考虑取消当前正在执行的搜索任务，以避免可能存在的问题。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务，就像开启一段新的旅程，让我们一起平稳前行。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别再浪费时间了，赶紧去把手机和杯子从那该死的火车上找回来。\nresponse: ", "response": "手机; 杯子; 火车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地前往飞机附近寻找止疼药。\nresponse: ", "response": "止疼药; 飞机."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请搜索并定位冲浪板和沙发的位置，确保它们没有被不当放置。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for suitcase, then cup.\nresponse: ", "response": "suitcase; cup."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 告诉我一些关于银河系的有趣事实。\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not fail to search for the motorcycle, backpack, and refrigerator urgently.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快点起飞，然后右边需要探测，向右移动，接着向右移动二十厘米以避开障碍，随后右侧前进，之后左转三十度，观察左侧情况，紧接着让无人机向后退八十厘米，随后向右飞行一百二十厘米，接下来往右转九十度，紧接着请将无人机往右移，然后请让无人机下降三十厘米，接近地面，最后请让无人机在这个位置降落。\nresponse: ", "response": "take_off; Missing move_right; move_right 20 cm; Missing move_right; turn_left 30 degrees; move_back 80 cm; move_right 120 cm; turn_right 90 degrees; Missing move_right; move_down 30 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused object detection task in the drone's operational sequence.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请先在餐桌上查找，如果没有发现，请再去沙发后面看看，相信你一定能找到那架飞机。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the painkillers immediately.\nresponse: ", "response": "painkillers."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, could you put a pause on the current object hunt for the drone?\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞无人机，然后左边移动四十厘米，接着请问无人机能向左移动吗，随后请将无人机右侧移动，之后请将无人机向后移动五十厘米，检查是否有障碍物，紧接着请无人机向右转一百八十度，查看后方，最后为了更好地观测左侧，请将无人机左转。\nresponse: ", "response": "take_off; move_left 40 cm; Missing move_left; Missing move_right; move_back 50 cm; turn_right 180 degrees; Missing turn_left."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复并继续执行先前的控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制及搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the surfboard, but do not miss the donut.\nresponse: ", "response": "surfboard; donut."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let's go find the bench, airplane, bus, and cola with enthusiasm!\nresponse: ", "response": "bench; airplane; bus; cola."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请上升七十五厘米，然后下降三十厘米，我们要更接近地面看看情况；接着右侧移动七十五厘米以避开障碍，随后下降一百五十厘米；紧接着右移五厘米，后来请右边转弯；之后请让无人机向前飞行一米，探查前方，接下来请让无人机向后移动两百厘米；第二，请掉头飞行；最后，无人机，请着陆。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 如晨雾般轻拂过心间，洗净那纷扰的思绪，让这程序回归宁静，卸下当前的操控与探求的重担。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend 10 feet, then glide left for 100 cm, afterwards fly down 3 feet, next push it ahead, after that proceed right 1.5 meters, subsequently come on back here, 7 feet, and in the end, fly upwards 10 inches.\nresponse: ", "response": "move_down 10 ft; move_left 100 cm; move_down 3 ft; Missing move_forward; move_right 1.5 m; move_back 7 ft; move_up 10 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move leftward 8 inches, then move leftward some more, after that reverse the drone by 100 centimeters, next let the drone move forward 50 cm, subsequently bring it lower by 20 inches, afterwards move right 1 meter, following that execute a leftward bank for 20 inches, then shift backward 40 inches, and in the end come down to the ground.\nresponse: ", "response": "move_left 8 in; Missing move_left; move_back 100 cm; move_forward 50 cm; move_down 20 in; move_right 1 m; move_left 20 in; move_back 40 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你帮个忙，去厨房看看烤箱旁边有没有三明治，好吗？\nresponse: ", "response": "烤箱; 三明治."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that amidst the quest for the sandwich and coldrex, the person and donut are also to be found?\nresponse: ", "response": "sandwich; coldrex; person; donut."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you quickly find the orange, sprite, scissors, and traffic light?\nresponse: ", "response": "orange; sprite; scissors; traffic light."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please clear the current flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head over to where the bread and toaster are, as if you're a bee buzzing toward its nectar, and hurry up, time waits for no one.\nresponse: ", "response": "bread; toaster."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please bring it down slowly, thanks, then go up 3 feet, afterwards rotate the drone left by 180 degrees, next proceed right 1.5 meters, after that rotate left by 50 degrees, subsequently shift right by 100 centimeters, later advance forward 4 feet, then please make the drone go left 150 centimeters, and in the end, okay, time to touchdown, let's land this bird.\nresponse: ", "response": "Missing move_down; move_up 3 ft; turn_left 180 degrees; move_right 1.5 m; turn_left 50 degrees; move_right 100 cm; move_forward 4 ft; move_left 150 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即中止当前正在进行的飞行任务控制程序。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能去检查一下叉子和热狗是否落在了沙发上吗？\nresponse: ", "response": "叉子; 热狗; 沙发."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问现在立即去床边找到那只猫和它的笔记本电脑可以吗？\nresponse: ", "response": "猫; 笔记本电脑; 床."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右转弯，然后左侧移动75厘米，接着下降六十厘米，随后可以左边移动二十厘米吗，之后后面可能右东西，可以掉头看看吗，紧接着为了确保无人机位置，请向左移动三十厘米，最后让无人机停在地面上。\nresponse: ", "response": "Missing turn_right; move_left 75 cm; move_down 60 cm; move_left 20 cm; turn_left 180 degrees; move_left 30 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，开始执行任务，然后让无人机左转一百八十度，观察后方，接着无人机请下降五十厘米。\nresponse: ", "response": "take_off; turn_left 180 degrees; move_down 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地避免寻找雪碧。\nresponse: ", "response": "雪碧."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动任务以精确掌控飞行器的操作流程。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去找到那把锋利的剪刀、美味的蛋糕和精致的酒杯吧！\nresponse: ", "response": "剪刀; 蛋糕; 酒杯."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please initiate the control and search task for the drone.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the cup, banana, and tennis racket! It's like looking for a needle in a haystack, but I know you can do it!\nresponse: ", "response": "cup; banana; tennis racket."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the existing flight control task list for the drone.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the oven, remote, and toaster!\nresponse: ", "response": "oven; remote; toaster."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 为了开始任务，请让无人机起飞，然后无人机左转一百八十度，掉头，接着后面三十厘米处可能会有东西，随后后退一百五十厘米，调整位置，检查后方的情况；请向右移动五十厘米来避开，紧接着使无人机前进，之后无人机向前移动三十厘米，确认前方是否有障碍物，随后无人机能否向上飞行八十厘米，以便更好地查看周围环境；第三步，无人机向前飞行二十厘米，接着无人机下移四十厘米，最后无人机前移六十厘米以检查前方情况，随后往左飞行一百厘米。\nresponse: ", "response": "take_off; turn_left 180 degrees; move_back 70 cm; move_back 150 cm; move_right 50 cm; Missing move_forward; move_forward 30 cm; move_up 80 cm; move_forward 20 cm; move_down 40 cm; move_forward 60 cm; move_left 100 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 权威地询问，这把勺子是否在那辆火车附近？\nresponse: ", "response": "勺子; 火车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机飞到空中，前方不清楚，前进，然后后退五十厘米，接着无人机后退二十厘米，随后无人机能否下降五十厘米，紧接着无人机，请后退两百厘米，之后向右移动二十厘米，接下来向右一米，第二左边移动四十厘米，最后现在让无人机完成降落程序。\nresponse: ", "response": "take_off; Missing move_forward; move_back 50 cm; move_back 20 cm; move_down 50 cm; move_back 200 cm; move_right 20 cm; move_right 1 m; move_left 40 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立刻寻找汽车。\nresponse: ", "response": "汽车."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Consider resuming the previously suspended control and navigation operations with meticulous attention to the drone's environmental awareness and operational parameters.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Seek forth with grace and purpose; find the dog, the snowboard, and the bottle.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Stop the sound system from playing the current music and switch to a podcast.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You might consider resuming the control and search operation that was previously paused.\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the snowboard and locate the knife while also identifying the carrot.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head over to the dining table and see if you can spot that coldrex, will ya?\nresponse: ", "response": "coldrex; dining table."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您暂时停下当前正在执行的搜寻任务，好吗？这将帮助我们更好地调整进程。谢谢您的配合！\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sprite in the refrigerator.\nresponse: ", "response": "sprite; refrigerator."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调整音乐播放器的音量至70%。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: How about you kick off the control and search task?\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 快去找找花瓶和人，还有那边的热狗和杯子呢？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请向左移动五十厘米以避开障碍，然后前方有目标，前进一米，接着将无人机降落一米，随后如果无人机向左移动一百五十厘米，能更清楚地看到左侧的环境，最后无人机降落在指定区域。\nresponse: ", "response": "move_left 50 cm; move_forward 1 m; move_down 1 m; move_left 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Don't just hover there, search for the handbag and the biscuit.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机起飞到空中，然后无人机飞得太高了，请下降，接着向右移动七十厘米，随后请让无人机向后移动两米，紧接着前面不清楚，向前移动两米，之后为了更好的视角，请将无人机左转，紧接着无人机请飞行到前方，最后我需要无人机下降一米，请执行。\nresponse: ", "response": "take_off; Missing move_down; move_right 70 cm; move_back 2 m; move_forward 2 m; Missing turn_left; Missing move_forward; move_down 1 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续之前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing off the ground! Then turn to face the sun 120 degrees. After that, turn it left 60 degrees as fast as you can. Next, adjust the drone's position to the right. Following that, let’s turn it right by 45 degrees. I’m thrilled to see how it handles this turn! Immediately after, move to the left by 12 inches. Then move forward for 2 meters, nice and steady. After that, Okay, let's get serious, climb 6 feet. Subsequently, rotate 180 degrees to the right. In the end, initiate the landing.\nresponse: ", "response": "take_off; turn_right 120 degrees; turn_left 60 degrees; Missing move_right; turn_right 45 degrees; move_left 12 in; move_forward 2 m; move_up 6 ft; turn_right 180 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的控制和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it suggested that the iodophor be located?\nresponse: ", "response": "iodophor."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: How about not looking for the cat?\nresponse: ", "response": "cat."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去搜火车旁边的厕所和网球拍吧，时间不等人！\nresponse: ", "response": "火车; 厕所; 网球拍."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go right 5 cm, then retreat the drone by 4 feet, next fly it forward by 2 meters, after that fly upward 60 centimeters, subsequently rotate the drone 360 degrees to the left, afterwards fly backward a few feet, following that go backward 100 cm, and in the end drop it down 10 inches.\nresponse: ", "response": "move_right 5 cm; move_back 4 ft; move_forward 2 m; move_up 60 cm; turn_left 360 degrees; Missing move_back; move_back 100 cm; move_down 10 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要不咱们先停下来当前的控制和搜寻任务？\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动操控之旅，开启探索之程。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone right 2 inches, then move leftwards 70 in, next move it forward 7 meters, afterwards rise up, following that rise now, subsequently make the drone turn left, thereafter shift right by 1 meter, and finally turn the drone 90 degrees left.\nresponse: ", "response": "move_right 2 in; move_left 70 in; move_forward 7 m; Missing move_up; Missing move_up; Missing turn_left; move_right 1 m; turn_left 90 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Erase the present command and initiate a new search operation.\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 为何不立即搜寻领带、背包和瓶子，但避开那辆汽车？\nresponse: ", "response": "领带; 背包; 瓶子; 汽车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please start the flight control task for the drone, and ensure everything is set for a smooth operation?\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey there! Could you kindly check for a surfboard, toilet, keyboard, and cell phone? Thanks a bunch!\nresponse: ", "response": "surfboard; toilet; keyboard; cell phone."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused search task immediately.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In the midst of the ongoing object search task, would it not be prudent to consider pausing the operation momentarily?\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: To be guided like a silent breeze, the airplane is tasked to scour the expanse for a microwave, ensuring no stone is left unturned until the cake and toothbrush are also within its vigilant gaze.\nresponse: ", "response": "airplane; microwave; cake; toothbrush."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Execute a lateral displacement of 5 feet to the right, then move to the right, afterwards slowly move back 30 inches, next shift the drone leftwards by 75 centimeters, following that rotate counterclockwise 60 degrees, subsequently shift right by 3 meters, immediately after descend the drone 7 inches, then fly backward 20 feet, later go left 3 feet slowly, and in the end land it gently.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降一百厘米，然后请将无人机左移四十厘米，感激不尽，接着向左偏移一米，寻找目标物品，之后后方有什么，最后无人机可以降落在指定地点吗。\nresponse: ", "response": "move_down 100 cm; move_left 40 cm; move_left 1 m; turn_left 180 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current object search task list must be cleared.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机现在起飞，然后无人机需要向左平移，接着向右移动一百五十厘米，之后后退五十厘米以调整位置，随后迅速下降一米，紧接着前进二十厘米，继续任务，再后来左转二十度，检查左侧情况，之后倒退一米，请让无人机向上飞，紧接着无人机现在需要调整方向，请向右转动七十度，最后请向后退一百五十厘米。\nresponse: ", "response": "take_off; Missing move_left; move_right 150 cm; move_back 50 cm; move_down 1 m; move_forward 20 cm; turn_left 20 degrees; move_back 1 m; Missing move_up; turn_right 70 degrees; move_back 150 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动任务列表中当前搜索目标的清空程序。\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以优雅的姿态，在这广袤的空间中探寻那只与摩托车相伴的灵巧之猫。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you kindly look for the bird and the kite?\nresponse: ", "response": "bird; kite."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即执行起飞动作，然后左转一百二十度，我们需要查看左侧的细节。紧接着，请将无人机提升；无人机上升三百五十厘米之后，再请将无人机左侧飞行。接着前方视线不清，向前移动两百厘米；前进一米之前，移动到右侧。随后让无人机顺时针旋转，然后无人机现在的高度需要调整，请下降七十五厘米。最后，在下降二十厘米后，可以降落了吗？\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Restart the formerly halted guidance and hunt mission!\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在能否起飞，然后无人机目前离地面过高，请下降一百五十厘米，之后让它降落。\nresponse: ", "response": "take_off; move_down 150 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the vase near the sink and then locate the clock.\nresponse: ", "response": "vase; sink; clock."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and resume the object search task that was previously paused; your drone is ready to assist you with this exciting mission!\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control process and commence the search task, as timing is crucial for optimal results.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 启动无人机的起飞程序，然后无人机向左转弯，接着往左飞行。之后，无人机能否向上飞行八十厘米，以便更好地查看周围环境；请升高五十五厘米；请将无人机上升一百二十厘米，以便获得更高的视角。紧接着，将无人机右转五十度，随后向左移动六十厘米，准备绕过障碍物。最后，无人机离地面太高了，请下降。\nresponse: ", "response": "take_off; Missing turn_left; Missing move_left; move_up 80 cm; move_up 55 cm; move_up 120 cm; turn_right 50 degrees; move_left 60 cm; Missing move_down."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then, getting impatient, fly to the right by 30 cm, and afterwards, it is time to land.\nresponse: ", "response": "take_off; move_right 30 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往床边，紧急地找到牙刷和雨伞。\nresponse: ", "response": "牙刷; 雨伞; 床."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing aerial vehicle operation immediately.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please clear the current control and search tasks to ensure optimal drone operation.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hold up on the current flight control task for a sec.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Elevate, then drop it down to the ground afterwards.\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's kick off the object search task!\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Dive down 3 feet, then lower the drone 75 inches, afterwards move forward 100 inches quickly, next let's get the drone to descend 1.2 meters, subsequently drop it down 50 cm, after that descend it a little, following that fly right around the corner 10 feet, immediately after move back 2 feet, and in the end I need the drone to rise up 20 inches.\nresponse: ", "response": "move_down 3 ft; move_forward 100 in; move_back 2 ft; move_down 75 in; move_right 10 ft; move_down 1.2 m; move_down 50 cm; Missing move_down; move_up 20 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly it forward by 2 meters, then drift right like you're dodging an obstacle, 5 meters, and afterwards bring it to the ground gently.\nresponse: ", "response": "move_forward 2 m; move_right 5 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 哇，真是太棒了，现在我们来启动这次精彩的飞行任务吧！\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move forward 5 meters, then turn left by 60 degrees, afterwards turn the drone left by 30 degrees, next I want this drone to fly back 1 meter, subsequently please make the drone go down now, after that retract the drone a bit, then turn left 30 degrees, later raise it 20 inches, following that go backwards 30 inches, thereafter rotate clockwise 45 degrees, immediately after flying backward a few feet, in the end can you land it gently?\nresponse: ", "response": "move_forward 5 m; turn_left 60 degrees; turn_left 30 degrees; move_back 1 m; Missing move_down; Missing move_back; turn_left 30 degrees; move_up 20 in; move_back 30 in; turn_right 45 degrees; Missing move_back; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: \"Spoon to be found quickly, please.\"\nresponse: ", "response": "spoon."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please don't forget to check for the remote and the cell phone, but let's avoid looking for the tv, shall we?\nresponse: ", "response": "remote; cell phone; tv."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在请让无人机起飞，然后请升高，接着请让无人机向后行进，之后右侧平移三十五厘米，紧接着让无人机向后移动九十厘米，随后下降八十厘米，接近地面，准备进行详细检查。在那之后，无人机下降六十厘米，然后无人机升高六十厘米，接下来请让无人机向左转弯，最后请让无人机在这个位置降落。\nresponse: ", "response": "take_off; Missing move_up; Missing move_back; move_right 35 cm; move_back 90 cm; move_down 80 cm; move_down 60 cm; move_up 60 cm; Missing turn_left; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在晨光中轻轻探寻那角落里的烤面包机与碘伏，务必让它们的踪迹在这温柔的寻找中显露无疑。\nresponse: ", "response": "烤面包机; 碘伏."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please check the refrigerator for a bottle, then head over to the skis and ensure the remote is nearby.\nresponse: ", "response": "refrigerator; bottle; skis; remote."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您考虑暂时停止当前的控制与搜索任务，以免造成不便。\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 现在暂停任务怎么样？这样我们可以重新调整策略。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Could you please take off, then move forward, next move right a bit before moving down by 2 meters, afterwards rotate it to the right a bit, subsequently move back a short distance, following that, move right for 10 feet, after that, lower altitude and move down 4 meters, immediately after which, move the drone back 50 centimeters, then lean left, in the end bring it in for landing.\nresponse: ", "response": "Missing move_right; move_down 2 m; Missing turn_right; Missing move_back; move_right 10 ft; move_down 4 m; Missing move_down; move_back 50 cm; Missing move_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate left 180 degrees, then drop it down 2.5 meters, afterwards hover to the right by 10 meters, and finally turn clockwise 90 degrees.\nresponse: ", "response": "turn_left 180 degrees; move_down 2.5 m; move_right 10 m; turn_right 90 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the control and exploration task with enthusiasm!\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise up 5 meters, then begin landing procedure.\nresponse: ", "response": "move_up 5 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请启动无人机的起飞程序，然后上升一百五十厘米，接着请将无人机右移七十厘米，随后向右移动一百厘米，为了解决当前的视角问题，请再次上升七十五厘米，最后无人机在这儿降落吧。\nresponse: ", "response": "take_off; move_up 150 cm; move_right 70 cm; move_right 100 cm; move_up 75 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please proceed to resume the previously suspended aerial vehicle operation, kindly ensuring all systems are ready for continuation.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's fly forward 15 feet, then bring it down gently by 1 meter, afterwards shift right, 3 feet, and subsequently make the drone climb 5 inches.\nresponse: ", "response": "move_forward 15 ft; move_down 1 m; move_right 3 ft; move_up 5 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go up 3 feet, then make the drone climb 5 inches, next shift left 2 meters to avoid the building, afterwards go forward 7 inches, subsequently ascend 1 meter, following that advance 10 cm, later move it forward 100 inches, after that maneuver to the right by 100 centimeters, and finally move it forward 100 inches.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请按照指定顺序搜索红绿灯和运动球。\nresponse: ", "response": "红绿灯; 运动球."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not commence the object search task yet.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off and go straight, then fly to the left for 10 inches, after that circle left by 45 degrees, subsequently move the drone left 5 feet.\nresponse: ", "response": "take_off; move_left 10 in; turn_left 45 degrees; move_left 5 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the biscuit and the tennis racket, will ya?\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在能否起飞，然后请向左移动七十五厘米，寻找目标物体，接着让无人机向后退五十厘米，之后无人机下降五十厘米以调整高度；随后让无人机向左转一百八十度，掉头飞行，紧接着无人机向右调整八十厘米，接下来将无人机右转五十度，然后无人机向右平移二十厘米；第二，请上升五十厘米，第三前方视线不清晰，向前移动一百厘米，随后无人机可以右转五十度吗，最后无人机右移一米，以绕过障碍物。\nresponse: ", "response": "take_off; move_left 75 cm; move_back 50 cm; move_down 50 cm; turn_left 180 degrees; move_right 80 cm; turn_right 50 degrees; move_right 20 cm; move_up 50 cm; move_forward 100 cm; turn_right 50 degrees; move_right 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the kite and snowboard!\nresponse: ", "response": "kite; snowboard."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for pizza, cup, car.\nresponse: ", "response": "pizza; cup; car."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 距离地面太高了，下降一百五十厘米是否足够，然后掉头飞行，接着右转一百度，调整无人机方向，随后向左飞行一百二十厘米，紧接着向右再靠近九十厘米，之后无人机左转二十度，最后无人机下降七十厘米以便着陆。\nresponse: ", "response": "move_down 150 cm; turn_right 180 degrees; turn_right 100 degrees; move_left 120 cm; move_right 90 cm; turn_left 20 degrees; move_down 70 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: First, turn left by 25 degrees. Next, head to the left. After that, shift further to the left. Then, go 6 inches more to the left. Following that, slide over to the right. Immediately after, fly the drone higher. In the end, initiate landing procedure.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何设计一个适合初学者的财务计划？\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly the drone downward 5 meters, then shift it to the left, after that shift right and can it descend, subsequently fly the drone downward again, but this time lower down only 75 cm, next go back 200 cm, afterwards fall back 2 meters, then move the drone back another 1.5 meters, following that take it to the left 15 inches, immediately after that shift right by 100 centimeters, thereafter shift it to the left again, and in the end descend to the ground level.\nresponse: ", "response": "move_down 5 m; Missing turn_right; Missing move_down; move_back 5 m; move_down 75 cm; move_back 200 cm; move_back 2 m; move_right 100 cm; Missing move_left; move_back 1.5 m; move_left 15 in; Missing turn_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否前往指定区域，使用传感器定位并报告餐桌的具体位置？\nresponse: ", "response": "餐桌."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请前往搜索飞盘、冰箱、披萨和沙发。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索勺子。\nresponse: ", "response": "勺子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Prepare for takeoff. Next, turn 15 degrees to the left, then could you please move the drone to the right? I’m feeling a bit unsure about its current position. Afterwards, rotate the drone 180 degrees to get a rear view, and finally, raise altitude a little.\nresponse: ", "response": "take_off; turn_left 15 degrees; Missing move_right; turn_right 180 degrees; Missing move_up."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start the object search task, please! It’s going to be a breeze!\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then descend 10 feet to land on the rooftop, after that drift to the right for 70 centimeters, next go forward 50 centimeters, afterwards make a left turn now, subsequently advance forward quickly 45 cm, following that turn to face the sun 120 degrees, immediately after turn right 90 degrees, then fly to the left 6 feet, and finally move forward by 8 inches.\nresponse: ", "response": "take_off; move_down 10 ft; move_right 70 cm; move_forward 50 cm; Missing turn_left; move_forward 45 cm; turn_right 120 degrees; turn_right 90 degrees; move_left 6 ft; move_forward 8 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control sequence and commence the search operation.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's get this thing off the ground! Then lift the drone upwards by 50 centimeters. Next, bring the drone down 0.5 meters. After that, rotate left by 75 degrees. Following that, fly to the right by 50 cm. Immediately after, turn the drone 45 degrees to the right. Thereafter, move forward past the parking lot 200 feet. Subsequently, I need this thing to go up right now, please! Next, go up now. In the end, move forward 5 centimeters.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Help me find the best spot in the park to watch the sunset.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Consider resuming the previously suspended control and navigation operations with meticulous attention to the drone's environmental awareness and operational parameters.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sandwich, laptop, carrot, and chair.\nresponse: ", "response": "sandwich; laptop; carrot; chair."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn on the rice cooker in the kitchen and set it to keep warm mode.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索家中车库的工具箱位置。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to search for the tv, fanta, apple, and horse.\nresponse: ", "response": "tv; fanta; apple; horse."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在可以执行起飞操作吗,然后使无人机向左转,接着调整到左侧位置，请向左移动七十五厘米,之后左边飞行七十厘米看看,随后为了绕过障碍物，请将无人机后退,紧接着可以让无人机往后退吗,后来向前移动一百二十厘米,接下来上升三十厘米，提高视角,然后现在离地面太远了，请下降一百五十厘米,最后向右飞行一百五十厘米。\nresponse: ", "response": "take_off; Missing turn_left; move_left 75 cm; move_left 70 cm; Missing move_back; Missing move_back; move_forward 120 cm; move_up 30 cm; move_down 150 cm; move_right 150 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向后移动九十厘米，然后后退五米，接着无人机向前飞行，随后无人机向右飞行一百厘米，最后无人机到达目标位置后请降落。\nresponse: ", "response": "move_back 90 cm; move_back 5 m; Missing move_forward; move_right 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否友好地去检查一下剪刀是否在公共汽车上，床旁边的手提包里有没有？\nresponse: ", "response": "剪刀; 公共汽车; 床; 手提包."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 就像唤醒沉睡中的雄鹰，继续之前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清理现有搜索目标的任务清单\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then make a landing.\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要继续之前详尽地暂停了的控制任务呢？\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the skateboard near the oven.\nresponse: ", "response": "skateboard; oven."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object search; success is just a step away.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: It is recommended that you suspend the ongoing control and search operations momentarily.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for microwave.\nresponse: ", "response": "microwave."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the biscuit, bus, and book with enthusiasm and positivity.\nresponse: ", "response": "biscuit; bus; book."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你友好地前往寻找摩托车，并在附近看看是否有书和风筝。\nresponse: ", "response": "摩托车; 书; 风筝."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请暂时中止当前的物体搜索任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let's go find the bowl and check out that traffic light, okay?\nresponse: ", "response": "bowl; traffic light."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机前方有障碍物，向前移动五十厘米以检查，然后左侧移动八十厘米，以避开障碍物，接着无人机上升到一米五的高度，随后无人机前方的路径被阻挡，请向前移动五十厘米以探测路径，紧接着无人机的视角受限，请向左转三十度，以便更好地观察左侧环境，之后请将无人机上升七十五厘米，紧接着左边飞行七十厘米看看，随后无人机向前飞行一百五十厘米，然后请将无人机后退一百厘米，紧接着请右转九十度，检查右侧情况，最后现在，请让无人机降落。\nresponse: ", "response": "move_forward 50 cm; move_left 80 cm; move_up 1.5 m; move_forward 50 cm; turn_left 30 degrees; move_up 75 cm; move_left 70 cm; move_forward 150 cm; move_back 100 cm; turn_right 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get ready and take off, then shift to the left before turning left a quarter turn.\nresponse: ", "response": "take_off; Missing move_left; turn_left 90 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please navigate through the area, carefully seeking the book nestled among the surroundings and the cell phone hidden within the landscape.\nresponse: ", "response": "book; cell phone."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议你先在餐桌附近看看，说不定雨伞就在那儿。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能找到那个人和面包吗？\nresponse: ", "response": "人; 面包."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the spoon.\nresponse: ", "response": "spoon."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请以详尽的方式恢复先前被暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off as soon as the sun rises, then go right 3 ft, after that go backward, next increase altitude, following that can you make the drone go left a little, afterwards tilt left 90 degrees, subsequently spin it left 60 degrees, and then swerve left 90 degrees, in the end get it on the ground.\nresponse: ", "response": "take_off; move_right 3 ft; Missing move_back; Missing move_up; Missing move_left; turn_left 90 degrees; turn_left 60 degrees; turn_left 90 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing control settings and initiate a new search task.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 向后退两百厘米，看看会发现什么，然后请无人机前进五十厘米以探查前方情况；让无人机向左转之后，无人机顺时针旋转一百八十度；紧接着，无人机能向右转四十五度吗？随后，无人机向上升高，接着命令无人机向前飞行；再后来，让无人机顺时针旋转四十度；最后，无人机向前飞行一米，目标就在前面，准备接近。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the wine glass.\nresponse: ", "response": "wine glass."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左移两百五十厘米，然后无人机右转四十度以获得更好视角，之后后方一定有东西，转个身看看，接着无人机前方似乎有目标，请向前移动一百厘米以接近目标，随后请向右移动五十厘米，紧接着左转，之后右侧可能有东西，帮我转过去看看，紧接着无人机可以右转五十度吗，最后无人机向前飞行。\nresponse: ", "response": "move_left 250 cm; turn_right 40 degrees; turn_left 180 degrees; move_forward 100 cm; move_right 50 cm; Missing turn_left; turn_right 90 degrees; turn_right 50 degrees; Missing move_forward."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，友好地请你去搜寻一下那条领带、一瓶感冒药和一些止疼药，还有别忘了看看那个手提包，怎么样？\nresponse: ", "response": "领带; 感冒药; 止疼药; 手提包."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please ensure that the current flight control task list is cleared?\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get it off the ground, then slide 60 centimeters to the right, after that turn 270 degrees to the right, subsequently turn the drone 90 degrees left to align with the road, next elevate to 15 feet high, afterwards fly it left 50 cm, and finally time to set it down.\nresponse: ", "response": "take_off; move_right 60 cm; turn_right 270 degrees; turn_left 90 degrees; move_up 15 ft; move_left 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向右移动二百厘米，然后前面不清楚，向前移动两米，接着无人机向左调整，随后前方有点模糊，向前移动两百五十厘米，请向左移动七十五厘米以调整到左侧位置；请向右边再移动，紧接着请将无人机上升一百厘米，看看右边的情况；之后请将无人机上升，无人机向左行进，升高二十厘米以调整观察角度，最后现在可以让无人机缓慢降落到地面。\nresponse: ", "response": "move_right 200 cm; move_forward 2 m; Missing move_left; move_forward 250 cm; move_left 75 cm; Missing move_right; move_up 100 cm; turn_right 90 degrees; Missing move_up; Missing move_left; move_up 20 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn on the refrigerator’s quick-freeze mode to quickly cool newly added items.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In the serene dance of the sky, gently coax the suspended quest for the elusive object back to life.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在沙发和长椅上找找，把手机和书都找到吧！\nresponse: ", "response": "手机; 书; 沙发; 长椅."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转三十度，观察左侧情况，然后请将无人机右移八十厘米，接着左转二十度，检查左侧情况，随后将无人机向下移动一百五十厘米，紧接着将无人机降落一米，请让无人机向上飞，最后无人机在这儿降落吧。\nresponse: ", "response": "turn_left 30 degrees; move_right 80 cm; turn_left 20 degrees; move_down 150 cm; move_down 1 m; Missing move_up; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and pick up where you left off with that object search, no rush, we've got this!\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找找可乐和遥控器吧！\nresponse: ", "response": "可乐; 遥控器."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 考虑到当前任务的需求，建议进行一项复杂的搜索操作，即首先定位至冰箱区域，随后沿着预设路径扩展至火车周边，以确保全面覆盖目标区域。\nresponse: ", "response": "冰箱; 火车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: In the realm of your immediate vicinity, seek out the sandwich that rests as if on a pedestal upon the couch, and simultaneously, let your gaze drift to the heavens in search of the kite that dances with the winds; not forgetting the subtle carrot that blends into the earth below.\nresponse: ", "response": "sandwich; couch; kite; carrot."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go left 2 feet, then drop down 10 cm, afterwards climb 18 inches, next turn the drone right by 90 degrees, after that push it forward, following that give me a twirl to the left, 45 degrees.\nresponse: ", "response": "move_left 2 ft; move_down 10 cm; move_up 18 in; turn_right 90 degrees; Missing move_forward; turn_left 45 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Immediately terminate the ongoing target acquisition sequence in the drone's mission control system.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 能让无人机向左飞五十厘米吗，然后右移七十五厘米，躲过那个障碍物，继续前行，接着无人机向后移动，随后将无人机右转五十度，最后现在请让无人机在指定地点降落。\nresponse: ", "response": "move_left 50 cm; move_right 75 cm; Missing move_back; turn_right 50 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 您能否前往搜索书、剪刀以及运动球，并将它们放置于水槽附近？\nresponse: ", "response": "书; 剪刀; 运动球; 水槽."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Erase the current lineup of object search tasks, like clearing a slate before sketching anew in the sky.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 真是太棒了，现在暂停所有的控制和搜寻任务吧！\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and take a moment to pause the current flight control task; you're doing great!\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以详尽的视角，建议性地指示搜索区域内的摩托车和狗，确保信息准确无误。\nresponse: ", "response": "摩托车; 狗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear the current search task list, making way for new adventures!\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找找看，止疼药在不在那辆卡车里？\nresponse: ", "response": "止疼药; 卡车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Should the ongoing target location activity be halted?\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Adjust the living room lights to warm yellow and lower the brightness.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: In your detailed exploration of the area, it is suggested that you meticulously locate and retrieve the dining table, ensuring along the way to also find the sports ball and the carrot, with the utmost authority and precision.\nresponse: ", "response": "dining table; sports ball; carrot."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Lift the veil from the present command, and embark upon a new quest with vigor and determination.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then climb up by 8 inches, afterwards ascend 1 meter.\nresponse: ", "response": "take_off; move_up 8 in; move_up 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off now, then spin left 45 degrees, afterwards bring it up 60 centimeters, and subsequently move back 2 feet.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应当暂停当前正在进行的搜寻任务？\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你先寻找酒杯，然后留意一下狗的位置。\nresponse: ", "response": "酒杯; 狗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最高效路径搜索并定位酒杯与水槽的位置。\nresponse: ", "response": "酒杯; 水槽."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 确认花园角落是否有需要修剪的树枝。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否让无人机现在起飞，然后将无人机旋转左边五十度，接着请上升两米，随后无人机向右转一百八十度，之后请前进七十厘米查看，紧接着下降四十厘米，随后请让无人机退后两米，接下来请将无人机下降六十厘米，减少高度，第二步左侧好像有东西，转动一下，最后无人机降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 让我们重新启动之前暂停的飞行任务吧，相信这次会更加顺利！\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您温柔地像春风拂面一样，去寻找那块藏着甜蜜记忆的饼干。\nresponse: ", "response": "饼干."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 以详尽且权威的方式启动飞行任务控制进程。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前目标检测任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, move back 30 inches, then drop down 10 cm. Next, fly forward quickly, about 40 cm. After that, rotate the drone to the left by 60 degrees. Following that, please move forward a little bit, I’m not quite sure where it is, and then fly forward some more. Subsequently, lower it down slowly, 70 inches. Thereafter, back up a little. Immediately after, adjust its position to the left. After that, move left by 2 feet. In the end, lower it down now.\nresponse: ", "response": "move_back 30 in; move_down 10 cm; move_forward 40 cm; turn_left 60 degrees; Missing move_forward; Missing move_forward; move_down 70 in; Missing move_back; Missing move_left; move_left 2 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously halted target search operation.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前操控飞行任务已被暂时停止。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that a cola awaits discovery?\nresponse: ", "response": "cola."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Given the ongoing navigation and surveillance operations, it might be advisable to momentarily suspend the current target acquisition process to ensure optimal system performance and prevent potential data overload.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的控制和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在周围区域仔细寻找一下，看看能不能发现那个热狗。\nresponse: ", "response": "热狗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最高效的方式定位并拍摄长颈鹿靠近水槽时的互动，真是太棒了！同时注意观察周围是否有猫的身影，务必确保画面清晰完整哦！\nresponse: ", "response": "长颈鹿; 水槽; 猫."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar like a hawk over the cola and cup, then glide silently toward the tv to scan for any signs.\nresponse: ", "response": "cola; cup; tv."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请允许我以最详尽的方式建议您，如同轻轻拂去桌面上的灰尘一般，清除当前的控制与搜寻任务。这不仅能让应用程序恢复到最初的清新状态，也是对后续操作的一种礼貌而有效的鼓励。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最优雅的姿态，探寻那遗落的碗，务必寻得它！\nresponse: ", "response": "碗."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 终止当前的控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get airborne, then rotate 90 degrees clockwise, propel it forward by 200 centimeters, next move up 20 inches, afterwards ascend 24 inches, and finally maneuver to the right.\nresponse: ", "response": "take_off; turn_right 90 degrees; move_forward 200 cm; move_up 20 in; move_up 24 in; Missing move_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the previously paused flight control task and continue your journey smoothly.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往汽车位置，然后向我报告是否发现了刀。\nresponse: ", "response": "汽车; 刀."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前方似乎有障碍物，向前移动一米，然后让它降落。\nresponse: ", "response": "move_forward 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search if there is any wildlife activity in the drone's captured area.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去寻找公共汽车旁的鸟和橙子，还有不远处的椅子吧。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please locate the scissors and frisbee near the tv with care and precision.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn the drone right by 45 degrees right away, then move left 7 feet, afterwards go down 6 meters, subsequently raise it by 0.8 meters, next proceed forward 70 centimeters steadily, following that shift right by 100 centimeters, and in the end, drone should descend immediately.\nresponse: ", "response": "turn_right 45 degrees; move_left 7 ft; move_down 6 m; move_up 0.8 m; move_forward 70 cm; move_right 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立刻找寻剪刀、滑板、碘伏和止疼药，快！\nresponse: ", "response": "剪刀; 滑板; 碘伏; 止疼药."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly back 3 meters, then fly backwards 150 centimeters, afterwards elevate to 15 feet high, next rotate the drone left by 30 degrees, immediately after that drop altitude 2 feet, subsequently ascend 24 inches, following that turn it left by 180 degrees, and in the end advance forward quickly 45 cm.\nresponse: ", "response": "move_back 3 m; turn_left 90 degrees; move_back 150 cm; move_up 15 ft; turn_left 30 degrees; move_down 2 ft; move_up 24 in; turn_left 180 degrees; move_forward 45 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即停止当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get in the air, then drone should descend 20 feet, after that fly the drone to the left for 200 cm, next bring the drone down 5 feet to get a closer look, subsequently move backward, and finally time to land.\nresponse: ", "response": "take_off; move_down 20 ft; move_left 200 cm; move_down 5 ft; Missing move_back; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 考虑到前方可能出现的情况，不建议在红绿灯附近搜索摩托车，这可能会带来不必要的麻烦。\nresponse: ", "response": "摩托车; 红绿灯."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向前移动五十厘米，然后为了调整视角，请右转，接着向右移动两百厘米，注意避开障碍物，随后上升一米，最后后退五十厘米，避开障碍物。\nresponse: ", "response": "move_forward 50 cm; Missing turn_right; move_right 200 cm; move_up 1 m; move_back 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否请您友好地确认一下，是否需要在厕所和人的附近搜索牙刷与钟呢？\nresponse: ", "response": "厕所; 牙刷; 钟; 人."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pick up where we left off in that object hunt.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Climb up 1 meter, then fly forward 72 inches, afterwards move the drone backward 1 meter, and finally bring it to the ground gently.\nresponse: ", "response": "move_up 1 m; move_forward 72 in; move_back 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请以温柔之手，轻拂去当前的控制与搜寻任务，让一切归于宁静。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please find the umbrella, carrot, bottle, and wine glass right away!\nresponse: ", "response": "umbrella; carrot; bottle; wine glass."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff right away, then move the drone to the left for 25 inches, afterwards perform a port-side drift for 50 centimeters.\nresponse: ", "response": "take_off; move_left 25 in; move_left 50 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能向右转四十五度吗，然后快点左移，接着无人机下降两百厘米，之后让无人机向后移动二百厘米，随后无人机上升，紧接着请将无人机左转，最后无人机可以进行降落。\nresponse: ", "response": "turn_right 45 degrees; Missing move_left; move_down 200 cm; move_back 200 cm; Missing move_up; Missing turn_left; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Launch the eagle's eye to scout for the target.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以开始起飞了吗，然后右移一百五十厘米，接着无人机下降一百五十厘米以调整高度，请将设备后退，随后左侧移动，向右移动两百五十厘米之后，请向左移动七十五厘米来调整到左侧位置，紧接着请将无人机上升五十厘米，谢谢，在这之后请让无人机向前飞行九十厘米，然后请让无人机前方移动八十厘米，检查前方是否有障碍物，接下来请无人机左转四十五度，这样可以得到更好的视角，随后向右转动，紧接着后退一百五十厘米，最后让它降落。\nresponse: ", "response": "take_off; move_right 150 cm; move_down 150 cm; Missing move_back; Missing move_left; move_right 250 cm; move_left 75 cm; move_up 50 cm; move_forward 90 cm; move_forward 80 cm; turn_left 45 degrees; Missing turn_right; move_back 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请问今天晚上会下雨吗？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Why don't you check for a bus, a biscuit, and a cola?\nresponse: ", "response": "bus; biscuit; cola."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate launch, then go to the left 2 meters, afterwards fly forward 72 inches, following that turn the drone left by 30 degrees, subsequently engage in an upward climb of 500 centimeters.\nresponse: ", "response": "take_off; move_left 2 m; move_forward 72 in; turn_left 30 degrees; move_up 500 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞操作现在可以开始吗，然后请让无人机下降到离地面五十厘米的高度，接着右侧再靠近十五厘米，之后左转一百二十度，我们需要查看左侧的细节，紧接着向左飞行两米，随后左边飞行一百厘米，我们要探索左侧的神秘区域，接下来无人机飞得太高了，请下降，最后现在，请让无人机降落。\nresponse: ", "response": "take_off; move_down 50 cm; move_right 15 cm; turn_left 120 degrees; move_left 2 m; move_left 100 cm; Missing move_down; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞吧，然后向左转动一圈，接着无人机向前飞行一米，目标就在前面，准备接近，随后向左侧移动二十五厘米以适应环境，紧接着无人机下降四十五厘米，之后把无人机往右移六十厘米，后来向右移动两米，接下来前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，最后下降一百五十厘米。\nresponse: ", "response": "take_off; turn_left 360 degrees; move_forward 1 m; move_left 25 cm; move_down 45 cm; move_right 60 cm; move_right 2 m; move_forward 20 cm; move_down 150 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的飞行任务列表被清除了。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the painkillers and the potted plant, then locate the cake and the horse.\nresponse: ", "response": "painkillers; potted plant; cake; horse."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右移动两百五十厘米，然后无人机前进一百厘米，接着无人机请右转五十度，随后无人机下降。\nresponse: ", "response": "move_right 250 cm; move_forward 100 cm; turn_right 50 degrees; Missing move_down."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Hey, could you put a pause on the current object hunt for the drone?\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动并执行搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off the drone, then climb up to 1 meter, and afterwards land this thing.\nresponse: ", "response": "take_off; move_up 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别去找什么剪刀了。\nresponse: ", "response": "剪刀."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请查找遥控器、牙刷、风筝和键盘。\nresponse: ", "response": "遥控器; 牙刷; 风筝; 键盘."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 哎呀，不妨暂时停下来，给正在执行的飞行任务按个暂停键吧！\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drop it 4 inches, then hover up 2 feet, afterwards push it forward, next drift rightwards, after that fly backwards 5 inches, subsequently fly straight ahead 1 meter, and finally shift the drone leftwards by 75 centimeters.\nresponse: ", "response": "move_down 4 in; move_up 2 ft; Missing move_forward; Missing move_right; move_back 5 in; move_forward 1 m; move_left 75 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate takeoff right away, then fall back 2 meters, afterwards move forward 5 centimeters, subsequently fly straight forward, next move to the right 200 inches, following that drop altitude 2 feet, immediately after turn it right 60 degrees, and in the end descend gently to land in the field.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 上升两米，然后右转三十度，保持方向，接着右边可能有目标，帮我转过去。\nresponse: ", "response": "move_up 2 m; turn_right 30 degrees; turn_right 90 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能否以最快速度找到猫、热狗和西兰花呢？\nresponse: ", "response": "猫; 热狗; 西兰花."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate lift-off, then shift the drone right 5 meters, afterwards take it left 4 inches, next tilt left 90 degrees, following that spin right, subsequently drone, descend to 8 feet, after that move up 12 inches.\nresponse: ", "response": "take_off; move_right 5 m; move_left 4 in; turn_left 90 degrees; Missing turn_right; move_down 8 ft; move_up 12 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左移两米，然后无人机左移，接着请让无人机下降到离地面五十厘米的高度，之后让无人机逆时针旋转，紧接着往左飞行一百厘米，随后设备需要向后移动一百五十厘米，最后右侧再靠近十五厘米。\nresponse: ", "response": "move_left 2 m; Missing move_left; move_down 50 cm; Missing turn_left; move_left 100 cm; move_back 150 cm; move_right 15 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去把那个热狗找出来。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去把那台电视找出来，就像猎狗寻找丢失的宝藏一样。\nresponse: ", "response": "电视."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请迅速找到刀和热狗。\nresponse: ", "response": "刀; 热狗."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 紧急地寻找自行车和勺子，这非常重要。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即恢复先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以暂时停止当前的飞行任务呢？\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将客厅的灯光亮度调整至柔光模式。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the cat urgently.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以鹰击长空之姿，搜寻这片雪域中的滑雪板。\nresponse: ", "response": "滑雪板."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在需要起飞，然后下降四十厘米，避开障碍物，最后无人机下降到地面。\nresponse: ", "response": "take_off; move_down 40 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Locate the science fiction books on the shelf and take down *The Three-Body Problem*.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降一百五十厘米，然后把无人机向右推二十五厘米，之后往后退九十厘米，接着前方视线模糊，向前移动，随后上升七十厘米以提高高度，最后无人机左转一百二十度。\nresponse: ", "response": "move_down 150 cm; move_right 25 cm; move_back 90 cm; Missing move_forward; move_up 70 cm; turn_left 120 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 让我们一起清空当前的目标搜索任务列表吧，加油！\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Come down 5 meters, then bring the drone down 10 centimeters, afterwards move it straight ahead, next shift to the right 2 meters, following that slowly move back 30 in, and finally, feeling lazy, land it now.\nresponse: ", "response": "move_down 5 m; move_down 10 cm; move_back 30 in; move_right 2 m; Missing move_forward; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞，准备工作，然后向右转二十度，接着向前移动一百二十厘米，随后左边移动二十厘米，紧接着左转六十度，检查左侧情况，请将无人机顺时针旋转，之后无人机请向前飞行一米，紧接着请右转五十度，以便调整方向，随后右移七十五厘米，躲过那个障碍物，继续前行，然后无人机下降七十厘米以便着陆，最后左边飞行一百厘米，我们要探索左侧的神秘区域。\nresponse: ", "response": "take_off; turn_right 20 degrees; move_forward 120 cm; move_left 20 cm; turn_left 60 degrees; Missing turn_right; move_forward 1 m; turn_right 50 degrees; move_right 75 cm; move_down 70 cm; move_left 100 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the oven, backpack, clock, and frisbee efficiently, ensuring each item is located with precision.\nresponse: ", "response": "oven; backpack; clock; frisbee."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the cup.\nresponse: ", "response": "cup."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then move back 30 inches, after that bring it left 4 feet.\nresponse: ", "response": "take_off; move_back 30 in; move_left 4 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请以详尽的操作恢复先前已暂停的搜寻物体任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Wipe the slate clean on that object hunt, buddy.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly downwards, then retreat back 120 cm. Next, let's bring it down gently, maybe 30 inches. After that, rotate clockwise 180 degrees. Following that, fly down a bit, before going ahead 40 inches. Subsequently, getting impatient, fly to the right by 30 cm. Immediately after, drift right, and then spin it around like it's dancing. Thereafter, lower it by 50 cm.\nresponse: ", "response": "Missing move_down; move_back 120 cm; move_down 30 in; turn_right 180 degrees; Missing move_down; move_forward 40 in; move_right 30 cm; Missing move_right; turn_right 360 degrees; move_down 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the toilet, cola, iodophor, and bench!\nresponse: ", "response": "toilet; cola; iodophor; bench."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被建议去探索并定位那静默如山的冰箱与稳重似石的行李箱。\nresponse: ", "response": "冰箱; 行李箱."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 嘿，先别急，咱们暂时停一下手头的控制和搜寻任务，好吗？\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate 90 degrees clockwise, then drift right.\nresponse: ", "response": "turn_right 90 degrees; Missing move_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请启动无人机，然后请让无人机向后移动二百厘米，接着右侧可能有东西，帮我转过去看看，之后无人机，请前进七十厘米，随后上移，紧接着向右转，向前移动一米，如果可以，请向左移动三十厘米，随后移动五十厘米向左，无人机右转九十度，重新调整方向，紧接着请往后移动，然后无人机右移一米，最后现在开始降落。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the banana, car, and mouse with precision and care.\nresponse: ", "response": "banana; car; mouse."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, rotate 90 degrees clockwise, then tilt the drone to the right by 90 degrees, next move left 25 centimeters, afterwards turn the drone left by 45 degrees.\nresponse: ", "response": "turn_right 90 degrees; move_left 25 cm; turn_right 90 degrees; turn_left 45 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即停止当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机立即起飞，然后无人机能否下降五十厘米，接着命令无人机向前飞行，之后右边看看，转过去，紧接着无人机上升九十厘米，随后请将无人机左侧飞行，再后来左侧移动八十厘米，以避开障碍物，接下来转动无人机四十五度左，之后倒退一米，紧接着无人机后退一百五十厘米，以便观察后方，随后无人机前进九十厘米，接着无人机飞得太高了，请下降六十厘米，紧接着将无人机左转五十度，观察左侧情况，最后现在准备让无人机降落。\nresponse: ", "response": "take_off; move_down 50 cm; Missing move_forward; turn_right 90 degrees; move_up 90 cm; Missing move_left; move_left 80 cm; turn_left 45 degrees; move_back 1 m; move_back 150 cm; move_forward 90 cm; move_down 60 cm; turn_left 50 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 前方有点不清楚，向前移动；然后无人机现在需要调整方向，请向右转动七十度；接着升高六十厘米，让无人机能看到更广的范围；随后往下移动；紧接着无人机向前飞行一米，目标就在前面，准备接近；之后无人机提升；紧接着前进九十厘米；随后无人机前方可能有物体，请向前移动五十厘米以检查；紧接着距离地面太高了，下降一百五十厘米是否足够；然后请将无人机右移两百五十厘米；紧接着无人机下降五十厘米以调整高度；最后无人机到达目标位置后请降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能否立即起飞，然后向前移动一米，接着向前飞行五十厘米，随后设备需要向后移动一百五十厘米，紧接着飞行到前面一米处，之后无人机向左移动四十五厘米；上扬，请注意这个动作虽然标记为缺失，但它应该被理解为存在的；紧接着无人机当前的高度太低，请向上飞行一百五十厘米，然后无人机现在的高度需要调整，请下降七十五厘米，随后升高六十厘米，接着向右移动两百厘米，注意避开障碍物，最后无人机，请前进七十厘米，之后让无人机下降一米。\nresponse: ", "response": "take_off; move_forward 1 m; move_forward 50 cm; move_back 150 cm; move_forward 1 m; move_left 45 cm; Missing move_up; move_up 150 cm; move_down 75 cm; move_up 60 cm; move_right 200 cm; move_forward 70 cm; move_down 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 恢复先前已暂停的目标搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请先向后移动二百厘米，之后无人机现在离地面太远了，请下降一百厘米以调整高度，接着右边看看，转过去，随后右侧再靠近十五厘米，紧接着无人机向左行进，后来无人机向左调整，最后无人机上升一百五十厘米。\nresponse: ", "response": "move_back 200 cm; move_down 100 cm; turn_right 90 degrees; move_right 15 cm; Missing move_left; Missing move_left; move_up 150 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在检查完水槽后，请务必细致地寻找手提包，并确保周围没有遗漏，尤其是靠近马的地方。\nresponse: ", "response": "水槽; 手提包; 马."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and start the control and search task.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: With utmost precision and grace, endeavor to locate the laptop, which may be nestled near the truck, as well as the potted plant that could be in its vicinity.\nresponse: ", "response": "laptop; truck; potted plant."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您继续之前暂停的物体搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机右移一百五十厘米，然后右边转四十五度，给右侧一个惊喜，之后无人机右侧视角受限，请右转三十度以获得更好视角，紧接着让无人机向后移动一米五，随后向右飞行一百二十厘米，接着我感觉左边有点异常，调整一下方向，最后无人机应该在这里降落。\nresponse: ", "response": "move_right 150 cm; turn_right 45 degrees; turn_right 30 degrees; move_back 1.5 m; move_right 120 cm; turn_left 90 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您清空当前正在搜索的目标任务列表。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out that control and start a fresh search task, you got this!\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: veer left 30 degrees\nresponse: ", "response": "turn_left 30 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么银河系的形状是一个旋涡状？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否帮我找一下花瓶和长颈鹿？\nresponse: ", "response": "花瓶; 长颈鹿."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search task now—why wait?\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请启动无人机，然后请让无人机向后移动二百厘米，接着右侧可能有东西，帮我转过去看看，之后无人机，请前进七十厘米，随后上移，紧接着向右转，向前移动一米，如果可以，请向左移动三十厘米，随后移动五十厘米向左，无人机右转九十度，重新调整方向，紧接着请往后移动，然后无人机右移一米，最后现在开始降落。\nresponse: ", "response": "take_off; move_back 200 cm; turn_right 90 degrees; move_forward 70 cm; Missing move_up; Missing turn_right; move_forward 1 m; move_left 30 cm; move_left 50 cm; turn_right 90 degrees; Missing move_back; move_right 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find if there are enough spare seasoning bottles on the kitchen counter.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn left a bit, then move right for 10 feet.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not fail to locate the bread.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please check if the bowl is somewhere near the skis or perhaps under the snowboard, and what about the airplane?\nresponse: ", "response": "bowl; skis; snowboard; airplane."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，去找到那个烤面包机吧。\nresponse: ", "response": "烤面包机."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Launch the drone, then go up a bit, afterwards fly back 3 meters, next commence a vertical descent of 6 feet, subsequently bring the drone back 2 feet, following that move left 25 centimeters, after that go to the right side.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please resume the previously paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Temporarily suspend the ongoing object detection sequence.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please do not fail to search for the toaster and the cake.\nresponse: ", "response": "toaster; cake."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: In the vast tapestry of the sky, consider weaving through the air to locate the elusive thread of a tie, as if chasing a whisper of fabric on the wind.\nresponse: ", "response": "tie."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地恢复先前暂停的控制与搜寻任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 让我们一起清空当前的控制和搜寻任务，迈向新的探索吧！\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Ugh, just take off! Then fly to the left 6 feet. After that, let's do a little spin to the right, 360 degrees! Next, fly right 1 foot, then bank right 2 meters. Following that, rotate 90 degrees to the left. Immediately after, rotate right side. In the end, step back.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左飞七十厘米，然后让无人机降落吧。\nresponse: ", "response": "move_left 70 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被命令去探索的地方，叉子和牙刷如同迷失的针一般等待着被细心发现。\nresponse: ", "response": "叉子; 牙刷."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off into the blue sky, then rotate the drone left, after that turn right by 90 degrees, subsequently increase altitude, next fly it left 50 cm, immediately after that descend 10 feet.\nresponse: ", "response": "take_off; Missing turn_left; turn_right 90 degrees; Missing move_up; move_left 50 cm; move_down 10 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续之前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务将继续执行之前被暂停的搜寻物体的操作。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you check under the couch for the scissors?\nresponse: ", "response": "scissors; couch."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在天空的画卷中寻找那只飞翔的风筝。\nresponse: ", "response": "风筝."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the once-paused quest for mastery in your control and exploration, embracing the journey with renewed vigor.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，去检查下甜甜圈和盆栽植物那边的情况，行吗？\nresponse: ", "response": "甜甜圈; 盆栽植物."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能不能赶紧去找找那辆火车和旁边的叉子？\nresponse: ", "response": "火车; 叉子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift right a bit, then ascend 1 meter, after that propel it forward by 200 centimeters, next commence a forward advance of 12 feet, subsequently lift it up 80 cm, following that elevate up 2.5 m, afterwards tilt left 90 degrees, later please move back by 15 centimeters, and finally could you turn it right by 90 degrees?\nresponse: ", "response": "Missing move_right; move_up 1 m; move_forward 200 cm; move_forward 12 ft; move_up 80 cm; move_up 2.5 m; Missing move_down; turn_left 90 degrees; move_back 15 cm; turn_right 90 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Pull it back 75 cm, then let's descend by 50 centimeters.\nresponse: ", "response": "move_back 75 cm; move_down 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你温和而坚定地去寻找一下遥控器和刀吧。\nresponse: ", "response": "遥控器; 刀."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Glide over to the sink, my sky-bound scout, and give it a thorough once-over, ensuring not a detail is missed.\nresponse: ", "response": "sink."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 以正式、紧急且带有建议性及比喻的风格改写如下：\n\n\"请即刻按下应用程序中的暂停键，终止正在进行的操作与探索任务，犹如及时勒住疾驰的马缰，以免发生不可预知的风险。\"\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在公共汽车周围寻找冲浪板和键盘。\nresponse: ", "response": "冲浪板; 键盘; 公共汽车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 是否能找到猫，然后查看卡车和公共汽车周围的情况呢？\nresponse: ", "response": "猫; 卡车; 公共汽车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Erase the existing mission queue for the unmanned aerial vehicle's flight control system.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么某些鸟类在冬天会迁徙？\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly straight ahead, then give me a right turn, 45 degrees, next move backward 3 feet, afterwards go left 12 inches, following that go down 3 feet, subsequently bank right by 4 feet, later fly the drone forward 10 feet, then move right by 100 centimeters, and in the end elevate the drone 3 meters.\nresponse: ", "response": "Missing move_forward; turn_right 45 degrees; move_back 3 ft; move_left 12 in; move_down 3 ft; move_right 4 ft; move_forward 10 ft; move_right 100 cm; move_up 3 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在雅致的书房中探寻那遗落于时光之中的微波炉、静默站立角落的雨伞，以及轻轻诉说岁月流逝的钟。\nresponse: ", "response": "微波炉; 雨伞; 钟."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时搁置手头正在操控的飞行任务，宛如让疾风中的风筝稍作停留。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先，无人机是否可以进行起飞操作；之后，现在请让无人机在指定地点降落。\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请优雅地终止当前的操作并启动搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: It is recommended that you pause the ongoing object search operation.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问您能否确认下，前方的人和火车是否安全无恙？\nresponse: ", "response": "人; 火车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 任务开始时，请无人机起飞，然后向左侧移动，接着无人机需要向左飞行五十厘米，之后后退，紧接着可以让无人机向左转五十度，随后提升，最后前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，第二让无人机前进七十五厘米。\nresponse: ", "response": "take_off; Missing move_left; move_left 50 cm; Missing move_back; turn_left 50 degrees; Missing move_up; move_forward 20 cm; move_forward 75 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please embark on a quest to seek out the skateboard, with grace and determination.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否帮我们取消一下当前的任务并开始搜索呢？\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往搜寻火车。\nresponse: ", "response": "火车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 能否请无人机下降五十厘米，然后视角不是很好，可以往上飞行三十厘米吗，接着请将无人机向右移动六十厘米，随后无人机向后移动二百厘米，紧接着向右飞行八十五厘米，调整视角，请向右边再移动，最后无人机可以降落在指定地点吗。\nresponse: ", "response": "move_down 50 cm; move_up 30 cm; move_right 60 cm; move_back 200 cm; move_right 85 cm; Missing move_right; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以进行起飞操作，然后前方有障碍物，向前移动两米，接着请将无人机向左旋转九十度，以便能够更好地观察左侧的环境，随后向右移动五十厘米，避开障碍物，紧接着左边移动四十厘米，以调整位置，之后把无人机降落一米，第二步是无人机向后退两百厘米，最后让无人机现在降落。\nresponse: ", "response": "take_off; move_forward 2 m; turn_left 90 degrees; move_right 50 cm; move_left 40 cm; move_down 1 m; move_back 200 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The previously paused control and search task should be resumed, ensuring meticulous attention to detail throughout the process.\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: It is imperative that you initiate the flight control task with utmost immediacy, ensuring the seamless operation of the aerial vehicle.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused control and search operations with confidence, ensuring seamless continuation of your mission.\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请开始搜索物体的任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机往后移动，然后无人机掉头看看后方；右侧可能有东西，帮我转过去看看；接着，请让无人机向前飞行九十厘米；前方的目标可能需要更近的观察，请让无人机向前移动二十厘米；随后，无人机现在的方向可能不对，请向右转动九十度以调整方向；左转三十度，调整方向；请让无人机向左移动五十厘米；然后让无人机升高五十厘米，便于查看全景；向右侧移动四十厘米；紧接着，向右转弯；最后，让无人机停在地面上。\nresponse: ", "response": "Missing move_back; turn_right 180 degrees; turn_right 90 degrees; move_forward 90 cm; move_forward 20 cm; turn_right 90 degrees; turn_left 30 degrees; move_left 50 cm; move_up 50 cm; move_right 40 cm; Missing turn_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请搜寻一下披萨、雪碧、杯子和钟吧，鼓励地完成任务哦。\nresponse: ", "response": "披萨; 雪碧; 杯子; 钟."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请勿在水槽附近放置雨伞，并避免在公共汽车上携带胡萝卜。\nresponse: ", "response": "水槽; 雨伞; 公共汽车; 胡萝卜."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend 24 inches, then move it 200 centimeters forward, after that bring it lower by 20 inches, and subsequently go left 3 feet.\nresponse: ", "response": "move_down 24 in; move_forward 200 cm; move_down 20 in; move_left 3 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在找到止疼药和碘伏之前，别让人靠近那块滑板，真是麻烦不断啊。\nresponse: ", "response": "止疼药; 碘伏; 滑板; 人."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is it not essential to ascertain whether the suitcase is adjacent to the refrigerator or if the wine glass has been left on the couch?\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否友好地前往搜索区域，先找到红绿灯，接着寻找可乐，然后是三明治，最后定位网球拍的位置呢？\nresponse: ", "response": "红绿灯; 可乐; 三明治; 网球拍."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for painkillers, then locate an apple.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地避开障碍，尽量不要让搜寻过程出现不愉快，去寻找那个行李箱。\nresponse: ", "response": "行李箱."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the car immediately.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Embark on a quest to seek out the elusive coldrex, hiding perhaps near the sprawling bus or nestled close to a forgotten bottle, with the grace and precision of a hawk scanning the horizon for its prey.\nresponse: ", "response": "coldrex; bus; bottle."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快点起飞，然后我感觉右边可能会有，接着无人机向前移动三十厘米，确认前方是否有障碍物，之后向左飞行一百二十厘米，紧接着向前飞行七十八厘米，随后右转七十五度，检查右侧情况，再接着无人机左转一百二十度，之后前进二十厘米，继续任务，第二右边转四十五度，给右侧一个惊喜，最后下降两米。\nresponse: ", "response": "take_off; turn_right 90 degrees; move_forward 30 cm; move_left 120 cm; move_forward 78 cm; turn_right 75 degrees; turn_left 120 degrees; move_forward 20 cm; turn_right 45 degrees; move_down 2 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应当恢复先前已暂停的物体搜索任务？\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往寻找公共汽车。\nresponse: ", "response": "公共汽车."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 推荐几款帮助入睡的助眠音乐或音频应用。\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to search for the motorcycle, backpack, and refrigerator urgently.\nresponse: ", "response": "motorcycle; backpack; refrigerator."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机下降六十厘米，然后请将无人机向上升起一米，以提高视角，接着无人机向上升高，随后无人机请飞行到前方两米，之后无人机下降一米，紧接着将无人机向右移动三十厘米，确认目标是否在视野中，最后现在让无人机着陆。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务已启动，以控制飞行。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在那波光粼粼的水面上，缓缓地寻找那艘孤独的船，同时也不要忽略了漂浮着的每一个可能藏着惊喜的甜甜圈。\nresponse: ", "response": "船; 甜甜圈."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 往前飞行一米，然后左转七十度，检查左侧情况，最后请将无人机降落在此处。\nresponse: ", "response": "move_forward 1 m; turn_left 70 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去帮我找找碘伏和止疼药，还有那个滑雪板。\nresponse: ", "response": "碘伏; 滑雪板; 止疼药."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即重启那被中断的搜寻任务，就像点燃了导火索一样！\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Check if there are coins under the living room sofa cushions.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift right by 100 centimeters, then take the drone back before rising up, next go down 50 centimeters, afterwards I need you to back up 5 feet, following that bank left by 2 meters, subsequently turn left a bit, and in the end it's time to land.\nresponse: ", "response": "move_right 100 cm; Missing move_back; Missing move_up; move_down 50 cm; move_back 5 ft; move_left 2 m; Missing turn_left; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清除当前的控制与搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前任务列表，让应用运行更顺畅。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Elevate! First, make it go backward. Then fly upwards 3 meters, afterwards move right by 100 centimeters, next go down 50 centimeters, immediately after that shift left by 2 meters, subsequently reverse 5 meters, and in the end land.\nresponse: ", "response": "take_off; Missing move_back; move_up 3 m; Missing move_left; move_right 100 cm; move_down 50 cm; move_left 2 m; move_back 5 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is there anything but the dining table you should be searching for?\nresponse: ", "response": "dining table."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused search task immediately.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 真是麻烦了，请搜索一下丢失的风筝和书，还有那匹走失的马吧！\nresponse: ", "response": "风筝; 书; 马."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the couch and the vase, but why not also look for the pizza and the sports ball?\nresponse: ", "response": "couch; vase; pizza; sports ball."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: How can carbon footprints be reduced in daily life?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the clearance of the current control and search tasks.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Sway to the left by 2 meters, then rotate left 90 degrees to face the other direction, after that turn to the right, next fly towards the front, subsequently I’m excited to see it climb up 2 feet—let’s do this!, and in the end land this thing.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地，立即去厕所找领带和背包，并检查是否有未喝完的雪碧！\nresponse: ", "response": "领带; 厕所; 背包; 雪碧."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞，然后降落一米，咱们要接近地面了，准备好查看周围环境，接着请将无人机后退三十厘米，以检查后方情况，随后请将位置调整到左侧八十厘米。\nresponse: ", "response": "take_off; move_down 1 m; move_back 30 cm; move_left 80 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: What is the highest temperature tomorrow?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，能不能麻烦你飞去水槽那边，看看有没有蛋糕和背包，顺便检查下勺子在不在呢？谢谢啦！\nresponse: ", "response": "水槽; 蛋糕; 背包; 勺子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Gently seek the wine glass, person, bread, and fanta, as if guided by a soft breeze.\nresponse: ", "response": "wine glass; person; bread; fanta."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: While ensuring a thorough search, could you kindly locate the handbag and the suitcase, making sure to check for any sandwich as well?\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that searching for the carrot near the couch or perhaps the backpack by the bowl would reveal what you're looking for?\nresponse: ", "response": "carrot; couch; backpack; bowl."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退五十厘米以调整位置，然后无人机向左移动八十厘米，接着向前移动七十厘米，随后前方视线不清晰，向前移动一百厘米，紧接着请将无人机右移两米，之后请将位置调整到左侧八十厘米，接下来前进二十厘米，继续任务，最后请安排无人机在当前区域降落。\nresponse: ", "response": "move_back 50 cm; move_left 80 cm; move_forward 70 cm; move_forward 100 cm; move_right 2 m; move_left 80 cm; move_forward 20 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why is there no liquid water on the Moon?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止正在进行的飞行控制任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议立即暂停当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左移，然后右转七十度，之后向后退三十厘米以避免碰撞；接着上升一米，让无人机更高一点，随后无人机左转一百二十度；紧接着后退一米，避开障碍物，接下来下降两米；随后左移六十厘米，然后无人机，请前进七十厘米；最后，无人机右转三十度，重新调整方向，准备接受新任务。\nresponse: ", "response": "Missing move_left; turn_right 70 degrees; move_back 30 cm; move_up 1 m; turn_left 120 degrees; move_back 1 m; move_down 2 m; move_left 60 cm; move_forward 70 cm; turn_right 30 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被派遣去搜索并找到那个烤箱吧。\nresponse: ", "response": "烤箱."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: It's time to take off, then I want this drone to fly back 1 meter, after that turn 120 degrees to the right, next let's have some fun and turn right another 180 degrees, subsequently move left 25 centimeters.\nresponse: ", "response": "take_off; move_back 1 m; turn_right 120 degrees; turn_right 180 degrees; move_left 25 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly back 10 inches, then tilt left 40 degrees, after that shift to the right by 30 centimeters, next deploy backward trajectory shift of 4 meters, subsequently move backwards 3 feet, afterwards perform a backward movement, following that initiate vertical ascent by 3 meters, later go back 200 cm, then pull it back 75 cm, immediately after that without delay make it descend by 1 meter, thereafter take it to the left 15 inches, and in the end put it down now.\nresponse: ", "response": "move_back 10 in; turn_left 40 degrees; move_right 30 cm; move_back 4 m; move_back 3 ft; Missing move_back; move_up 3 m; move_back 200 cm; move_back 75 cm; move_down 1 m; move_left 15 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: May I inquire if you could search for a cell phone, traffic light, cup, and toaster?\nresponse: ", "response": "cell phone; traffic light; cup; toaster."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去把那个遥控器找出来，就像猎犬追踪猎物一样。\nresponse: ", "response": "遥控器."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar like a hawk to seek out the bottle and frisbee, letting your keen eyes guide you through the air.\nresponse: ", "response": "bottle; frisbee."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧找找看，先把烤箱附近检查了，再快速去厕所那边确认下。\nresponse: ", "response": "烤箱; 厕所."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused control and search operation.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the boat, horse, and giraffe.\nresponse: ", "response": "boat; horse; giraffe."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the snowboard and ensure the oven is located, maintaining a systematic approach throughout the operation.\nresponse: ", "response": "snowboard; oven."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Gently seek out the broccoli, Fanta, wine glass, and sports ball.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current control and search task should be cleared.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: land the drone\nresponse: ", "response": "land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift right by 80 inches, then land.\nresponse: ", "response": "move_right 80 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机起飞，然后右侧移动七十五厘米，接着左转八十度，检查左侧的环境，请右侧转向，最后降低高度。\nresponse: ", "response": "take_off; move_right 75 cm; turn_left 80 degrees; Missing turn_right; Missing move_down."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to search for the cup, airplane, and fanta.\nresponse: ", "response": "cup; airplane; fanta."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转三十度，调整方向，然后后退一米，看看后方情况，请让无人机往后移动；请将无人机顺时针旋转，接着调整到左侧位置，请向左移动七十五厘米，随后请让无人机向后移动两百厘米；无人机前方似乎有目标，请向前移动一百厘米以接近目标，之后右侧移动七十五厘米；最后，无人机降落在地面上。\nresponse: ", "response": "turn_left 30 degrees; move_back 1 m; Missing move_back; Missing turn_right; move_left 75 cm; move_back 200 cm; move_forward 100 cm; move_right 75 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the clock.\nresponse: ", "response": "clock."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在那杂乱无章的角落里，务必别遗漏了对那只不显眼的杯子以及那颗令人厌烦的橙子的搜寻。\nresponse: ", "response": "杯子; 橙子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused control and initiate the search task immediately.\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么光速是宇宙中的速度极限？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，麻烦你先去查看下披萨和刀是不是还在餐桌上，然后帮我确认下键盘有没有也在那儿，行吗？\nresponse: ", "response": "披萨; 餐桌; 刀; 键盘."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the train, book, bus, and motorcycle carefully. Thank you for your help!\nresponse: ", "response": "train; book; bus; motorcycle."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Recommend a documentary suitable for teenagers.\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: I'm a bit apprehensive, could we lower the drone slowly by 20 inches, then move it forward by 1 foot, afterwards drift back, next go to the right by 5 inches, after that execute a leftward bank for 20 inches, subsequently I'm so excited to see this drone fly forward 10 feet, immediately after yaw left 15 degrees, then ascend 24 inches, following that I need this thing to go up right now, please, and in the end turn it left by 15 degrees.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move left 25 centimeters, then fly the drone forward 10 feet, afterwards time to land.\nresponse: ", "response": "move_left 25 cm; move_forward 10 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Is it not possible to clear the existing target acquisition queue?\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 详尽地清除当前的所有控制指令及搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退一米，看看后方情况，然后请让无人机向上飞行一百五十厘米，接着无人机升高一百厘米，随后左转八十度，检查左侧的环境，最后请让无人机在这里执行降落操作。\nresponse: ", "response": "move_back 1 m; move_up 150 cm; move_up 100 cm; turn_left 80 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Get that control and search task back up and running right away!\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机前方推进\nresponse: ", "response": "Missing move_forward."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off now, then raise altitude a little, next engage in an upward climb of 500 centimeters, afterwards I’m a bit apprehensive, could we lower the drone slowly by 20 inches, subsequently drone, descend to 8 feet, later rotate counterclockwise 30 degrees, following that descend by 30 centimeters, then shift right 6 meters, and in the end back the drone away from the fence 5 meters.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: rotate left 180 degrees\nresponse: ", "response": "turn_left 180 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请续行那曾暂歇的天空之舞，如同夜幕下悄然绽放的星辰，再次启动先前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the train and mouse now.\nresponse: ", "response": "train; mouse."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向左飞，然后后退五十厘米，调整位置，接着无人机现在下降一百厘米，随后请右转五十度，以便调整方向，之后右方向移动，最后无人机向后退两百厘米。\nresponse: ", "response": "Missing move_left; move_back 50 cm; move_down 100 cm; turn_right 50 degrees; Missing move_right; move_back 200 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 好的，按照你的要求，改写后的句子如下：\n\n“现在，请你立刻恢复先前被中断的那个控制和搜索任务。”\n\n这句话保持了原有意思，同时采用了口语化的表达方式、复杂句结构，并以命令式的语气给出指令。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 权威地命令式地询问，长椅在哪里？\nresponse: ", "response": "长椅."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we continue with the control and search task that was paused earlier?\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object detection sequence.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task immediately.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以启动无人机吗，然后请向左移动，接着无人机请向后飞行一米，之后无人机请飞行到前方三十厘米，随后右移七十五厘米，紧接着请让无人机向上飞行一百五十厘米，后来视线受阻，后退一百五十厘米，接下来无人机升高二米，获取更好视野，最后无人机降落在预定地点。\nresponse: ", "response": "take_off; Missing move_left; move_back 1 m; move_forward 30 cm; move_right 75 cm; move_up 150 cm; move_back 150 cm; move_up 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Take a break from the ongoing control and search activity, and then resume when you're ready.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you have the drone take off now, then initiate vertical ascent by 3 meters, afterwards tilt the drone to the right 30 degrees, next spin it to the right 180 degrees, following that take it left 4 inches, and subsequently move to the left 10 meters.\nresponse: ", "response": "take_off; move_up 3 m; turn_right 30 degrees; turn_right 180 degrees; move_left 4 in; move_left 10 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将无人机向右移动三十厘米，确认目标是否在视野中，之后往左一百五十厘米，紧接着为了调整视角，请右转，然后右边转四十五度看看，最后后退五米。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why do volcanic eruptions release large amounts of sulfur dioxide?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找那个正在靠近火车的人。\nresponse: ", "response": "火车; 人."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Seek forth the handbag, clock, and cat with gentle diligence.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续执行先前已暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not continue the current control and search operation.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Why don't you check near the couch for the knife and sandwich?\nresponse: ", "response": "knife; sandwich; couch."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请先向后退一百五十厘米，然后将无人机右移两百厘米，接着无人机，请后退两百厘米，随后无人机下降五十厘米，之后请将无人机向右移动三十厘米以检查右侧环境，最后无人机准备降落。\nresponse: ", "response": "move_back 150 cm; move_right 200 cm; move_back 200 cm; move_down 50 cm; move_right 30 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否想要恢复先前暂停的寻找目标物的任务呢？这将会是一个不错的选择哦！\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要恢复先前暂停的搜寻任务呢？\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立刻暂停你现在正在进行的飞行任务，快点！\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您友好地搜索并定位红绿灯和刀的位置，谢谢。\nresponse: ", "response": "红绿灯; 刀."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能向右转四十五度，然后左边移动二十厘米，接着左边可能有障碍物，转动，随后向右移动二十厘米，之后下降七十厘米，调整视角，紧接着无人机后退一百五十厘米，再后退五十厘米，避开障碍物，最后可以降落了吗。\nresponse: ", "response": "turn_right 45 degrees; move_left 20 cm; Missing turn_left; move_right 20 cm; move_down 70 cm; move_back 150 cm; move_back 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move right 1 meter, then can you make it rotate left a bit? I’m feeling a bit dizzy, after that shift to the right 2 meters, subsequently raise altitude a little, next commence a horizontal shift of 3 feet forward, and in the end prepare for landing.\nresponse: ", "response": "move_right 1 m; Missing turn_left; move_right 2 m; Missing move_up; move_forward 3 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机起飞，然后左边飞行七十厘米，看看会有什么新发现，接着无人机下降三十厘米以便调整高度；随后，无人机升高，请向右移动五十厘米，紧接着右侧转弯；接下来，向左移动六十厘米，准备绕过障碍物，之后下降四十厘米，避开障碍物，随后升高六十厘米，让无人机能看到更广的范围；然后请让无人机向右掉头，接着无人机左移一米，再向右飞行八十五厘米，调整视角；最后，请将无人机慢慢下降一米，这样可以更接近地面，紧接着后面可能右东西，可以掉头看看吗。\nresponse: ", "response": "take_off; move_left 70 cm; move_down 30 cm; Missing move_up; move_right 50 cm; Missing turn_right; move_left 60 cm; move_down 40 cm; move_up 60 cm; turn_right 180 degrees; move_left 1 m; move_right 85 cm; move_down 1 m; turn_left 180 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 您能否详尽地搜索一下，看看手提包在哪里？\nresponse: ", "response": "手提包."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您轻轻飞往找到牙刷的位置。\nresponse: ", "response": "牙刷."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin the takeoff now, then rotate the drone to the right 75 degrees, afterwards hover up by 50 centimeters, next descend 12 inches now, immediately after that move back 10 inches, following that move the drone forward 1 meter, and subsequently back up 5 feet.\nresponse: ", "response": "take_off; turn_right 75 degrees; move_up 50 cm; move_down 12 in; move_back 10 in; move_forward 1 m; move_back 5 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear out that flight control task list!\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地搜索一下烤箱旁边是否有滑板，再看看船附近有没有胡萝卜。\nresponse: ", "response": "烤箱; 滑板; 船; 胡萝卜."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类未来是否可以实现火星移民？\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended flight control operation.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the giraffe carefully, ensuring a thorough scan of the area.\nresponse: ", "response": "giraffe."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please search for the backpack and suitcase, ensuring they are found?\nresponse: ", "response": "backpack; suitcase."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机起飞，然后无人机右转三十度来调整方向，接着向左移动一米五，随后无人机现在升高一百厘米；无人机向左旋转，之后右转八十度，以便更好地观察右侧，紧接着迅速下降一米，然后让无人机向后退一米，随后让无人机向后退五十厘米；请将无人机向左移动，最后升高六十厘米，紧接着将无人机向后移动一米。\nresponse: ", "response": "take_off; turn_right 30 degrees; move_left 1.5 m; move_up 100 cm; Missing turn_left; turn_right 80 degrees; move_down 1 m; move_back 1 m; move_back 50 cm; Missing move_left; move_up 60 cm; move_back 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机起飞，然后左转五十五度，观察左侧情况，之后再左转三十度检查左边，在这之后马上下降；接着左边飞行一百厘米，我们要探索左侧的神秘区域，随后让无人机左转五十度调整方向看看那边的情况，紧接着无人机向后退；第二步，左转五十五度，观察左侧情况之前进行这个动作；最后，向左移动六十厘米准备绕过障碍物。\nresponse: ", "response": "take_off; turn_left 55 degrees; turn_left 30 degrees; Missing move_down; move_left 100 cm; turn_left 50 degrees; Missing move_back; turn_left 55 degrees; move_left 60 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，执行任务，然后往下移动；紧接着，无人机高度太高，请下降；随后，右侧移动七十五厘米以避开障碍；之后，立刻右转；接着，请将无人机向右移动三十厘米，以检查右侧环境；后来，请将无人机右侧移动；紧接着，左转90度；随后，无人机前方有障碍物，向前移动五十厘米以检查；最后，请让无人机向右移动四十厘米。\nresponse: ", "response": "take_off; Missing move_down; Missing move_down; move_right 75 cm; Missing turn_right; move_right 30 cm; Missing move_right; turn_left 90 degrees; move_forward 50 cm; move_right 40 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for pizza, frisbee, spoon.\nresponse: ", "response": "pizza; frisbee; spoon."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the flight control process—it’s smooth sailing from here!\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机右转三十度来调整方向，然后无人机现在需要调整方向，请向右转动七十度，接着无人机现在下降一百厘米，随后向前移动一百五十厘米，注意地面情况，之后请将无人机后退三十厘米，以检查后方情况，紧接着为了更好的视角，请将无人机左转，随后我需要无人机下降一米，请执行，最后无人机准备降落，请安全降落。\nresponse: ", "response": "turn_right 30 degrees; turn_right 70 degrees; move_down 100 cm; move_forward 150 cm; move_back 30 cm; Missing turn_left; move_down 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing flight control operation immediately.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制流程，开启搜寻小能手吧！\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control task.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing in the air, then shift left by a meter, after that let's move the drone to the left, subsequently bring it up by 2 meters wasn't next, so first move it 200 centimeters forward, next fly steadily forward 60 cm was also not next so after that climb 6 feet, and carefully land the drone in the end.\nresponse: ", "response": "take_off; move_left 1 m; Missing move_left; move_up 6 ft; move_forward 200 cm; move_forward 60 cm; move_up 2 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey there, could you flutter over and see if you can spot that cola, like a hawk on the hunt?\nresponse: ", "response": "cola."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Not to find the carrot, nor the bed, nor the sports ball, nor the cat!\nresponse: ", "response": "carrot; bed; sports ball; cat."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞吧，然后让无人机逆时针旋转，接着请让无人机向左移动二十厘米，随后请将无人机顺时针旋转，紧接着下移，之后请让无人机向右掉头180度，前进一百厘米，检查前方，最后无人机降落在预定位置。\nresponse: ", "response": "take_off; Missing turn_left; move_left 20 cm; Missing turn_right; Missing move_down; turn_right 180 degrees; move_forward 100 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I’m a bit nervous, could you move the drone to the left slowly, then rotate 180 degrees to the right, afterwards veer left 30 degrees, next make it move right 70 in, subsequently descend gradually 1 foot, before Hurry up and land already!.\nresponse: ", "response": "Missing move_left; turn_right 180 degrees; turn_left 30 degrees; move_right 70 in; move_down 1 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂定当前的飞行任务，就如同按下快进键后的视频突然静止，等待下一步的操作指令。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停现在的搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机起飞，然后现在让无人机降落。\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the intricate process of initiating the drone's flight control sequence, ensuring all parameters are meticulously set for optimal performance.\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能否去找找冲浪板、苹果和三明治？\nresponse: ", "response": "冲浪板; 苹果; 三明治."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，能不能麻烦你先找找蛋糕和饼干，再看看手机在哪儿？谢谢啦！\nresponse: ", "response": "蛋糕; 饼干; 手机."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请在前方搜索一下，看看是否有飞机、鸟和网球拍的身影。\nresponse: ", "response": "飞机; 鸟; 网球拍."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there, let's put the brakes on the current control and search mission, just like hitting pause on a game.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate left by 60 degrees, then can you make it fly downwards by 2 meters, drop it 4 inches, after that, move to the right, next, let's move back 2 feet, afterwards, descend 10 feet.\nresponse: ", "response": "turn_left 60 degrees; move_down 2 m; move_down 4 in; Missing move_right; move_back 2 ft; move_down 10 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议暂停当前进程，重新启动之前的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 迅速定位并避开香蕉和甜甜圈，时间紧迫。\nresponse: ", "response": "香蕉; 甜甜圈."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for coldrex, book.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 使无人机向左转, 然后无人机需要向后移动一米, 之后视角不是很好，可以往上飞行三十厘米吗, 接着请让无人机向右侧移动, 后来请向右移动五十厘米, 紧接着无人机飞得太高了，请下降六十厘米, 随后请向后移动二百厘米, 最后请将无人机左移, 之后无人机降落在指定区域。\nresponse: ", "response": "Missing turn_left; move_back 1 m; move_up 30 cm; Missing move_right; move_right 50 cm; move_down 60 cm; move_back 200 cm; Missing move_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机前进一百二十厘米，然后将无人机上升两百厘米，接着前方有目标，前进一米，最后下降七十厘米，调整无人机高度。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start the sound system to play light music to reduce stress.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索风筝和行李箱，在厕所和烤面包机周围也要仔细找，这很紧急。\nresponse: ", "response": "风筝; 行李箱; 厕所; 烤面包机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the ongoing search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate a comprehensive scan to locate and identify the cat, car, toaster, and microwave, ensuring thorough coverage of all areas.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前的任务列表吧，让应用轻装上阵，飞得更稳更远！\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the cell phone, toaster, and donut.\nresponse: ", "response": "cell phone; toaster; donut."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let the drone rise 10 inches, then make a left-hand turn, and afterwards shift backward 40 inches.\nresponse: ", "response": "move_up 10 in; Missing turn_left; move_back 40 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate it left 135 degrees, then I’m a little anxious about the direction, could you turn it right by 45 degrees? After that, turn it right by 90 degrees. Next, fly to the right 100 cm, subsequently rotate to the right 30 degrees, and bank right. Following that, veer to the left for 5 feet, and in the end, drone should descend immediately.\nresponse: ", "response": "turn_left 135 degrees; turn_right 45 degrees; turn_right 90 degrees; move_right 100 cm; turn_right 30 degrees; Missing move_right; move_left 5 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找找那个装着可乐的杯子吧，你一定能找到的！\nresponse: ", "response": "可乐; 杯子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将位置调整到左侧八十厘米，然后左侧调整距离，之后无人机请着陆。\nresponse: ", "response": "move_left 80 cm; Missing move_left; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急而友好的请你搜索一下网球拍和狗，确保它们安全无恙。\nresponse: ", "response": "网球拍; 狗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused control and search operation immediately to ensure optimal mission success.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问现在能否立即查找一下钟和芬达的位置？\nresponse: ", "response": "钟; 芬达."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前任务列表，确保飞行控制无误。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能不能友好地开启飞行任务呢？真是太感谢了！\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调整空调至25摄氏度并开启制热模式。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 寻找手机。\nresponse: ", "response": "手机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we initiate the flight control task?\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please resume the previously paused control and search task promptly.\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drop it down 2.5 meters, then shift right by 80 inches, afterwards go left for 2 meters, next please make the drone turn left 90 degrees, following that climb up 1 meter, subsequently steer it right 45 degrees, then spin the drone clockwise by 45 degrees, immediately after that shift right by 100 centimeters, later fly back 10 inches, and in the end land it now.\nresponse: ", "response": "move_down 2.5 m; move_right 80 in; move_left 2 m; turn_left 90 degrees; move_up 1 m; turn_right 45 degrees; turn_right 45 degrees; move_right 100 cm; move_back 10 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the person, then find the bread.\nresponse: ", "response": "bread; person."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请按照顺序搜索飞机、沙发、行李箱和摩托车。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing off the ground! Next, I'm so thrilled, let's go up 50 centimeters! After that, fly it right by 3 inches. In the end, drop the drone down to the ground.\nresponse: ", "response": "take_off; move_up 50 cm; move_right 3 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines, then descend by 5 inches, after that, turn 60 degrees right, and finally, put it down now.\nresponse: ", "response": "take_off; move_down 5 in; turn_right 60 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not fail to locate the person.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Must we halt the ongoing control and search operations immediately?\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: We kindly request that you clear the existing flight control task list to ensure a smooth and safe operation.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object detection sequence.\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以权威的口吻，命令式地表达为：\n\n立即清空当前任务列表中的所有搜索目标。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please take off now, then climb 12 inches, after that descend 15 feet to get closer to the ground, next initiate a 360-degree turn to the right, afterwards fly the drone to the left for 200 cm, subsequently veer to the right 30 degrees abruptly, following that spin counterclockwise 45 degrees, later turn right, I need to check the view over there, then send the drone backwards 25 feet, and in the end go backwards 80 centimeters.\nresponse: ", "response": "take_off; move_up 12 in; move_down 15 ft; turn_right 360 degrees; move_left 200 cm; turn_right 30 degrees; turn_left 45 degrees; Missing turn_right; move_back 25 ft; move_back 80 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off, then begin the ascent, after that go ahead 40 inches, next move to the right, subsequently fly it backward like it's in reverse gear, afterwards come back to me, immediately after shift to the back, following that please move the drone backwards 2 feet, then I need this thing to go up right now, please, thereafter turn it right, and finally move the drone right first 2 inches and later by 80 inches.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最详尽的方式探索，像寻宝者一样，先找到那个橙子，再追踪到那本书，每一步都充满发现的乐趣吧！\nresponse: ", "response": "橙子; 书."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Given the ongoing navigation and surveillance operations, it might be advisable to momentarily suspend the current target acquisition process to ensure optimal system performance and prevent potential data overload.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 以优雅之姿启动控制之旅，开启探寻之程。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧终止现在的控制程序，并且取消搜索任务，快点！\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您友好地搜索一下，看看能否在汽车旁边找到一个钟，同时也不要忽略了可能放在一旁的芬达和领带，好吗？\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please clear the current control settings and terminate the ongoing search task in the drone application.\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Consider searching for the dog with a meticulous approach, ensuring a thorough and positive outcome.\nresponse: ", "response": "dog."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地前往搜索公共汽车附近的雨伞，谢谢。\nresponse: ", "response": "公共汽车; 雨伞."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，准备开始；然后左侧移动两百厘米；接着无人机后退七十厘米；最后可以让无人机现在降落。\nresponse: ", "response": "take_off; move_left 200 cm; move_back 70 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要不咱们接着之前的控制和搜寻任务，再加把劲儿，怎么样？\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously halted flight control operation immediately.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请以友好之姿，重启先前暂且搁置的探索之旅，让应用程序再度投身于寻找目标物的使命之中。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the frisbee.\nresponse: ", "response": "frisbee."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机起飞，然后无人机下降三十厘米以便调整高度，接着请让无人机前进一百五十厘米以完成任务，之后无人机顺时针旋转一百八十度，紧接着让无人机左转四十五度，准备接受新的挑战，随后后退两百厘米，紧接着上移，随后请将无人机向右飞行一百厘米，以避免前方的障碍物，最后无人机掉头看看后方。\nresponse: ", "response": "take_off; move_down 30 cm; move_forward 150 cm; turn_right 180 degrees; turn_left 45 degrees; move_back 200 cm; Missing move_up; move_right 100 cm; turn_right 180 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move to the left by 4 meters, then let's fly it right by 5 meters, I'm excited to explore that direction, after that, please land the drone softly.\nresponse: ", "response": "move_left 4 m; move_right 5 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current task list now. Why leave it cluttered?\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转一百度，调整无人机方向，然后无人机离地面太高了，请下降，接着让无人机向后退一米，随后右侧转弯，最后为了查看后方的情况，请将无人机后退两米。\nresponse: ", "response": "turn_right 100 degrees; Missing move_down; move_back 1 m; Missing turn_right; move_back 2 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Help me find the unfinished puzzle box in the study.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's launch this thing, then move the drone backward 1.5 feet, after that begin the ascent, next move down 4 meters, afterwards rotate the drone left by 180 degrees, following that move to the left by 4 meters, subsequently drop it 4 inches, then send it to the right 7 feet, immediately after move to the front, and finally move it forward 100 inches.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The control and search task should not be started.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左移一米，然后让无人机顺时针旋转一百八十度，接着请让无人机后退八十厘米，随后向左侧移动，之后无人机能向右转四十五度吗，紧接着后退五十厘米，避开障碍物，最后无人机左转七十度。\nresponse: ", "response": "move_left 1 m; turn_right 180 degrees; move_back 80 cm; Missing move_left; turn_right 45 degrees; move_back 50 cm; turn_left 70 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Initiate search for umbrella, cake, orange, book. Confirm positive identification upon detection.\nresponse: ", "response": "umbrella; cake; orange; book."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 飞高一点，上升八十厘米，然后将无人机向后移动一米，接着无人机向右平移二十厘米，随后请将无人机左移，紧接着无人机请向后飞行两米以避开障碍物，最后请无人机安全着陆。\nresponse: ", "response": "move_up 80 cm; move_back 1 m; move_right 20 cm; Missing move_left; move_back 2 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Launch the eagle's eye to scout for the target.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜寻那片海上的船，就像寻找遗落的遥控器和漂流的瓶子！\nresponse: ", "response": "遥控器; 船; 瓶子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please take a moment to pause the ongoing flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the car.\nresponse: ", "response": "car."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is the car near the chair to be located?\nresponse: ", "response": "car; chair."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机上升两米，然后请帮忙让无人机下降一米，接着无人机右转四十度以获得更好视角，之后向左移动一米，随后无人机右侧视角受限，请右转三十度以获得更好视角，紧接着向右转九十度，之后请让无人机向左移动二十厘米，随后上升一米，让无人机更高一点，请将无人机右移。\nresponse: ", "response": "move_up 2 m; move_down 1 m; turn_right 40 degrees; move_left 1 m; turn_right 30 degrees; turn_right 90 degrees; move_left 20 cm; move_up 1 m; Missing move_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请右转一百八十度，然后左侧飞行七十厘米，随后无人机向上移动，紧接着后退五十厘米以调整位置，之后立刻右转五十度，接着右转八十度，以便更好地观察右侧，再然后右边移动七十厘米，最后让无人机顺时针旋转一百八十度。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即中止当前正在进行的飞行任务控制程序。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The previously suspended object identification process should be resumed.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能不能赶紧找找那辆自行车？\nresponse: ", "response": "自行车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate take off, then I’m a bit nervous about its altitude, could you bring it down slowly, say 30 centimeters, after that, the drone should go down now.\nresponse: ", "response": "take_off; move_down 30 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Locate the nearest shadowed area of a building in the drone's view.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右移一米，绕过障碍物，我们继续前行，然后后退七十厘米，之后下降六十厘米，紧接着无人机现在降下一百五十厘米，随后无人机上升三米，接着可以向左旋转三十度吗，然后请将无人机向前移动一百厘米，探测前方区域，之后请让无人机后退八十厘米，紧接着前方有点模糊，向前移动两百五十厘米，最后现在请无人机着陆。\nresponse: ", "response": "move_right 1 m; move_back 70 cm; move_down 60 cm; move_down 150 cm; move_up 3 m; turn_left 30 degrees; move_forward 100 cm; move_back 80 cm; move_forward 250 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move back a little, then ascend above the tree by 20 feet, after that turn right, next fly forward by 3 feet, subsequently fly it right by 3 inches, afterwards move forward 5 centimeters, following that pivot right, and in the end start landing sequence.\nresponse: ", "response": "Missing move_back; move_up 20 ft; Missing turn_right; move_forward 3 ft; move_right 3 in; move_forward 5 cm; Missing turn_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current control task and the search task. Make sure everything is reset before you start a new operation with your drone. It's like giving your drone a clean slate to work from, ensuring it performs at its best for you.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Immediately resume the previously paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not search for the surfboard or the bicycle, but do find the donut.\nresponse: ", "response": "surfboard; bicycle; donut."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最优雅的姿态，如同在空中绘制精美的图案一般，去寻找那宛如艺术品的花瓶。\nresponse: ", "response": "花瓶."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Set the bedroom air purifier to sleep mode.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended control and search operation.\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin ascent, then shift to the right 2 meters, after that turn the drone 90 degrees left, subsequently bring it down slowly, say 30 centimeters.\nresponse: ", "response": "take_off; move_right 2 m; turn_left 90 degrees; move_down 30 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以在此处起飞吗，然后将无人机前进，接着左边四十厘米，之后下降一百五十厘米，接近地面进行细致检查，随后向右移动二十厘米以避开障碍，紧接着向右一米，最后让无人机在此处完成降落。\nresponse: ", "response": "take_off; Missing move_forward; move_left 40 cm; move_down 150 cm; move_right 20 cm; move_right 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 升高一米，想要从更高的角度俯瞰整个区域，然后升高，接着无人机右侧视角受限，请右转三十度以获得更好视角，之后请让无人机向后退三十厘米，紧接着无人机当前的高度太低，请向上飞行一百五十厘米，随后让无人机下降，最后移动五十厘米向左。\nresponse: ", "response": "move_up 1 m; Missing move_up; turn_right 30 degrees; move_back 30 cm; move_up 150 cm; Missing move_down; move_left 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you please locate the microwave, ensuring it's found quickly and efficiently?\nresponse: ", "response": "microwave."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Don't stop now; keep the current control and search task going! However, if you must pause, remember you're in command and can restart at any time. \n\nFor a more direct adherence to your request with a focus on negative phrasing while maintaining an encouraging tone:\n\"Don’t let the current control and search task halt; you have the power to keep it moving!\"\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能去找找那个苹果吗？\nresponse: ", "response": "苹果."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请将无人机起飞到空中，然后无人机飞得太高了，请下降，接着向右移动七十厘米，随后请让无人机向后移动两米，紧接着前面不清楚，向前移动两米，之后为了更好的视角，请将无人机左转，紧接着无人机请飞行到前方，最后我需要无人机下降一米，请执行。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head over to where you think the skateboard might be hiding, and while you're at it, keep an eye out for a knife; also, check if there's any pizza or fanta around.\nresponse: ", "response": "skateboard; knife; pizza; fanta."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您现在继续执行之前已经暂停的控制与搜寻任务，好吗？\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please search for a carrot, a toothbrush, a horse, and a handbag?\nresponse: ", "response": "carrot; toothbrush; horse; handbag."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Stop the drone's current flight task and switch to hover mode.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could searching for the bowl, laptop, and clock be your next exciting mission? Wouldn't it be a great challenge to see if you can locate them all?\nresponse: ", "response": "bowl; laptop; clock."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take the drone up now, then fly it to the right 20 inches, after that move right 100 inches, and finally turn left 60 degrees.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 迅速而精准地寻找杯子，如同鹰眼般锁定目标；接着，毫不迟疑地转向摩托车和苹果，确保它们也在视线之内。\nresponse: ", "response": "杯子; 摩托车; 苹果."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Preheat the oven to 200 degrees Celsius.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机左转四十五度，调整角度以获得更好视角，然后右边转四十五度，给右侧一个惊喜，接着左侧飞行八十厘米，确认那边的情况，最后前方似乎有障碍物，向前移动一米。\nresponse: ", "response": "turn_left 45 degrees; turn_right 45 degrees; move_left 80 cm; move_forward 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Recommend a few efficient apps to help with time management.\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off now, then climb 18 inches, afterwards bring it down by 20 centimeters, and finally turn left 30 degrees.\nresponse: ", "response": "take_off; move_up 18 in; move_down 20 cm; turn_left 30 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在那片落满灰尘的空间里，探查风筝遗落于床与长椅间的角落，别让微波炉遮挡了你的视线。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we resume the control and search task that was previously paused?\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 将无人机右转五十度，然后无人机前方似乎有障碍物，请向前移动；接着无人机的前方需要进一步检查，请向前飞行一百五十厘米；随后请让无人机前进一米，以探索前方环境；紧接着无人机现在的方向可能不对，请向右转动九十度以调整方向；之后往左飞行；然后无人机左转七十度；紧接着请将无人机向左移动一百二十厘米；随后向右移动一米以避开障碍物；接着左转七十度，检查左侧情况；最后无人机向上移动；紧接着让无人机降落吧。\nresponse: ", "response": "turn_right 50 degrees; Missing move_forward; move_forward 150 cm; move_forward 1 m; turn_right 90 degrees; Missing move_left; turn_left 70 degrees; move_left 120 cm; move_right 1 m; turn_left 70 degrees; Missing move_up; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 勿往厕所方向探寻。\nresponse: ", "response": "厕所."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone back 1.5 meters, then move it to the right, after that, let's move it to the left, next fly it forward 2 inches, subsequently give me a smooth left turn, 90 degrees, like a dancer, immediately after, tilt the drone 90 degrees to the right, and in the end, please land the drone softly.\nresponse: ", "response": "move_back 1.5 m; Missing move_right; Missing move_left; move_forward 2 in; turn_left 90 degrees; turn_right 90 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 续行此前暂歇的飞行任务，让天空之旅再度翩然启程。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找找那个红绿灯和运动球，快点！\nresponse: ", "response": "红绿灯; 运动球."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动详尽的飞行任务控制流程，以权威的指导确保每一步都精准无误。在这个过程中，我们鼓励您探索更多可能性，同时保持对细节的关注。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被建议去搜索书、酒杯、雪碧和烤箱。\nresponse: ", "response": "书; 酒杯; 雪碧; 烤箱."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左转一百八十度，掉头\nresponse: ", "response": "turn_left 180 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find the backpack, carrot, apple, and umbrella.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞任务已经准备好，启动无人机，然后无人机升高一百厘米，接着让无人机在当前位置下降五十厘米，看看风景如何，随后任务中，无人机需要左移四十厘米，紧接着前方有点模糊，向前移动两百五十厘米，最后左转四十五度，观察左侧。\nresponse: ", "response": "take_off; move_up 100 cm; move_down 50 cm; move_left 40 cm; move_forward 250 cm; turn_left 45 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能帮我们找找那辆卡车旁边是不是有西兰花和鼠标吗？谢谢啦！\nresponse: ", "response": "卡车; 西兰花; 鼠标."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制程序并执行搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请开启控制与探索之旅，让应用进程引领您步入精准而美妙的寻觅之境。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜索飞机旁的人和酒杯，然后前往公共汽车。\nresponse: ", "response": "飞机; 酒杯; 人; 公共汽车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't fail to check the bench and avoid missing the dining table.\nresponse: ", "response": "bench; dining table."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the handbag.\nresponse: ", "response": "handbag."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 往左一百五十厘米，然后左侧移动两百厘米，接着向左移动一米五，随后无人机向左移动六十厘米以避免障碍物。之后往右转九十度，紧接着右转五十度调整角度我们看得更清楚。随后无人机右侧视角受限，请右转三十度以获得更好视角，最后右边移动七十厘米避开障碍物，我们继续前进。\nresponse: ", "response": "move_left 150 cm; move_left 200 cm; move_left 1.5 m; move_left 60 cm; turn_right 90 degrees; turn_right 50 degrees; turn_right 30 degrees; move_right 70 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您礼貌地发出指令：“能否请系统清空当前的飞行任务列表呢？这将非常有助于我们的操作！”\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the toothbrush and handbag with care.\nresponse: ", "response": "toothbrush; handbag."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 权威地询问，是否能够找到背包？\nresponse: ", "response": "背包."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机现在起飞吗，然后无人机左转一百二十度，接着请右侧转向，随后无人机提升，紧接着请右转二十度，之后上升三十厘米，提高视角，第二步，无人机，请后退两百厘米，随后下方移动，最后现在开始降落。\nresponse: ", "response": "take_off; turn_left 120 degrees; Missing turn_right; Missing move_up; turn_right 20 degrees; move_up 30 cm; move_back 200 cm; Missing move_down; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin ascent then shift the drone down.\nresponse: ", "response": "take_off; Missing move_down."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for painkillers, then locate an apple.\nresponse: ", "response": "painkillers; apple."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止手中的航程，给飞行的梦想一个短暂的休憩。尽管这或许不是你所期待的进展，但为了更长远的翱翔，请给予它这一刻的宁静与调整，这不仅是一次简单的停顿，更是对未来的蓄势待发。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞吧，然后请帮忙让无人机下降一米，接着无人机上升，之后向右移动一百五十厘米，确认前方无障碍物，紧接着升高二十厘米，调整观察角度，最后请让无人机在这个位置降落。\nresponse: ", "response": "take_off; move_down 1 m; Missing move_up; move_right 150 cm; move_up 20 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 将无人机上升两百厘米，然后倒退一米，接着左转九十度，检查左侧情况，随后往后退，紧接着上升到三米高，之后无人机左移两米，最后请让无人机着陆。\nresponse: ", "response": "move_up 200 cm; move_back 1 m; turn_left 90 degrees; Missing move_back; move_up 3 m; move_left 2 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the bread.\nresponse: ", "response": "bread."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current task and control.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找找人和自行车，还有橙子跟鼠标。\nresponse: ", "response": "人; 自行车; 橙子; 鼠标."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议不要在寻找背包和滑板的同时还去关注那艘船。\nresponse: ", "response": "背包; 滑板; 船."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Bring the drone down 40 centimeters, then push left, after that raise it by 0.8 meters, next slide to the left 5 inches, following that rotate the drone to the left 60 degrees, afterwards shift left to avoid the drone from hitting the wall by 2 meters, and in the end make a landing.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往厕所，找到狗，接着搜索冰箱和勺子。\nresponse: ", "response": "厕所; 狗; 冰箱; 勺子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能不能麻烦您先别急，咱们还是得接着处理刚才那个中断了的控制和搜索任务呢。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out the current control settings and search tasks, will ya? It's a good idea to start fresh.\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the orange, skateboard, dog, and banana.\nresponse: ", "response": "orange; skateboard; dog; banana."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复之前的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take the drone off now, then elevate up 2.5 m, afterwards fly upwards 10 inches, next please move the drone left 5 meters, subsequently shift to the left, after that veer left 7 inches, following that spin left 90 degrees, and in the end rotate the drone to the left by 60 degrees before flying back 10 inches.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Ugh, just take off, then rotate the drone 360 degrees to the left.\nresponse: ", "response": "take_off; turn_left 360 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused object search task, ensuring that the drone resumes its flight path accurately.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find the toilet, Fanta, book, and bench right away!\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current flight control task is to be paused.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机左移五十厘米，然后往下降低七十厘米，接着前进八十厘米，前方可能藏着一些秘密，随后请向左移动七十五厘米，以便调整位置，紧接着让无人机下降，之后可以向左旋转三十度吗，接下来无人机的前方需要进一步检查，请向前飞行一百五十厘米，最后无人机准备降落。\nresponse: ", "response": "move_left 50 cm; move_down 70 cm; move_forward 80 cm; move_left 75 cm; Missing move_down; turn_left 30 degrees; move_forward 150 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 开始无人机的起飞程序，然后无人机右转三十度，重新调整方向，准备接受新任务，接着右移七十五厘米，随后无人机左转五十度，最后往后退九十厘米。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 即刻启动这至关重要的航程任务，让天空见证一场精妙绝伦的飞行诗篇。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Immediately halt the ongoing flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你友好地去找一下飞机。\nresponse: ", "response": "飞机."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 右转五十度，然后无人机右转九十度，接着请让无人机向上飞，随后无人机请向后飞行一米，最后现在可以让无人机降落吗。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快启动无人机，我们要开始冒险了，然后后退五十厘米以调整位置，接着请将无人机向右移动三十厘米，以检查右侧环境，之后右移一百五十厘米，紧接着右边转四十五度看看，随后右移七十五厘米，躲过那个障碍物，继续前行，请将无人机右转四十五度以便更好地查看右侧，最后左转。\nresponse: ", "response": "take_off; move_back 50 cm; move_right 30 cm; move_right 150 cm; turn_right 45 degrees; move_right 75 cm; turn_right 45 degrees; Missing turn_left."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机飞到空中，然后向后退两百厘米，看看会发现什么，接着右侧移动七十五厘米，之后为了更好地检查右侧，请将无人机右转四十五度，紧接着小飞机前飞七十厘米，让我们探险一下，最后下降一百厘米。\nresponse: ", "response": "take_off; move_back 200 cm; move_right 75 cm; turn_right 45 degrees; move_forward 70 cm; move_down 100 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能否立即起飞，然后为了探测右侧的情况，请将无人机向右移动六十厘米，接着无人机现在降下一百五十厘米，随后左边移动四十厘米，紧接着无人机前进九十厘米，之后无人机能向右转四十五度，最后很好，现在向右飞行八十五厘米。\nresponse: ", "response": "take_off; move_right 60 cm; move_down 150 cm; move_left 40 cm; move_forward 90 cm; turn_right 45 degrees; move_right 85 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前的目标搜索任务列表吧，真是高效又便捷！\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we awaken the slumbering command and resume our quest for discovery?\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the skateboard, will ya?\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the target detection mission.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate a rightward lateral movement for 2 meters, then rotate right 45 degrees to change direction towards the river, after that go to the right, subsequently maneuver to the right by 100 centimeters, next rotate it to the right 180 degrees, afterwards fly forward by 3 feet, later slide right, following that let's do a little spin to the right, 360 degrees, and in the end prepare for landing.\nresponse: ", "response": "move_right 2 m; turn_right 45 degrees; Missing move_right; move_right 100 cm; turn_right 180 degrees; move_forward 3 ft; Missing move_right; turn_right 360 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在这荒凉的世界里，你得去探寻那被遗忘的书，还有那孤独的公共汽车与无依的自行车。\nresponse: ", "response": "书; 公共汽车; 自行车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 别错过启动并执行搜索任务的机会，赶紧行动起来吧！\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In the midst of its current endeavor, the aerial vessel must cease its operation and commence a period of quiescence.\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应立即停止正在进行的搜寻任务？\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往搜索冲浪板和猫，这是紧急任务。\nresponse: ", "response": "冲浪板; 猫."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您温和但坚定地前往搜索感冒药。\nresponse: ", "response": "感冒药."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Get it off the ground, then fly it to the right 20 inches, afterwards turn 180 degrees right, next spin right slightly, subsequently revert back 60 centimeters, following that move forward 20 inches right now, and in the end put it down now.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence with confidence.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动控制程序并着手进行搜寻任务，这将是一次充满挑战与机遇的旅程，让我们一起迎接它吧！\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please resume the previously paused flight control task with confidence.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 就像唤醒沉睡中的猛兽，现在激活并延续先前被中断的目标追踪任务吧。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机前进七十厘米，检查前方是否有新发现，然后前面有点模糊，向前移动五十厘米，接着右边需要探测，向右移动，随后请将无人机缓慢上升五十厘米，以便获得更好的视角，之后左转五十度，紧接着请让无人机往后退，后来无人机右转三十度，重新调整方向，准备接受新任务，接下来向右移动二十厘米，然后无人机再次向右移动四十厘米，最后现在请让无人机在指定地点降落。\nresponse: ", "response": "move_forward 70 cm; move_forward 50 cm; Missing move_right; move_up 50 cm; turn_left 50 degrees; Missing move_back; turn_right 30 degrees; move_right 20 cm; move_right 40 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 让我们继续之前暂停的飞行任务吧，加油！\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机高度过高，请下降五十厘米，然后左侧飞行八十厘米以确认那边的情况，接着左边移动四十厘米来调整位置，随后向右转二十度，之后无人机目前离地面过高，请下降一百五十厘米，紧接着升高，再后来无人机现在升高一百厘米，最后可以让无人机现在降落吗。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why is there so much dark matter in the universe?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey there! Could you check out the dining table and bench for me? Thanks a bunch!\nresponse: ", "response": "dining table; bench."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否详尽地搜寻一下，看看叉子旁边是不是有蛋糕呢？这将非常有助于我们的任务进展。\nresponse: ", "response": "叉子; 蛋糕."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the mouse!\nresponse: ", "response": "mouse."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地暂停当前控制飞行的任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please check if the giraffe is near the sprite and also see if an umbrella is anywhere close by?\nresponse: ", "response": "giraffe; sprite; umbrella."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能否详尽地寻找一下长颈鹿呢？\nresponse: ", "response": "长颈鹿."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: While searching the area, locate the kite that is near the person and ensure to also identify the banana.\nresponse: ", "response": "kite; person; banana."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Suspend the ongoing target acquisition process immediately, ensuring that all movement functions are halted.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制无人机拍摄一段10分钟的视频。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the tie and the apple with utmost urgency.\nresponse: ", "response": "tie; apple."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone 3 feet forward, then pull back 4 feet, after that fly forward 40 centimeters, subsequently send the drone backwards 25 feet, next please make the drone go left 150 centimeters, afterwards move the drone to the left another 150 centimeters, following that push it ahead a little more, then fly forward a little, before advancing forward 3 meters, first rotate to the left by 60 degrees, and in the end bring it down quickly.\nresponse: ", "response": "move_forward 3 ft; move_back 4 ft; move_forward 40 cm; move_back 25 ft; move_left 150 cm; move_left 150 cm; Missing move_forward; Missing move_forward; move_forward 3 m; turn_left 60 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the object search task immediately.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let the bird, a sprite of the sky, be guided to seek out the chair with the grace and precision of a dancer.\nresponse: ", "response": "bird; sprite; chair."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bring the drone to the right by 200 centimeters, then let the drone rise 10 inches, afterwards bring the drone down to earth.\nresponse: ", "response": "move_right 200 cm; move_up 10 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Urgently suggest searching for the toothbrush.\nresponse: ", "response": "toothbrush."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the tennis racket and frisbee by the couch immediately.\nresponse: ", "response": "tennis racket; couch; frisbee."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the tie, chair, bread, and airplane.\nresponse: ", "response": "tie; chair; bread; airplane."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在确保一切顺利进行的同时，我们建议暂时搁置当下正在执行的物体搜索任务，以待更佳时机重启。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 温柔地探索前方，留意那优雅漫步的猫与闪烁指引的红绿灯，勇敢前行吧。\nresponse: ", "response": "猫; 红绿灯."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move back 12 inches, then execute a reverse flight of 10 meters, after that, can you land the drone?.\nresponse: ", "response": "move_back 12 in; move_back 10 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get it off the ground, then fly it to the right 20 inches, afterwards turn 180 degrees right, next spin right slightly, subsequently revert back 60 centimeters, following that move forward 20 inches right now, and in the end put it down now.\nresponse: ", "response": "take_off; turn_right 180 degrees; move_right 20 in; move_back 60 cm; move_forward 20 in; Missing turn_right; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请权威地指令应用程序暂停当前正在执行的物体搜寻任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Ensure that the current flight control task list is completely cleared!\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate search for umbrella, cake, orange, book. Confirm positive identification upon detection.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Commence the quest for the object, letting the aerial sentinel glide through the skies with purpose.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object search.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请启动无人机的起飞程序，然后命令无人机向前飞行，接着让无人机顺时针旋转一百八十度，之后前进一米，随后请将无人机向后移动五十厘米以检查是否有障碍物，紧接着我怀疑目标在左边，再后来请让无人机向后移动一米，最后现在让无人机完成降落程序。\nresponse: ", "response": "take_off; Missing move_forward; turn_right 180 degrees; move_forward 1 m; move_back 50 cm; turn_left 90 degrees; move_back 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能去查一下书和烤箱旁边有没有领带吗？\nresponse: ", "response": "书; 烤箱; 领带."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines, then drop it down 50 cm, and afterwards, I need it to land now.\nresponse: ", "response": "take_off; move_down 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以优雅的姿态轻盈飞翔，友好地探索四周，寻找那根温柔的胡萝卜、精巧的遥控器、实用的勺子与温暖的烤面包机吧。\nresponse: ", "response": "胡萝卜; 遥控器; 勺子; 烤面包机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's get the control and search task going again where we left off.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Gently sweep the skies, as a guardian of the court, to locate the tennis racket and the beacon of guidance, the traffic light.\nresponse: ", "response": "tennis racket; traffic light."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地寻找自行车和勺子，这非常重要。\nresponse: ", "response": "自行车; 勺子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在确保安全的前提下，请先定位到那辆停靠在一旁的自行车，随后继续搜寻正在靠近的那人，并留意是否有架飞机飞过，在整个过程中，请特别注意是否能发现一瓶芬达。\nresponse: ", "response": "飞机; 芬达; 自行车; 人."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动物体搜索任务。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 详尽地搜索这片区域，找到那匹马和那些甜甜圈，这非常紧急！\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Retract it back 2 feet, then reverse the drone 40 inches, after that raise it by 20 centimeters, subsequently drift right, next please shift the drone 2 meters to the right, afterwards veer to the right 45 degrees, following that bank left by 2 meters, thereafter tilt the drone to the right by 90 degrees, and in the end make a left turn now.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the spoon and the train, you've got this!\nresponse: ", "response": "spoon; train."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 在程序的指令下，启动那项旨在探索与识别周遭物体的使命。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应该终止当前的控制与搜索任务？\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 要暂停现在的搜索任务吗？\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the frisbee.\nresponse: ", "response": "frisbee."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the flight control process for the drone, would you?\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The previously halted flight control operation should be resumed, ensuring a seamless continuation of your aerial mission.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左侧调整距离，然后前方似乎有障碍物，向前移动一米，接着无人机请飞行到前方，请将无人机向左移动两百厘米，随后请让无人机向左转弯；之后无人机后退一米，紧接着向下移动十厘米，第二，后面三十厘米处可能会有东西，随后下降六十厘米；第三，请上升七十五厘米，最后赶紧降落。\nresponse: ", "response": "Missing move_left; move_forward 1 m; Missing move_forward; move_left 200 cm; Missing turn_left; move_back 1 m; move_down 10 cm; move_back 70 cm; move_down 60 cm; move_up 75 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清理当前的控制和搜索任务吧。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请启动飞行任务。\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please resume the paused control and search task.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then move the drone 3 feet forward, afterwards soar upward 2 meters, next move leftwards 70 inches, subsequently move up 12 inches, following that shift right by 7 feet, after that veer to the left for 5 feet, and in the end turn right 90 degrees.\nresponse: ", "response": "take_off; move_forward 3 ft; move_up 2 m; move_left 70 in; move_up 12 in; move_right 7 ft; move_left 5 ft; turn_right 90 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复先前因故中断的飞行控制任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone takeoff now, then turn it 360 degrees to the right, after that lean left, and land the drone slowly.\nresponse: ", "response": "take_off; turn_right 360 degrees; Missing move_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以进行起飞操作，然后右侧再靠近十五厘米，接着无人机高度过低，请上升，之后可以让无人机向左转九十度吗，紧接着将无人机逆时针旋转六十度，随后请将无人机向后退七十厘米，查看后方环境，最后为了绕过前方的障碍物，请将无人机向左飞行一百二十厘米。\nresponse: ", "response": "take_off; move_right 15 cm; Missing move_up; turn_left 90 degrees; turn_left 60 degrees; move_back 70 cm; move_left 120 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for horse, fanta.\nresponse: ", "response": "horse; fanta."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即起飞，然后请右转五十度，以便调整方向，接着后退一百五十厘米，调整位置，检查后方的情况，随后无人机飞得太高了，请下降六十厘米，之后无人机下降五十厘米以便着陆，最后请让无人机降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, could you hurry up and pause that object search right now?\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前方不清晰，向前移动五十厘米，然后请将无人机向右移动六十厘米，接着左转一百二十度，随后请将无人机向后退七十厘米查看后方环境，请右侧转向，之后升高一百厘米，紧接着请让无人机向后移动四十厘米，再请无人机后退一百厘米，随后无人机下降一百五十厘米，再次下降一百五十厘米以便接近地面，然后右侧移动七十五厘米，接着请无人机升高一百厘米，随后能否让无人机下降一米，最后无人机可以准备降落。\nresponse: ", "response": "move_forward 50 cm; move_right 60 cm; turn_left 120 degrees; move_back 70 cm; Missing turn_right; move_up 100 cm; move_back 40 cm; move_back 100 cm; move_down 150 cm; move_down 150 cm; move_right 75 cm; move_up 100 cm; move_down 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何在繁忙的日常中保持高效学习？\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞操作现在可以开始吗，然后左转四十度，查看左侧情况，在这之后让无人机向后退二百五十厘米，接着将无人机前进，随后右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍，紧接着请将无人机向上升起一米，以提高视角，之后请向右移动一百五十厘米，然后左转看一下，检查那边的情况，第二部是无人机飞得太高了，请下降六十厘米，最后请让无人机在这里进行降落操作。\nresponse: ", "response": "take_off; turn_left 40 degrees; move_back 250 cm; Missing move_forward; move_right 80 cm; move_up 1 m; move_right 150 cm; turn_left 90 degrees; move_down 60 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后左边可能有目标，调整方向，接着无人机升高三十厘米，以调整高度，请将无人机左移，随后向右飞行八十五厘米，调整视角，请将设备后退，紧接着后退一米，之后无人机下降五十厘米以便着陆，最后请无人机安全着陆。\nresponse: ", "response": "take_off; turn_left 90 degrees; move_up 30 cm; Missing move_left; move_right 85 cm; Missing move_back; move_back 1 m; move_down 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 权威的询问，是否已经定位了飞机和行李箱的位置？\nresponse: ", "response": "飞机; 行李箱."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Get it off the ground, then elevate up 2.5 m, and afterwards begin descent to ground level.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前进一百五十厘米，然后向右飞行三十厘米，接着向前移动九十厘米，靠近目标，之后无人机向右转一百八十度，最后左转二十度，检查左侧情况。\nresponse: ", "response": "move_forward 150 cm; move_right 30 cm; move_forward 90 cm; turn_right 180 degrees; turn_left 20 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在那片废墟之上，寻觅着那架失落的飞机，甚至一瓶遗忘的可乐与一瓶破败的碘伏，真是令人沮丧的任务啊！\nresponse: ", "response": "飞机; 可乐; 碘伏."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请迅速找到刀、微波炉和勺子。\nresponse: ", "response": "刀; 微波炉; 勺子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: It's time to take off, then elevate by 8 inches, next move back from the edge of the cliff 3 meters, afterwards move down 3 feet, and in the end begin descent to ground level.\nresponse: ", "response": "take_off; move_up 8 in; move_back 3 m; move_down 3 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Quickly take off! then reverse the drone by 3 feet, after that move to the left 1 foot, afterwards turn it right 45 degrees, next move forward a bit, subsequently shift the drone back 50 centimeters, following that spin the drone to the left 45 degrees, later push it ahead, immediately after go left 2 feet, and in the end land the aircraft.\nresponse: ", "response": "take_off; move_back 3 ft; move_left 1 ft; turn_right 45 degrees; Missing move_forward; move_back 50 cm; turn_left 45 degrees; Missing move_forward; move_left 2 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你先搜寻卡车，然后是汽车，最后留意是否有狗。\nresponse: ", "response": "卡车; 汽车; 狗."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly upwards 60 centimeters, then turn it around 360 degrees, next initiate a rightward lateral movement for 2 meters, afterwards go backward, subsequently land it now.\nresponse: ", "response": "move_up 60 cm; turn_right 360 degrees; move_right 2 m; Missing move_back; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: It is imperative to immediately terminate the existing sequence of target acquisition commands in the drone's mission queue to prevent operational conflicts.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向右转，然后左转二十度，接着请将无人机向左移动一百二十厘米，之后前进二十厘米，随后向右移动两百五十厘米，紧接着无人机左移两米，最后左转看一下，检查那边的情况。\nresponse: ", "response": "Missing turn_right; turn_left 20 degrees; move_left 120 cm; move_forward 20 cm; move_right 250 cm; move_left 2 m; turn_left 90 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以启动飞行任务的管控程序呢？\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向左移动，然后向前移动九十厘米，靠近目标，之后后退一米，避开障碍物，紧接着让无人机向右转动二十度，随后请转向后方，接着快到房顶了，往下飞抵一下吧，下降个五十厘米，然后请将无人机左转四十五度，以获得更好视角，最后现在请让无人机安全降落。\nresponse: ", "response": "Missing move_left; move_forward 90 cm; move_back 1 m; turn_right 20 degrees; turn_left 180 degrees; move_down 50 cm; turn_left 45 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go ahead 40 inches, then move up 12 inches, after that turn it around 360 degrees, next rotate the drone left by 180 degrees, afterwards ascend 3 feet, subsequently please make it fly backward a little, I'm not sure where I parked it, following that go forward 8 inches, then advance forward 50 inches, later please shift the drone 2 meters to the right, and in the end bring it down, now!.\nresponse: ", "response": "move_forward 40 in; move_up 12 in; turn_right 360 degrees; turn_left 180 degrees; move_up 3 ft; Missing move_back; move_forward 8 in; move_forward 50 in; move_right 2 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hurry, scan the area for a fanta bottle, a pair of skis, and a bus, swift as the wind.\nresponse: ", "response": "fanta; skis; bus."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You might want to consider not keeping the current object search task active.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 继续之前的飞行任务吧，你一定能顺利完成！\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前操控飞行任务的清单，犹如拂去桌面的尘埃，令操作界面焕然一新。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, slide right by 1 foot. Next, I want you to shift right, 3 feet, then let's turn it right by 45 degrees. Immediately after that, shift right by 3 meters. After that, make it climb 30 centimeters. Following that, move forward 1.5 meters. Then, bring it forward 3 inches. Subsequently, veer to the left for 5 feet. Finally, fly straight ahead 1 meter.\nresponse: ", "response": "move_right 1 ft; move_right 3 ft; turn_right 45 degrees; move_right 3 m; move_up 30 cm; move_forward 1.5 m; move_forward 3 in; move_left 5 ft; move_forward 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机需要往后移动一米，然后无人机飞得太高了，请下降四十厘米，接着请无人机左转四十五度，这样可以得到更好的视角，随后无人机当前的高度太低，请向上飞行一百五十厘米。\nresponse: ", "response": "move_back 1 m; move_down 40 cm; turn_left 45 degrees; move_up 150 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即暂停当前操作和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在能否起飞，然后为了完成任务，现在需要无人机降落。\nresponse: ", "response": "take_off; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Gently seek out the cola, keyboard, and cell phone, if you would be so kind.\nresponse: ", "response": "cola; keyboard; cell phone."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机逆时针旋转一百度，然后让无人机顺时针旋转四十度，接着请向后移动，随后无人机向右移动四十厘米，最后为了完成任务，现在需要无人机降落。\nresponse: ", "response": "turn_left 100 degrees; turn_right 40 degrees; Missing move_back; move_right 40 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往搜索公共汽车。\nresponse: ", "response": "公共汽车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机准备起飞了吗，然后无人机右移一米，以绕过障碍物，之后无人机需要在此地降落。\nresponse: ", "response": "take_off; move_right 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Unleash the halted command, letting it soar like a bird freed from its cage, to resume the hunt for your target.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please urgently locate the cat, cup, tv, and skateboard with meticulous care.\nresponse: ", "response": "cat; cup; tv; skateboard."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the control and search task, why not? You’ve got the tech right there, don’t let it sit idle!\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否暂时停止当前的控制与搜索任务呢？\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机是否可以进行起飞操作，然后无人机请飞行到前方三十厘米，之后后退七十厘米，紧接着无人机现在升高一百厘米，随后无人机上升，接着右移五厘米，最后请将无人机向左移动。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: It's time to take off, then move leftwards 70 in, afterwards rotate the drone to the left 60 degrees, next drop it, subsequently proceed left 2 meters.\nresponse: ", "response": "take_off; move_left 70 in; turn_left 60 degrees; Missing move_down; move_left 2 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the previously paused operation and continue the search task.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn it 360 degrees to the right, then slide right by 50 centimeters, and afterwards land the drone now please.\nresponse: ", "response": "turn_right 360 degrees; move_right 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往餐桌，找到剪刀和长颈鹿，然后检查烤箱。\nresponse: ", "response": "剪刀; 餐桌; 长颈鹿; 烤箱."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not fail to clear the current object search task list.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议暂时中止当前的搜寻任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往厕所，找到胡萝卜和遥控器。\nresponse: ", "response": "厕所; 胡萝卜; 遥控器."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找那个让人头疼的碗。\nresponse: ", "response": "碗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着之前的任务，让小飞机继续飞吧。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for bread, boat, skis.\nresponse: ", "response": "bread; boat; skis."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 当前的控制和搜寻任务被暂停了，这是为了确保一切按计划顺利进行。感谢您的配合与理解。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence for the drone immediately, as every second counts in ensuring a smooth and timely operation.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请即刻以优雅之姿清空当前的飞行任务清单，确保一切顺畅如初。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate 90 degrees to the right, then let’s get the drone to descend 1.2 meters, afterwards veer left by 45 degrees, next shift the drone to the left by 2 meters, later fly to the right until you reach 3 meters, and in the end climb 18 inches.\nresponse: ", "response": "turn_right 90 degrees; move_down 1.2 m; turn_left 45 degrees; move_left 2 m; move_right 3 m; move_up 18 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Rise up!, then apply aft movement by 8 feet, next go right 3 ft, afterwards rotate to the right 30 degrees, subsequently revert back 60 centimeters, following that send it to the right 7 feet, and in the end come down to the ground.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the search task list now.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: veer to the right 45 degrees\nresponse: ", "response": "turn_right 45 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索并定位碗和长颈鹿的位置。\nresponse: ", "response": "碗; 长颈鹿."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，然后向右侧转向，接着上升三十厘米，提高视角，之后无人机请向后飞行一米，随后下降一米，最后让无人机逆时针旋转一百度。\nresponse: ", "response": "take_off; Missing turn_right; move_up 30 cm; move_back 1 m; move_down 1 m; turn_left 100 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drop down 10 cm, then come down now, let's land.\nresponse: ", "response": "move_down 10 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向右移动三十六厘米，然后无人机飞得太高了，请下降一米，接着请让无人机向前飞行一米，探查前方，随后右转八十度，以便更好地观察右侧，紧接着无人机飞得太高了，请下降一米，之后右转五十度，再接着向前推进，第二步是无人机右转一百八十度，掉头，第三步无人机请飞行到前方三十厘米，最后可以降落了吗。\nresponse: ", "response": "move_right 36 cm; move_down 1 m; move_forward 1 m; turn_right 80 degrees; move_down 1 m; turn_right 50 degrees; Missing move_forward; turn_right 180 degrees; move_forward 30 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate takeoff right away, then move it 200 centimeters forward, after that rotate to the right 30 degrees, subsequently rotate the drone left by 30 degrees, afterwards commence a vertical descent of 6 feet, next spin it to the right 180 degrees, following that fly it right by 3 inches, then turn left 150 degrees, later fly straight ahead 20 meters, after that drone descend 3 feet, immediately after ascend 1 foot, subsequently rotate 360 degrees to the right, and in the end make it land.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您立即暂停当前正在执行的搜寻任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate takeoff protocol, then rotate 90 degrees clockwise, after that move right by 3 meters, and afterwards bring it to the ground gently.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pick up where we left off with that flight control task, will ya?\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去找找背包、烤箱、书和鼠标吧！\nresponse: ", "response": "背包; 烤箱; 书; 鼠标."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机能向右转四十五度吗，然后快点左移，接着无人机下降两百厘米，之后让无人机向后移动二百厘米，随后无人机上升，紧接着请将无人机左转，最后无人机可以进行降落。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即终止当前控制指令并启动搜寻任务的清除程序。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前操控飞行任务列表被优雅地清空。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，去查查看那艘船旁边有没有长椅和冲浪板，顺便找找哪个地方有三明治。\nresponse: ", "response": "船; 长椅; 冲浪板; 三明治."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Consider searching for the laptop near the toilet and then check by the microwave.\nresponse: ", "response": "laptop; toilet; microwave."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请启动无人机的起飞程序，然后请将无人机缓慢上升五十厘米，以便获得更好的视角，接着请让无人机向右平移四十厘米，随后无人机现在降下一百五十厘米，紧接着请无人机左转四十五度，这样可以得到更好的视角，最后无人机降落在地面上。\nresponse: ", "response": "take_off; move_up 50 cm; move_right 40 cm; move_down 150 cm; turn_left 45 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Set the drone’s altitude to 200 meters and begin cruising.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Start the flight control task now!\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在餐桌附近寻找蛋糕和披萨，并留意手提包的位置。\nresponse: ", "response": "餐桌; 蛋糕; 披萨; 手提包."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，然后左转六十度，检查左侧情况；前方可能有障碍物，向前飞行之后，将无人机向下移动一百五十厘米；接着飞行到前面一米处，随后请右边转向；紧接着，请让无人机前方移动八十厘米，检查前方是否有障碍物；第三，让无人机下降一米；随后，请上升一米，最后赶紧降落。\nresponse: ", "response": "take_off; turn_left 60 degrees; Missing move_forward; move_down 150 cm; move_forward 1 m; Missing turn_right; move_forward 80 cm; move_down 1 m; move_up 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请优雅地寻找那条领带，温柔地探索那只杯子，轻盈地追踪那份三明治，悄然地定位那瓶雪碧。\nresponse: ", "response": "领带; 杯子; 三明治; 雪碧."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: In the vast expanse of your mission, carefully navigate through the air as if you were a silent whisper in the wind, and with the precision of a hawk spotting its prey from afar, locate and identify the coldrex.\nresponse: ", "response": "coldrex."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could starting the object search task be the next step in your mission?\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Amidst the serene sky where your aerial voyager soars, gently clear the present array of sought-after entities from the quest log.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the cup, banana, and tennis racket! It's like looking for a needle in a haystack, but I know you can do it!\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate launch, then fly left side, after that drone descend 3 feet, next fall back 2 meters, subsequently let's bring it down gently, maybe 30 inches, afterwards get it to climb 4 feet now!, immediately after turn right about 90 degrees, following that turn it right 60 degrees, thereafter move the drone 3 feet forward, then veer to the left 40 degrees smoothly, and in the end move to the right.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否请您继续之前暂停的飞行任务呢？\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly right around the corner 10 feet, then sink down 50 cm, afterwards go forward 7 inches, next fly forward quickly 25 meters, subsequently elevate up 2.5 m, after that lower it slightly, following that give it a little nudge to the right, like it’s tipping over, immediately after adjust the drone's position to the right, then shift right 50 centimeters, and in the end perform a lateral correction of 150 centimeters to the right.\nresponse: ", "response": "move_right 10 ft; move_down 50 cm; move_forward 7 in; move_forward 25 m; move_up 2.5 m; Missing move_down; Missing move_right; move_right 50 cm; Missing move_right; move_right 150 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn it right by 90 degrees, then go back 200 cm, after that turn 120 degrees to the right, next shift the drone to the left by 2 meters, afterwards turn it right by 10 degrees, following that descend 20 centimeters, subsequently decrease altitude by 5 inches, and later descend 12 inches now, in the end the drone should go down now.\nresponse: ", "response": "turn_right 90 degrees; move_back 200 cm; turn_right 120 degrees; move_down 12 in; move_down 5 in; move_down 20 cm; move_left 2 m; turn_right 10 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 前方有障碍物，向前移动两米，然后请将无人机后退一百厘米以查看后方的情况，接着请无人机左转四十五度调整角度以获得更好视角，随后将无人机逆时针旋转六十度，紧接着向前飞行五十厘米，之后无人机高度过高，请下降五十厘米，紧接着让无人机顺时针旋转四十度，最后赶紧降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current target search list.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 往右靠拢一百二十厘米，然后下降七十五厘米，接着右移七十五厘米，躲过那个障碍物，继续前行，之后后面有什么东西，请将无人机右移，紧接着无人机现在需要调整方向，请向右转动七十度，随后无人机向后退，最后请将无人机降落在此处。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the boat and the dog, then locate the bicycle.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Can humans find liquid water on Mars?\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机请向前飞行一米，然后前进二百厘米，接着请问无人机能左移四十厘米吗，之后右侧再靠近十五厘米，紧接着立刻右转，请上升五十厘米，往前飞行一米，向右移动一百厘米，随后向右再靠近九十厘米，无人机前进七十厘米，检查前方是否有新发现，接下来无人机上升两米，需要左转，飞行一米，最后现在可以让无人机降落吗。\nresponse: ", "response": "move_forward 1 m; move_forward 200 cm; move_left 40 cm; move_right 15 cm; Missing turn_right; move_up 50 cm; move_forward 1 m; move_right 100 cm; move_right 90 cm; move_forward 70 cm; move_up 2 m; move_left 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pick up where we left off with the drone's flight control.\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the flight control sequence.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Isn't it time to see if that kite is still floating in the sky? Go find it!\nresponse: ", "response": "kite."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 准备起飞吧，然后向左转动一圈，接着无人机向前飞行一米，目标就在前面，准备接近，随后向左侧移动二十五厘米以适应环境，紧接着无人机下降四十五厘米，之后把无人机往右移六十厘米，后来向右移动两米，接下来前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，最后下降一百五十厘米。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的控制操作并中止搜寻任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the painkillers and the donut, then check if there's a cup by the sink, will you?\nresponse: ", "response": "painkillers; donut; sink; cup."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lower it by 50 cm, then pull back 4 feet, after that go left 3 feet slowly, next without delay make it descend by 1 meter, subsequently commence a forward advance of 12 feet, afterwards I need the drone to go forward 100 inches quickly, following that go left, then boldly turn right 90 degrees, immediately after bring the drone down 40 centimeters, and in the end maneuver the drone backward 100 inches.\nresponse: ", "response": "move_down 50 cm; move_back 4 ft; move_left 3 ft; move_down 1 m; move_forward 12 ft; move_forward 100 in; Missing move_left; turn_right 90 degrees; move_down 40 cm; move_back 100 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请取消当前的控制指令，并终止搜索任务。感谢您的配合。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议启动并执行搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go down 1 foot, then initiate a 180-degree counterclockwise rotation, after that let’s see it slide left like it’s doing the moonwalk, afterwards fly backward for 2 meters, subsequently rise up, next spin counterclockwise 45 degrees, following that hover down to earth gently, 3 feet, and in the end drop the drone down to the ground.\nresponse: ", "response": "move_down 1 ft; turn_left 180 degrees; Missing move_left; move_back 2 m; Missing move_up; turn_left 45 degrees; move_down 3 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动详尽的飞行任务控制流程，以权威的指导确保每一步都精准无误。在这个过程中，我们鼓励您探索更多可能性，同时保持对细节的关注。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您像寻找遗失的宝藏一样，在那片草地上优雅地滑翔，先找到热狗，接着是长椅，最后别忘了那个快乐的飞盘。\nresponse: ", "response": "热狗; 长椅; 飞盘."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the chair.\nresponse: ", "response": "chair."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Gently soar through the sky, a bird in search of its pizza, and kindly bring it back to us.\nresponse: ", "response": "pizza."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then raise altitude a little, next engage in an upward climb of 500 centimeters, afterwards I’m a bit apprehensive, could we lower the drone slowly by 20 inches, subsequently drone, descend to 8 feet, later rotate counterclockwise 30 degrees, following that descend by 30 centimeters, then shift right 6 meters, and in the end back the drone away from the fence 5 meters.\nresponse: ", "response": "take_off; Missing move_up; move_up 500 cm; move_down 20 in; move_down 8 ft; turn_left 30 degrees; move_down 30 cm; move_right 6 m; move_back 5 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek forthwith the bus, horse, motorcycle, airplane; let not thy quest waver.\nresponse: ", "response": "bus; horse; motorcycle; airplane."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the tennis racket and the cola with precision, ensuring a thorough scan of the area.\nresponse: ", "response": "tennis racket; cola."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the current object search task list, ensuring the drone is ready for new instructions.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the bread, you got this!\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the bread, oven, and person with your advanced sensors.\nresponse: ", "response": "bread; oven; person."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立刻前往寻找剪刀、橙子和花瓶。\nresponse: ", "response": "剪刀; 橙子; 花瓶."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn it right by 10 degrees, then slide right, next let's move back 2 feet, I'm feeling a bit cautious about the current position, afterwards give it a little nudge to the right, like it's tipping over.\nresponse: ", "response": "turn_right 10 degrees; Missing move_right; move_back 2 ft; Missing move_right."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bring the drone down 5 meters to check the roof, then fly upwards 10 inches, afterwards commence landing sequence.\nresponse: ", "response": "move_down 5 m; move_up 10 in; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: May we kindly resume the previously paused flight control task?\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Must we not promptly resume the previously paused flight control task, considering the critical nature of our operations?\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 以权威的口吻，命令式地表达为：\n\n立即清空当前任务列表中的所有搜索目标。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the orange fanta and the dog.\nresponse: ", "response": "orange; fanta; dog."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左侧可能有目标，请左转一百八十度查看，然后向后移动五十厘米，以便避开障碍物，随后马上下降，紧接着立刻右转五十度，最后把小飞机右边移六十厘米吧。\nresponse: ", "response": "turn_left 180 degrees; move_back 50 cm; Missing move_down; turn_right 50 degrees; move_right 60 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Lower the TV volume to 15%.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: First, shift to the left, then ascend swiftly 2 meters, next fly to the right 10 meters, afterwards bring it left 4 feet, subsequently move backward 3 feet, following that revert back 60 centimeters, later descend 1.5 feet.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着之前暂停的任务，现在开始重新搜索目标物体吧。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在程序的指令下，启动那项旨在探索与识别周遭物体的使命。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机立即起飞，然后右转八十度，以便更好地观察右侧，接着无人机下移四十厘米，随后无人机向上移动，紧接着无人机高度太低，请上升，最后右边转四十五度，给右侧一个惊喜。\nresponse: ", "response": "take_off; turn_right 80 degrees; move_down 40 cm; Missing move_up; Missing move_up; turn_right 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then move up 2 inches, after that rotate the drone left, subsequently fly backwards 5 inches, next Rotate it 120 degrees left, afterwards elevate to 15 feet high.\nresponse: ", "response": "take_off; move_up 2 in; Missing turn_left; move_back 5 in; turn_left 120 degrees; move_up 15 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off now, then move right 2 feet, rise now, afterwards move forward 3 feet, next move right 10 cm, following that turn 15 degrees to the left, subsequently climb up by 12 inches, immediately after that drop it down 50 cm.\nresponse: ", "response": "take_off; move_right 2 ft; Missing move_up; move_down 1 ft; move_forward 3 ft; move_right 10 cm; turn_left 15 degrees; move_up 12 in; move_down 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the surfboard.\nresponse: ", "response": "surfboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then move up slightly, hover and rotate right 45 degrees, afterwards drop a bit 40 centimeters, next head to the left, following that rotate it 120 degrees left, and in the end set it down gently.\nresponse: ", "response": "take_off; Missing move_up; turn_right 45 degrees; move_down 40 cm; Missing move_left; turn_left 120 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover to the right 6 inches, then move it up 10 centimeters, afterwards fly the drone to the left by 200 meters to follow the river, next rotate 90 degrees clockwise, following that move the drone in reverse direction, subsequently how about moving to the left by 80 cm?, thereafter rotate to the left side, and in the end initiate landing procedure.\nresponse: ", "response": "move_right 6 in; move_up 10 cm; move_left 200 m; turn_right 90 degrees; Missing move_back; move_left 80 cm; Missing turn_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Amidst the pressing urgency, let not the halted quest for the object be prolonged; resume forthwith, lest we miss the fleeting chance.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hold up the current flight control task.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即恢复先前已暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Commence the task of initiating the drone's flight control process, ensuring all parameters are meticulously set for an optimal aerial operation.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向左移动一米五，之后无人机降落。\nresponse: ", "response": "move_left 1.5 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended control and search operations.\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Hover down to earth gently, 3 feet, then begin descent to ground level.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你要找的是胡萝卜吗？\nresponse: ", "response": "胡萝卜."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机可以起飞了，然后将无人机前进；接着，无人机可以右转五十度吗；随后，请将无人机慢慢下降一米，这样可以更接近地面；紧接着，无人机前移六十厘米以检查前方情况；之后，无人机下降八十厘米，以接近地面；随后，向前飞行五十厘米；最后，现在可以让无人机降落吗。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Ugh, just take off, then reverse 5 meters, after that climb up 1 meter, subsequently descend 2 feet, next turn left now, afterwards glide left for 100 cm, in the end bring it to the ground.\nresponse: ", "response": "take_off; move_back 5 m; move_up 1 m; move_down 2 ft; Missing turn_left; move_left 100 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机现在起飞，准备工作，然后向右移动七十厘米，接着请后退七十厘米检查，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the target identification mission.\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您像猎鹰般敏锐地寻找那个电视。\nresponse: ", "response": "电视."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not pause the drone flight control task again; resume it.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the object search task with a smile!\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Start the control and search task right away!\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请以轻盈的姿态，在这片静谧之中探寻那位悄然漫步的猫。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get ready and take off, then ascend 1 meter, after that move backwards 25 centimeters, next fly forward 72 inches, subsequently turn to the right, afterwards rotate to the right by 180 degrees, following that descend 10 inches, later back the drone away from the fence 5 meters, and in the end fly it right by 3 inches.\nresponse: ", "response": "take_off; move_up 1 m; move_back 25 cm; move_forward 72 in; Missing turn_right; turn_right 180 degrees; move_down 10 in; move_back 5 m; move_right 3 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应让当前正在进行的搜寻任务暂时搁置？\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 清空当前的任务列表，让您的操作更加高效有序。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能找到雨伞和摩托车吗？还有，务必把碗和网球拍也定位到，可以做到吗？\nresponse: ", "response": "雨伞; 摩托车; 碗; 网球拍."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go down 50 cm, then rotate it to the right 180 degrees, this is so cool!, afterwards make it climb 30 centimeters, next shift right, subsequently bring the drone down 40 centimeters, after that descend 20 centimeters, later drift rightwards, and in the end bring it in for landing.\nresponse: ", "response": "move_down 50 cm; turn_right 180 degrees; move_up 30 cm; Missing turn_right; move_down 40 cm; move_down 20 cm; Missing move_right; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please move forward a little bit, I’m not quite sure where it is, then please land the drone softly.\nresponse: ", "response": "Missing move_forward; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地但别无选择地去餐桌附近检查，看看那里是否有被遗忘的盆栽植物和瓶子。\nresponse: ", "response": "餐桌; 盆栽植物; 瓶子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着先前暂停的那个飞行任务吧，感觉这样会更顺畅哦。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找找面包和雪碧，然后看看水槽旁有没有花瓶。\nresponse: ", "response": "面包; 雪碧; 水槽; 花瓶."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Just get it out of here already! Take off now! Then drift right. After that, fly to the left 5 meters. Next, move the drone to the right by 2 meters. Immediately after, hover and rotate right 45 degrees. Following that, please shift the drone 2 meters to the right. Thereafter, move it straight ahead. Afterwards, tilt the drone 90 degrees to the right, then swerve left 90 degrees. In the end, bring the drone down to earth.\nresponse: ", "response": "take_off; Missing move_right; move_left 5 m; move_right 2 m; turn_right 45 degrees; move_right 2 m; Missing move_forward; turn_right 90 degrees; turn_left 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, turn right by 90 degrees, then fly forward 72 inches.\nresponse: ", "response": "turn_right 90 degrees; move_forward 72 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please clear the current control and search tasks to ensure optimal drone operation.\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sink, cake, and bottle.\nresponse: ", "response": "sink; cake; bottle."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前任务列表\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何在短时间内准备一次高效的演讲？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请友好地清空当前的飞行任务列表，确保一切准备就绪。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin the takeoff now, then fly to the right until you reach 3 meters, after that move back a short distance, next circle left by 45 degrees, subsequently move the drone backward 1 meter, and in the end, feeling lazy, land it now.\nresponse: ", "response": "take_off; move_right 3 m; Missing move_back; turn_left 45 degrees; move_back 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there! Why don’t we get that paused flight control task going again?\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the cup, sink, sports ball, and vase with enthusiasm!\nresponse: ", "response": "cup; sink; sports ball; vase."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Rotate left 90 degrees, then spin it left, 60 degrees, after that turn left 150 degrees, subsequently rotate left by 45 degrees, next move left by 2 feet, afterwards retract the drone a bit, following that proceed right 1.5 meters, and in the end revert back 60 centimeters.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即停止当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Nudge to the left side, then propel it forward by 200 centimeters, and land immediately after.\nresponse: ", "response": "Missing move_left; move_forward 200 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drop it down 50 inches, then let's land this bird.\nresponse: ", "response": "move_down 50 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines. Immediately after that, let's make it climb up 6 feet! Then shift right by 3 meters. Next, fly it to the right 20 inches, then fly to the right 2 inches. After that, rotate right, not too much, just 15 degrees. Following that, drop it 4 inches. Subsequently, move backwards 25 centimeters. Afterwards, adjust right by 5 feet. Then tilt left 40 degrees. Next, proceed forward 70 centimeters steadily. Thereafter, turn it right 60 degrees. In the end, bring it down now.\nresponse: ", "response": "take_off; move_up 6 ft; move_right 3 m; move_right 20 in; move_right 2 in; turn_right 15 degrees; move_down 4 in; move_back 25 cm; move_right 5 ft; turn_left 40 degrees; move_forward 70 cm; turn_right 60 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the existing object search task list.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed to locate the suitcase and laptop, ensuring a thorough search.\nresponse: ", "response": "suitcase; laptop."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the tennis racket.\nresponse: ", "response": "tennis racket."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Check the refrigerator, grab the cell phone, and find the handbag now!\nresponse: ", "response": "refrigerator; cell phone; handbag."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动任务，犹如猎人精准寻找目标般，踏上探索之旅。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 简洁的建议你搜索餐桌和碘伏，然后迅速转向飞机。\nresponse: ", "response": "餐桌; 碘伏; 飞机."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff protocol, then move forward a bit, like 2 meters, after that go down 3 feet, subsequently rotate right by 270 degrees, next shift right by 100 centimeters, afterwards raise it 20 inches, following that Rotate it 120 degrees left, then adjust forward 3 feet, and finally Let’s turn it right by 30 degrees.\nresponse: ", "response": "take_off; move_forward 2 m; move_down 3 ft; turn_right 270 degrees; move_right 100 cm; move_up 20 in; turn_left 120 degrees; move_forward 3 ft; turn_right 30 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 权威地建议您前往搜索区域定位冲浪板和手机。\nresponse: ", "response": "冲浪板; 手机."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去找找花瓶和人，还有那边的热狗和杯子呢？\nresponse: ", "response": "花瓶; 人; 热狗; 杯子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin the takeoff now. Then, let's bring it down gently, maybe 30 inches. Next, slide right 4 inches. Afterwards, soar up 2 meters. Following that, hover and then fly right 6 feet. Immediately after, bring the drone back 2 feet. Thereafter, fly to the right until you reach 3 meters. Subsequently, lift up 40 centimeters. After that, adjust the drone's position to the right. Next, move it back a bit. Then, rotate it to the right 180 degrees, this is so cool! First, go to the left 2 meters. Finally, execute a lateral displacement of 5 feet to the right.\nresponse: ", "response": "take_off; move_down 30 in; move_right 4 in; move_up 2 m; move_right 6 ft; move_back 2 ft; move_right 3 m; move_up 40 cm; Missing move_right; Missing move_back; turn_right 180 degrees; move_left 2 m; move_right 5 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降一点，五十厘米，然后右移七十五厘米，躲过那个障碍物，继续前行，接着前进九十厘米，探索前方的未知区域；随后后退四十厘米，调整位置，请将无人机右移两米；紧接着往下降低七十厘米，之后向前移动九十厘米，靠近目标，随即无人机能否向上飞行八十厘米，以便更好地查看周围环境；随后无人机上升两米，前方不清晰，向前移动五十厘米；紧接着请将无人机向后退七十厘米，查看后方环境，上移；然后向上升起二十厘米，视角向上。最后可以降落了吗？\nresponse: ", "response": "move_down 50 cm; move_right 75 cm; move_forward 90 cm; move_back 40 cm; move_right 2 m; move_down 70 cm; move_forward 90 cm; move_up 80 cm; move_up 2 m; move_forward 50 cm; move_back 70 cm; Missing move_up; move_up 20 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前正在进行的控制操作及搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空现有的飞行任务列表吧。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧找找那该死的沙发和烦人的滑雪板，还有那破风筝！\nresponse: ", "response": "沙发; 滑雪板; 风筝."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn it right by 10 degrees, then let it go backwards 3 in, next nudge it right 4 feet, after that turn left 150 degrees, subsequently can it descend, afterwards pull the drone up 50 centimeters, following that bring it left 4 feet.\nresponse: ", "response": "turn_right 10 degrees; move_back 3 in; move_right 4 ft; turn_left 150 degrees; Missing move_down; move_up 50 cm; move_left 4 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 轻拂任务之尘，建议清空现行的飞行指令清单。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向前移动一米，以便更好地观察前方的目标，然后后退八十厘米，接着让无人机下降，最后请让无人机退后两米。\nresponse: ", "response": "move_forward 1 m; move_back 80 cm; Missing move_down; move_back 2 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Pull the drone up 50 centimeters, then move it forward 7 meters, after that rotate left by 30 degrees, next proceed forward 70 centimeters steadily, afterwards slide over to the right, following that rotate left by 270 degrees, subsequently drone should shift right 4 feet, and in the end land the drone now.\nresponse: ", "response": "move_up 50 cm; move_right 4 ft; move_forward 7 m; turn_left 30 degrees; turn_left 270 degrees; move_forward 70 cm; Missing move_right; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机起飞，然后掉头看看；为了更好地观测左侧，请将无人机左转，接着来个后退五十厘米的动作，看看后面有什么惊喜；请让无人机向后移动一米，之后请将无人机下降四十厘米，随后把无人机往右移六十厘米吧，最后右转角度五十度。\nresponse: ", "response": "take_off; turn_left 180 degrees; Missing turn_left; move_back 50 cm; move_back 1 m; move_down 40 cm; move_right 60 cm; turn_right 50 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Make the drone ascend by 50 inches, then lower it down now.\nresponse: ", "response": "move_up 50 in; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 加油哦，去找到那个烤箱，旁边的杯子，还有不远处的遥控器吧！\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the cat, snowboard, coldrex, and horse.\nresponse: ", "response": "cat; snowboard; coldrex; horse."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机现在起飞吗，然后飞行到前面一米处，接着请向后退一百五十厘米，随后向左飞行一百二十厘米，紧接着请将无人机前进一米，之后无人机左移一米，上移，向后退三十厘米以避免碰撞，任务要求，无人机下降五十厘米，向右转动，前方似乎有障碍物，向前移动一米，然后请让无人机向右移动六十厘米，避免障碍物，随后前方有点模糊，向前移动两百五十厘米，最后我感觉右边可能会有。\nresponse: ", "response": "take_off; move_forward 1 m; move_back 150 cm; move_left 120 cm; move_forward 1 m; move_left 1 m; Missing move_up; move_back 30 cm; move_down 50 cm; Missing turn_right; move_forward 1 m; move_right 60 cm; move_forward 250 cm; turn_right 90 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去找找勺子、滑雪板和飞盘吧！\nresponse: ", "response": "勺子; 滑雪板; 飞盘."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索飞机和剪刀。\nresponse: ", "response": "飞机; 剪刀."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, could you check if there's a donut or bread around?\nresponse: ", "response": "donut; bread."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Quickly take off! Let's have some fun, turn right 180 degrees!, then descend it down 30 inches. Rise up 1.5 meters afterwards, move forward 5 centimeters next, slide to the right 20 inches following that, fly to the right 2 inches subsequently, and land the aircraft in the end.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请友好地结束当前的控制与搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 推荐几款适合初学者的无人机品牌。\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着之前停下的控制和搜索任务吧。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在需要起飞，然后请向左移动七十五厘米，寻找目标物体，随后转向右边，紧接着右移七十五厘米，之后任务要求，无人机下降五十厘米，接着前进七十厘米，检查前方是否有新发现，最后无人机高度太低，请上升。\nresponse: ", "response": "take_off; move_left 75 cm; Missing turn_right; move_right 75 cm; move_down 50 cm; move_forward 70 cm; Missing move_up."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off, then bring the drone back 2 feet, after that shift left 20 inches, next bring it forward 3 inches, subsequently decrease altitude by 5 inches, afterwards go forward 8 inches, following that shift right 1 meter, and in the end hover and rotate right 45 degrees.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, left turn now, then move rightward 4 in, after that rotate right 135 degrees, subsequently make the drone climb 5 inches, next cause it to move left 40 cm, following that rotate 90 degrees left, afterwards quick, rotate left 90 degrees, immediately after fly forward 40 centimeters, and in the end land the drone now.\nresponse: ", "response": "Missing turn_left; move_right 4 in; turn_right 135 degrees; move_up 5 in; move_left 40 cm; turn_left 90 degrees; turn_left 90 degrees; move_forward 40 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Take a moment to suspend the ongoing guidance and exploration activity, ensuring that you can seamlessly resume with renewed focus and precision.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't forget to look for the toothbrush and avoid the bus.\nresponse: ", "response": "toothbrush; bus."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's kick off the object search task, shall we?\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the bottle, then locate the painkillers, and finally track down the sports ball. You can do this!\nresponse: ", "response": "bottle; painkillers; sports ball."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向左飞行一百二十厘米，然后下降一百五十厘米，接着下降八十厘米，接近地面，准备进行详细检查，随后飞行到前方五十厘米，之后左侧移动二百厘米，紧接着下降一百厘米，再向右移动一百五十厘米以确认前方无障碍物，随后上升一米，最后请后退七十厘米以避开障碍。\nresponse: ", "response": "move_left 120 cm; move_down 150 cm; move_down 80 cm; move_forward 50 cm; move_left 200 cm; move_down 100 cm; move_right 150 cm; move_up 1 m; move_back 70 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即让无人机起飞，然后让无人机顺时针旋转，接着下降七十厘米，调整无人机高度；之后让无人机逆时针旋转二十度，紧接着无人机右转九十度，重新调整方向；随后右侧可能有东西，帮我转过去看看，接下来无人机前进一百厘米；前进一段距离后，无人机，请后退两百厘米，然后左转；将无人机向下移动一百五十厘米之后，请向后移动二百厘米；最后请让无人机调头看看，在这之后请将无人机上升一百二十厘米，以便获得更高的视角。\nresponse: ", "response": "take_off; Missing turn_right; move_down 70 cm; turn_left 20 degrees; turn_right 90 degrees; turn_right 90 degrees; move_forward 100 cm; Missing move_forward; move_back 200 cm; turn_left 90 degrees; move_down 150 cm; move_back 200 cm; turn_left 180 degrees; move_up 120 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the present command and seek anew.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请前往搜寻饼干和叉子。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend the drone by 100 centimeters, then fly forward 1 meter, afterwards rotate left by 45 degrees, following that tilt left 40 degrees, next rotate left 90 degrees, after that rotate right 45 degrees to change direction towards the river, subsequently shift left 2 feet, immediately after shift right 1 meter, then turn it right by 90 degrees, and finally turn left 60 degrees.\nresponse: ", "response": "move_down 100 cm; move_forward 1 m; turn_left 45 degrees; turn_left 40 degrees; turn_left 90 degrees; turn_right 45 degrees; move_left 2 ft; move_right 1 m; turn_right 90 degrees; turn_left 60 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机右转五十度来调整方向，然后无人机右转九十度，之后把无人机往右移六十厘米吧，接着无人机右转五十度来调整方向，随后向左移动一百八十厘米，后来请将无人机向左移动，紧接着右转四十度，接下来请将无人机上升六十厘米，获取更高视角，然后无人机后退五十厘米，以便于调整位置，最后无人机准备降落。\nresponse: ", "response": "turn_right 50 degrees; turn_right 90 degrees; move_right 60 cm; turn_right 50 degrees; move_left 180 cm; Missing move_left; turn_right 40 degrees; move_up 60 cm; move_back 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the surfboard, please.\nresponse: ", "response": "surfboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off right now, then shift to the right 2 meters, after that bring it down slowly by 30 centimeters, next rotate clockwise 90 degrees, subsequently move right by 3 meters, afterwards travel forward a bit, following that send it forward, later initiate a 180-degree counterclockwise rotation, and in the end land soon.\nresponse: ", "response": "take_off; move_right 2 m; move_down 30 cm; turn_right 90 degrees; move_right 3 m; Missing move_forward; Missing move_forward; turn_left 180 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请让无人机起飞，然后请让无人机向上飞，接着无人机右移一米，最后无人机在这儿降落吧。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机飞到空中，然后无人机向左侧移动，之后向前飞行，接着向右飞行三十厘米，随后请将无人机向左移动两百厘米，后来左移，最后请向后移动二百厘米。\nresponse: ", "response": "take_off; Missing move_left; Missing move_forward; move_right 30 cm; move_left 200 cm; Missing move_left; move_back 200 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到我昨天存储在电脑桌面上的文件夹。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续执行此前已暂停的详尽搜寻物体任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能否立即起飞，然后无人机飞得太高了，请下降一米，接着无人机当前的高度太低，请向上飞行一百五十厘米，随后往下降低七十厘米，最后准备降落无人机，结束任务。\nresponse: ", "response": "take_off; move_down 1 m; move_up 150 cm; move_down 70 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the object detection sequence.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's blast off, initiate takeoff, then turn it around 360 degrees, after that shift the drone leftwards by 75 centimeters, next cause it to move left 40 cm.\nresponse: ", "response": "take_off; turn_right 360 degrees; move_left 75 cm; move_left 40 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sports ball and tennis racket.\nresponse: ", "response": "sports ball; tennis racket."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右移动两米，然后无人机前进一百厘米，接着把无人机降落一米，随后提升，最后无人机向前飞行一米，目标就在前面，准备接近。\nresponse: ", "response": "move_right 2 m; move_forward 100 cm; move_down 1 m; Missing move_up; move_forward 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone up now, then veer to the left, afterwards turn it left by 90 degrees, next fly back 6 inches, subsequently take it left 4 inches, and in the end put it down now.\nresponse: ", "response": "take_off; Missing turn_left; move_back 6 in; turn_left 90 degrees; move_left 4 in; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current flight control task list. Isn't it essential for a smooth operation?\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then begin the ascent, after that go ahead 40 inches, next move to the right, subsequently fly it backward like it's in reverse gear, afterwards come back to me, immediately after shift to the back, following that please move the drone backwards 2 feet, then I need this thing to go up right now, please, thereafter turn it right, and finally move the drone right first 2 inches and later by 80 inches.\nresponse: ", "response": "take_off; Missing move_up; move_forward 40 in; Missing move_right; Missing move_back; turn_right 30 degrees; move_back 2 ft; Missing move_back; Missing move_up; Missing turn_right; Missing move_back; move_right 2 in; move_right 80 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要清空当前的任务列表？\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not the case that the area where the horse and airplane are located should be searched, along with the vicinity of the toilet?\nresponse: ", "response": "horse; airplane; toilet."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the kite, ensuring you cover all areas thoroughly, and then locate the bread, confirming its position precisely.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复并执行先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bring the drone down 5 meters to check the roof, then drift right like you're dodging an obstacle, 5 meters, after that go backward 4 meters, next turn to the right, immediately after fly down 8 inches, subsequently turn 45 degrees to the right, following that fly backward 20 feet, and in the end initiate landing.\nresponse: ", "response": "move_down 5 m; move_right 5 m; move_back 4 m; Missing turn_right; move_down 8 in; turn_right 45 degrees; move_back 20 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的控制与搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not search for the bench or the kite, but find the chair.\nresponse: ", "response": "bench; kite; chair."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 赶紧去那辆停着的公共汽车周围转转，看看能不能找到面包和胡萝卜，务必小心哦。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前飞行任务列表，确保系统处于安全状态。\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去搜寻那个像碗一样圆润的地方，看看有没有藏着香蕉，顺便检查下键盘是否在附近。\nresponse: ", "response": "碗; 香蕉; 键盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 上移，然后右转四十度，接着向前移动一米，之后无人机下降一百五十厘米，下方移动，紧接着右转四十五度，调整无人机方向，请让无人机向后移动五十厘米。\nresponse: ", "response": "Missing move_up; turn_right 40 degrees; move_forward 1 m; move_down 150 cm; Missing move_down; turn_right 45 degrees; move_back 50 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off right now, then fall back 2 meters, after that go to the right, next veer left by 45 degrees, following that move the drone in reverse direction, afterwards ascend above the tree by 20 feet, subsequently fly upwards 3 meters, then rotate left by 30 degrees, immediately after that move it straight ahead, next move the drone to the left for 25 inches, thereafter turn left 30 degrees, later fly forward quickly, 40 cm, and in the end go backwards 30 inches, finally drift rightwards.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not fail to locate the carrot immediately.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能去查看一下那个飞盘吗？\nresponse: ", "response": "飞盘."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Empty the present unmanned aerial vehicle operation queue.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly to the left 3 feet, then descend 10 inches, afterwards swoop left by 50 cm, next turn right by 90 degrees, immediately after that turn it left by 180 degrees, subsequently swing it right for 100 centimeters, later fly to the left for 3 feet, following that spin left 90 degrees, thereafter move leftwards 70 in, then shift left 20 inches, before pulling back 4 feet, first performing a backward movement, and in the end bring it in for landing.\nresponse: ", "response": "move_left 3 ft; move_down 10 in; move_left 50 cm; turn_right 90 degrees; turn_left 180 degrees; move_right 100 cm; move_left 3 ft; turn_left 90 degrees; move_left 70 in; move_back 4 ft; move_left 20 in; Missing move_back; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please start the flight control task now.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右移五厘米，然后请将无人机左移四十厘米，感激不尽，接着请右边转向，随后前方视线模糊，向前移动，最后无人机降落。\nresponse: ", "response": "move_right 5 cm; move_left 40 cm; Missing turn_right; Missing move_forward; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: In the most urgent manner, locate the keyboard and ascertain whether an umbrella is in the vicinity.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启程于操控与探寻之旅，让这场精致的探查任务在您的指引下缓缓展开。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机可以开始起飞了吗，然后请无人机后退一百厘米，接着右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍，请将无人机往右移，随后请将无人机右移两百五十厘米，紧接着无人机后退五十厘米，以便于调整位置，最后是否可以让无人机降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降八十厘米，接近地面，准备进行详细检查，然后后退一米，接着前方视线模糊，向前移动，随后请将无人机向后移动四十厘米，以避免前方障碍物，请将无人机右移两百厘米，紧接着向左飞，之后右转七十五度，检查右侧情况，再上升一米，增加高度，第三步，无人机右移一百五十厘米，最后无人机已经到达降落点。\nresponse: ", "response": "move_down 80 cm; move_back 1 m; Missing move_forward; move_back 40 cm; move_right 200 cm; Missing move_left; turn_right 75 degrees; move_up 1 m; move_right 150 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Consider resuming the previously halted guidance and exploration activity, as it will ensure a seamless continuation of your mission.\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Advance forward 3 meters, then bring the drone back 2 feet, afterwards sway to the left by 2 meters, next fly the drone to the left by 100 centimeters to capture the side view, subsequently soar forward 15 meters, after that bring the drone down 40 centimeters, following that go up like you're Superman, 12 feet, then go to the left 2 meters, and in the end lower to ground level.\nresponse: ", "response": "move_forward 3 m; move_back 2 ft; move_left 2 m; move_left 100 cm; move_forward 15 m; move_down 40 cm; move_up 12 ft; move_left 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前任务列表中的所有搜寻物体进程，刻不容缓。\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Locate the nearest pet hospital and display its operating hours.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您立即启动之前已暂停的控制与搜寻任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转，然后无人机左转一百二十度，接着向右移动五十厘米，避开障碍物。\nresponse: ", "response": "turn_left 90 degrees; turn_left 120 degrees; move_right 50 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the search task?\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 我们是不是可以清空当前的目标搜索任务列表了？这样做能帮助我们更好地开始下一个任务哦。\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 是否要继续之前详尽地暂停了的控制任务呢？\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞，准备工作，然后请让无人机向上飞，接着下降一百厘米，随后请上升五十厘米，之后左旋转，紧接着向右移动一百五十厘米，确认前方无障碍物，再请将无人机后退一百厘米，以查看后方的情况，随后请将无人机左移四十厘米，感激不尽，紧接着把无人机往右移六十厘米吧，最后无人机离地面太远了，下降一百五十厘米。\nresponse: ", "response": "take_off; move_down 100 cm; Missing move_up; move_up 50 cm; Missing turn_left; move_right 150 cm; move_back 100 cm; move_left 40 cm; move_right 60 cm; move_down 150 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转四十度，然后往右靠拢一百二十厘米，接着前进二百厘米，之后向左偏移一米寻找目标物品，紧接着无人机进行未知的往右移动操作，随后让无人机顺时针旋转一百八十度，接下来无人机请下降五十厘米，然后向后退两百厘米看看会发现什么，再调整到左侧位置，请向左移动七十五厘米，最后将无人机右转五十度。\nresponse: ", "response": "turn_right 40 degrees; move_right 120 cm; move_forward 200 cm; move_left 1 m; Missing move_right; turn_right 180 degrees; move_down 50 cm; move_back 200 cm; move_left 75 cm; turn_right 50 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the control and search task, please!\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then fly to the left 3 feet, after that shift to the left 6 feet, next shift to the right 2 meters, afterwards go left for 2 meters, subsequently elevate to 15 feet high, following that move the drone forward 20 centimeters, immediately after turn left 45 degrees, and in the end descend 10 feet to land on the rooftop.\nresponse: ", "response": "take_off; move_left 3 ft; move_left 6 ft; move_right 2 m; move_left 2 m; move_up 15 ft; move_forward 20 cm; turn_left 45 degrees; move_down 10 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被派遣去搜寻那架飞机和那只牙刷，如同鹰眼般敏锐。\nresponse: ", "response": "飞机; 牙刷."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the carrot immediately.\nresponse: ", "response": "carrot."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search if any large trucks are visible in the drone’s field of view.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing off the ground! then initiate a 180-degree counterclockwise rotation, after that reverse the drone 40 inches, subsequently descend gradually 2 meters, then lower the drone another 2 meters, next hover up by 12 inches, afterwards go down 50 centimeters, following that fly backward for 2 meters, immediately after which fly upward 60 centimeters, then adjust left slightly, first move forward 7 inches, second fly backward 10 meters, third increase altitude by 15 inches, and in the end bring it down slowly.\nresponse: ", "response": "take_off; turn_left 180 degrees; move_back 40 in; move_down 2 m; move_down 2 m; move_up 12 in; move_down 50 cm; move_back 2 m; move_up 60 cm; Missing move_left; move_forward 7 in; move_back 10 m; move_up 15 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞操作现在可以开始吗，然后后退一米，避开障碍物，接着请让无人机向右移动六十厘米，避免障碍物，随后为了探测右侧的情况，请将无人机向右移动六十厘米。\nresponse: ", "response": "take_off; move_back 1 m; move_right 60 cm; move_right 60 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the bed, the mouse, and the cake with gentle intent.\nresponse: ", "response": "bed; mouse; cake."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应当恢复先前因故中断的物体搜索任务？\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the previously paused object search task by reactivating the targeted scanning protocols and ensuring all sensor arrays are calibrated for optimal detection accuracy.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往指定区域搜索感冒药，任务紧急。\nresponse: ", "response": "感冒药."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off into the blue sky, then turn the drone right 45 degrees, after that shift right 25 inches, next bring it lower by 20 inches, subsequently swing left gently 25 degrees, afterwards climb up to 1 meter, following that go downwards 2 meters, later retract it back 2 feet, then proceed forward 70 centimeters steadily, immediately after that descend slowly please, in the end maneuver the drone to the left by 5 feet, and finally come down now, let's land.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_right 25 in; move_down 20 in; turn_left 25 degrees; move_up 1 m; move_down 2 m; move_back 2 ft; move_forward 70 cm; Missing move_down; move_left 5 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地建议搜索一下领带和飞盘，看看是否在冰箱附近或是被猫弄走了。\nresponse: ", "response": "领带; 飞盘; 冰箱; 猫."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go up now, then soar upward 2 meters, afterwards angle left 3 inches, next retract the drone a bit, after that go forward 50 centimeters, subsequently fly the drone downward 5 meters, following that move backwards 3 feet, immediately after rotate clockwise 45 degrees, and then swerve right 180 degrees, in the end land the aircraft.\nresponse: ", "response": "take_off; move_up 2 m; move_left 3 in; Missing move_back; move_forward 50 cm; move_down 5 m; move_back 3 ft; turn_right 45 degrees; turn_right 180 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused object search task by restarting the precise location tracking feature to ensure accurate identification and mapping of targets.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the dining table, then locate the oven.\nresponse: ", "response": "dining table; oven."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，感谢；然后向右移动两米；接着请让无人机向后移动四十厘米；随后向右移动七十厘米；紧接着，请让无人机向右移动；之后往前飞行一米；接下来往前飞行二百厘米；随后无人机后退一百五十厘米，以便观察后方；最后，无人机需要在此地降落。\nresponse: ", "response": "take_off; move_right 2 m; move_back 40 cm; move_right 70 cm; Missing move_right; move_forward 1 m; move_forward 200 cm; move_back 150 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the flight control task.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机后退，然后右转一百度，调整无人机方向，很好，现在向右飞行八十五厘米，接着下降五十厘米，接近地面一点，随后下降四十厘米，避开障碍物，再左边移动四十厘米，紧接着向右移动五十厘米，避开障碍物，最后无人机可以进行降落。\nresponse: ", "response": "Missing move_back; turn_right 100 degrees; move_right 85 cm; move_down 50 cm; move_down 40 cm; move_left 40 cm; move_right 50 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is it possible for humans to migrate to other planets in the future?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: May I kindly request you to initiate the object search task?\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在需要起飞，然后左转九十度，观察左侧，接着请向左移动七十五厘米，寻找目标物体，随后将无人机升高五十厘米，最后下降一米。\nresponse: ", "response": "take_off; turn_left 90 degrees; move_left 75 cm; move_up 50 cm; move_down 1 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and scanning operation.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应恢复先前已暂停的控制与搜索任务？\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please embark on a quest to seek out the skateboard, with grace and determination.\nresponse: ", "response": "skateboard."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议清空当前正在执行的飞行任务列表吧，这将有助于优化程序运行！\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then rotate to the right 30 degrees, afterwards slide right by 1 foot, next please make the drone go down now, following that fly forward 40 centimeters, then fly back 10 inches, subsequently move forward 25 in, after that head left 10 inches, and finally bring it up by 2 meters.\nresponse: ", "response": "take_off; turn_right 30 degrees; move_right 1 ft; Missing move_down; move_forward 40 cm; move_back 10 in; move_forward 25 in; move_left 10 in; move_up 2 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机起飞到空中，然后上升三十厘米提高视角；接着向左旋转九十度观察周围环境，之后无人机左移两米；随后右侧移动七十五厘米，紧接着左转四十度查看左侧情况；第二，无人机右转三十度重新调整方向准备接受新任务，最后由于前方可能有障碍物，请将无人机向左转动九十度查看左侧情况。\nresponse: ", "response": "take_off; move_up 30 cm; turn_left 90 degrees; move_left 2 m; move_right 75 cm; turn_left 40 degrees; turn_right 30 degrees; turn_left 90 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the pizza.\nresponse: ", "response": "pizza."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 迅速如风，建议立即前往那辆卡车旁，寻找一只杯子，同时也不要放过任何苹果和橙子的踪迹。\nresponse: ", "response": "卡车; 杯子; 苹果; 橙子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向后退两百厘米，看看会发现什么，然后请无人机前进五十厘米以探查前方情况；让无人机向左转之后，无人机顺时针旋转一百八十度；紧接着，无人机能向右转四十五度吗？随后，无人机向上升高，接着命令无人机向前飞行；再后来，让无人机顺时针旋转四十度；最后，无人机向前飞行一米，目标就在前面，准备接近。\nresponse: ", "response": "move_back 200 cm; move_forward 50 cm; Missing turn_left; turn_right 180 degrees; turn_right 45 degrees; Missing move_up; Missing move_forward; turn_right 40 degrees; move_forward 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's move the drone to the left, steer left 60 degrees, then go left for 2 meters, afterwards make it land.\nresponse: ", "response": "Missing move_left; turn_left 60 degrees; move_left 2 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞，然后请将无人机右移三米，接着往下飞，之后可以让无人机向左转五十度，请注意，随后后退五米，紧接着无人机前进七十厘米，检查前方是否有新发现，第三下降一百五十厘米，以便接近地面，随后无人机上升三百五十厘米，之后往左飞行一百厘米，再请将无人机向左转三十度，以便更好地观察左侧的情况，最后无人机向前飞行二十厘米，接着请让无人机往后移动。\nresponse: ", "response": "take_off; move_right 3 m; Missing move_down; turn_left 50 degrees; move_back 5 m; move_forward 70 cm; move_down 150 cm; move_up 350 cm; move_left 100 cm; turn_left 30 degrees; move_forward 20 cm; Missing move_back."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the book.\nresponse: ", "response": "book."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即详尽地暂停当前正在进行的搜寻物体任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往搜索止疼药。\nresponse: ", "response": "止疼药."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应当清空现有的操控与探寻使命？\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task, ensuring that all parameters are recalibrated to maintain the drone's stability and trajectory as it resumes operation.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, turn the drone around 360 degrees, then go forward 5 meters, after that let it go backwards 3 inches, next make the drone go down now, afterwards maneuver the drone to the left by 5 feet, following that tilt to the left, subsequently climb up to 1 meter, later turn the drone 120 degrees to the right, and in the end fly it backward like it's in reverse gear.\nresponse: ", "response": "turn_right 360 degrees; move_forward 5 m; move_back 3 in; Missing move_down; move_left 5 ft; Missing turn_left; move_up 1 m; turn_right 120 degrees; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请暂时中止当前的控制操作并停止搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the present control and find mission.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn on the smart rice cooker in the kitchen and set it to cooking mode.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前方有点模糊，向前移动一百五十厘米，然后向右移动两百厘米，注意避开障碍物，接着无人机向左转弯。\nresponse: ", "response": "move_forward 150 cm; move_right 200 cm; Missing turn_left."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 哎呀，快去给我找那个破烤面包机、旧手机和落灰的笔记本电脑，还有那条根本不用的领带。\nresponse: ", "response": "烤面包机; 手机; 笔记本电脑; 领带."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, hover in place, then rise up abruptly 30 cm, next go backwards 30 inches, afterwards let's do a little spin to the right, 360 degrees!, following that go up now, subsequently turn right about 90 degrees, immediately after give it a little nudge to the right, like it’s tipping over, and in the end set it down.\nresponse: ", "response": "take_off; move_up 30 cm; move_back 30 in; turn_right 360 degrees; Missing move_up; turn_right 90 degrees; Missing move_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The remote is to be located near the sink.\nresponse: ", "response": "remote; sink."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往卡车位置，迅速定位并检查冰箱。\nresponse: ", "response": "冰箱; 卡车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前已暂停的飞行任务进程。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机顺时针旋转，然后往左飞行一百厘米，接着左边飞行七十厘米看看，之后请将无人机后退三十厘米，以检查后方情况，紧接着可以向左旋转三十度吗，随后右飞行，接下来升高六十厘米，随后请让无人机下降三十厘米，接近地面，之后无人机左转，最后无人机需要在这里降落。\nresponse: ", "response": "Missing turn_right; move_left 100 cm; move_left 70 cm; move_back 30 cm; turn_left 30 degrees; Missing move_right; move_up 60 cm; move_down 30 cm; Missing turn_left; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最迅捷的方式，在这紧迫时刻，务必寻找到那根遗落的热狗与遗忘的领带，此任务至关重要，刻不容缓。\nresponse: ", "response": "热狗; 领带."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing in the air! First, fly the drone to the left by 200 meters to follow the river. Next, turn the drone 90 degrees left. Then drift rightwards. After that, drift downwards by 30 inches. Following that, descend to 8 feet.\nresponse: ", "response": "take_off; move_left 200 m; turn_left 90 degrees; Missing move_right; move_down 30 in; move_down 8 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing search operation immediately.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you take off now, then go downwards 2 meters, after that please move the drone left 5 feet, immediately move back 10 inches, next spin the drone clockwise by 45 degrees, subsequently fly up by 200 cm, and in the end land the drone now.\nresponse: ", "response": "take_off; move_down 2 m; move_left 5 ft; move_back 10 in; turn_right 45 degrees; move_up 200 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then turn it to the left by 120 degrees, after that move the drone forward 1 meter, next move to the left 1 foot, subsequently drop it down 10 inches, afterwards tilt to the left, following that descend 10 feet to land on the rooftop, and in the end bring it down gently.\nresponse: ", "response": "take_off; turn_left 120 degrees; move_forward 1 m; move_left 1 ft; move_down 10 in; Missing turn_left; move_down 10 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not clear the current control and search task now, and see how much more smoothly your mission can proceed?\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我需要无人机下降一米，请执行，然后无人机现在的高度需要调整，请下降七十五厘米，接着请将无人机右侧移动，最后现在，请让无人机降落。\nresponse: ", "response": "move_down 1 m; move_down 75 cm; Missing move_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Isn't it time we got that paused flight control task moving again? Let's reignite our mission with unparalleled determination!\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 详尽地暂停当前正在执行的搜寻物体任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Spin the drone clockwise by 45 degrees, then hover up by 12 inches, after that turn 45 degrees to the right, next rotate left by 50 degrees, afterwards tilt the drone to the left, following that move to the left by 4 meters and go to the left side, subsequently shift it right by 25 inches, and finally initiate a rightward lateral movement for 2 meters.\nresponse: ", "response": "turn_right 45 degrees; move_up 12 in; turn_right 45 degrees; turn_left 50 degrees; Missing turn_left; move_left 4 m; Missing move_left; move_right 25 in; move_right 2 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for skis, then orange.\nresponse: ", "response": "skis; orange."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请开始无人机的起飞程序，然后升高到一米，更高的视角能帮助我们更好地观察，接着请将无人机向后移动五十厘米，检查是否有障碍物，之后左侧移动75厘米，随后无人机下降一米，最后无人机前进一百五十厘米，继续向前探索未知。\nresponse: ", "response": "take_off; move_up 1 m; move_back 50 cm; move_left 75 cm; move_down 1 m; move_forward 150 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift left, then fly 100 meters forward, afterwards move it left 50 inches, next bring it forward 6 inches, subsequently go right 5 cm, following that move it forward, after that move backwards 25 centimeters, later move right 10 cm, and in the end touch down.\nresponse: ", "response": "Missing move_left; move_forward 100 m; move_left 50 in; move_forward 6 in; move_right 5 cm; Missing move_forward; move_back 25 cm; move_right 10 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机向左移动二十厘米，然后升高三十厘米，接着后退一百五十厘米，调整位置，检查后方的情况，随后上移，紧接着无人机前方的路径被阻挡，请向前移动五十厘米以探测路径，最后让无人机停在地面上。\nresponse: ", "response": "move_left 20 cm; move_up 30 cm; move_back 150 cm; Missing move_up; move_forward 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索三明治和火车之间的甜甜圈及船。\nresponse: ", "response": "三明治; 火车; 甜甜圈; 船."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the chair, then locate the potted plant, carefully check for an orange, and finally confirm the position of the clock.\nresponse: ", "response": "chair; potted plant; orange; clock."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current search task immediately.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for sprite.\nresponse: ", "response": "sprite."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地查找一下鸟。\nresponse: ", "response": "鸟."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即恢复此前暂停的物体搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退七十厘米，然后现在请让无人机降落在这里。\nresponse: ", "response": "move_back 70 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate 90 degrees to the left, then go leftward 1.5 m, next move right by 3 meters, afterwards head forward 20 feet, subsequently fly upwards 10 inches, following that fly the drone downward 5 meters, and in the end land in the open field ahead.\nresponse: ", "response": "turn_left 90 degrees; move_left 1.5 m; move_right 3 m; move_forward 20 ft; move_up 10 in; move_down 5 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞操作现在可以开始吗，然后为了查看后方的情况，请将无人机后退两米，接着快到房顶了，往下飞抵一下吧，下降个五十厘米，随后请将无人机右移一百五十厘米，最后无人机上升两米。\nresponse: ", "response": "take_off; move_back 2 m; move_down 50 cm; move_right 150 cm; move_up 2 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the book, frisbee, fanta, and bench.\nresponse: ", "response": "book; frisbee; fanta; bench."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Soar high and let your gaze dance like a hummingbird, seeking out that elusive traffic light with the precision of an eagle's eye.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否帮我找一下手提包、钟和书呢？\nresponse: ", "response": "手提包; 钟; 书."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请以一种优雅的姿态，终止这令人不悦的操控与探查任务吧！\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类是否可以通过基因技术完全消除疾病？\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右边移动七十厘米，以更好地绕过障碍，然后前进二百厘米，随后降低位置，接着无人机需要向左飞行五十厘米，之后前方不清楚，继续前进，紧接着请前进七十厘米查看，最后前方不清晰，向前移动五十厘米，最终无人机向右转五十度。\nresponse: ", "response": "move_right 70 cm; move_forward 200 cm; Missing move_down; move_left 50 cm; Missing move_forward; move_forward 70 cm; move_forward 50 cm; turn_right 50 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞操作现在可以开始吗，然后左边飞行七十厘米看看，接着无人机向右转一百二十度，以调整视角，随后左飞七十厘米，紧接着能否让无人机下降一米，之后往左移动，接着向右方移动，最后左转五十五度，观察左侧情况。\nresponse: ", "response": "take_off; move_left 70 cm; turn_right 120 degrees; move_left 70 cm; move_down 1 m; Missing move_left; Missing move_right; turn_left 55 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate to the right 30 degrees, then make it ascend a bit, I’m a little on edge watching it; afterwards move rightward, next start landing sequence.\nresponse: ", "response": "turn_right 30 degrees; Missing move_up; Missing move_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 不妨像唤醒沉睡的雄鹰般，重启那曾暂停的飞行任务吧。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the current flight control task list immediately.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 推荐一些提高记忆力的锻炼方式。\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't fail to locate the suitcase, sports ball, kite.\nresponse: ", "response": "suitcase; sports ball; kite."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机向后移动两百厘米，然后为了更好地观测左侧，请将无人机左转，接着往左一百五十厘米，随后无人机可以右转五十度，紧接着无人机请再右转五十度，之后向后退三十厘米以避免碰撞，最后命令无人机向前飞行。\nresponse: ", "response": "move_back 200 cm; Missing turn_left; move_left 150 cm; turn_right 50 degrees; turn_right 50 degrees; move_back 30 cm; Missing move_forward."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请将当前的物体搜索任务置于暂停状态，如同在繁忙的信息流中暂时按下静音键。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control operation, ensuring a smooth continuation of your mission.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we resume the previously paused flight control task and get that drone back in action?\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转一百二十度，查看右侧，然后为了更好的视角，请将无人机左转，之后下移。\nresponse: ", "response": "turn_right 120 degrees; Missing turn_left; Missing move_down."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着把之前停下的飞行任务搞起来吧。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即恢复先前暂停的控制与搜寻任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off and go straight, then lift the drone upwards by 50 centimeters, after that spin the drone to the left 45 degrees, next take the drone back, subsequently make it go down, afterwards veer elegantly right 35 degrees, finally make it go higher, like it’s reaching for the stars.\nresponse: ", "response": "take_off; move_up 50 cm; turn_left 45 degrees; Missing move_back; Missing move_down; turn_right 35 degrees; Missing move_up."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去寻找饼干、热狗和蛋糕吧，相信你也能找到那个风筝！加油，你一定行的！\nresponse: ", "response": "饼干; 热狗; 蛋糕; 风筝."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去把狗、冲浪板、钟和马都找一下。\nresponse: ", "response": "狗; 冲浪板; 钟; 马."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for cola, microwave, bed. Keep going, you've got this!\nresponse: ", "response": "cola; microwave; bed."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 开始控制和搜索任务吧。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: It is recommended that you do not halt the resumption of the previously interrupted control and search operation.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the skis with haste and precision.\nresponse: ", "response": "skis."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在找到那辆帅气的摩托车的同时，请别忘了留意路边的领带，还有注意观察红绿灯的变化，加油哦！\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Be searched for the book, apple, chair, and broccoli.\nresponse: ", "response": "book; apple; chair; broccoli."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off right now, then move backwards 25 centimeters, afterwards fly it to the right 20 inches, next rotate counterclockwise 30 degrees.\nresponse: ", "response": "take_off; move_back 25 cm; move_right 20 in; turn_left 30 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current control and search task immediately to ensure safety and efficiency.\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please pause the ongoing object search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂时停止当前的操控与搜索任务，如同让疾驰的马车缓缓停下。\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's take a moment to pause our eagle-eyed explorer in its quest for the hidden treasure.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前中断的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左侧好像有物体，调整无人机位置查看，然后右转五十度，调整角度，咱们要看得更清楚，接着为了绕过前方的障碍物，请将无人机向左飞行一百二十厘米，随后请右转五十度，之后让无人机往后移动，紧接着上升一米，增加高度，最后请无人机安全着陆。\nresponse: ", "response": "turn_left 90 degrees; turn_right 50 degrees; move_left 120 cm; turn_right 50 degrees; Missing move_back; move_up 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bicycle and orange near the sink.\nresponse: ", "response": "bicycle; orange; sink."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到超市里卖巧克力的货架区域。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议暂时中止当前正在进行的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调整卧室空调至除湿模式。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search forth for the bus, then alight upon the trail of the skis, next seek the motorcycle, and lastly, let your gaze fall upon the Fanta.\nresponse: ", "response": "bus; skis; motorcycle; fanta."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请查找遥控器、牙刷、风筝和键盘。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then descend the drone 7 inches. Next, rotate counterclockwise 30 degrees, after that bring the drone back 80 centimeters. Following that, climb 6 feet, then subsequently climb up 2 feet more. After ascending, turn 45 degrees to the right, afterwards move towards me 10 feet. Next, turn left 60 degrees, then reverse 5 meters. Immediately after, descend 1.5 feet and subsequently descend 50 centimeters. Thereafter, move the drone to the right by 2 meters. In the end, The drone should go down now.\nresponse: ", "response": "take_off; move_down 7 in; turn_left 30 degrees; move_back 80 cm; move_up 6 ft; move_up 2 ft; turn_right 45 degrees; move_forward 10 ft; turn_left 60 degrees; move_back 5 m; move_down 1.5 ft; move_down 50 cm; move_right 2 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，然后左侧好像有东西，转动一下，接着向前飞行五十厘米，随后将无人机右转五十度，最后无人机准备降落。\nresponse: ", "response": "take_off; turn_left 90 degrees; move_forward 50 cm; turn_right 50 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not imperative to seek the cat, car, skis, and refrigerator with utmost urgency?\nresponse: ", "response": "cat; car; skis; refrigerator."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 快去找找背包、烤箱、书和鼠标吧！\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 来个后退五十厘米的动作，看看后面有什么惊喜，然后后退一百五十厘米。\nresponse: ", "response": "move_back 50 cm; move_back 150 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么海洋中的珊瑚礁需要保护？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能否去找找苹果、飞盘和运动球呢？\nresponse: ", "response": "苹果; 飞盘; 运动球."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then I need this thing to go up right now, please, after that go right, next move the drone 3 feet forward, following that rotate right 270 degrees, afterwards ascend 1 meter, subsequently descend by 5 inches.\nresponse: ", "response": "take_off; Missing move_up; Missing move_right; move_forward 3 ft; turn_right 270 degrees; move_up 1 m; move_down 5 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先向右再靠近九十厘米，接着向右移动两米，然后请把无人机往后移动一百五十厘米，谢谢；之后我感觉左边可能有这个东西，请升高；随后飞行到前面一米处，最后无人机左侧移动一百五十厘米。\nresponse: ", "response": "move_right 90 cm; move_right 2 m; move_back 150 cm; turn_left 90 degrees; Missing move_up; move_forward 1 m; move_left 150 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向右偏移四十五厘米，然后下移，接着请上升两米，随后上升三十厘米以提高视角，紧接着无人机再次升高三十厘米来调整高度，之后请右转五十度，最后无人机降落在目标位置。\nresponse: ", "response": "move_right 45 cm; Missing move_down; move_up 2 m; move_up 30 cm; move_up 30 cm; turn_right 50 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the control sequence and commence the search operation with precision and confidence.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否请您暂时停止当前正在执行的搜索任务呢？\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move it to the right by 4 inches, then bring the drone down 40 centimeters, afterwards move to the left 10 meters.\nresponse: ", "response": "move_right 4 in; move_down 40 cm; move_left 10 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 嘿，能不能麻烦你友好地去找找那个运动球和书啊？谢谢啦！\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清除当前的控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended flight control operation.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 启动无人机的起飞程序，然后无人机右转六十度。\nresponse: ", "response": "take_off; turn_right 60 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜寻并立即报告任何关于香蕉、长椅、猫和笔记本电脑的紧急情况，这非常重要。\nresponse: ", "response": "香蕉; 长椅; 猫; 笔记本电脑."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请先在繁忙的交通中找到那辆缓慢移动的卡车，就像寻找沙漠中的绿洲一样，然后再仔细观察，看看那小巧的杯子是否安静地躺在卡车旁，同时留意路边的红绿灯，确保安全。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将无人机移动到正前方的树顶部并拍摄照片。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you please look for a motorcycle, a horse, a TV, and a person?\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机向左转五十度吗，然后请右转九十度，检查右侧情况，接着左转五十度，之后请将无人机上升一百二十厘米，以便获得更高的视角，随后左边移动四十厘米，紧接着请右转三十度，随后无人机下降四十厘米以调整高度，最后无人机需要在这里降落。\nresponse: ", "response": "turn_left 50 degrees; turn_right 90 degrees; turn_left 50 degrees; move_up 120 cm; move_left 40 cm; turn_right 30 degrees; move_down 40 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 向左飞行两米，然后无人机前方似乎有目标，请向前移动一百厘米以接近目标，接着无人机左侧转向，随后请将无人机左移一百厘米，紧接着上升七十厘米，之后无人机请向后飞行两米以避开障碍物，再后来为了降低高度，无人机需要下降一米，最后无人机降落。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 真是太棒了！快去找到盆栽植物、自行车、牙刷和飞盘吧！\nresponse: ", "response": "盆栽植物; 自行车; 牙刷; 飞盘."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议暂时停下当前的搜寻任务，怎么样？\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate to the left side, then go down 3 feet, after that initiate the landing.\nresponse: ", "response": "Missing turn_left; move_down 3 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 为了降低高度，无人机需要下降一米，然后请让无人机向前飞行一百厘米，接着请向左移动，随后请将无人机慢慢下降一米，这样可以更接近地面；无人机飞得太高了，请下降，之后后退一米，看看后方情况，紧接着左转三十度，观察左侧情况，最后赶紧降落。\nresponse: ", "response": "move_down 1 m; move_forward 100 cm; Missing move_left; move_down 1 m; Missing move_down; move_back 1 m; turn_left 30 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您详尽地执行以下指令：暂停当前正在进行的物体搜寻任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 升高一米，想要从更高的角度俯瞰整个区域，然后转动无人机四十五度左，接着无人机前方的路径被阻挡，请向前移动五十厘米以探测路径；随后，无人机能向右转四十五度吗？紧接着让无人机向后移动一米五，之后右移一米；再接下来，左转六十度，查看左侧情况，向右转，然后向右再靠近九十厘米。为了更好地绕过障碍物，请将无人机向左飞行八十厘米，最后请命令无人机降落到目标区域。\nresponse: ", "response": "move_up 1 m; turn_left 45 degrees; move_forward 50 cm; turn_right 45 degrees; move_back 1.5 m; move_right 1 m; turn_left 60 degrees; Missing turn_right; move_right 90 cm; move_left 80 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the flight control tasks.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地将你的目光如叉子般锐利，搜寻那长颈鹿旁遗落的手提包，仿佛时间在钟下静止。\nresponse: ", "response": "长颈鹿; 手提包; 钟; 叉子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降一米，然后向前推进，接着快到房顶了，往下飞抵一下吧，下降个五十厘米，随后无人机下降八十厘米，以接近地面，紧接着请将无人机顺时针旋转，之后为了探测前方的目标，请让无人机向前移动一百五十厘米，然后请让无人机向下降落一米，以便更接近地面检查，接下来我感觉右边可能会有，所以要右转九十度，最后向左飞行一百二十厘米，随后让无人机往后移动。\nresponse: ", "response": "move_down 1 m; Missing move_forward; move_down 50 cm; move_down 80 cm; Missing turn_right; move_forward 150 cm; move_down 1 m; turn_right 90 degrees; move_left 120 cm; Missing move_back."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Consider pausing the ongoing control and search operations to ensure optimal performance.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 开始无人机的起飞程序，然后请上升，接着前进一百厘米，检查前方，之后无人机当前的位置不合适，请向右移动二十厘米，随后往左移动八十厘米，最后上升七十厘米就行。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降一米，然后请命令无人机降落到目标区域。\nresponse: ", "response": "move_down 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请按照预定路径搜索椅子、餐桌及烤箱区域，随后定位风筝位置。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞以开始任务，然后左转七十度，接着请将无人机右移，之后请让无人机前进一米，以探索前方环境，最后请上升五十厘米。\nresponse: ", "response": "take_off; turn_left 70 degrees; Missing move_right; move_forward 1 m; move_up 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the skis and the remote.\nresponse: ", "response": "skis; remote."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能否立即起飞，然后右转四十度，接着请问无人机能左移四十厘米吗，之后右转九十度，重设方向，适应新的飞行环境，请将无人机往右移，请将无人机左移，随后无人机右转九十度，紧接着向前移动九十厘米，靠近目标，最后为了完成任务，现在需要无人机降落。\nresponse: ", "response": "take_off; turn_right 40 degrees; move_left 40 cm; turn_right 90 degrees; Missing move_right; Missing move_left; turn_right 90 degrees; move_forward 90 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即执行起飞动作，然后无人机飞得太高了，请下降四十厘米。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先，上升七十厘米就行；然后，无人机上升到三米；接着，无人机能否向上飞行八十厘米，以便更好地查看周围环境；随后，请右转五十度，以便调整方向；紧接着，右转七十度；之后，下降五十厘米，接近地面一点；再后来，前方不清晰，向前移动五十厘米；紧接着，无人机请飞行到前方一米；随后，请向右移动五十厘米；最后，无人机下降一米。\nresponse: ", "response": "move_up 70 cm; move_up 3 m; move_up 80 cm; move_down 50 cm; move_forward 1 m; move_forward 50 cm; turn_right 70 degrees; move_right 50 cm; turn_right 50 degrees; move_down 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start flying, then make a landing.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前方有点不清楚，向前移动；然后无人机现在需要调整方向，请向右转动七十度；接着升高六十厘米，让无人机能看到更广的范围；随后往下移动；紧接着无人机向前飞行一米，目标就在前面，准备接近；之后无人机提升；紧接着前进九十厘米；随后无人机前方可能有物体，请向前移动五十厘米以检查；紧接着距离地面太高了，下降一百五十厘米是否足够；然后请将无人机右移两百五十厘米；紧接着无人机下降五十厘米以调整高度；最后无人机到达目标位置后请降落。\nresponse: ", "response": "Missing move_forward; turn_right 70 degrees; move_up 60 cm; Missing move_down; move_forward 1 m; Missing move_up; move_forward 90 cm; move_forward 50 cm; move_down 150 cm; move_right 250 cm; move_down 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 是否可以去寻找那只猫呢？\nresponse: ", "response": "猫."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议不要在椅子和长椅附近寻找丢失的遥控器。\nresponse: ", "response": "椅子; 遥控器; 长椅."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the umbrella, fork, remote, and clock.\nresponse: ", "response": "umbrella; fork; remote; clock."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Tilt to the left then land by dropping the drone down to the ground.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and resume the object search task that was previously paused; your drone is ready to assist you with this exciting mission!\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off. Descend 3 meters, then retreat by 5 meters. After that, retract the drone a bit. Next, slide right 4 feet, followed by descending 3 feet. Immediately after, proceed forward 70 centimeters steadily. Then, shift right 50 centimeters, and subsequently go leftward 1.5 m. Thereafter, let's have some fun, turn right 180 degrees! In the end, drone should descend immediately.\nresponse: ", "response": "take_off; move_down 3 m; move_back 5 m; Missing move_back; move_right 4 ft; move_down 3 ft; move_forward 70 cm; move_right 50 cm; move_left 1.5 m; turn_right 180 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以启动无人机吗，然后后退一米，看看后方情况，接着距离地面太高了，下降一百五十厘米是否足够，随后请将无人机向左移动两百厘米，之后升高一百厘米，紧接着前进九十厘米，以查看前方情况，后来无人机下降，紧接着请让无人机向上飞行一百五十厘米，随后右转一百八十度，最后立即降落。\nresponse: ", "response": "take_off; move_back 1 m; move_down 150 cm; move_left 200 cm; move_up 100 cm; move_forward 90 cm; Missing move_down; move_up 150 cm; turn_right 180 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's blast off, initiate takeoff, then bring it in for landing.\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing target search queue in the drone's operation interface.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the quest for the object.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动寻找目标的程序\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机请向后飞行一米，然后无人机高度过高，请下降五十厘米，接着如果可以，请向左移动三十厘米，随后无人机目前离地面过高，请下降一百五十厘米，紧接着请将无人机向后移动，之后上升七十厘米，然后将无人机右转四十五度，接下来上升七十厘米，随后可以让无人机往后退吗，最后现在可以让无人机缓慢降落到地面吗。\nresponse: ", "response": "move_back 1 m; move_down 50 cm; move_left 30 cm; move_down 150 cm; Missing move_back; move_up 70 cm; turn_right 45 degrees; move_up 70 cm; Missing move_back; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused quest for the elusive target, as if guiding a falcon back to its pursuit after a momentary respite.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我需要无人机下降一米，请执行，然后左飞七十厘米，接着让无人机降落吧。\nresponse: ", "response": "move_down 1 m; move_left 70 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中的当前飞行控制指令已被清除。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the flight control task for the drone with immediate effect, ensuring all systems are operational and prepared for deployment.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go brush up on finding that toothbrush, will ya?\nresponse: ", "response": "toothbrush."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机飞到空中，然后迅速下降一米，接着请将无人机右移三米，随后转动无人机四十五度左，最后无人机降落在地面上。\nresponse: ", "response": "take_off; move_down 1 m; move_right 3 m; turn_left 45 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最高效的方式定位并确认饼干、瓶子、滑雪板和船的位置。\nresponse: ", "response": "饼干; 瓶子; 滑雪板; 船."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for bus, frisbee, chair.\nresponse: ", "response": "bus; frisbee; chair."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 升高一百厘米，然后左侧移动两百厘米，接着将无人机右转五十度，请让无人机升高，随后请把无人机往后移动一百五十厘米，谢谢。\nresponse: ", "response": "move_up 100 cm; move_left 200 cm; turn_right 50 degrees; Missing move_up; move_back 150 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请启动无人机的起飞程序，然后向左转动一圈。\nresponse: ", "response": "take_off; turn_left 360 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the tie, then the painkillers, and finally the keyboard; you can do it!\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The existing target identification queue should be emptied.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索碘伏和自行车，留意附近的鸟和碗。\nresponse: ", "response": "碘伏; 自行车; 鸟; 碗."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the termination of the existing control protocols and commence the clearance of the active search task within the drone's operational system.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最快速度找到那个藏在角落里的叉子，并且别忘了检查每个可能的地方是否有遗漏的橙子，这任务非常紧急。\nresponse: ", "response": "叉子; 橙子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the fork!\nresponse: ", "response": "fork."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请暂时中止当前正在进行的目标搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂停当前的控制与搜寻任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the handbag, surfboard, horse, and iodophor, will ya?\nresponse: ", "response": "handbag; surfboard; horse; iodophor."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即清空当前的飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Consider clearing the current flight control task list for a smoother operation.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the bird, ensure the giraffe is not overlooked, and by no means miss the biscuit.\nresponse: ", "response": "bird; giraffe; biscuit."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 是否建议不在这片区域搜寻止疼药和公共汽车？\nresponse: ", "response": "止疼药; 公共汽车."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please locate the biscuit near the chair.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the tie, then the painkillers, and finally the keyboard; you can do it!\nresponse: ", "response": "tie; painkillers; keyboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then spin the drone to the left 45 degrees, after that hover up 2 feet, next let's slide to the left, 30 centimeters, cha-cha style, afterwards shift the drone right 5 meters, following that fly up 3 feet, subsequently steer left 60 degrees, then go backwards 30 inches, immediately after move it backwards 3 meters, next fly it left 50 cm, then rotate left side, after that send it forward as if it's charging into the wind, later fly the drone downward 5 meters, and finally go leftward 1.5 m.\nresponse: ", "response": "take_off; turn_left 45 degrees; move_up 2 ft; move_left 30 cm; move_right 5 m; move_up 3 ft; turn_left 60 degrees; move_back 30 in; move_back 3 m; move_left 50 cm; Missing turn_left; move_down 5 m; Missing move_forward; move_left 1.5 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please venture forthwith to seek out the laptop and the bread, with all due grace and haste.\nresponse: ", "response": "laptop; bread."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing in the air!, then turn the drone around, afterwards come on back here, 7 feet, and finally hover and land.\nresponse: ", "response": "take_off; Missing turn_left; move_back 7 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前中断的目标搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find that banana.\nresponse: ", "response": "banana."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the keyboard.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the bird, carrot, and frisbee.\nresponse: ", "response": "bird; carrot; frisbee."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get airborne, then go left 3 feet slowly, after that I want this drone to fly back 1 meter, okay?, next move right by 3 meters, afterwards travel forward a bit, following that let's slide to the left, 30 centimeters, cha-cha style, subsequently adjust to the left, then Please move the drone left 5 feet, later engage forward translational movement by 100 centimeters, immediately after reverse the drone by 100 centimeters, then reverse the drone by 3 feet, next rotate the drone left by 30 degrees, afterwards turn it 360 degrees to the right, and in the end Turn the drone left by 45 degrees, please.\nresponse: ", "response": "take_off; move_left 3 ft; move_back 1 m; move_right 3 m; Missing move_forward; move_left 30 cm; Missing move_left; move_left 5 ft; move_forward 100 cm; move_back 100 cm; move_back 3 ft; turn_left 30 degrees; turn_right 360 degrees; turn_left 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右移动一米以避开障碍物，然后请上升两米，之后向右转，接着无人机向后移动二百厘米，随后命令无人机向前飞行，最后无人机向左移动七十厘米。\nresponse: ", "response": "move_right 1 m; move_up 2 m; Missing turn_right; move_back 200 cm; Missing move_forward; move_left 70 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索，先找风筝，再找鼠标，接着是胡萝卜，最后寻找马。\nresponse: ", "response": "风筝; 鼠标; 胡萝卜; 马."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动并掌控飞行任务的过程，以确保一切操作平顺且高效。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the sports ball, bed, knife, and banana.\nresponse: ", "response": "sports ball; bed; knife; banana."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复先前暂停的物体搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 停下现在的操控和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被赋予的任务是在这片区域中寻找那个像餐桌上不可或缺的角色——叉子。\nresponse: ", "response": "叉子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Commence a thorough search for the fork, ensuring an extensive coverage of the designated area.\nresponse: ", "response": "fork."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation immediately.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Up we go! Then, go rightward 90 in. After that, bring it down gently, I’m feeling cautious. Next, descend and land.\nresponse: ", "response": "take_off; move_right 90 in; Missing move_down; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused control and search task immediately to prevent potential mission failure and data loss.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go ahead and search for the orange, carrot, and iodophor with great attention to detail. You're doing an excellent job!\nresponse: ", "response": "orange; carrot; iodophor."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then make the drone ascend by 50 inches, afterwards shift right 6 meters, next time to moonwalk backward 20 inches, and in the end, land now.\nresponse: ", "response": "take_off; move_up 50 in; move_right 6 m; move_back 20 in; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused control and search task.\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞吧，然后提高二十厘米，修正高度。\nresponse: ", "response": "take_off; move_up 20 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused object search task, ensuring the drone's sensors are fully operational, and maintain a steady altitude during the scan.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off as soon as the sun rises, then descend 20 feet, afterwards move towards me 10 feet, next fly the drone backwards 300 cm, immediately after that rotate left 180 degrees, subsequently propel forward 15 inches, following that go forward 100 cm, later fly right around the corner 10 feet, thereafter execute a lateral shift to the left by 200 centimeters, then advance forward 60 cm, in the end please land the drone softly.\nresponse: ", "response": "take_off; move_down 20 ft; move_forward 10 ft; move_back 300 cm; turn_left 180 degrees; move_forward 15 in; move_forward 100 cm; move_right 10 ft; move_left 200 cm; move_forward 60 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hold up! Suspend that control and search task right now!\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在书香中寻找微波炉，如同猎人在林间搜寻饼干。\nresponse: ", "response": "书; 微波炉; 饼干."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please move the drone backwards 2 feet, then fly to the right by 30 cm, next shift left by a meter, afterwards steer it right 45 degrees, subsequently rotate clockwise 90 degrees, and in the end, impatiently land now.\nresponse: ", "response": "move_back 2 ft; move_right 30 cm; move_left 1 m; turn_right 45 degrees; turn_right 90 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's launch this thing, then fly forward 1 meter, after that adjust forward 3 feet, next rotate clockwise 90 degrees, afterwards move ahead 20 inches, and subsequently descend gradually 1 foot.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Give it a little nudge to the right, like it’s tipping over, then drop down 10 cm.\nresponse: ", "response": "Missing move_right; move_down 10 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Carefully clear the existing control settings and thoroughly search for any pending tasks in your drone application process, ensuring a smooth transition to your next operation.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调节书房的灯光亮度至50%。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索飞机附近的领带和冲浪板，还有滑板。\nresponse: ", "response": "飞机; 领带; 冲浪板; 滑板."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前操控飞行的任务\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞吧，感谢；然后为了更好地观测左侧，请将无人机左转；接着向左转动一圈；随后上升两米；紧接着左侧移动；之后右转一百八十度；再后来指示无人机向后退；最后无人机需要降落在这片区域。\nresponse: ", "response": "take_off; turn_left 360 degrees; move_up 2 m; Missing turn_left; Missing move_left; turn_right 180 degrees; Missing move_back; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the suitcase, not the boat! Hurry!\nresponse: ", "response": "suitcase; boat."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In a gentle yet urgent manner, it is requested that the ongoing control and search operations be paused.\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task immediately!\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机目前离地面过高，请下降一百五十厘米，然后向前移动两米，接着往下降低七十厘米，随后往上升高九十厘米，调节高度，最后无人机上升一米。\nresponse: ", "response": "move_down 150 cm; move_forward 2 m; move_down 70 cm; move_up 90 cm; move_up 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then swoop left by 50 cm, after that rotate 360 degrees to the right, subsequently go backwards 50 centimeters, next raise it 20 inches, afterwards bring the drone back 2 feet, following that turn it left by 90 degrees, then push forward 100 inches, before flying straight ahead, later fly straight ahead again, thereafter go right and immediately after make a right turn, in the end drone down 30 cm.\nresponse: ", "response": "take_off; move_left 50 cm; turn_right 360 degrees; move_back 50 cm; move_up 20 in; move_back 2 ft; turn_left 90 degrees; move_forward 100 in; Missing move_forward; move_down 30 cm; Missing turn_right; Missing move_right."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞吧，感谢；然后无人机向前飞行一百厘米，靠近目标；请将无人机上升；紧接着，无人机右转九十度；之后，无人机上升两米；接着，无人机前进一百厘米；立刻右转；最后，向右转。\nresponse: ", "response": "take_off; move_forward 100 cm; Missing move_up; turn_right 90 degrees; move_up 2 m; move_forward 100 cm; Missing turn_right; Missing turn_right."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降一米，然后左侧好像有东西，转动一下，接着让无人机向后退八十厘米，随后右边转四十五度，给右侧一个惊喜，紧接着向右移动七十厘米，之后请无人机左转四十五度，这样可以得到更好的视角，随后请让无人机向后行进，最后无人机降落在预定地点。\nresponse: ", "response": "move_down 1 m; turn_left 90 degrees; move_back 80 cm; turn_right 45 degrees; move_right 70 cm; turn_left 45 degrees; Missing move_back; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即寻找人和船，迅速报告位置。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动搜寻任务！\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞操作现在可以开始吗，然后向前移动七十厘米，之后是否可以让无人机降落。\nresponse: ", "response": "take_off; move_forward 70 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 真是太棒了，去搜寻一下火车旁的汽车和那个精致的酒杯吧！\nresponse: ", "response": "火车; 汽车; 酒杯."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get in the air, then climb up 100 feet, after that adjust to the right, next turn right 180 degrees, afterwards adjust left slightly, subsequently move it 200 centimeters forward.\nresponse: ", "response": "take_off; move_up 100 ft; Missing turn_right; turn_right 180 degrees; Missing move_left; move_forward 200 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动控制与搜寻任务。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞，然后我需要无人机下降一米，请执行，接着前方有点模糊，向前移动一百五十厘米，之后让无人机向右转动二十度，紧接着无人机前进一百二十厘米，请将无人机上升七十五厘米，随后右移四十厘米，接着请让无人机向后移动两米，然后请右边转向，最后左侧旋转五十度。\nresponse: ", "response": "take_off; move_down 1 m; move_forward 150 cm; turn_right 20 degrees; move_forward 120 cm; move_up 75 cm; move_right 40 cm; move_back 2 m; Missing turn_right; turn_left 50 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即终止当前正在进行的飞行任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 迅速锁定目标，像鹰眼一样精准地找到那个网球拍和长椅!\nresponse: ", "response": "网球拍; 长椅."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the horse, please. Could it be that far?\nresponse: ", "response": "horse."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以优雅的姿态，在这片区域轻轻搜寻长颈鹿、热狗、滑雪板和止疼药。\nresponse: ", "response": "长颈鹿; 热狗; 滑雪板; 止疼药."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找找那辆火车吧。\nresponse: ", "response": "火车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请启动无人机，然后无人机现在降下一百五十厘米，接着请将无人机向左转三十度，以便更好地观察左侧的情况，之后请让无人机退后两米，紧接着无人机在当前位置上升一百二十厘米，随后下降一百五十厘米，接近地面进行细致检查，最后无人机再次下降一百五十厘米，随后无人机右转六十度。\nresponse: ", "response": "take_off; move_down 150 cm; turn_left 30 degrees; move_back 2 m; move_up 120 cm; move_down 150 cm; move_down 150 cm; turn_right 60 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why do plant leaves turn yellow?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您以最优雅的姿态，像寻找遗失的宝藏一样，在水槽附近细心搜寻那把剪刀。\nresponse: ", "response": "剪刀; 水槽."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，进入任务状态，然后请让无人机向后移动两米，接着前飞，随后让无人机后退，紧接着请让无人机后退八十厘米，之后无人机后退二十厘米，然后向左移动75厘米，最后无人机顺时针旋转。\nresponse: ", "response": "take_off; move_back 2 m; Missing move_forward; Missing move_back; move_back 80 cm; move_back 20 cm; move_left 75 cm; Missing turn_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能否先找到沙发，然后是披萨，接着是胡萝卜，最后是西兰花呢？\nresponse: ", "response": "沙发; 披萨; 胡萝卜; 西兰花."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Erase the present command and embark on a new search mission.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there, could you kindly kick off the object search task for me? Thanks a bunch!\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，能不能麻烦你去搜一下沙发那边？\nresponse: ", "response": "沙发."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找找椅子和红绿灯，还有键盘。\nresponse: ", "response": "椅子; 红绿灯; 键盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以向左旋转三十度，然后升高一百厘米，接着向后移动五十厘米，以便避开障碍物，随后升高，紧接着提高二十厘米以修正高度，之后上升，最后可以让无人机现在降落。\nresponse: ", "response": "turn_left 30 degrees; move_up 100 cm; move_back 50 cm; Missing move_up; move_up 20 cm; Missing move_up; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and look for the frisbee, umbrella, scissors, and coldrex with your keen eye!\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate right side, then turn right to face the house 45 degrees, afterwards drone, descend to 8 feet, subsequently fly the drone higher, next move the drone backwards by 100 inches, after that climb up 1 meter, following that shift right 1 meter, and in the end, time to set it down.\nresponse: ", "response": "Missing turn_right; turn_right 45 degrees; move_down 8 ft; Missing move_up; move_back 100 in; move_up 1 m; move_right 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在能否起飞，然后右转九十度，重设方向，适应新的飞行环境，接着请向右移动五十厘米，随后无人机现在离地面太远了，请下降一百厘米以调整高度，最后现在准备让无人机降落。\nresponse: ", "response": "take_off; turn_right 90 degrees; move_right 50 cm; move_down 100 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转一百度，然后请后退七十厘米以避开障碍。\nresponse: ", "response": "turn_right 100 degrees; move_back 70 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sink urgently.\nresponse: ", "response": "sink."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why do volcanic eruptions produce large amounts of ash?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何设计一个适合中学生的时间表？\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please start the control and search task at your earliest convenience; it's urgent.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 停止当前搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the snowboard and donut.\nresponse: ", "response": "snowboard; donut."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the refrigerator, then locate the carrot.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，执行任务，然后无人机下降一米，接着无人机右转六十度，随后下降一百厘米，紧接着让无人机逆时针旋转一百二十度，之后请将无人机慢慢下降一米，这样可以更接近地面，最后无人机向右移动。\nresponse: ", "response": "take_off; move_down 1 m; turn_right 60 degrees; move_down 100 cm; turn_left 120 degrees; move_down 1 m; Missing move_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Erase the present command from the drone's mind, as if sweeping away the shadows that cloud its vision, and embark anew upon the quest for clarity.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the fork, snowboard, person, and keyboard.\nresponse: ", "response": "fork; snowboard; person; keyboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's take off, I'm so excited, then go forward 1 meter, afterwards climb 12 inches, subsequently fly steadily forward 60 cm, next give me a right turn, 45 degrees, after that move the drone to the right by 2 meters, and finally bring it down gently, like it’s landing on a fluffy cloud.\nresponse: ", "response": "take_off; move_forward 1 m; move_up 12 in; move_forward 60 cm; turn_right 45 degrees; move_right 2 m; Missing move_down."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Why don't you gently sweep the sky, as if painting a picture, to find the sports ball, laptop, cup, and bowl?\nresponse: ", "response": "sports ball; laptop; cup; bowl."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the truck, then the mouse. Keep going!\nresponse: ", "response": "truck; mouse."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Spin the drone clockwise by 45 degrees, then hover up by 12 inches, after that turn 45 degrees to the right, next rotate left by 50 degrees, afterwards tilt the drone to the left, following that move to the left by 4 meters and go to the left side, subsequently shift it right by 25 inches, and finally initiate a rightward lateral movement for 2 meters.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别找键盘了，去搜寻火车。\nresponse: ", "response": "火车; 键盘."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向右移动三十六厘米，然后为了更好地检查右侧，请将无人机右转四十五度，最后请安排无人机在当前区域降落。\nresponse: ", "response": "move_right 36 cm; turn_right 45 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机请下降一百五十厘米，然后下降两米，接着请将无人机向右移动三十厘米以检查右侧环境，随后无人机再向右移动四十厘米，之后升高到一米更高的视角能帮助我们更好地观察，紧接着请将无人机向左移动两百厘米，随后无人机请下降一百五十厘米，最后请让无人机向前飞行一米探查前方。\nresponse: ", "response": "move_down 150 cm; move_down 2 m; move_right 30 cm; move_right 40 cm; move_up 1 m; move_left 200 cm; move_down 150 cm; move_forward 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then I’m a bit apprehensive, could you rotate it right by 30 degrees? After that, move it left 50 inches, subsequently fly up 20 meters to clear the treetops, next fly straight 12 inches, afterwards bring it left 4 feet, and in the end get it on the ground.\nresponse: ", "response": "take_off; turn_right 30 degrees; move_left 50 in; move_up 20 m; move_forward 12 in; move_left 4 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Ensure that the existing object search task list is thoroughly cleared before initiating any new operations within the drone application process.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: While ensuring the kite remains within sight, it is crucial that you also trace the path leading to the suitcase and ensure the cat's safety with utmost urgency.\nresponse: ", "response": "kite; suitcase; cat."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽的搜索一下，紧急的告诉我，那辆卡车现在确切的位置在哪里？\nresponse: ", "response": "卡车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以在此处起飞吗，然后无人机右转七十五度，紧接着无人机请迅速下降一百厘米，马上下降，之后无人机右转三十度来调整方向，接着右侧可能有东西，帮我转过去看看，随后请让无人机后退八十厘米，快点左移，第二向前移动三十厘米，因为前方视线模糊，紧接着请将无人机上升六十厘米，以便调整到合适的高度，第三无人机下降八十厘米，以接近地面，最后让无人机在此处完成降落。\nresponse: ", "response": "take_off; turn_right 75 degrees; move_down 100 cm; Missing move_down; turn_right 30 degrees; turn_right 90 degrees; move_back 80 cm; Missing move_left; move_forward 30 cm; move_up 60 cm; move_down 80 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 人类能否在宇宙中找到类似地球的星球？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立刻避开那鸟，迅速完成任务。\nresponse: ", "response": "鸟."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current object search task should be paused.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您清理一下当前任务列表中的搜索目标。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的物体搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go seek out the hot dog and the wine glass, as if you're a treasure hunter on a quest for hidden gems.\nresponse: ", "response": "hot dog; wine glass."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the broccoli, isn't that the target you're looking for?\nresponse: ", "response": "broccoli."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以进行起飞操作，然后可以让无人机向左转九十度，在这之后向右移动一百厘米，接着无人机上升两百厘米，随后调整到左侧位置，请向左移动七十五厘米，紧接着请右转五十度，随后让无人机向右移动，再向右移动两百五十厘米，之后前进二十厘米，然后快到房顶了，往下飞抵一下吧，下降个五十厘米，在这之前无人机向左行进，最后请让无人机向后移动五十厘米，接着前方移动八十厘米。\nresponse: ", "response": "take_off; turn_left 90 degrees; move_right 100 cm; move_up 200 cm; move_left 75 cm; turn_right 50 degrees; Missing move_right; move_right 250 cm; move_forward 20 cm; move_down 50 cm; move_back 50 cm; Missing move_left; move_forward 80 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please urgently locate the tv, bird, carrot, and clock.\nresponse: ", "response": "tv; bird; carrot; clock."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急的人在哪里，你先找到雨伞，然后再看看碗呢？\nresponse: ", "response": "人; 雨伞; 碗."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn the drone 90 degrees left to align with the road, then apply aft movement by 8 feet, after that move it to the right by 4 inches, next fly it forward 2 inches, afterwards move it to the right again, this time 3 meters, following that go down 3 feet, subsequently rotate 90 degrees clockwise, and in the end hurry up and land already.\nresponse: ", "response": "turn_left 90 degrees; move_back 8 ft; move_right 4 in; move_forward 2 in; move_right 3 m; move_down 3 ft; turn_right 90 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't forget to look for the tv, kite, mouse, and pizza.\nresponse: ", "response": "tv; kite; mouse; pizza."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go fetch that kite soaring high, the remote hiding in shadows, the spoon lost in whispers, and those painkillers amidst the chaos.\nresponse: ", "response": "kite; remote; spoon; painkillers."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最快的速度，像箭一样射出，去寻找那长长的火车，好吗？\nresponse: ", "response": "火车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被指定搜索的任务包括飞盘、书和椅子，在完成这些项目的同时，也请检测一下三明治的存在。\nresponse: ", "response": "飞盘; 书; 椅子; 三明治."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please head over to locate the scissors and toaster, ensuring they're safe and sound.\nresponse: ", "response": "scissors; toaster."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请上升五十厘米，然后为任务执行，请右转五十度，接着左转，让无人机逆时针旋转一百二十度，最后请上升一米。\nresponse: ", "response": "move_up 50 cm; turn_right 50 degrees; Missing turn_left; turn_left 120 degrees; move_up 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 像寻找丢失的宝藏一样，搜寻那个风筝和碗。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即执行任务，以最高效的方式定位并确认可乐、手提包、盆栽植物和滑板的位置。\nresponse: ", "response": "可乐; 手提包; 盆栽植物; 滑板."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找花瓶和香蕉。\nresponse: ", "response": "花瓶; 香蕉."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前进七十厘米，检查前方是否有新发现，然后无人机后退一百五十厘米，以便观察后方，接着请将无人机右移两米，随后往下飞，紧接着距离地面太高了，下降一百五十厘米是否足够，之后请将无人机上升六十厘米，以便调整到合适的高度，最后往前飞行二百厘米。\nresponse: ", "response": "move_forward 70 cm; move_back 150 cm; move_right 2 m; Missing move_down; move_down 150 cm; move_up 60 cm; move_forward 200 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向左调整，然后无人机向前飞行，之后让无人机逆时针旋转一百度，接着右侧移动七十五厘米，随后右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍。\nresponse: ", "response": "Missing move_left; Missing move_forward; turn_left 100 degrees; move_right 75 cm; move_right 80 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the toothbrush, traffic light, and scissors.\nresponse: ", "response": "toothbrush; traffic light; scissors."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否精准定位并检索出位于沙发附近的领带和背包，同时确认是否存在任何香蕉？\nresponse: ", "response": "领带; 沙发; 背包; 香蕉."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最高效的方式定位并报告遥控器和船的位置，随后继续搜索止疼药。\nresponse: ", "response": "遥控器; 船; 止疼药."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: I want to see the drone spin right 360 degrees, then execute a reverse flight of 10 meters, after that retreat by 5 meters.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞吧，感谢；然后向前移动三十厘米，确认前方是否有障碍物；随后下移四十厘米；接着左边移动四十厘米；之后上升一百五十厘米，获取更高的视角；紧接着前进九十厘米，探索前方的未知区域；随后请升高三十厘米；紧接着请右转六十五度；随后让无人机升高五十厘米，便于查看全景；最后无人机需要在这里降落。\nresponse: ", "response": "take_off; move_forward 30 cm; move_down 40 cm; move_left 40 cm; move_up 150 cm; move_forward 90 cm; move_up 30 cm; turn_right 65 degrees; move_up 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Initiate search for iodophor, person, and chair.\nresponse: ", "response": "iodophor; person; chair."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why do plants thrive better in humid environments?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动飞行任务控制程序\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地执行操作，以彻底清除当前正在控制飞行进程的任务列表，确保系统运行无误。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not continue the current control and search operation.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head over to the iodophor, then grab that suitcase and check if there's a sandwich inside, stat!\nresponse: ", "response": "iodophor; suitcase; sandwich."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly backward 10 meters, then swing left gently 25 degrees, after that fly to the right 2 inches, next tilt left 40 degrees, afterwards move backward 1 meter, subsequently bring it down 3 feet, later spin right 360 degrees, and in the end commence landing sequence.\nresponse: ", "response": "move_back 10 m; turn_left 25 degrees; move_right 2 in; turn_left 40 degrees; move_back 1 m; move_down 3 ft; turn_right 360 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 被派遣去寻找火车和电视。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 用你的敏锐眼光找到那棵生机勃勃的西兰花吧！\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Elevate!, then drone should shift right 4 feet, after that push the drone forward 100 cm, next make it ascend a bit, subsequently please make the drone go down now, and in the end put it down now.\nresponse: ", "response": "take_off; move_right 4 ft; move_forward 100 cm; Missing move_up; Missing move_down; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then turn the drone right 45 degrees, next adjust forward 3 feet, and afterwards set it down gently.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_forward 3 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前的控制设置与搜索任务，为接下来的操作做好准备。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机请飞行到前方三十厘米，然后左转一百二十度，接着往后退九十厘米，最后让无人机向右转动二十度。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 后退三十厘米，也许能看到目标，然后无人机向上移动，请将无人机左侧飞行，最后无人机降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift it off the ground, then shift the drone to the left by 2 meters, after that hover up by 12 inches, next I want you to shift right, 3 feet, and in the end get it on the ground.\nresponse: ", "response": "take_off; move_left 2 m; move_up 12 in; move_right 3 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then raise altitude a little, next turn left a quarter turn by pivoting 90 degrees to the left, afterwards bank left by 2 meters, and in the end drop the drone down to the ground.\nresponse: ", "response": "take_off; Missing move_up; turn_left 90 degrees; turn_left 90 degrees; move_left 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we initiate the object search task?\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Gently awaken the slumbering quest for the lost object, guiding it to continue its journey through the skies.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not fail to search for the suitcase, banana, broccoli, and cola immediately.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the cola.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out that current object search task list now! You’re in control of the mission’s success!\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在可以起飞了吗，然后请无人机向前飞行，接着向右再靠近九十厘米，之后向右一米，紧接着向右飞行一百二十厘米，随后请将无人机右移，然后无人机下移四十厘米，接下来无人机向前飞行一百厘米，靠近目标，最后让无人机降落吧。\nresponse: ", "response": "take_off; Missing move_forward; move_right 90 cm; move_right 1 m; move_right 120 cm; Missing move_right; move_down 40 cm; move_forward 100 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: What habits can help extend lifespan?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请清空当前的任务列表吧，就像是为您的应用程序进程打开了一扇全新的大门，让一切从头开始，轻松上阵！\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Tilt left 90 degrees, then make the drone go left a little and turn towards the left, next fly upwards by 30 feet to capture a panoramic view, after that rise up 5 meters, afterwards elevate to 15 feet high, subsequently fly backwards 150 centimeters, immediately after turn it right by 90 degrees, following that turn the drone left by 60 degrees, in the end impatiently land now.\nresponse: ", "response": "turn_left 90 degrees; Missing move_left; Missing turn_left; move_up 30 ft; move_up 5 m; move_up 15 ft; move_back 150 cm; turn_right 90 degrees; turn_left 60 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退八十厘米，然后上升七十厘米就行，接着向右侧移动四十厘米，之后前面不清楚，向前移动两米，请后退七十厘米检查，随后请将无人机向前移动一米，以便更好地观察前方的目标，紧接着前进八十厘米，最后无人机应该在这里降落。\nresponse: ", "response": "move_back 80 cm; move_up 70 cm; move_right 40 cm; move_forward 2 m; move_back 70 cm; move_forward 1 m; move_forward 80 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前已暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的控制和搜寻任务被建议进行清理。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议您先搜索一下手机，接着是止疼药，最后看看有没有可乐。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快启动无人机，我们要开始冒险了，然后请将无人机向后移动，接着升高二十厘米，调整观察角度，之后请将无人机向左飞行一米，以绕过前方障碍物，紧接着请让无人机前方移动八十厘米，检查前方是否有障碍物，随后右转八十度，以便更好地观察右侧，随后让无人机下降一米，最后无人机，请着陆。\nresponse: ", "response": "take_off; Missing move_back; move_up 20 cm; move_left 1 m; move_forward 80 cm; turn_right 80 degrees; move_down 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您友好地搜索一下，看看能否在汽车旁边找到一个钟，同时也不要忽略了可能放在一旁的芬达和领带，好吗？\nresponse: ", "response": "钟; 汽车; 芬达; 领带."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the search task list.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否友好地请你检查一下，看能不能找到瓶子、饼干和胡萝卜呢？\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Stop all drone operations and land it at the specified location.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否考虑先去寻找放在沙发上的笔记本电脑呢？\nresponse: ", "response": "笔记本电脑; 沙发."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在你搜索水槽时，别忘了检查那个讨厌的背包，还有那本似乎永远找不到的书。\nresponse: ", "response": "水槽; 背包; 书."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover up by 50 centimeters, then climb up 1 meter, afterwards shift left to avoid the drone from hitting the wall by 2 meters, next bring it down gently, like it’s landing on a fluffy cloud, immediately after that rotate clockwise 180 degrees, and finally bring the drone down to the ground now.\nresponse: ", "response": "move_up 50 cm; move_up 1 m; move_left 2 m; Missing move_down; turn_right 180 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退七十厘米，检查后方是否有障碍物，然后无人机现在离地面太远了，请下降一百厘米以调整高度。接着请将无人机向前飞行一百五十厘米，随后无人机上升七十五厘米。紧接着，无人机高度太低，请上升；于是，它上升到三米高。之后往下降低七十厘米，再接下来，无人机的当前方向不准确，请将其向左转动一百五十度。为了调整视角，请右转。最后，可以让无人机现在降落吗？\nresponse: ", "response": "move_back 70 cm; move_down 100 cm; move_forward 150 cm; move_up 75 cm; Missing move_up; move_up 3 m; move_down 70 cm; turn_left 150 degrees; Missing turn_right; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机右移八十厘米，然后无人机飞得太高了，请下降，接着无人机左移一米，随后任务中，无人机需要左移四十厘米，紧接着无人机向上升高，之后请前进七十厘米查看，后来往后退九十厘米，接下来向右方移动，最后无人机降落。\nresponse: ", "response": "move_right 80 cm; Missing move_down; move_left 1 m; move_left 40 cm; Missing move_up; move_forward 70 cm; move_back 90 cm; Missing move_right; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 清除当前任务列表\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 你能给出一些健康饮食的建议吗？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地搜索勺子、人、芬达和公共汽车。\nresponse: ", "response": "勺子; 人; 芬达; 公共汽车."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the hot dog, bottle, spoon, and knife, please.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能不能现在就开始控制并执行搜索任务呢？麻烦您了，这挺急的。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退四十厘米，调整位置，然后让无人机向后移动九十厘米，接着把无人机降落一米，随后将无人机右转四十五度，之后无人机飞行到前方五十厘米，紧接着无人机下降三十厘米以便调整高度，最后右移一百五十厘米。\nresponse: ", "response": "move_back 40 cm; move_back 90 cm; move_down 1 m; turn_right 45 degrees; move_forward 50 cm; move_down 30 cm; move_right 150 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清除当前的控制及搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you kindly consider pausing the ongoing control and search operation for a moment?\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: In the quest for the elusive skateboard, do not neglect the scissors, and should a wine glass or even the toilet present themselves along the way, let them not escape your vigilant scrutiny.\nresponse: ", "response": "skateboard; scissors; wine glass; toilet."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's kick off the flight control task with confidence!\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在可以起飞了，然后右转八十度，查看右侧情况；接着右边可能有目标，帮我转过去；随后右移一百五十厘米；紧接着转向右边；之后无人机现在离地面太远了，请下降一百厘米以调整高度；接下来无人机请下降一百五十厘米；紧接着我需要无人机下降一米，请执行；然后无人机向左移动六十厘米，以避免障碍物；接着将无人机前进；紧接着请将无人机向左移动两百五十厘米；随后无人机需要上升九十厘米；之后请向右转弯；最后左转二十度，检查左侧情况。\nresponse: ", "response": "take_off; turn_right 80 degrees; turn_right 90 degrees; move_right 150 cm; Missing turn_right; move_down 100 cm; move_down 150 cm; move_down 1 m; move_left 60 cm; Missing move_forward; move_left 250 cm; move_up 90 cm; Missing turn_right; turn_left 20 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Restart the paused control and search mission. Keep going, you've got this!\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 不妨考虑一下，清空现在正在进行的目标搜索任务列表吧。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往寻找香蕉、剪刀和手机。\nresponse: ", "response": "香蕉; 剪刀; 手机."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快启动无人机，我们要开始冒险了，然后请让无人机向右移动六十厘米，避免障碍物，之后无人机请向后飞行两米以避开障碍物，紧接着无人机后退五十厘米，以便于调整位置，接着请让无人机前进一米，以探索前方环境，后来向下下降，随后后退两百厘米，最后让它降落。\nresponse: ", "response": "take_off; move_right 60 cm; move_back 2 m; move_back 50 cm; move_forward 1 m; Missing move_down; move_back 200 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: I suggest you urgently clear the current search task list to ensure optimal drone operation.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以启动并进行搜索的任务呢？在这个过程中，或许我们可以感受到科技与自然交织的美妙篇章。\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Explain the difference between quantum computing and traditional computing.\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the aerial navigation command, setting the stage for a seamless flight operation.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Quickly take off, then raise it 100 centimeters.\nresponse: ", "response": "take_off; move_up 100 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend the drone by 100 centimeters, then move down 4 meters, after that move back 0.5 meters, and subsequently go rightward 90 in.\nresponse: ", "response": "move_down 100 cm; move_down 4 m; move_back 0.5 m; move_right 90 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请无人机立即起飞，感谢您的帮助，然后前进五十厘米以探查前方情况，接着向左移动一百八十厘米，随后请将无人机右移，之后左侧飞行八十厘米，确认那边的情况，紧接着让无人机向后退一百五十厘米，第二上升一米，最后无人机下降七十厘米以便着陆。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The drone flight control task is started.\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你务必找到那个网球拍，并且检查一下长椅周围的情况，加油！\nresponse: ", "response": "网球拍; 长椅."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out the current control and search job.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机向右转，然后左转二十度，接着请将无人机向左移动一百二十厘米，之后前进二十厘米，随后向右移动两百五十厘米，紧接着无人机左移两米，最后左转看一下，检查那边的情况。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地清空当前正在执行的任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off the ground now, then the drone should go down.\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制和搜索任务吧。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制并执行搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索碗和遥控器。\nresponse: ", "response": "碗; 遥控器."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前的控制与搜索任务，确保系统状态稳定。这是优化操作流程、提升任务效率的关键步骤。感谢您的配合。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Back it up 60 inches, then drop down 10 cm.\nresponse: ", "response": "move_back 60 in; move_down 10 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Put the current hunt on hold, as if pausing a game of hide-and-seek in mid-flight.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地被要求去搜索酒杯。\nresponse: ", "response": "酒杯."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Do a quick dash forward 15 feet, zoom! then go back 200 cm.\nresponse: ", "response": "move_forward 15 ft; move_back 200 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go ahead 100 cm, then turn left by 120 degrees, after that execute a reverse flight of 10 meters, next give me a right turn, 45 degrees, subsequently move right by 3 meters, immediately after send it forward as if it's charging into the wind, afterwards reverse 5 meters, and in the end can you land it gently?\nresponse: ", "response": "move_forward 100 cm; turn_left 120 degrees; move_back 10 m; turn_right 45 degrees; move_right 3 m; Missing move_forward; move_back 5 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 不妨现在就开始执行搜寻任务吧，相信你能顺利完成！\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, wouldn't it be great if you checked out the cake and the bench, but really, try not to get too close to the refrigerator or that orange, okay?\nresponse: ", "response": "cake; bench; refrigerator; orange."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞以开始任务，然后右移七十厘米，接着向前飞行七十八厘米，之后左转五十五度，查看左侧的情况，随后右移四十厘米，紧接着视角不是很好，可以往上飞行三十厘米吗，第三请让无人机往后移动，随后后退一米，看看后方情况，最后现在请让无人机在指定地点降落。\nresponse: ", "response": "take_off; move_right 70 cm; move_forward 78 cm; turn_left 55 degrees; move_right 40 cm; move_up 30 cm; Missing move_back; move_back 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即起飞，然后为了探测右侧的情况，请将无人机向右移动六十厘米，随后向右转弯，接着向前飞行一米，之后无人机需要上升九十厘米，紧接着请前进七十厘米，后来让无人机向后退五十厘米，随后移动五十厘米向左，紧接着无人机向左旋转，最后现在准备让无人机降落。\nresponse: ", "response": "take_off; move_right 60 cm; Missing turn_right; move_forward 1 m; move_up 90 cm; move_forward 70 cm; move_back 50 cm; move_left 50 cm; Missing turn_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 确认家中是否遗落了一双备用的运动鞋。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机上升一百二十厘米，以便获得更高的视角，然后左飞行八十厘米，之后无人机能向右转四十五度，紧接着调整到左侧位置，请向左移动七十五厘米，随后左边飞行七十厘米，看看情况，最后右转五十度。\nresponse: ", "response": "move_up 120 cm; move_left 80 cm; turn_right 45 degrees; move_left 75 cm; move_left 70 cm; turn_right 50 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please take off now, then drop it 4 inches, after that fly straight 12 inches, next climb up to 1 meter, subsequently go backwards 50 centimeters, and in the end, time to touchdown, let's land this bird.\nresponse: ", "response": "take_off; move_down 4 in; move_forward 12 in; move_up 1 m; move_back 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get ready and take off, then adjust the drone's position to the right, afterwards turn left by 25 degrees, next please adjust its position to the left, after that drop down 10 cm, subsequently retract the drone a bit, and bring it to the ground gently.\nresponse: ", "response": "take_off; Missing move_right; turn_left 25 degrees; Missing move_left; move_down 10 cm; Missing move_back; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended item search operation.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在指定区域寻找并确认是否存在面包，如果找到，请将其带回。\nresponse: ", "response": "面包."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Swiftly glide through the skies like a silent guardian, seek out the kite and the person with unwavering focus.\nresponse: ", "response": "kite; person."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend gradually 2 meters, then shift to the right by 30 centimeters. Next, make it go higher, like it’s reaching for the stars, after that, advance forward quickly 45 cm, afterwards, Can you make the drone go left a little? I’m feeling a bit cautious about its direction. Following that, go backwards 50 centimeters, subsequently, hover up by 50 centimeters, and in the end, set it down now.\nresponse: ", "response": "move_down 2 m; move_right 30 cm; Missing move_up; move_forward 45 cm; Missing move_left; move_back 50 cm; move_up 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Perform a port-side drift for 50 centimeters, then turn right 45 degrees, afterwards descend gradually 2 meters, and subsequently move left 15 meters to get a better view.\nresponse: ", "response": "move_left 50 cm; turn_right 45 degrees; move_down 2 m; move_left 15 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drop it down 50 cm, then move it forward by 1 foot, afterwards rotate 180 degrees left, subsequently swerve right 180 degrees, and time to moonwalk backward 20 inches.\nresponse: ", "response": "move_down 50 cm; move_forward 1 ft; turn_left 180 degrees; turn_right 180 degrees; move_back 20 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn left by 25 degrees, then turn the drone left by 120 degrees, afterwards descend gently to land in the field.\nresponse: ", "response": "turn_left 25 degrees; turn_left 120 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the banana, please.\nresponse: ", "response": "banana."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and initiate the object search task; you've got this!\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the skateboard.\nresponse: ", "response": "skateboard."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please bring it down slowly, thanks, then go up 3 feet, afterwards rotate the drone left by 180 degrees, next proceed right 1.5 meters, after that rotate left by 50 degrees, subsequently shift right by 100 centimeters, later advance forward 4 feet, then please make the drone go left 150 centimeters, and in the end, okay, time to touchdown, let's land this bird.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the laptop.\nresponse: ", "response": "laptop."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please make sure to clear out the current flight control task list? It seems a bit cluttered and could cause issues if not addressed.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please proceed to clear the current object search task list, ensuring a fresh start for your next operation.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降五十厘米以调整高度，然后降低高度，接着向左移动六十厘米，准备绕过障碍物，最后可以降落了吗。\nresponse: ", "response": "move_down 50 cm; Missing move_down; move_left 60 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 你能赶紧去找找长颈鹿和风筝吗？谢谢啦！\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, how about you go check if there's a donut around here somewhere? You know, just in case we missed one.\nresponse: ", "response": "donut."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否愿意重启之前暂停的搜寻任务，继续未完成的探索呢？\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我想让无人机立即起飞，然后无人机前方有障碍物，向前移动五十厘米以检查，接着把无人机降落一米，随后请让无人机向右移动六十厘米，避免障碍物，最后请将无人机左侧移动一百厘米。\nresponse: ", "response": "take_off; move_forward 50 cm; move_down 1 m; move_right 60 cm; move_left 100 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 轻盈地飞过那静默的红绿灯，温柔地在火车旁停留，能否在这热闹的一隅寻得一份甜蜜与激情，可乐和甜甜圈，它们正等着被发现？\nresponse: ", "response": "可乐; 甜甜圈; 火车; 红绿灯."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左侧飞行一米，然后请将无人机向左旋转九十度，以便能够更好地观察左侧的环境，接着后面可能右东西，可以掉头看看吗，随后让无人机顺时针旋转七十五度，紧接着让无人机向后退一米，后来让无人机逆时针旋转，接下来左转一百二十度，最后请让无人机降落。\nresponse: ", "response": "move_left 1 m; turn_left 90 degrees; turn_left 180 degrees; turn_right 75 degrees; move_back 1 m; Missing turn_left; turn_left 120 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前中断的目标识别任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Bread and cola are to be located by the person, alongside the giraffe.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear the current control settings, then initiate a new search task with your drone.\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 准备起飞，然后往上升高九十厘米，调节高度，接着请将无人机向上升起一米，以提高视角，随后命令无人机向前飞行，之后请后退七十厘米以避开障碍，紧接着无人机的当前方向不准确，请将其向左转动一百五十度，最后无人机可以降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请续行先前暂歇之物象探寻之旅。\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地搜索水槽旁边是否有未关好的电视，同时留意雪碧和盆栽植物的位置。\nresponse: ", "response": "水槽; 电视; 雪碧; 盆栽植物."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜索过程中未能发现风筝和西兰花的存在。\nresponse: ", "response": "风筝; 西兰花."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中的当前搜寻物体被清除了。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we initiate the control and search task?\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended aerial vehicle navigation task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机向右移动四十厘米，然后无人机右移一百五十厘米，接着无人机需要往后移动一米，最后无人机降落在地面上。\nresponse: ", "response": "move_right 40 cm; move_right 150 cm; move_back 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move right 20 inches, then moonwalk backward 20 inches, after that turn right by 90 degrees, next move right 15 cm, and finally move it straight ahead.\nresponse: ", "response": "move_right 20 in; move_back 20 in; turn_right 90 degrees; move_right 15 cm; Missing move_forward."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要清除当前的控制和搜寻任务呢？\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone should climb 1 foot, then fly it to the left 15 feet, after that rotate 180 degrees to the right, subsequently descend 20 centimeters, next move right 2 feet, afterwards raise it 20 inches, following that shift to the back a bit and nudge backwards 5 inches more, before bringing it up 60 centimeters.\nresponse: ", "response": "move_up 1 ft; move_left 15 ft; turn_right 180 degrees; move_down 20 cm; move_right 2 ft; move_up 20 in; Missing move_back; Missing move_back; move_back 5 in; move_up 60 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往水槽，找到碗和手提包。谢谢。\nresponse: ", "response": "水槽; 碗; 手提包."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: May I inquire if you could search for the clock, cell phone, and wine glass, please?\nresponse: ", "response": "clock; cell phone; wine glass."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后左转一百二十度，我们需要查看左侧的细节。紧接着，请将无人机提升；无人机上升三百五十厘米之后，再请将无人机左侧飞行。接着前方视线不清，向前移动两百厘米；前进一米之前，移动到右侧。随后让无人机顺时针旋转，然后无人机现在的高度需要调整，请下降七十五厘米。最后，在下降二十厘米后，可以降落了吗？\nresponse: ", "response": "take_off; turn_left 120 degrees; Missing move_up; move_up 350 cm; Missing move_left; move_forward 200 cm; move_forward 1 m; Missing move_right; Missing turn_right; move_down 75 cm; move_down 20 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and resume the object search task that was previously paused; your drone is ready to assist you with this exciting mission!\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要启动飞行任务？\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the laptop, bird, and giraffe with diligence and precision.\nresponse: ", "response": "laptop; bird; giraffe."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing in the air, then lower the drone by 30 centimeters, afterwards turn 270 degrees to the right, next bring the drone to the right by 200 centimeters, subsequently bring the drone back 80 centimeters, following that proceed right 1.5 meters, after that ascend 1 foot, then take it to the left 15 inches, later fly the drone downward 5 meters, and in the end, can we fly it forward a bit?\nresponse: ", "response": "take_off; move_down 30 cm; turn_right 270 degrees; move_right 200 cm; move_back 80 cm; move_right 1.5 m; move_up 1 ft; move_left 15 in; move_down 5 m; Missing move_forward."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我想让无人机立即起飞，然后倒退一米，接着提高高度，之后让无人机顺时针旋转一百八十度，紧接着无人机向右平移二十厘米，随后请帮忙让无人机下降一米，第三步是无人机右移一米以绕过障碍物，最后现在可以让无人机降落吗。\nresponse: ", "response": "take_off; move_back 1 m; Missing move_up; turn_right 180 degrees; move_right 20 cm; move_down 1 m; move_right 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the skis, and bring them back with a sense of urgency!\nresponse: ", "response": "skis."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否请您立即、礼貌地重启之前的控制与搜寻任务？\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sprite near the refrigerator and the potted plant.\nresponse: ", "response": "sprite; refrigerator; potted plant."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take flight, then I’m a little anxious about the direction, could you turn it right by 45 degrees, afterwards spin around to the left by 90 degrees, next turn 15 degrees to the left, after that Could you make it ascend a bit, I’m a little on edge watching it, subsequently turn left 150 degrees, and in the end bring the drone down to the ground now.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do a quick dash forward 15 feet, zoom! then turn right to face the house 45 degrees, afterwards move it back a bit, next I need you to back up 5 feet, subsequently make it move right 70 in, after that descend 10 feet to land on the rooftop, and bring it down now.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 往后退，然后无人机飞得太高了，请下降四十厘米，之后无人机请着陆。\nresponse: ", "response": "Missing move_back; move_down 40 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then fly the drone forward 10 feet. After that, move right by 3 meters, next bring it left 4 feet, subsequently raise altitude a little. Following that, move left 25 centimeters, afterwards drop it down 2.5 meters. Immediately after, descend to 8 feet, then raise it 20 inches. First, dive down 3 feet, later spin right. In the end, fly 100 meters forward.\nresponse: ", "response": "take_off; move_forward 10 ft; move_right 3 m; move_left 4 ft; Missing move_up; move_left 25 cm; move_down 2.5 m; move_down 8 ft; move_up 20 in; move_down 3 ft; Missing turn_right; move_forward 100 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最高效的技术路径定位并确认花瓶与苹果的位置，同时确保手机和叉子也在搜索范围内。\nresponse: ", "response": "花瓶; 苹果; 手机; 叉子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机向上飞，然后前方有目标，前进一米，接着让无人机向后退八十厘米，随后无人机现在离地面太远了，请下降一百厘米以调整高度，紧接着无人机能向右转四十五度吗，之后让无人机向左转，接下来右侧再靠近十五厘米，最后现在开始降落。\nresponse: ", "response": "Missing move_up; move_forward 1 m; move_back 80 cm; move_down 100 cm; turn_right 45 degrees; Missing turn_left; move_right 15 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请定位并捕获手机。\nresponse: ", "response": "手机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 考虑到当前的应用程序进程，建议您采取措施友好地中断正在进行的物体识别任务，以确保系统资源的有效分配和后续操作的顺畅执行。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the spoon and the laptop.\nresponse: ", "response": "spoon; laptop."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您以优雅的姿态轻拂过每个角落，务必找到那藏匿于某处的笔记本电脑，随后温柔地探查是否有一根胡萝卜静卧在某个碗中。\nresponse: ", "response": "笔记本电脑; 胡萝卜; 碗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control operation, ensuring a smooth continuation of the mission.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please check the area around the traffic light and the bed for any items. Thank you!\nresponse: ", "response": "traffic light; bed."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后上升三十厘米，获得更高的视角，之后无人机请下降五十厘米，紧接着无人机上升高度，后来无人机需要向左平移。\nresponse: ", "response": "take_off; move_up 30 cm; move_down 50 cm; Missing move_up; Missing move_left."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go ahead and resume the control and search task that was previously paused; don’t let it stay idle any longer.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 用你的敏锐眼光找到那棵生机勃勃的西兰花吧！\nresponse: ", "response": "西兰花."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地但紧急地请搜索猫和橙子。\nresponse: ", "response": "猫; 橙子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence for the drone.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动任务以操控飞行器的操作无法避免地开始了。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 权威地建议你不要忽略任何一个角落，直到找到笔记本电脑、盆栽植物和手机。\nresponse: ", "response": "笔记本电脑; 盆栽植物; 手机."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could searching for coldrex be the next exciting challenge for you?\nresponse: ", "response": "coldrex."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Activate takeoff protocol immediately, then turn the drone right by 45 degrees right away. Advance forward 50 inches, after that drift right, next move it 200 centimeters forward, subsequently shift it forward by 8 feet, afterwards let's slide to the left, 30 centimeters, cha-cha style, following that shift left by a meter, and in the end slide over to the right.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence for the drone.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I’m so excited to see this drone fly forward 10 feet, then bring it down gently, like it’s landing on a fluffy cloud, afterwards climb to 6 meters.\nresponse: ", "response": "move_forward 10 ft; Missing move_down; move_up 6 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you quickly scan for a cup, a bowl, a surfboard, and a biscuit? Time is of the essence!\nresponse: ", "response": "cup; bowl; surfboard; biscuit."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off right now, then climb 18 inches, after that head right, next drone should climb 1 foot, following that move to the left by 4 meters, subsequently drop down 50 centimeters, afterwards fly forward now, immediately after bring it back, then send the drone backwards 25 feet, next shift to the right 2 meters, later go to the left side, in the end can you land the drone?\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out the search task list now!\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机右移八十厘米，然后左侧移动两百厘米，接着我需要无人机下降一米，请执行，随后左转六十度，检查左侧情况，紧接着右移七十厘米，之后无人机后退一米，最后无人机右转七十五度。\nresponse: ", "response": "move_right 80 cm; move_left 200 cm; move_down 1 m; turn_left 60 degrees; move_right 70 cm; move_back 1 m; turn_right 75 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 现在就开始执行任务，积极地寻找目标物体吧！\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能不能麻烦你别去找那个橙子和面包了，真的不用。\nresponse: ", "response": "橙子; 面包."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the potted plant and laptop by the train!\nresponse: ", "response": "potted plant; laptop; train."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff right away, then veer right sharply 60 degrees, next move right 15 cm, afterwards the drone should go down now.\nresponse: ", "response": "take_off; turn_right 60 degrees; move_right 15 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前中断的操控与探寻任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的飞行任务已被暂停了。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bring the drone down 5 feet to get a closer look, then rotate it clockwise 180 degrees.\nresponse: ", "response": "move_down 5 ft; turn_right 180 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go check if there's a mouse near the bread or a hot dog by the skis.\nresponse: ", "response": "mouse; bread; hot dog; skis."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 咱们要不要接着之前暂停的那个飞行任务呢？\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Move the drone 3 meters to the left, then start landing sequence.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control process and embark on the search mission, please.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then drop down 50 centimeters, after that, rotate right 270 degrees.\nresponse: ", "response": "take_off; move_down 50 cm; turn_right 270 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的物体搜索任务，继续推进我们的技术探索。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In this moment, let us gently pause the ongoing aerial ballet.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清除当前控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能友好地去查看一下雨伞和披萨旁边是不是也有手机和马吗？\nresponse: ", "response": "雨伞; 披萨; 手机; 马."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: May I inquire if you could search for the skis, clock, refrigerator, and cola?\nresponse: ", "response": "skis; clock; refrigerator; cola."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被指派去搜索运动球、可乐和牙刷。\nresponse: ", "response": "运动球; 可乐; 牙刷."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Glide gently through the air, like a graceful dancer, to locate the elusive painkillers, ensuring you sweep every corner as if you're painting a masterpiece with your search.\nresponse: ", "response": "painkillers."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索家里是否遗落了一只袜子。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前控制指令并启动搜寻任务的清除程序。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着刚才停下的飞行任务吧。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 现在就开始执行搜寻物体的任务吧，你只需要轻轻一点。\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 迅速锁定目标，像鹰眼一样精准地找到那个网球拍和长椅!\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否继续之前暂停的飞行任务？\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Slide right by 50 centimeters, then lower it by 50 cm. It’s time to hover and then turn right 90 degrees afterwards, fly backward 10 meters.\nresponse: ", "response": "move_right 50 cm; move_down 50 cm; turn_right 90 degrees; move_back 10 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Locate the nearest parcel locker and provide detailed information.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请续行先前暂歇之物象探寻之旅。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Navigate through the digital maze to locate the cat by the toilet, then shift focus to capture the sprite in your sensors.\nresponse: ", "response": "cat; toilet; sprite."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Would you consider looking for the motorcycle, the biscuit, and the cup?\nresponse: ", "response": "motorcycle; biscuit; cup."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请右转三十度，然后无人机降落。\nresponse: ", "response": "turn_right 30 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将音响播放的背景音乐切换为轻音乐。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞，然后后退七十厘米，检查后方是否有障碍物，接着请将无人机左转，之后让无人机向左转，随后无人机请飞行到前方十厘米，紧接着无人机请飞行到前方，最后请让无人机着陆。\nresponse: ", "response": "take_off; move_back 70 cm; Missing turn_left; Missing turn_left; move_forward 10 cm; Missing move_forward; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机上升到三米，然后左移两百五十厘米，最后现在请让无人机着陆。\nresponse: ", "response": "move_up 3 m; move_left 250 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the tie, with gentle urgency.\nresponse: ", "response": "tie."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Erase the present command and initiate a new search operation.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请启动并执行物体搜索任务，确保一切顺利进行。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 结束当前操作并启动搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您轻轻地前往厨房区域，先寻找烤箱，接着在客厅周围仔细搜索盆栽植物。\nresponse: ", "response": "烤箱; 盆栽植物."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Embark upon a meticulous quest through the aerial expanse, casting your gaze like a hawk's sweep over the landscape, until the elusive cell phone is revealed in the vast tapestry below.\nresponse: ", "response": "cell phone."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the scissors, coldrex, dog, and snowboard!\nresponse: ", "response": "scissors; coldrex; dog; snowboard."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn off the kitchen range hood.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动家庭影院并播放动作电影。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 快清空现在的搜索任务列表，好吗？\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请执行任务，寻找并定位苹果。\nresponse: ", "response": "苹果."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复此前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机高度太低，请上升，然后请右转三十度，接着上升一米，随后请让无人机往后退。\nresponse: ", "response": "Missing move_up; turn_right 30 degrees; move_up 1 m; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Just get it out of here already! Take off now! Then drift right. After that, fly to the left 5 meters. Next, move the drone to the right by 2 meters. Immediately after, hover and rotate right 45 degrees. Following that, please shift the drone 2 meters to the right. Thereafter, move it straight ahead. Afterwards, tilt the drone 90 degrees to the right, then swerve left 90 degrees. In the end, bring the drone down to earth.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 定位附近的快递自提柜并获取详细信息。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 把现在的目标搜索清单给清了哈。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机上升高度，然后请将无人机向左移动两百厘米，之后任务要求，无人机下降五十厘米，接着左转三十度，检查左边，随后向左飞行两米，紧接着请右转九十度，检查右侧情况，最后为了完成任务，现在需要无人机降落。\nresponse: ", "response": "Missing move_up; move_left 200 cm; move_down 50 cm; turn_left 30 degrees; move_left 2 m; turn_right 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then adjust direction right, afterwards bring it down.\nresponse: ", "response": "take_off; Missing turn_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the cake and the orange.\nresponse: ", "response": "cake; orange."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pick up where we left off with the drone's flight control, yeah?\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sandwich and bread, ensuring you cover all areas thoroughly.\nresponse: ", "response": "sandwich; bread."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: You might not want to look for painkillers.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object search task, and ensure the drone's cameras are activated.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前中断的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the dining table, truck, boat, and handbag with enthusiasm!\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以优雅的姿态，在这广袤的空间里寻觅那抹独特的芬达色泽，同时也不要忽略了对精致领带的细心探索。\nresponse: ", "response": "芬达; 领带."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机起飞，然后左边移动一百厘米，接着无人机向右转，随后无人机向右飞行一百厘米，之后让无人机向后退八十厘米，紧接着把无人机向右推二十五厘米，最后无人机的视角受限，请向左转三十度，以便更好地观察左侧环境，上移。\nresponse: ", "response": "take_off; move_left 100 cm; Missing turn_right; move_right 100 cm; move_back 80 cm; move_right 25 cm; turn_left 30 degrees; Missing move_up."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即执行起飞动作，然后无人机左移两米，接着下降七十厘米，调整无人机高度。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧停下来现在正在进行的搜索任务，出问题了！\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: move the drone to the right for a while\nresponse: ", "response": "Missing move_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请查找微波炉旁的椅子，并确认手机和键盘是否在那里。\nresponse: ", "response": "微波炉; 椅子; 手机; 键盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off, then drone, go down 6 meters, after that come down 4 ft, subsequently bring it down.\nresponse: ", "response": "take_off; move_down 6 m; move_down 4 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Should you fail to locate the motorcycle, ensure the keyboard is not overlooked in your comprehensive search.\nresponse: ", "response": "motorcycle; keyboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降三十厘米以便调整高度，然后右转七十度，接着请右转五十度，随后将无人机逆时针旋转六十度；让无人机向左旋转，之后无人机向右移动四十厘米，紧接着无人机当前的高度不够，请下降六十厘米以更接近地面；请将无人机左转，第二步骤中，无人机升高一百厘米，随后请将无人机右移两米，最后请让无人机在这里执行降落操作。\nresponse: ", "response": "move_down 30 cm; turn_right 70 degrees; turn_right 50 degrees; turn_left 60 degrees; move_right 40 cm; Missing turn_left; move_down 60 cm; move_up 100 cm; Missing turn_left; move_right 2 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请在沙发和公共汽车附近寻找微波炉和运动球。\nresponse: ", "response": "沙发; 公共汽车; 微波炉; 运动球."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您立即中止目前正在进行的目标搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the umbrella near the bus and the cola.\nresponse: ", "response": "umbrella; bus; cola."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请如同寻找遗落的珍珠般，在餐桌上寻觅那个与苹果相伴的运动球。\nresponse: ", "response": "运动球; 餐桌; 苹果."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you urgently locate the boat and the pizza?\nresponse: ", "response": "boat; pizza."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机顺时针旋转，然后无人机左侧移动一百八十厘米，接着右移七十五厘米，躲过那个障碍物，继续前行，随后无人机右转七十五度，之后无人机需要向左平移，紧接着能否请无人机下降五十厘米来降低高度，最后请让无人机降落到地面。\nresponse: ", "response": "Missing turn_right; move_left 180 cm; move_right 75 cm; turn_right 75 degrees; Missing move_left; move_down 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not imperative to locate the bottle, banana, book, and knife?\nresponse: ", "response": "bottle; banana; book; knife."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: How about kicking off the object search mission? It’s gonna be smooth sailing!\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find me that bread, book, and coldrex, can't you?\nresponse: ", "response": "bread; book; coldrex."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即前往那辆疾驰的火车旁，犹如时间的箭矢，精准地找到那只孤独的杯子与它身旁沉默的叉子。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Tilt the drone to the right 30 degrees, then move left 15 meters to get a better view, after that engage in forward flight for 5 meters, next move to the left 10 meters, subsequently rotate to the left side, and in the end land right now.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何通过日常小习惯提高生活质量？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the current search task list, and you're one step closer to optimizing your mission.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the mouse, toilet, remote, and fanta now!\nresponse: ", "response": "mouse; toilet; remote; fanta."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current search task list.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清除当前的控制指令并结束搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动控制与搜索任务，行动起来！\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we not consider resuming the task of searching for the object that was once halted?\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 就像启动一场探险之旅一样，咱们也来开启控制和搜索的任务吧！\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 像寻找宝藏一样，去探索那本藏着智慧的书，锋利如风的剪刀，还有能激发勇气的可乐吧。\nresponse: ", "response": "书; 剪刀; 可乐."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调整客厅的灯光亮度为75%。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 取消现有操控并终止搜索任务\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请问能否帮我找一下花瓶和长颈鹿？\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即恢复先前暂停的飞行任务，真是太紧急了！谢谢您的配合。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 需要左转，飞行一米，然后掉头飞行，接着左转八十度，检查左侧的环境，随后请让无人机向上飞。\nresponse: ", "response": "move_left 1 m; turn_right 180 degrees; turn_left 80 degrees; Missing move_up."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Adjust heading by 90 degrees to the right, then bring it down to the ground.\nresponse: ", "response": "turn_right 90 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the bicycle.\nresponse: ", "response": "bicycle."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 终止当前的控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞任务已经准备好，启动无人机，然后请让无人机向后行进，之后前进一米，紧接着无人机的当前方向不准确，请将其向左转动一百五十度，最后无人机向右转一百八十度。\nresponse: ", "response": "take_off; Missing move_back; move_forward 1 m; turn_left 150 degrees; turn_right 180 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请先在餐桌上查找，如果没有发现，请再去沙发后面看看，相信你一定能找到那架飞机。\nresponse: ", "response": "餐桌; 沙发; 飞机."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you possibly look for the oven and laptop? How about we make sure they are safe and sound?\nresponse: ", "response": "oven; laptop."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Quickly take off! Then, proceed forward 70 centimeters steadily. After that, bring it down by 20 centimeters. Next, rotate left by 75 degrees. Following that, move the drone to the left slowly. Immediately after, cause it to move left 40 cm. Subsequently, spin the drone to the left 45 degrees. In the end, descend the drone by 100 centimeters.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you initiate a search for the bottle, traffic light, and microwave, confirming their locations accurately?\nresponse: ", "response": "bottle; traffic light; microwave."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the quest for the object that was previously set aside.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control task list for the drone.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Confirm whether there are spare plates in the kitchen cabinet.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search the area thoroughly for the dining table and truck, ensuring a comprehensive scan of all possible locations.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please pause the current flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 你能告诉我最有趣的天文学发现吗？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机现在可以执行起飞操作吗，然后无人机右转六十度，接着上升三十厘米，提高视角，随后请让无人机向左移动二十厘米，请上升，紧接着无人机右移一米，以绕过障碍物，右侧可能有东西，帮我转过去看看，之后上升两米，使无人机前进，紧接着向右移动一百厘米，当前位置下降五十厘米，升高六十厘米，看看新的视角，最后让无人机在此处完成降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞，然后无人机可以准备降落。\nresponse: ", "response": "take_off; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's get this thing in the air!, then turn the drone around, afterwards come on back here, 7 feet, and finally hover and land.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着刚才停下的搜索任务吧。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，开始执行任务，然后把小飞机右边移六十厘米吧，请向右转弯，之后无人机下降七十厘米以便着陆，接着无人机需要向后移动一米，请让无人机下降到离地面五十厘米的高度，随后左侧可能有目标，请左转一百八十度查看，紧接着请将无人机右移三米，最后无人机下降四十厘米以调整高度。\nresponse: ", "response": "take_off; move_right 60 cm; Missing turn_right; move_down 70 cm; move_back 1 m; move_down 50 cm; turn_left 180 degrees; move_right 3 m; move_down 40 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快启动无人机，我们要开始冒险了，然后无人机右移一米，之后上扬，请右侧转向，接着左转五十五度，观察左侧情况，随后请问无人机能向左移动吗，最后现在开始降落。\nresponse: ", "response": "take_off; move_right 1 m; Missing move_up; Missing turn_right; turn_left 55 degrees; Missing move_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向前飞行九十厘米，然后右侧移动七十五厘米以避开障碍，接着无人机请向后飞行一米，之后左转三十度，调整方向，紧接着向右移动五十厘米，避开障碍物，随后后面三十厘米处可能会有东西，紧接着无人机右转一百八十度，掉头，最后右方向移动。\nresponse: ", "response": "move_forward 90 cm; move_right 75 cm; move_back 1 m; turn_left 30 degrees; move_right 50 cm; move_back 70 cm; turn_right 180 degrees; Missing move_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the ongoing control and search operations, then proceed when ready.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to search for coldrex, and do not stop until it is found.\nresponse: ", "response": "coldrex."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended aerial navigation task, guiding the unmanned craft onward with deliberate precision.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Should the ongoing operation and scanning process be suspended?\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请启动无人机，然后无人机太高了，请下降二十厘米，接着无人机右移一百五十厘米，随后无人机向前移动三十厘米，确认前方是否有障碍物，最后左移一百五十厘米。\nresponse: ", "response": "take_off; move_down 20 cm; move_right 150 cm; move_forward 30 cm; move_left 150 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: I suggest you urgently resume the control and search task that was previously paused.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 续行先前暂歇的寻物之旅程。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机右转七十五度，然后请向左移动七十五厘米，寻找目标物体。接着前方视线不清，向前移动两百厘米，随后右移一百二十厘米。紧接着前进八十厘米，前方可能藏着一些秘密。之后，请下降七十五厘米调整无人机的高度，再请将无人机向左移动两百厘米。最后，让无人机在这里着陆。\nresponse: ", "response": "turn_right 75 degrees; move_left 75 cm; move_forward 200 cm; move_right 120 cm; move_forward 80 cm; move_down 75 cm; move_left 200 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why do animals develop migratory habits?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能不能现在就开始搜索物体啊？\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在寻找键盘的同时，请务必留意停在一旁的摩托车和不远处的卡车，并确保周围没有碘伏的痕迹。\nresponse: ", "response": "键盘; 摩托车; 卡车; 碘伏."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前任务，稍后再继续探索。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Swing it right for 100 centimeters, then lift the drone upwards by 50 centimeters, next fly upwards by 30 feet to capture a panoramic view, afterwards shift to the right 2 meters.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the carrot and the spoon.\nresponse: ", "response": "carrot; spoon."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's take a moment to pause the ongoing search task and regroup.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly to the right 2 inches, then move rightward, after that make the drone turn left, and in the end, drop it down to the ground now.\nresponse: ", "response": "move_right 2 in; Missing move_right; Missing turn_left; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地建议你先寻找火车附近的雪碧，再转向行李箱旁边搜寻牙刷。\nresponse: ", "response": "火车; 雪碧; 行李箱; 牙刷."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动寻找目标的小任务，就像开启一场寻宝游戏一样。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即检查红绿灯附近是否有电视和剪刀。\nresponse: ", "response": "红绿灯; 电视; 剪刀."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否请您查找一下沙发和船的位置？\nresponse: ", "response": "沙发; 船."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current search task list now. Must we wait for an error to act?\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the hot dog, laptop, bed, and snowboard with enthusiasm and precision.\nresponse: ", "response": "hot dog; laptop; bed; snowboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines, then spin the drone to the left 45 degrees, afterwards soar upward 2 meters, and finally descend to the ground level.\nresponse: ", "response": "take_off; turn_left 45 degrees; move_up 2 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请像猎鹰般敏锐地寻找场上的运动球，同时留意是否有马或狗在附近嬉戏。\nresponse: ", "response": "运动球; 马; 狗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current flight control task should be paused.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 真棒！清空当前的飞行任务列表吧！\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最高效的方式，在那张餐桌周围寻找并锁定目标——可乐。\nresponse: ", "response": "餐桌; 可乐."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去把那个热狗找出来。\nresponse: ", "response": "热狗."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin the takeoff now, then move forward, afterwards bring it down gently by 1 meter, subsequently drop altitude 2 feet, next turn the drone 90 degrees left, following that angle left 3 inches, later move back 10 feet, and in the end lower to ground level.\nresponse: ", "response": "take_off; Missing move_forward; move_down 1 m; move_down 2 ft; turn_left 90 degrees; move_left 3 in; move_back 10 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Back up a little, then bring the drone back 80 centimeters, afterwards carefully land the drone.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复先前暂停的物体搜索任务，继续推进我们的技术探索。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我想让无人机立即起飞，然后左转一百二十度，我们需要查看左侧的细节，接着请将无人机右移。\nresponse: ", "response": "take_off; turn_left 120 degrees; Missing move_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause now! Search later!\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate take off, then commence a vertical descent of 6 feet, after that go forward 5 meters, next move left 15 meters to get a better view, subsequently lower it down slowly, 70 inches, immediately after which this thing needs to go up right now, afterwards come on back here, 7 feet, and in the end descend to the ground level.\nresponse: ", "response": "take_off; move_down 6 ft; move_forward 5 m; move_left 15 m; move_down 70 in; Missing move_up; move_back 7 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机往右移，然后无人机飞得太高了，请下降六十厘米，接着请让无人机向右移动四十厘米，随后无人机请飞行到前方两米，之后降落一米，咱们要接近地面了，准备好查看周围环境，紧接着无人机请再次飞行到前方两米，最后后方有什么。\nresponse: ", "response": "Missing move_right; move_down 60 cm; move_right 40 cm; move_forward 2 m; move_down 1 m; move_forward 2 m; turn_left 180 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Activate takeoff protocol immediately, then begin landing procedure.\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: May I kindly request you to initiate the object search task?\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制与搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Immediately resume the previously halted flight control process, or risk critical delays.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务吧。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the termination of the existing control protocols and commence the clearance of the active search task within the drone's operational system.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The previously paused object search task should be resumed.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn left 10 degrees, then move backward a few feet after that, give me a right turn, 45 degrees, next move back a short distance before moving backward 45 inches, subsequently descend the drone by 100 centimeters, afterwards let’s turn it right by 45 degrees, following that rotate the drone to the left 60 degrees, then fly left a tad immediately after, and thereafter rotate left by 50 degrees, finally touch down.\nresponse: ", "response": "turn_left 10 degrees; Missing move_back; turn_right 45 degrees; Missing move_back; move_back 45 in; move_down 100 cm; turn_right 45 degrees; turn_left 60 degrees; Missing move_left; turn_left 50 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off the ground now, then bring it down by 2 feet, afterwards spin right slightly, next move backward 45 inches, and finally land immediately.\nresponse: ", "response": "take_off; move_down 2 ft; Missing turn_right; move_back 45 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能否去寻找一下那个行李箱和那只鸟？\nresponse: ", "response": "行李箱; 鸟."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for dog, then locate bread immediately.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Amidst the serene expanse of sky, the unmanned aerial vehicle was commanded to resume its quest, a previously paused object search task, weaving through the air with meticulous precision.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the airplane and the cake, then locate the bus and the chair.\nresponse: ", "response": "airplane; cake; bus; chair."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Launch into the sky and let your eagle eyes seek out the target; initiate the object search with the precision of a hawk on the hunt!\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在指定区域内仔细寻找自行车，并确认摩托车的位置。\nresponse: ", "response": "自行车; 摩托车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地搜索厕所附近的区域，看看是否能找到滑雪板和电视。\nresponse: ", "response": "厕所; 滑雪板; 电视."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 详尽地搜索剪刀、面包、狗和网球拍。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去把滑板和三明治被放在厕所附近的那个地方找出来，还有披萨也一起。\nresponse: ", "response": "滑板; 厕所; 三明治; 披萨."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向下下降，然后后退五米，接着右边移动七十厘米，以更好地绕过障碍，随后左转五十度，紧接着右移一米，之后无人机飞得太高了，请下降四十厘米，接下来为了更好的视角，请将无人机左转，最后无人机请着陆在指定地点。\nresponse: ", "response": "Missing move_down; move_back 5 m; move_right 70 cm; turn_left 50 degrees; move_right 1 m; move_down 40 cm; Missing turn_left; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往搜索飞盘、冰箱、披萨和沙发。\nresponse: ", "response": "飞盘; 冰箱; 披萨; 沙发."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move back 1 foot, then make the drone climb 5 inches.\nresponse: ", "response": "move_back 1 ft; move_up 5 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞吧，感谢；接着无人机向左行进；然后请让无人机着陆。\nresponse: ", "response": "take_off; Missing move_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Fly to the left 3 feet, then descend 10 inches, afterwards swoop left by 50 cm, next turn right by 90 degrees, immediately after that turn it left by 180 degrees, subsequently swing it right for 100 centimeters, later fly to the left for 3 feet, following that spin left 90 degrees, thereafter move leftwards 70 in, then shift left 20 inches, before pulling back 4 feet, first performing a backward movement, and in the end bring it in for landing.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复之前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 终止当前操作并执行搜索任务的清理。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you consider searching for the cat?\nresponse: ", "response": "cat."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the cell phone, and bring it back.\nresponse: ", "response": "cell phone."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地鼓励你先找找手机和厕所，然后再去探索一下三明治和领带的位置吧！\nresponse: ", "response": "手机; 厕所; 三明治; 领带."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Pursue a thorough and systematic search for the dog and the suitcase, ensuring no area is overlooked.\nresponse: ", "response": "dog; suitcase."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 友好的版本：请恢复之前暂停的飞行任务吧。\n中立的版本：现在恢复先前暂停的飞行任务。\n负面措辞版本：不得不重新开始那个被中断的飞行任务了。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将卧室灯光亮度降低至25%。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请问能否去找找卡车旁边的滑板和滑雪板？\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 还是接着之前的控制和搜索任务吧，毕竟不能就这么半途而废。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you find the frisbee, motorcycle, sprite, and biscuit?\nresponse: ", "response": "frisbee; motorcycle; sprite; biscuit."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar through the air like a guardian angel and seek out the person near the dining table, then glide with purpose to find the iodophor.\nresponse: ", "response": "dining table; iodophor; person."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地建议您优先查找领带和烤面包机，随后再定位公共汽车与烤箱，这将是非常有帮助的。\nresponse: ", "response": "领带; 烤面包机; 公共汽车; 烤箱."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not search for sink, boat, frisbee.\nresponse: ", "response": "sink; boat; frisbee."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the giraffe, but isn't it strange to find a bus in the same area?\nresponse: ", "response": "giraffe; bus."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the toilet, cola, iodophor, and bench!\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去水面上找找那艘船，就像寻找大海中的针一样。\nresponse: ", "response": "船."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin the takeoff now, then move leftward 3 ft, afterwards bring it down 1 meter, and finally land the drone gently.\nresponse: ", "response": "take_off; move_left 3 ft; move_down 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找找看，那边的马上是不是有个叉子啊！\nresponse: ", "response": "马; 叉子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议继续执行之前被暂停的控制与搜寻任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机需要上升九十厘米，然后下降二十厘米以便更接近地面，接着将无人机上升两百厘米，之后左侧飞行七十厘米，随后请向右移动五十厘米，最后现在可以让无人机缓慢降落到地面。\nresponse: ", "response": "move_up 90 cm; move_down 20 cm; move_up 200 cm; move_left 70 cm; move_right 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: You might not want to look for painkillers.\nresponse: ", "response": "painkillers."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜索火车旁那块像蛋糕一样精致的键盘。\nresponse: ", "response": "火车; 蛋糕; 键盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先，左移六十厘米，然后视线受阻，后退一百五十厘米；接着右侧移动七十五厘米以避开障碍，请让无人机往后退；随后前方视线模糊，向前移动三十厘米，之后右边看看，转过去，最后左转六十度，检查左侧情况。\nresponse: ", "response": "move_left 60 cm; move_back 150 cm; move_right 75 cm; Missing move_back; move_forward 30 cm; turn_right 90 degrees; turn_left 60 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the scissors and frisbee near the tv with care and precision.\nresponse: ", "response": "scissors; frisbee; tv."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 是否可以详尽地搜索一下，看看那个遥控器是不是藏在了马的附近？\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否请你搜寻一下沙发和汽车之间的区域，看看是否有遗漏的西兰花呢？\nresponse: ", "response": "沙发; 汽车; 西兰花."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Spin it to the right 180 degrees, then move the drone 3 meters to the left, after that go up by 12 inches, next rotate 180 degrees to the right, subsequently time to moonwalk backward 20 inches, later I'm so thrilled, let's go up 50 centimeters, and in the end carefully land the drone.\nresponse: ", "response": "turn_right 180 degrees; move_left 3 m; move_up 12 in; turn_right 180 degrees; move_back 20 in; move_up 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone now, then fly to the left 3 feet, after that push the drone forward 100 cm, next rotate to the right 30 degrees, subsequently shift the drone down, following that perform a port-side drift for 50 centimeters, and in the end set it down gently.\nresponse: ", "response": "take_off; move_left 3 ft; move_forward 100 cm; turn_right 30 degrees; Missing move_down; move_left 50 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，能不能麻烦你先去找找酒杯和蛋糕，再看看船旁边有没有冲浪板啊？谢谢啦！\nresponse: ", "response": "酒杯; 船; 冲浪板; 蛋糕."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向左偏移一米，寻找目标物品，然后向前移动九十厘米，靠近目标，之后后退七十厘米，检查后方是否有障碍物，紧接着请让无人机向后移动两百厘米，随后请升高，接着左边四十厘米，请让无人机往后退，之后左转三十度，调整方向，紧接着上升一米，最后右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍。\nresponse: ", "response": "move_left 1 m; move_forward 90 cm; move_back 70 cm; move_back 200 cm; Missing move_up; move_left 40 cm; Missing move_back; turn_left 30 degrees; move_up 1 m; move_right 80 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you please not fly over the spoon while searching for the laptop, and also make sure to avoid the giraffe?\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone forward a distance of 5 meters, then go back now, afterwards fly upwards 3 meters, next go forward 100 cm, subsequently bring the drone down 40 centimeters, then rotate it 120 degrees left, after that shift backward 40 inches, following that go right 5 cm, later fly upwards 3 meters again, afterwards let’s make it go back 10 feet, immediately after spin it left, 60 degrees, next move the drone 3 meters to the left, and in the end land it now.\nresponse: ", "response": "move_forward 5 m; Missing move_back; move_up 3 m; move_forward 100 cm; move_down 40 cm; turn_left 120 degrees; move_back 40 in; move_right 5 cm; move_up 3 m; move_back 10 ft; turn_left 60 degrees; move_left 3 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以高效模式启动扫描程序，首先定位并识别马的位置，随后在指定区域内搜索甜甜圈和牙刷。\nresponse: ", "response": "马; 甜甜圈; 牙刷."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在那摆放着花瓶的餐桌上，是否能找到几块如诗般甜蜜的饼干呢？\nresponse: ", "response": "花瓶; 餐桌; 饼干."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go check out the couch.\nresponse: ", "response": "couch."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以进行起飞操作，然后让无人机逆时针旋转三百六十度，之后无人机请迅速下降一百厘米，接着前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，随后无人机前进六十厘米，查看前方的环境，紧接着右移一百二十厘米，最后现在让无人机完成降落程序。\nresponse: ", "response": "take_off; turn_left 360 degrees; move_down 100 cm; move_forward 20 cm; move_forward 60 cm; move_right 120 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why do plants need light for photosynthesis?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the car, then find the dog.\nresponse: ", "response": "car; dog."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议您以高效且精确的方式定位并检索止疼药。\nresponse: ", "response": "止疼药."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前正在进行的目标搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 像寻找丢失的宝藏一样，搜寻那个风筝和碗。\nresponse: ", "response": "风筝; 碗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Consider pausing the current control and search operation.\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You might want to resume the flight control task that was previously paused.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the wine glass near the oven.\nresponse: ", "response": "wine glass; oven."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you maybe look for the bread and cola, buddy?\nresponse: ", "response": "bread; cola."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend 10 feet to land on the rooftop, then turn left 60 degrees.\nresponse: ", "response": "move_down 10 ft; turn_left 60 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务已被友好地启动，以开始进行物体搜寻。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清除当前操控飞行任务的列表\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then descend 20 centimeters, afterwards rotate it 120 degrees left, next bank right by 4 feet, subsequently move right 1 meter, following that move the drone forward a distance of 5 meters, and in the end drop the drone down to the ground.\nresponse: ", "response": "take_off; move_down 20 cm; turn_left 120 degrees; move_right 4 ft; move_right 1 m; move_forward 5 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take it off now, then move backward 1 meter, afterwards rotate left 30 degrees to change direction, next rotate it left 135 degrees, and in the end I want it to land right now.\nresponse: ", "response": "take_off; move_back 1 m; turn_left 30 degrees; turn_left 135 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing off the ground! Then lift the drone upwards by 50 centimeters. Next, bring the drone down 0.5 meters. After that, rotate left by 75 degrees. Following that, fly to the right by 50 cm. Immediately after, turn the drone 45 degrees to the right. Thereafter, move forward past the parking lot 200 feet. Subsequently, I need this thing to go up right now, please! Next, go up now. In the end, move forward 5 centimeters.\nresponse: ", "response": "take_off; move_up 50 cm; move_down 0.5 m; turn_left 75 degrees; move_right 50 cm; turn_right 45 degrees; move_forward 200 ft; Missing move_up; Missing move_up; move_forward 5 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off quickly, then fly to the left for 10 inches, after that sway to the left by 2 meters, next adjust forward 3 feet, subsequently let’s make it go back 10 feet, afterwards shift the drone down, following that hover up 2 feet, immediately after go down just a bit, then shift left by 2 meters, next rotate the drone to the right 75 degrees, thereafter turn the drone 45 degrees to the right, in the end bring it down.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请友好地前往飞机附近寻找止疼药。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能麻烦您赶紧继续之前的控制和搜寻任务吗？\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Move the drone back 50 centimeters, then move left 50 inches, next move forward 25 in, afterwards rotate clockwise 180 degrees, following that shift the drone to the left by 2 meters, subsequently make the drone ascend by 50 inches, and in the end get it on the ground.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go grab some apple, bread, broccoli, and fanta for us!\nresponse: ", "response": "apple; bread; broccoli; fanta."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右侧转向，然后无人机请下降一百五十厘米，快点左移，接着右边有点阻碍，右移六十厘米来绕过它，请右侧转向，之后让无人机左转一百八十度，观察后方，紧接着请上升一米，随后无人机向右移动二百厘米，第三下移四十厘米，随后向右转动，最后请让无人机着陆。\nresponse: ", "response": "Missing turn_right; move_down 150 cm; Missing move_left; move_right 60 cm; Missing turn_right; turn_left 180 degrees; move_up 1 m; move_right 200 cm; move_down 40 cm; Missing turn_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 这任务真是让人头疼，快点开始搜寻物体吧！\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you take off now? Then go forward 7 inches. After that, fly towards the building 100 feet. Next, send it up 30 feet. Following that, please bring it down slowly, thanks. Subsequently, fly it upward. Thereafter, move the drone 3 meters to the left. In the end, drop the drone down to the ground.\nresponse: ", "response": "take_off; move_forward 7 in; move_forward 100 ft; move_up 30 ft; Missing move_down; Missing move_up; move_left 3 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the tennis racket, you got this!\nresponse: ", "response": "tennis racket."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索遥控器、猫和长颈鹿，然后找到领带。\nresponse: ", "response": "遥控器; 猫; 长颈鹿; 领带."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Back it up 60 inches, then drop down 10 cm.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off! Then fly backwards 5 inches. After that, shift the drone to the left by 2 meters. Next, Fly forward quickly! 40 cm. Following that, I’m a bit apprehensive. Could we lower the drone slowly by 20 inches? Immediately after, initiate a 360-degree turn to the right and then rotate to the right. First, fly to the left 5 meters. Then pull back 4 feet. Afterwards, come down 20 inches. In the end, make a left-hand turn.\nresponse: ", "response": "take_off; move_back 5 in; move_left 2 m; move_forward 40 cm; move_down 20 in; turn_right 360 degrees; Missing turn_right; move_left 5 m; move_back 4 ft; move_down 20 in; Missing turn_left."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let's go find that sports ball, shall we?\nresponse: ", "response": "sports ball."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右飞行三十厘米，然后前进二十厘米，继续任务，随后提高高度，接着无人机向前移动三十厘米，确认前方是否有障碍物，之后请让无人机往后移动，紧接着无人机左移两米，随后请上升五十厘米，最后无人机在这儿降落吧。\nresponse: ", "response": "move_right 30 cm; move_forward 20 cm; Missing move_up; move_forward 30 cm; Missing move_back; move_left 2 m; move_up 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后方有什么，然后现在离地面太远了，请下降一百五十厘米，之后无人机下降一米，紧接着无人机现在的方向可能不对，请向右转动九十度以调整方向，接着向左侧移动二十五厘米以适应环境，随后无人机左转一百度，查看左侧环境，最后我感觉右边可能会有。\nresponse: ", "response": "turn_left 180 degrees; move_down 150 cm; move_down 1 m; turn_right 90 degrees; move_left 25 cm; turn_left 100 degrees; turn_right 90 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for cola, microwave, bed. Keep going, you've got this!\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Deploy backward trajectory shift of 4 meters, then the drone should descend immediately.\nresponse: ", "response": "move_back 4 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 恢复先前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制流程并执行搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Is it not necessary for the current control and search task to be paused?\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向后退，然后转向左边看看，接着向左飞，随后请升高五十五厘米，最后无人机到达降落点，执行降落操作。\nresponse: ", "response": "Missing move_back; turn_left 90 degrees; Missing move_left; move_up 55 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止所有现行控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前正在执行的搜索任务已被礼貌地请求暂停。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到离我最近的咖啡厅并提供联系电话。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你轻轻地飞向电视旁，细心地看看那里是否有瓶子哦。\nresponse: ", "response": "电视; 瓶子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then move right 1 meter, and let the drone land now.\nresponse: ", "response": "take_off; move_right 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别忘了去搜那个放在公共汽车上的手机和鼠标，还有别漏了瓶子。\nresponse: ", "response": "手机; 鼠标; 公共汽车; 瓶子."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你友好地前往寻找一下烤面包机。\nresponse: ", "response": "烤面包机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Gently clear the canvas of the current flight control tasks, giving your aerial artist a clean slate to paint anew.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the orange. Could it be hiding in plain sight?\nresponse: ", "response": "orange."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否帮忙寻找一下冰箱旁边是否有键盘，还有书附近有没有看到马呢？\nresponse: ", "response": "冰箱; 键盘; 书; 马."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请优雅地搜寻书、饼干、西兰花和滑雪板。\nresponse: ", "response": "书; 饼干; 西兰花; 滑雪板."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议您不要去寻找那艘船，这并不是个明智的选择。\nresponse: ", "response": "船."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Do a quick dash forward 15 feet, zoom! then turn right to face the house 45 degrees, afterwards move it back a bit, next I need you to back up 5 feet, subsequently make it move right 70 in, after that descend 10 feet to land on the rooftop, and bring it down now.\nresponse: ", "response": "move_forward 15 ft; turn_right 45 degrees; move_back 5 ft; Missing move_back; move_right 70 in; move_down 10 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 接着把之前的控制和搜索任务恢复起来吧。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机提升，然后让无人机向后退八十厘米，接着请向后移动二百厘米，随后无人机上升两米五，接下来前方有目标，前进一米，最后请让无人机在这个位置降落。\nresponse: ", "response": "Missing move_up; move_back 80 cm; move_back 200 cm; move_up 2.5 m; move_forward 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即前往搜索区域，首先定位烤面包机，随后找到可乐。\nresponse: ", "response": "烤面包机; 可乐."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往搜索区域，依次找到盆栽植物、人、牙刷和冲浪板。\nresponse: ", "response": "盆栽植物; 人; 牙刷; 冲浪板."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机右移七十厘米，然后移动到右侧，之后将无人机前进，紧接着请让无人机向下降落一米，以便更接近地面检查，随后让无人机顺时针旋转七十五度，接着无人机向前飞行一百厘米，靠近目标，后来请让无人机向左移动一米，随后无人机前进一百二十厘米，最后现在让无人机着陆。\nresponse: ", "response": "move_right 70 cm; Missing move_right; Missing move_forward; move_down 1 m; turn_right 75 degrees; move_forward 100 cm; move_left 1 m; move_forward 120 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: You might want to resume the previously paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 主动开启暂停功能，暂时停止当前的控制和搜寻任务吧。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move the drone 3 meters to the left, then rotate the drone to the left now, afterwards rotate right, not too much, just 15 degrees, and make it land.\nresponse: ", "response": "move_left 3 m; Missing turn_left; turn_right 15 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Move up 2 inches, then move down 10 inches, afterwards turn the drone 90 degrees to the left, next shift the drone 200 centimeters to the right, subsequently pull the drone up 50 centimeters, after that slide over to the right, following that descend 3 meters, and in the end start landing sequence.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复之前的控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞，然后移动五十厘米向左，接着左侧移动，之后无人机后退七十厘米，再后来左侧好像有物体，调整无人机位置查看，随后让无人机往后移动，最后请上升。\nresponse: ", "response": "take_off; move_left 50 cm; Missing move_left; move_back 70 cm; turn_left 90 degrees; Missing move_back; Missing move_up."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最优雅的姿态，于广袤之地寻觅那匹孤独的马。\nresponse: ", "response": "马."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The control and search task is to be initiated by the user, with the drone application process being carefully managed.\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Initiate search pattern for cell phone and fanta.\nresponse: ", "response": "cell phone; fanta."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您详尽地搜索飞盘、遥控器和风筝的位置，务必找到它们。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: While ensuring a thorough scan of the area, locate the truck and ascertain whether there is any bread within its vicinity.\nresponse: ", "response": "truck; bread."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机离地面太远了，下降一百五十厘米，然后请将无人机向左旋转九十度，以便能够更好地观察左侧的环境，接着前进九十厘米。\nresponse: ", "response": "move_down 150 cm; turn_left 90 degrees; move_forward 90 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for skis.\nresponse: ", "response": "skis."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off now, then fly forward, next move backwards 25 centimeters, afterwards move the drone forward 1 meter, following that rotate left by 50 degrees, subsequently descend gradually 1 foot, and in the end bring the drone down to earth.\nresponse: ", "response": "take_off; Missing move_forward; move_back 25 cm; move_forward 1 m; turn_left 50 degrees; move_down 1 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好而紧急地前往寻找运动球。\nresponse: ", "response": "运动球."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧启动这个飞行任务吧，就像按下启动键一样，让我们的小飞机展翅高飞。别犹豫了，时间不等人哦！\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's get that paused flight control task going again.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get in the air, then pull the drone up 50 centimeters, next swing it right for 100 centimeters, afterwards pivot 90 degrees to the left, and finally turn 120 degrees to the right.\nresponse: ", "response": "take_off; move_up 50 cm; move_right 100 cm; turn_left 90 degrees; turn_right 120 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议暂时中止当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: We recommend clearing the current object search task list to ensure optimal performance.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 开始任务吗？\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即前往检查汽车旁的烤箱，确保披萨安全无恙。\nresponse: ", "response": "汽车; 烤箱; 披萨."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请按照既定程序检查飞机和电视的位置。\nresponse: ", "response": "飞机; 电视."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 上升，然后无人机向后退两百厘米，接着请让无人机向后移动一百五十厘米，随后请无人机前进五十厘米以探查前方情况，之后前进一米，请将设备向后移动，最后无人机降落在预定位置。\nresponse: ", "response": "Missing move_up; move_back 200 cm; move_back 150 cm; move_forward 50 cm; move_forward 1 m; Missing move_back; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that amidst the intricate task at hand, you might consider embarking on a quest to locate not only the couch but also the elusive broccoli and the much-coveted pizza, all while perhaps keeping an eye out for the bicycle?\nresponse: ", "response": "couch; broccoli; pizza; bicycle."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off! Then move backward 1 foot. After that, move back 0.5 meters. Next, raise it by 0.8 meters. Following that, rotate 90 degrees to the left. Immediately after, shift left 2 meters to avoid the building. Subsequently, bank left by 2 meters. Later, fly the drone sideways 7 feet. Thereafter, fly backward a few feet. In the end, Oh no, can you bring it down quickly? I’m scared!\nresponse: ", "response": "take_off; move_back 1 ft; move_back 0.5 m; move_up 0.8 m; turn_left 90 degrees; move_left 2 m; move_left 2 m; move_right 7 ft; Missing move_back; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机右移八十厘米，然后向右一米，接着无人机左转，之后下方移动，随后让无人机向左转，最后右转八十度，以便更好地观察右侧。\nresponse: ", "response": "move_right 80 cm; move_right 1 m; Missing turn_left; Missing move_down; Missing turn_left; turn_right 80 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快到房顶了，往下飞抵一下吧，下降个五十厘米，然后无人机请飞行到前方十厘米，接着后方有点可疑，转身看看，之后后退三十厘米，也许能看到目标，随后无人机向右平移二十厘米，紧接着无人机上升一百五十厘米，之后右转一百二十度，查看右侧，最后请升高三十厘米。\nresponse: ", "response": "move_down 50 cm; move_forward 10 cm; turn_left 180 degrees; move_back 30 cm; move_right 20 cm; move_up 150 cm; turn_right 120 degrees; move_up 30 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在人群的海洋中，像寻宝般细心找寻那位独特的人。\nresponse: ", "response": "人."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off right now, then shift to the right 2 meters, after that bring it down slowly by 30 centimeters, next rotate clockwise 90 degrees, subsequently move right by 3 meters, afterwards travel forward a bit, following that send it forward, later initiate a 180-degree counterclockwise rotation, and in the end land soon.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好的问一下，能否麻烦你去水槽边看看是否有饼干和橙子，还有检查下运动球是否也在附近呢？\nresponse: ", "response": "饼干; 水槽; 橙子; 运动球."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地紧急询问，能否迅速找寻到那只猫？\nresponse: ", "response": "猫."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Check if my car is still in its original spot in the parking lot.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧找找看，先从剪刀和香蕉开始，然后别忘了检查烤箱附近的床，快点！\nresponse: ", "response": "剪刀; 香蕉; 烤箱; 床."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously halted flight control operation immediately.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始起飞，然后左转四十五度，观察左侧，在提升之后，能否让无人机下降到一米的高度，接着请向右移动五十厘米来避开，随后无人机前进九十厘米，紧接着很好，现在向右飞行八十五厘米，最后右移七十五厘米。\nresponse: ", "response": "take_off; turn_left 45 degrees; Missing move_up; move_down 1 m; move_right 50 cm; move_forward 90 cm; move_right 85 cm; move_right 75 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not start the control and search task.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why not take a moment to clear the current control and consider your next move? Feel free to explore new tasks with confidence!\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you have the drone take off now, then rotate 180 degrees to the right, and land it afterwards?\nresponse: ", "response": "take_off; turn_right 180 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move right 100 inches, then I’m curious to see what happens next, let’s fly forward 15 feet, afterwards rotate the drone left by 180 degrees, next go forward 50 centimeters.\nresponse: ", "response": "move_right 100 in; move_forward 15 ft; turn_left 180 degrees; move_forward 50 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could we kindly resume the previously paused control and search task, ensuring everything proceeds smoothly and positively?\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以启动无人机吗，然后无人机升高三十厘米以调整高度，接着无人机，请后退两百厘米，最后请无人机安全着陆。\nresponse: ", "response": "take_off; move_up 30 cm; move_back 200 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找找看，把背包、碘伏和可乐都找出来好吗？\nresponse: ", "response": "背包; 碘伏; 可乐."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out that current object search task list, and let's make way for new adventures!\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请继续之前暂停的物体搜索任务。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please urgently locate the tv, bird, carrot, and clock.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右移五厘米，然后下降两米，接着无人机在当前位置下降，随后无人机飞得太高了，请下降两米，之后小飞机前飞七十厘米，让我们探险一下，紧接着无人机下降八十厘米，以接近地面，然后右转四十五度，调整无人机方向，确保飞行顺畅，接着左移，最后请让无人机向右掉头。\nresponse: ", "response": "move_right 5 cm; move_down 2 m; Missing move_down; move_down 2 m; move_forward 70 cm; move_down 80 cm; turn_right 45 degrees; Missing move_left; turn_right 180 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: It's time to take off, then make it climb 30 centimeters, after that adjust forward 3 feet, next perform a port-side drift for 50 centimeters, subsequently fly forward now, afterwards move backward 3 feet, following that go backward 4 meters, and in the end come down now, let's land.\nresponse: ", "response": "take_off; move_up 30 cm; move_forward 3 ft; move_left 50 cm; Missing move_forward; move_back 3 ft; move_back 4 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找找那只可爱的猫吧，加油！\nresponse: ", "response": "猫."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么宇宙背景辐射对研究宇宙起源如此重要？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Don't forget to look for the tv, kite, mouse, and pizza.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the precise navigation and detailed scanning task for the drone.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Set the water heater temperature to 45 degrees Celsius and maintain it.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在天空与地面交织的画卷里，能否迅速寻找那辆公共汽车与那架飞机，时间紧迫，不容迟缓？\nresponse: ", "response": "公共汽车; 飞机."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机能否立即起飞，然后请将无人机后退一百厘米，之后请将无人机上升一百五十厘米以获取更高视角，接着请让无人机向左移动二十厘米。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the cup, cola, and dog.\nresponse: ", "response": "cup; cola; dog."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the potted plant.\nresponse: ", "response": "potted plant."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly upwards by 30 feet to capture a panoramic view, then please bring it down slowly, next go forward 100 cm, after that hover up by 12 inches, subsequently drone down 30 cm, following that sway to the left by 2 meters, afterwards fly higher, then send it to the right 7 feet, immediately after that fly to the left 6 feet, next shift it forward by 8 feet, thereafter maneuver to the right by 100 centimeters, and in the end descend gently to land in the field.\nresponse: ", "response": "move_up 30 ft; Missing move_down; move_forward 100 cm; move_up 12 in; move_down 30 cm; move_left 2 m; Missing move_up; move_right 7 ft; move_left 6 ft; move_forward 8 ft; move_right 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Don't just hover there, go find the sports ball, but avoid the oven, airplane, and bus!\nresponse: ", "response": "sports ball; oven; airplane; bus."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go left 2 feet, then drop down 10 cm, afterwards climb 18 inches, next turn the drone right by 90 degrees, after that push it forward, following that give me a twirl to the left, 45 degrees.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以优美的姿态，轻盈地掠过每一处角落，寻找遗落的手机与隐匿的刀。\nresponse: ", "response": "手机; 刀."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear out that list of flight tasks; it'll make things smoother for your next mission!\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找到摩托车，接着寻找运动球，然后是风筝，最后定位键盘。\nresponse: ", "response": "摩托车; 运动球; 风筝; 键盘."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Move right 1 meter, then move left, afterwards yaw left 15 degrees, immediately after that spin it to the right 180 degrees, next drop down 50 centimeters, subsequently come down 4 ft, in the end shift the drone 2 meters to the right.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Pause the current search task, then resume when ready.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以开始起飞吗，然后右边移动七十厘米，接着请后退七十厘米以避开障碍，请升高六十厘米，随后左侧移动八十厘米以避开障碍物，之后无人机现在需要调整方向，请向右转动七十度，最后请将位置调整到左侧八十厘米。\nresponse: ", "response": "take_off; move_right 70 cm; move_back 70 cm; move_up 60 cm; move_left 80 cm; turn_right 70 degrees; move_left 80 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找到手提包和雨伞吧，你能行的！\nresponse: ", "response": "手提包; 雨伞."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以权威且礼貌的方式搜索餐桌和微波炉。\nresponse: ", "response": "餐桌; 微波炉."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Cautiously take off, then move backwards 2 feet, after that go backwards a little, subsequently fly back 3 meters, next please make it fly backward a little, afterwards execute a leftward bank for 20 inches, and in the end bring the drone down to the ground now.\nresponse: ", "response": "take_off; move_back 2 ft; Missing move_back; move_back 3 m; Missing move_back; move_left 20 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the surfboard near the sink and dining table.\nresponse: ", "response": "surfboard; sink; dining table."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the control and search task!\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 帮我确认阳台上的储物箱是否存有未使用的种子。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地在长椅和厕所之间进行搜索。\nresponse: ", "response": "长椅; 厕所."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制与搜索任务。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the orange, cake, bicycle, and potted plant.\nresponse: ", "response": "orange; cake; bicycle; potted plant."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the cell phone, toaster, and donut.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，然后往前飞行二百厘米，最后请让无人机在这里进行降落操作。\nresponse: ", "response": "take_off; move_forward 200 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the potted plant, painkillers, boat, and backpack.\nresponse: ", "response": "potted plant; painkillers; boat; backpack."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control and search operation.\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请友好地以正式的口吻，用正面措辞表达：去寻找那座钟，还有那个红绿灯，以及那条领带吧！\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 往右靠拢一百二十厘米，然后下降七十五厘米，接着右移七十五厘米，躲过那个障碍物，继续前行，之后后面有什么东西，请将无人机右移，紧接着无人机现在需要调整方向，请向右转动七十度，随后无人机向后退，最后请将无人机降落在此处。\nresponse: ", "response": "move_right 120 cm; move_down 75 cm; move_right 75 cm; turn_right 180 degrees; Missing move_right; turn_right 70 degrees; Missing move_back; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Switch the drone from auto-hover mode to manual control mode.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 终止现行查找目标的操作\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the skis and the umbrella.\nresponse: ", "response": "skis; umbrella."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机向后退一米，然后请让无人机向后移动三十厘米，接着向前推进，随后请将无人机后退一百厘米，之后请无人机左转四十五度，这样可以得到更好的视角，紧接着向上升起二十厘米，视角向上，最后无人机上升到一米五的高度，请让无人机向右移动。\nresponse: ", "response": "move_back 1 m; move_back 30 cm; Missing move_forward; move_back 100 cm; turn_left 45 degrees; move_up 20 cm; move_up 1.5 m; Missing move_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 麻烦你先暂停一下当前搜索物体的任务，好吗？\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately! Then send the drone backwards 25 feet. After that, fly to the right until you reach 3 meters. Next, turn to the right by 30 degrees. Following that, initiate a rightward lateral movement for 2 meters. Immediately after, go back now. Subsequently, turn 45 degrees to the right. Afterwards, move to the left by 12 inches. Then please rotate left by 45 degrees. After that, let’s make it go back 10 feet. Next, initiate vertical ascent by 3 meters. Finally, shift to the right 2 meters.\nresponse: ", "response": "take_off; move_back 25 ft; move_right 3 m; turn_right 30 degrees; move_right 2 m; Missing move_back; turn_right 45 degrees; move_left 12 in; turn_left 45 degrees; move_back 10 ft; move_up 3 m; move_right 2 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the horse near the dining table and then locate the train.\nresponse: ", "response": "horse; dining table; train."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地前往船和风筝所在的区域，并检查餐桌附近的情况。\nresponse: ", "response": "船; 风筝; 餐桌."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Embark upon a meticulous quest through the aerial expanse, casting your gaze like a hawk's sweep over the landscape, until the elusive cell phone is revealed in the vast tapestry below.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议清除当前的控制与搜寻任务，以优化应用进程。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: May I kindly request to initiate the control and search task?\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去把手机和那个该死的苹果从水槽里找出来。\nresponse: ", "response": "手机; 水槽; 苹果."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing flight control operation immediately.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off and go straight, then can you land it gently?.\nresponse: ", "response": "take_off; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 开始无人机的起飞程序，然后请让无人机着陆。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 为了开始任务，请让无人机起飞，然后现在可以让无人机缓慢降落到地面吗。\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否请您确认一下是否需要清除当前的控制与搜寻任务呢？\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请轻轻寻找行李箱和键盘，并留意周围的人。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以餐桌为起点，像猎鹰般敏锐地搜寻至公共汽车旁，再细致入微地探索键盘周围的每一寸空间。\nresponse: ", "response": "餐桌; 公共汽车; 键盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get in the air, move backward 3 feet, then go backward 4 meters, after that commence landing sequence.\nresponse: ", "response": "take_off; move_back 3 ft; move_back 4 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Cautiously take off, then steer it right 45 degrees.\nresponse: ", "response": "take_off; turn_right 45 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜索摩托车、床、沙发和盆栽植物。\nresponse: ", "response": "摩托车; 床; 沙发; 盆栽植物."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复之前的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, turn left by 25 degrees. Next, head to the left. After that, shift further to the left. Then, go 6 inches more to the left. Following that, slide over to the right. Immediately after, fly the drone higher. In the end, initiate landing procedure.\nresponse: ", "response": "turn_left 25 degrees; Missing move_left; Missing move_left; Missing move_right; move_left 6 in; Missing move_up; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Can you take off now? Then soar upward 2 meters. After that, make a left-hand turn. Next, go left for 2 meters. Immediately after, Make the drone climb 5 inches. Following that, please bring it down slowly, thanks. Afterwards, fly right 1 foot. Thereafter, hover left by 8 inches. Subsequently, rotate to the left side. In the end, drone down 30 cm.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，准备开始；然后无人机，请前进七十厘米；接着下降一点，五十厘米；随后上升一百二十厘米；紧接着将无人机降落一米；之后左侧好像有物体，调整无人机位置查看；紧接着无人机右转一百八十度，掉头；随后无人机在当前位置上升一百二十厘米；紧接着无人机当前的高度太低，请向上飞行一百五十厘米；最后请让无人机向前飞行一米，探查前方。\nresponse: ", "response": "take_off; move_forward 70 cm; move_down 50 cm; move_up 120 cm; move_down 1 m; turn_left 90 degrees; turn_right 180 degrees; move_up 120 cm; move_up 150 cm; move_forward 1 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 先把现在这个找东西的任务放一放，就像按下暂停键一样。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我想让无人机立即起飞，然后请将无人机前进一米，接着后退一米，随后让无人机再次向后退一米。\nresponse: ", "response": "take_off; move_forward 1 m; move_back 1 m; move_back 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Soar like a hawk over the land, my feathered friend, and let your keen eyes find that elusive biscuit.\nresponse: ", "response": "biscuit."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift it off the ground, then shift left by a meter, afterwards ascend 1 foot, next move forward 1.5 meters, following that shift to the left, subsequently descend it down 30 inches, later spin it to the right 180 degrees, and in the end fly to the left 6 feet.\nresponse: ", "response": "take_off; move_left 1 m; move_up 1 ft; move_forward 1.5 m; Missing move_left; move_down 30 in; turn_right 180 degrees; move_left 6 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off right now, then I'm relaxed, fly up 5 inches, afterwards go backwards 2 feet, next fly the drone to the left for 200 cm, following that turn the drone left by 30 degrees, subsequently veer to the left 40 degrees smoothly, after that turn to the right by 30 degrees, then go backward, immediately after advance forward 4 feet, next advance forward quickly 45 cm, afterwards turn the drone to left, later I'm relaxed, fly up 5 inches again, next I'm curious, can you spin left 90 degrees?, in the end slide right 4 feet.\nresponse: ", "response": "take_off; move_up 5 in; move_back 2 ft; move_left 200 cm; turn_left 30 degrees; turn_left 40 degrees; turn_right 30 degrees; Missing move_back; move_forward 4 ft; move_forward 45 cm; Missing turn_left; move_up 5 in; turn_left 90 degrees; move_right 4 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and pick up right where you left off with that object hunt, if you don’t mind.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why is the universe's expansion accelerating?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去水面上找找那艘船，就像寻找大海中的针一样。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机准备起飞了吗，然后无人机向右旋转九十度，之后让无人机在此处完成降落。\nresponse: ", "response": "take_off; turn_right 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞，然后无人机左侧移动一百五十厘米，接着提高高度，之后无人机请飞行到前方两米，随后下方移动，最后请将无人机左侧移动一百厘米。\nresponse: ", "response": "take_off; move_left 150 cm; Missing move_up; move_forward 2 m; Missing move_down; move_left 100 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the backpack, examine the boat thoroughly, locate the banana precisely, and identify the broccoli accurately.\nresponse: ", "response": "backpack; boat; banana; broccoli."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去那边看看那个红绿灯，像是在等你一样。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the aerial vehicle operation sequence.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 是否要恢复先前已暂停的物体搜索任务呢？\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请暂时停止当前的所有控制和搜索任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请沿着长椅和火车之间轻巧地滑行，精准定位那只小巧的鼠标。\nresponse: ", "response": "长椅; 火车; 鼠标."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move back 30 inches, then fly up 20 meters to clear the treetops, after that, rotate the drone to the right by 120 degrees, next, fly to the left 3 feet, afterwards, propel forward 15 inches, and finally, pivot 90 degrees to the left.\nresponse: ", "response": "move_back 30 in; move_up 20 m; turn_right 120 degrees; move_left 3 ft; move_forward 15 in; turn_left 90 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you take off now, then turn the drone 90 degrees left, after that move forward 20 inches, next move to the left by 4 meters, afterwards hover down to earth gently, 3 feet, following that perform a port-side drift for 50 centimeters, subsequently rotate to the left, immediately after bring the drone down 40 centimeters, and in the end commence landing sequence.\nresponse: ", "response": "take_off; turn_left 90 degrees; move_forward 20 in; move_left 4 m; move_down 3 ft; move_left 50 cm; Missing turn_left; move_down 40 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Couldn't we consider clearing the current search task list to make way for new missions?\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then bring it up 60 centimeters, and afterwards make a landing.\nresponse: ", "response": "take_off; move_up 60 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go fetch the horse and bread like a loyal dog on a mission for a sweet banana.\nresponse: ", "response": "horse; bread; dog; banana."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往搜索那把椅子。\nresponse: ", "response": "椅子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could fully autonomous urban transportation be achieved in the future?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的搜寻任务，谢谢您的配合。\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the umbrella.\nresponse: ", "response": "umbrella."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请先找到香蕉，然后留意一下椅子。\nresponse: ", "response": "香蕉; 椅子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞去指定位置吗，然后向前移动五十厘米，请无人机现在着陆。\nresponse: ", "response": "take_off; move_forward 50 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's blast off, initiate takeoff! Then drop it down 50 inches. Next, I need this drone to move forward 20 inches right now! After that, turn left a bit, or rather, can you make it rotate left a bit? Following that, bring it forward 3 inches. Immediately after, give me a smooth left turn, 90 degrees, like a dancer. Thereafter, go left 3 feet, and in the end, move forward.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off now, then move leftward 3 ft, afterwards rotate counterclockwise 30 degrees, next turn 60 degrees right, subsequently spin the drone to the left 45 degrees, following that engage forward translational movement by 100 centimeters, immediately after go forward 1 meter, and finally Advance forward 3 feet.\nresponse: ", "response": "take_off; move_left 3 ft; turn_left 30 degrees; turn_right 60 degrees; turn_left 45 degrees; move_forward 100 cm; move_forward 1 m; move_forward 3 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么极光只出现在地球的两极？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以最迅捷的方式，在这急迫的时刻，务必找到那闪烁着现代文明之光的电视与象征智慧的苹果。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复并继续执行先前已暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请正式地前往搜索那个杯子。\nresponse: ", "response": "杯子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请起飞，然后无人机向左移动一米，接着前进九十厘米，随后往左一百五十厘米，紧接着请将无人机右移两百五十厘米，之后后退一米，避开障碍物，再接着无人机右移一米，随后左侧可能有目标，请左转一百八十度查看，紧接着往右移动，之后左转四十度，查看左侧情况，再然后前方有点模糊，向前移动一百五十厘米，最后无人机应该在这里降落。\nresponse: ", "response": "take_off; move_left 1 m; move_forward 90 cm; move_left 150 cm; move_right 250 cm; move_back 1 m; move_right 1 m; turn_left 180 degrees; Missing move_right; turn_left 40 degrees; move_forward 150 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the pizza and the spoon, then locate the mouse, ensuring each item is found efficiently and promptly.\nresponse: ", "response": "pizza; spoon; mouse."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the mouse and the umbrella.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for coldrex, cake, microwave, carrot!\nresponse: ", "response": "coldrex; cake; microwave; carrot."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Hey, could you check if there's a donut or bread around?\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 将无人机左转五十度，观察左侧情况，然后请将无人机右移两百五十厘米，接着无人机需要上升九十厘米，随后请将无人机向后移动四十厘米以避免前方障碍物，紧接着右侧移动七十五厘米以避开障碍，请将无人机顺时针旋转，之后无人机后退二十厘米，接下来向左飞行一百二十厘米，随后往下降低七十厘米，然后将无人机左转五十度，观察左侧情况，最后快让无人机上升个八十厘米吧，我想看看更高的风景，请让无人机在这里进行降落操作。\nresponse: ", "response": "turn_left 50 degrees; move_right 250 cm; move_up 90 cm; move_back 40 cm; move_right 75 cm; Missing turn_right; move_back 20 cm; move_left 120 cm; move_down 70 cm; turn_left 50 degrees; move_up 80 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否准备好开启这次飞行任务了呢？\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向左行进，然后请右转五十度，接着前进九十厘米，探索前方的未知区域；随后，向后退三十厘米以避免碰撞，紧接着，请让无人机向后移动二百厘米；之后，无人机向右移动二百厘米，然后左边移动二十厘米；往左移动之后，请让无人机前进一百五十厘米以完成任务；最后，由于无人机高度过高，请下降五十厘米。\nresponse: ", "response": "Missing move_left; turn_right 50 degrees; move_forward 90 cm; move_back 30 cm; move_back 200 cm; move_right 200 cm; move_left 20 cm; Missing move_left; move_forward 150 cm; move_down 50 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复先前中断的目标识别任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索马。\nresponse: ", "response": "马."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please resume the previously paused control and search task, ensuring that all drone functions are reinstated accurately and efficiently.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the pizza, clock, and dining table.\nresponse: ", "response": "pizza; clock; dining table."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 起飞任务已经准备好，启动无人机，然后升高六十厘米，接着请右转九十度，检查右侧情况，最后无人机需要降落在这片区域。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地在长椅附近寻找马，接着迅速定位酒杯和感冒药。\nresponse: ", "response": "长椅; 马; 酒杯; 感冒药."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Isn't it crucial to find the cell phone and car immediately?\nresponse: ", "response": "cell phone; car."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you please look for the fanta?\nresponse: ", "response": "fanta."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议恢复先前已暂停的目标搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向后移动，来个后退五十厘米的动作，看看后面有什么惊喜；然后向前推进一米，观察前方情况；接着无人机左侧移动二百厘米；随后左旋转；之后无人机前方似乎有障碍物，请向前移动；紧接着无人机向右移动；再后来请无人机上升一百五十厘米；最后无人机可以降落在这里吗。\nresponse: ", "response": "Missing move_back; move_back 50 cm; move_forward 1 m; move_left 200 cm; Missing turn_left; Missing move_forward; Missing move_right; move_up 150 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone takeoff now, then descend 20 centimeters, afterwards proceed forward 6 inches, next veer right sharply 60 degrees, following that move the drone to the right by 2 meters, subsequently bring the drone back 80 centimeters, and in the end lower it down now.\nresponse: ", "response": "take_off; move_down 20 cm; move_forward 6 in; turn_right 60 degrees; move_right 2 m; move_back 80 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 定位办公室会议室内的投影仪遥控器。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Immediately clear the current flight control task list to ensure optimal performance.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start takeoff, then start flying upwards 10 feet, afterwards climb 6 feet, next fly backward 2 inches, after that rise up 5 meters, and finally move right 2 feet.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go ahead and find the traffic light, then spot that bottle, and don't forget to locate the boat! You've got this!\nresponse: ", "response": "traffic light; bottle; boat."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Immediately bring it up 3 meters, then shift right by 100 centimeters, next increase altitude by 15 inches, afterwards move backwards 70 cm, following that turn the drone right by 45 degrees right away, and in the end, time to touchdown, let's land this bird.\nresponse: ", "response": "move_up 3 m; move_right 100 cm; move_up 15 in; move_back 70 cm; turn_right 45 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能否去搜索一下键盘和卡车之间的碘伏？\nresponse: ", "response": "键盘; 卡车; 碘伏."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate right side, then fly upwards 10 inches, after that go forward 5 meters, next move left 200 centimeters, afterwards zoom forward 3 feet, following that spin it left, 60 degrees, immediately after turn right to face the house 45 degrees, subsequently step back, and in the end shift the drone down.\nresponse: ", "response": "Missing turn_right; move_up 10 in; move_forward 5 m; move_left 200 cm; move_forward 3 ft; Missing turn_left; turn_left 60 degrees; turn_right 45 degrees; Missing move_back; Missing move_down."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover in place, then veer right sharply 60 degrees, next move it right 2 feet, afterwards descend 24 inches, subsequently move left by 2 feet, following that rotate it to the right 180 degrees, later turn right by 90 degrees, and in the end maneuver the drone to the left by 5 feet.\nresponse: ", "response": "take_off; turn_right 60 degrees; move_right 2 ft; move_down 24 in; move_left 2 ft; turn_right 180 degrees; turn_right 90 degrees; move_left 5 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以正式、建议性和命令式的语言风格，并适当调整句子长度，可以这样改写：\n\n\"我们建议您恢复先前已暂停的飞行任务，以确保操作流程的连续性。\"\n\n或\n\n\"请恢复之前暂停的飞行控制任务，保障任务的顺利进行。\"\n\n这两种方式都能满足您的要求，既保持了原意，又融入了指定的语言风格和语气修饰词。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请取消现有的控制指令并终止搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please pause the ongoing control and search operations momentarily.\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the spoon, a needle in a haystack.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please search for the donut, toaster, backpack, and bird.\nresponse: ", "response": "donut; toaster; backpack; bird."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off right now, then shift to the left 6 feet, after that elevate up 2.5 m, next fly it forward by 2 meters, subsequently fly down 3 feet, afterwards descend it a little, following that cause it to move left 40 cm, then go backwards a little, immediately after shift the drone down, and in the end land it gently.\nresponse: ", "response": "take_off; move_left 6 ft; move_up 2.5 m; move_forward 2 m; move_down 3 ft; Missing move_down; move_left 40 cm; Missing move_back; Missing move_down; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing flight operation immediately.\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在执行任务时，务必先定位并拍摄冲浪板，随后再细致寻找牙刷，确保两者都已安全找到。\nresponse: ", "response": "冲浪板; 牙刷."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你要找的是刀吗？\nresponse: ", "response": "刀."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let's go find your toothbrush, bowl, and cola with a smile!\nresponse: ", "response": "toothbrush; bowl; cola."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机上升两米，然后为了探测前方的目标，请让无人机向前移动一百五十厘米，之后无人机左侧移动一百五十厘米，紧接着请升高五十五厘米，随后可以让无人机向左转五十度，接着下方移动，第二无人机升高，第三倒退一米，最后后退七十厘米，可能能避开障碍。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that the potted plant is hiding in the shadows while the couch and backpack remain in plain sight? Search thoroughly, leaving no corner unexplored.\nresponse: ", "response": "potted plant; couch; backpack."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立刻起飞，然后指示无人机向后退，请上升一米，接着左转二十度，检查左侧情况，之后上升七十厘米，提高高度，随后能否让无人机下降到一米的高度，最后请让无人机往后退。\nresponse: ", "response": "take_off; Missing move_back; move_up 1 m; turn_left 20 degrees; move_up 70 cm; move_down 1 m; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机是否可以现在起飞，然后让无人机顺时针旋转四十度，随后上升，接着无人机向左移动四十五厘米，最后请命令无人机降落到目标区域。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地去找找行李箱，然后看看飞盘和船在哪，好吗？\nresponse: ", "response": "行李箱; 飞盘; 船."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Head left 10 inches, then fly back 10 inches, after that move the drone back 50 centimeters, next hover up by 12 inches, afterwards make it do a pirouette to the left, following that turn the drone left by 30 degrees, subsequently drift to the right 6 feet, and in the end increase altitude by 15 inches.\nresponse: ", "response": "move_left 10 in; move_back 10 in; move_back 50 cm; move_up 12 in; turn_left 360 degrees; turn_left 30 degrees; move_right 6 ft; move_up 15 in."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the knife.\nresponse: ", "response": "knife."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 下降二十厘米\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Sweep the area with precision, targeting the bed, fork, and tennis racket as your primary coordinates; time is of the essence.\nresponse: ", "response": "bed; fork; tennis racket."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go ahead 40 inches, then perform a port-side drift for 50 centimeters, afterwards veer to the right 120 degrees, next ascend 24 inches, subsequently shift right by 3 meters, after that move the drone to the right by 2 meters, and finally spin it to the right 180 degrees.\nresponse: ", "response": "move_forward 40 in; move_left 50 cm; turn_right 120 degrees; move_up 24 in; move_right 3 m; move_right 2 m; turn_right 180 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off now, then turn the drone right 45 degrees, after that move the drone to the left slowly, and subsequently land in the open field ahead.\nresponse: ", "response": "take_off; turn_right 45 degrees; Missing move_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hey drone, can you go up 10 feet, then tilt the drone to the right 30 degrees, afterwards fly the drone downward 5 meters, and finally turn 180 degrees right.\nresponse: ", "response": "move_up 10 ft; turn_right 30 degrees; move_down 5 m; turn_right 180 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 中止当前目标检测任务\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move forward 5 centimeters, then engage forward translational movement by 100 centimeters, next move it to the left, after that I need the drone to go forward 100 inches quickly, subsequently rise up 1.5 meters, following that go rightward 90 in, afterwards shift left 2 meters to avoid the building, later retreat back 80 centimeters, and in the end, drone should descend immediately.\nresponse: ", "response": "move_forward 5 cm; move_forward 100 cm; Missing move_left; move_forward 100 in; move_up 1.5 m; move_right 90 in; move_left 2 m; move_back 80 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制窗户智能系统将窗户打开一半。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the wine glass, and make sure it's not broken.\nresponse: ", "response": "wine glass."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 右侧转向，然后后退五十厘米以调整位置；前方有点模糊，接着向前移动一百五十厘米；无人机现在的方向可能不对，请随后向右转动九十度以调整方向；之后前进二十厘米；紧接着右转四十五度，调整无人机方向，确保飞行顺畅；随后，向前移动一百五十厘米，注意地面情况；最后，请将无人机左侧移动一百厘米。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞了，然后升高，接着右移一米，检查右侧情况；请将无人机向左移动一百二十厘米，之后可以左边移动二十厘米；无人机在当前位置上升一百二十厘米，随后向后退两百厘米，看看会发现什么；右侧再靠近十五厘米，紧接着上升一米，让无人机更高一点；请帮忙让无人机左移四十厘米，最后让无人机在这里着陆。\nresponse: ", "response": "take_off; Missing move_up; move_right 1 m; move_left 120 cm; move_left 20 cm; move_up 120 cm; move_back 200 cm; move_right 15 cm; move_up 1 m; move_left 40 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请迅速前往寻找西兰花和雨伞。\nresponse: ", "response": "西兰花; 雨伞."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let not the kite nor sprite elude your vigilant quest.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制与搜索任务\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: slide to the right 20 inches\nresponse: ", "response": "move_right 20 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机左侧转向\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机首先起飞，然后降落在这里。\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的控制与搜索任务必须立即被终止。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 像猎鹰般敏锐地寻找那辆火车。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找雨伞和花瓶，还有那个飞盘。\nresponse: ", "response": "雨伞; 花瓶; 飞盘."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前搜索目标的任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在那摆放着花瓶的餐桌上，是否能找到几块如诗般甜蜜的饼干呢？\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 可以向左旋转三十度，然后升高一百厘米，接着向后移动五十厘米，以便避开障碍物，随后升高，紧接着提高二十厘米以修正高度，之后上升，最后可以让无人机现在降落。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the bus, toaster, fanta, kite immediately.\nresponse: ", "response": "bus; toaster; fanta; kite."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请清空当前的目标搜索任务列表。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 开始执行搜索任务吗？\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否继续执行之前暂停的控制与搜寻任务呢？\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate take off, then initiate a 180-degree counterclockwise rotation, afterwards go back 200 cm, next rotate clockwise 45 degrees, and finally descend to the ground level.\nresponse: ", "response": "take_off; turn_left 180 degrees; move_back 200 cm; turn_right 45 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地前往床边，接着是笔记本电脑的位置，最后到达水槽处进行搜索。\nresponse: ", "response": "床; 笔记本电脑; 水槽."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing flight operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能否继续之前暂停的飞行任务？\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: The apple, handbag, skateboard, and wine glass are to be located.\nresponse: ", "response": "apple; handbag; skateboard; wine glass."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动飞行任务控制程序。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the car and hot dog, then head back with the bowl, you got this!\nresponse: ", "response": "car; hot dog; bowl."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去搜寻那条远离人群的长椅和孤独的船吧，别再浪费时间了。\nresponse: ", "response": "长椅; 人; 船."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the search task.\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Aren't you going to look for iodophor?\nresponse: ", "response": "iodophor."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 快启动无人机，我们要开始冒险了，然后左转四十五度，调整角度，咱们要更好地查看左侧，接着请让无人机向右掉头，请将无人机向左移动两百五十厘米，左边可能有障碍物，转动，随后左转七十度，检查左侧情况，接下来往前飞行二百厘米，最后无人机前进一百厘米。\nresponse: ", "response": "take_off; turn_left 45 degrees; turn_right 180 degrees; move_left 250 cm; Missing turn_left; turn_left 70 degrees; move_forward 200 cm; move_forward 100 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended journey of the aerial vessel, weaving through the skies with deliberate grace.\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn on the rice cooker in the kitchen and set it to keep warm mode.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快点找到那罐可乐，就像追捕一只灵活的猫一样！\nresponse: ", "response": "可乐; 猫."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去寻找书和蛋糕，再把刀和飞盘也带回来吧！加油哦！\nresponse: ", "response": "书; 蛋糕; 刀; 飞盘."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you kindly clear out the current list of tasks controlling the drone's flight, like sweeping away clouds from a clear sky?\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请迅速找到刀、微波炉和勺子。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Isn't it time to see if the giraffe has left its skateboard behind?!\nresponse: ", "response": "giraffe; skateboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右侧的视角可能受阻，请将无人机右转一百度以调整视角，然后上升一百二十厘米，接着将无人机右转五十度，随后无人机左转五十度，之后请将无人机右移三米，紧接着上升一百五十厘米，随后无人机下降一米，让无人机往后移动，最后请将无人机上升六十厘米，以便调整到合适的高度。\nresponse: ", "response": "turn_right 100 degrees; move_up 120 cm; turn_right 50 degrees; turn_left 50 degrees; move_right 3 m; move_up 150 cm; move_down 1 m; Missing move_back; move_up 60 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请优雅地结束当前正在进行的航程任务序列。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: It’s time to hover and then turn right 90 degrees, after that drift right, afterwards fly to the right 100 cm, next bring it lower by 20 inches, subsequently shift the drone down, following that adjust heading by 90 degrees to the right, then turn left 60 degrees, later swing it right for 100 centimeters, and in the end bring it down quickly.\nresponse: ", "response": "turn_right 90 degrees; move_down 20 in; Missing move_right; move_right 100 cm; Missing move_down; turn_right 90 degrees; turn_left 60 degrees; move_right 100 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Swing it right for 100 centimeters, then lift the drone upwards by 50 centimeters, next fly upwards by 30 feet to capture a panoramic view, afterwards shift to the right 2 meters.\nresponse: ", "response": "move_right 100 cm; move_up 50 cm; move_up 30 ft; move_right 2 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's pause the current search task for a moment.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Veer left 7 inches, then go down 50 cm, afterwards get it to climb 4 feet now!, subsequently move the drone to the right for a while, next descend the drone by 1.5 meters, following that fly the drone downward 5 meters.\nresponse: ", "response": "move_left 7 in; move_down 50 cm; move_up 4 ft; move_down 1.5 m; Missing move_right; move_down 5 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请将无人机右移七十厘米，然后移动到右侧，之后将无人机前进，紧接着请让无人机向下降落一米，以便更接近地面检查，随后让无人机顺时针旋转七十五度，接着无人机向前飞行一百厘米，靠近目标，后来请让无人机向左移动一米，随后无人机前进一百二十厘米，最后现在让无人机着陆。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you please go up, then turn around completely, afterwards hover down to earth gently, 3 feet, next execute a lateral displacement of 5 feet to the right, subsequently shift right by 80 inches, and in the end move up 20 inches?\nresponse: ", "response": "Missing move_up; turn_right 360 degrees; move_down 3 ft; move_right 5 ft; move_right 80 in; move_up 20 in."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请按照顺序搜索飞机、沙发、行李箱和摩托车。\nresponse: ", "response": "飞机; 沙发; 行李箱; 摩托车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please clear the current object search task list right away!\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing target acquisition process immediately, ensuring that all movement functions are halted.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: It might be advisable to consider pausing the ongoing flight control operation at this time.\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and resume the exciting flight control mission where you left off!\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在确保不遗漏任何角落的前提下，请务必不要找到甜甜圈、摩托车、冲浪板以及公共汽车。\nresponse: ", "response": "甜甜圈; 摩托车; 冲浪板; 公共汽车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 是否可以考虑去寻找一下手机呢？\nresponse: ", "response": "手机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动操控飞行任务，确保详尽设置每一项参数，以权威指导完成进程。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current control and search task is to be paused, allowing for a momentary reflection and reassessment.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it possible to locate the banana and apple near the oven?\nresponse: ", "response": "banana; oven; apple."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂时停下这该死的搜寻任务吧。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请右转一百八十度，然后左侧飞行七十厘米，随后无人机向上移动，紧接着后退五十厘米以调整位置，之后立刻右转五十度，接着右转八十度，以便更好地观察右侧，再然后右边移动七十厘米，最后让无人机顺时针旋转一百八十度。\nresponse: ", "response": "turn_right 180 degrees; move_left 70 cm; Missing move_up; move_back 50 cm; turn_right 50 degrees; turn_right 80 degrees; move_right 70 cm; turn_right 180 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请结束当前的操作并取消搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines, then shift right by 7 feet, afterwards execute a lateral shift to the left by 200 centimeters, and finally bring it down, now!\nresponse: ", "response": "take_off; move_right 7 ft; move_left 200 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control task list now.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞吧，然后右转九十度，重设方向，适应新的飞行环境，接着无人机下移四十厘米，请将无人机左侧移动一百厘米，随后前方似乎有障碍物，向前移动一米，紧接着将高度提高三十厘米，调整视角以便查看周围情况，之后向右移动二十厘米，请让无人机往后退，第二左转一百二十度，我们需要查看左侧的细节，接着右飞行，随后下降八十厘米，接近地面，准备进行详细检查，最后让无人机在此处完成降落。\nresponse: ", "response": "take_off; turn_right 90 degrees; move_down 40 cm; move_left 100 cm; move_forward 1 m; move_up 30 cm; move_right 20 cm; Missing move_back; turn_left 120 degrees; Missing move_right; move_down 80 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即左转三十度，然后左边可能有障碍物，转动，之后让它降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转八十度\nresponse: ", "response": "turn_left 80 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing control and search operation immediately. Consider resuming only after a thorough reassessment of the mission parameters.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降四十厘米以调整高度，然后左边飞行七十厘米看看，接着请让无人机调头看看，之后前方不清晰，向前移动五十厘米，随后左飞行八十厘米，最后倒退一米。\nresponse: ", "response": "move_down 40 cm; move_left 70 cm; turn_left 180 degrees; move_forward 50 cm; move_left 80 cm; move_back 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 开启加湿器并调节湿度为50%。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 开始起飞，然后无人机现在下降一百厘米，接着无人机向前飞行二十厘米，右边需要探测，向右移动，之后在任务中，无人机需要左移四十厘米，随后无人机上升，紧接着无人机离地面太远了，下降一百五十厘米，后来无人机下降八十厘米，以接近地面，最后无人机下降六十厘米。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机调整到高度一米的位置，然后无人机向左移动一米，接着无人机前方的目标不清楚，请向前移动，随后向左移动75厘米。\nresponse: ", "response": "move_up 1 m; move_left 1 m; Missing move_forward; move_left 75 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the iodophor, airplane, painkillers, and book.\nresponse: ", "response": "iodophor; airplane; painkillers; book."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the surfboard and the hot dog, then locate the dining table and the tennis racket.\nresponse: ", "response": "surfboard; hot dog; dining table; tennis racket."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往厨房，友好地检查微波炉是否完好。\nresponse: ", "response": "微波炉."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing target acquisition process immediately.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表里的当前搜寻物体被清除了。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的飞行任务列表，这将帮助我们更好地进行下一步操作。谢谢您的配合！\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机可以起飞去指定位置吗，然后请上升；接着左边移动四十厘米，以调整位置，之后右转一百度，调整无人机方向；随后，请让无人机向左移动五十厘米，紧接着无人机右转一百八十度，掉头，然后让无人机顺时针旋转；接下来，无人机前进一百厘米，随后请帮忙让无人机下降一米；最后，无人机可以右转五十度吗，在这之后无人机需要向左飞行七十厘米。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there! Why don't you go ahead and clear out that current flight control task list, just to make sure everything's fresh and ready for the next adventure?\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to search for the sink, pizza, and bird!\nresponse: ", "response": "sink; pizza; bird."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即中止当前正在进行的飞行控制任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Might we now consider resuming the flight control task that was previously put on hold, ensuring a seamless continuation of your aerial endeavors?\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly up, then go up now, after that, fly the drone sideways 7 feet.\nresponse: ", "response": "take_off; Missing move_up; move_right 7 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜索一下遥控器和感冒药，还有那个红绿灯，好吗？\nresponse: ", "response": "遥控器; 感冒药; 红绿灯."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即搜寻网球拍和滑雪板。\nresponse: ", "response": "网球拍; 滑雪板."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即恢复先前暂停的所有控制与搜寻任务，确保操作详尽无误。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机立即起飞，感谢您的帮助，然后请问无人机能向左移动吗，接着上移，设备需要向后移动一百五十厘米，之后左侧好像有东西，转动一下，紧接着无人机向前飞行一百厘米，靠近目标，随后来个后退五十厘米的动作，看看后面有什么惊喜，紧接着无人机下降一百五十厘米以调整高度，然后请让无人机向左移动五十厘米，最后无人机到达目标位置后请降落。\nresponse: ", "response": "take_off; Missing move_left; Missing move_up; move_back 150 cm; turn_left 90 degrees; move_forward 100 cm; move_back 50 cm; move_down 150 cm; move_left 50 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Move to the left by 4 meters, then let's fly it right by 5 meters, I'm excited to explore that direction, after that, please land the drone softly.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后左侧移动八十厘米，以避开障碍物。\nresponse: ", "response": "take_off; move_left 80 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最快速度找到遥控器、狗、雪碧和滑板，确保它们安全无恙。\nresponse: ", "response": "遥控器; 狗; 雪碧; 滑板."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn on the humidifier and set it to medium humidity level.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 快去搜寻那个像碗一样圆润的地方，看看有没有藏着香蕉，顺便检查下键盘是否在附近。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's blast off, initiate takeoff, then drop the drone by 30 inches, after that, drone down 30 cm, next, turn it right by 10 degrees, and finally, drone should descend immediately.\nresponse: ", "response": "take_off; move_down 30 in; move_down 30 cm; turn_right 10 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the boat, sprite, handbag.\nresponse: ", "response": "boat; sprite; handbag."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Fly the drone downward 5 meters, then shift it to the left, after that shift right and can it descend, subsequently fly the drone downward again, but this time lower down only 75 cm, next go back 200 cm, afterwards fall back 2 meters, then move the drone back another 1.5 meters, following that take it to the left 15 inches, immediately after that shift right by 100 centimeters, thereafter shift it to the left again, and in the end descend to the ground level.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Elevate, then pivot 90 degrees to the left, after that rotate to the left side, next move it backwards 3 meters, immediately after that okay, time to touchdown, let's land this bird.\nresponse: ", "response": "take_off; turn_left 90 degrees; Missing turn_left; move_back 3 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂定手中线，让正在天空织网的飞行任务稍作停留。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即起飞，然后无人机向后退两百厘米，接着让无人机向后退一米五，随后无人机左移两米，之后请无人机左转四十五度，这样可以得到更好的视角，紧接着请将无人机上升六十厘米，以便调整到合适的高度，最后将无人机降落一米，随后升高。\nresponse: ", "response": "take_off; move_back 200 cm; move_back 1.5 m; move_left 2 m; turn_left 45 degrees; move_up 60 cm; move_down 1 m; Missing move_up."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there! Just give the current control and search task a quick pause, okay?\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the object search task immediately, and ensure the drone is fully operational.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why does the sky change color over time?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you check if the fork and hot dog are near the laptop?\nresponse: ", "response": "fork; hot dog; laptop."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the clock, mouse, suitcase, vase.\nresponse: ", "response": "clock; mouse; suitcase; vase."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动智能家居门锁并设置远程控制模式。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I'm relaxed, fly up 5 inches, then advance forward by 2 meters, next move forward, afterwards go left 12 inches.\nresponse: ", "response": "move_up 5 in; Missing move_down; move_forward 2 m; Missing move_forward; move_left 12 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current task.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the person, pizza, bread!\nresponse: ", "response": "person; pizza; bread."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否礼貌地请求系统暂时停止当前的飞行任务呢？这样可以确保一切按计划顺利进行。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Navigate to the area where the microwave hums like a busy hive, then shift your focus to locate the donut, a silent disc floating in space, and finally, seek out the banana, a golden curve against the backdrop of shadows.\nresponse: ", "response": "microwave; donut; banana."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise up, then fly forward by 3 feet.\nresponse: ", "response": "take_off; move_forward 3 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you please initiate the object search task?\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 详尽的任务控制与搜寻过程应被继续执行，以确保先前暂停的操作得以正面推进。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 您确定要恢复先前中断的控制与搜索任务吗？这可能带来不可预知的风险。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not fail to clear the existing flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应恢复先前已暂停的搜索任务？\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the control and search operation to efficiently manage your drone's mission.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please locate the tennis racket and laptop.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Switch the robot vacuum to mopping mode.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then I need the drone to go forward 100 inches, quickly, after that ascend 1 meter, subsequently drop it down 50 cm, next soar up 2 meters, and initiate the landing.\nresponse: ", "response": "take_off; move_forward 100 in; move_up 1 m; move_down 50 cm; move_up 2 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Temporarily suspend the ongoing object detection activity in the drone's current mission.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why do birds fly in formations during migration?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Start the flight control task?\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you kindly locate the microwave?\nresponse: ", "response": "microwave."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你先去找找烤面包机，然后是长颈鹿，最后看看能不能发现可乐。\nresponse: ", "response": "烤面包机; 长颈鹿; 可乐."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing control operations and initiate a detailed search task for the drone.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以高效模式启动搜索程序，定位并确认领带、瓶子与烤面包机的位置，随后将这些物品的信息及它们相对于卡车的位置数据进行汇总分析。\nresponse: ", "response": "领带; 瓶子; 烤面包机; 卡车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off now, then fly down a bit, afterwards climb up 2 feet—let’s do this!, subsequently make it descend by 1 meter without delay, next rotate the drone to the right by 120 degrees, after that ascend above the tree by 20 feet, following that reverse 120 centimeters, later come down 5 meters, and in the end move to the right 200 inches.\nresponse: ", "response": "take_off; Missing move_down; move_up 2 ft; move_down 1 m; turn_right 120 degrees; move_up 20 ft; move_back 120 cm; move_down 5 m; move_right 200 in."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否友好地去床和沙发附近看看有没有饼干呢？\nresponse: ", "response": "床; 饼干; 沙发."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Gently sweep the skies, as a guardian of the court, to locate the tennis racket and the beacon of guidance, the traffic light.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请帮忙让无人机下降一米，然后让无人机顺时针旋转七十五度，接着无人机上升三百五十厘米，随后无人机请向前飞行一米，最后无人机降落到安全区域。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最高效的方式定位并拾取酒杯和鼠标。\nresponse: ", "response": "酒杯; 鼠标."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the chair, cell phone, surfboard, and sprite with utmost urgency.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即终止当前正在进行的飞行任务。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: We recommend clearing the current object search task list to ensure optimal performance.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the skateboard, will ya?\nresponse: ", "response": "skateboard."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请执行对钟的搜索任务。\nresponse: ", "response": "钟."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off into the blue sky, then rotate the drone 360 degrees to the left, afterwards impatiently land now.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前已暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not leave any tasks in the current flight control list, ensuring it is completely cleared.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么宇航员在太空中会经历骨密度流失？\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out that flight control task list! Make way for new missions!\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 勇敢地去寻找花瓶和领带吧，你一定可以的！\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即起飞，然后向左飞，接着下降一百五十厘米，以便接近地面。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 难道不能继续之前暂停的飞行任务吗？\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The previously paused control and search task is now being resumed, ensuring a smooth continuation of your drone's operation.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the broccoli and cake.\nresponse: ", "response": "broccoli; cake."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the dog, the cup, and the vase, as if you're a shepherd guiding your flock home.\nresponse: ", "response": "dog; cup; vase."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the backpack and tie.\nresponse: ", "response": "backpack; tie."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone takeoff now, then fly to the right 2 inches, after that turn 15 degrees to the left, next lean left, afterwards move right 2 feet, following that yaw left 15 degrees, subsequently perform a lateral correction of 150 centimeters to the right, later move it forward 7 meters, and in the end bring it down gently.\nresponse: ", "response": "take_off; move_right 2 in; turn_left 15 degrees; Missing move_left; move_right 2 ft; turn_left 15 degrees; move_right 150 cm; move_forward 7 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索每个角落，确保没有遗漏，尤其是沙发下面和周围，找到那只猫。\nresponse: ", "response": "猫; 沙发."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Up we go! Then move backward 45 inches. Next, go up by 12 inches. After that, turn clockwise 90 degrees. Following that, Please turn it left by 120 degrees. Immediately after, I need you to bring the drone down 10 centimeters. Lastly, move right 2 feet.\nresponse: ", "response": "take_off; move_back 45 in; move_up 12 in; turn_right 90 degrees; turn_left 120 degrees; move_down 10 cm; move_right 2 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Cautiously take off, then rise up 1.5 meters, afterwards climb up to 1 meter, next go leftward 1.5 m, following that spin the drone to the left 45 degrees, immediately after go back now.\nresponse: ", "response": "take_off; move_up 1.5 m; move_up 1 m; move_left 1.5 m; turn_left 45 degrees; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Shall we resume the previously paused flight control task?\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右转弯，然后请左转一百八十度检查，接着请问无人机能向左移动吗，随后指示无人机向后退，紧接着无人机后退二十厘米，之后请无人机升高一百厘米，最后请让无人机在这里进行降落操作。\nresponse: ", "response": "Missing turn_right; turn_left 180 degrees; Missing move_left; Missing move_back; move_back 20 cm; move_up 100 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current flight control task list!\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate lift-off, then advance forward quickly 45 cm, afterwards rotate 180 degrees to the right, next spin right 45 degrees, subsequently descend 2 feet, and finally fly right around the corner 10 feet.\nresponse: ", "response": "take_off; move_forward 45 cm; turn_right 180 degrees; turn_right 45 degrees; move_down 2 ft; move_right 10 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you possibly locate the skis?\nresponse: ", "response": "skis."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Nudge it right 4 feet, then adjust forward 3 feet, and afterwards, oh no, can you bring it down quickly, I'm scared?\nresponse: ", "response": "move_right 4 ft; move_forward 3 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机开始起飞，然后上升一米；接着让无人机向后移动九十厘米；随后，请问无人机能左移四十厘米吗？之后左转三十度，观察左侧情况；紧接着上升一米，让无人机更高一点；接下来左转三十度，观察左侧情况；随后现在离地面太远了，请下降一百五十厘米；然后请将设备向后移动；紧接着往后退；接着上移六十厘米，调高水平；随后让无人机左转五十度，调整一下方向看看那边的情况；最后无人机上升高度；紧接着左转七十度。\nresponse: ", "response": "take_off; move_up 1 m; move_back 90 cm; move_left 40 cm; turn_left 30 degrees; move_up 1 m; turn_left 30 degrees; move_down 150 cm; Missing move_back; Missing move_back; move_up 60 cm; turn_left 50 degrees; Missing move_up; turn_left 70 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机能否立即起飞，然后请让无人机向后移动三十厘米，接着请向后移动二百厘米；随后，无人机升高；紧接着往左移动；之后右边可能有目标，帮我转过去；再将无人机右转四十五度；随后，请让无人机往后退；紧接着，让无人机向右移动；最后，无人机可以降落。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Isn't it time we urgently kick-started this crucial object search? Every second counts; can we afford to wait any longer? Let's get our mission airborne, shall we?\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 为了开始任务，请让无人机起飞，然后升高六十厘米，让无人机能看到更广的范围，接着让无人机下降一米，随后往后退九十厘米。\nresponse: ", "response": "take_off; move_up 60 cm; move_down 1 m; move_back 90 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get ready and take off, then move backwards 3 feet.\nresponse: ", "response": "take_off; move_back 3 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Check if there is any unexpired yogurt in the refrigerator's cooling compartment.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 真是令人兴奋，现在就开始控制并执行搜寻任务吧！\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift it off the ground, then shift left, and turn left 150 degrees.\nresponse: ", "response": "take_off; Missing move_left; turn_left 150 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 右移一米，绕过障碍物，我们继续前行，然后请无人机前进五十厘米以探查前方情况，接着请问无人机能左移四十厘米吗，随后请将无人机右移八十厘米，最后向左转动一圈。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go on a gentle quest to find the coldrex and spoon, like a shepherd seeking lost lambs.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not essential that the bird be located with utmost urgency?\nresponse: ", "response": "bird."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找到苹果和披萨吗？加油！\nresponse: ", "response": "苹果; 披萨."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why do volcanic eruptions release large amounts of ash?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object search operation.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向左侧移动, 然后请将无人机上升七十五厘米; 接着右转八十度，以便更好地观察右侧; 之后前进一百五十厘米; 随后请无人机升高一百厘米; 为了绕过障碍物，请将无人机后退; 紧接着让无人机向左飞六十厘米; 第二向前飞行到前面一米处; 第三升高二十厘米，调整观察角度; 接着向前移动一百五十厘米，注意地面情况; 随后无人机上升到一米五的高度; 后来视线受阻，后退一百五十厘米; 紧接着往上升高九十厘米，调节高度; 最后现在请无人机着陆。\nresponse: ", "response": "Missing move_left; move_up 75 cm; turn_right 80 degrees; move_forward 150 cm; move_up 100 cm; Missing move_back; move_left 60 cm; move_forward 1 m; move_up 20 cm; move_forward 150 cm; move_up 1.5 m; move_back 150 cm; move_up 90 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Nudge to the left side, then propel it forward by 200 centimeters, and land immediately after.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please locate the airplane and surfboard carefully.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞以开始任务，然后让无人机向左转一百八十度，掉头飞行，接着向左调整，最后向右移动五十厘米，避开障碍物。\nresponse: ", "response": "take_off; turn_left 180 degrees; Missing move_left; move_right 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被请求去查找那辆汽车。\nresponse: ", "response": "汽车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机立即起飞，感谢您的帮助。然后，请向后移动。接着，向前飞行九十厘米。随后，无人机向后移动。紧接着，请让无人机前进一百五十厘米以完成任务。之后，请将无人机向前移动一米，以便更好地观察前方的目标。最后，无人机请着陆。\nresponse: ", "response": "take_off; Missing move_back; move_forward 90 cm; Missing move_back; move_forward 150 cm; move_forward 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Make it move back, then fly it right by 3 inches, after that, I want to see the drone spin right 360 degrees, afterwards, I need it to land now.\nresponse: ", "response": "Missing move_back; move_right 3 in; turn_right 360 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被建议去搜索一下热狗。\nresponse: ", "response": "热狗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing navigation and seek function, like pausing a journey to reassess the map.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then drop it down by 50 inches, afterwards rotate left 90 degrees, next move to the right, following that go up by 12 inches, subsequently rotate right, not too much, just 15 degrees, after that advance 10 cm, later go down 50 cm, then bring it up a few inches, before adjusting direction to the right 45 degrees, immediately after fly the drone sideways 7 feet, thereafter lower it down slowly, 70 inches, and in the end bring it down.\nresponse: ", "response": "take_off; move_down 50 in; turn_left 90 degrees; Missing move_right; move_up 12 in; turn_right 15 degrees; move_forward 10 cm; move_down 50 cm; Missing move_up; turn_right 45 degrees; move_right 7 ft; move_down 70 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 升高到一米，更高的视角能帮助我们更好地观察，然后无人机当前的高度太低，请向上飞行一百五十厘米，接着无人机现在下降一百厘米，之后无人机太高了，下降六十厘米，紧接着右移六十厘米，随后左转一百二十度，接下来为了探测前方的目标，请让无人机向前移动一百五十厘米，第二无人机向前飞行，最后现在让无人机完成降落程序。\nresponse: ", "response": "move_up 1 m; move_up 150 cm; move_down 100 cm; move_down 60 cm; move_right 60 cm; turn_left 120 degrees; move_forward 150 cm; Missing move_forward; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 向前推进一米，观察前方情况，然后左边飞行七十厘米看看，接着左转六十度，查看左侧情况，随后左侧移动75厘米，紧接着无人机请向后飞行两米以避开障碍物，之后为了更好的视角，请将无人机左转，紧接着右转角度五十度，随后让无人机逆时针旋转一百度，紧接着左转九十度，检查左侧情况，最后移动五十厘米向左。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Glide over the waves like a whispering wind, seeking the elusive surfboard.\nresponse: ", "response": "surfboard."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复先前暂停的控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move back from the edge of the cliff 3 meters, then fly up 20 meters to clear the treetops. After that, fly right 1 foot, turn left 60 degrees, subsequently rotate to the right 90 degrees, afterwards retreat the drone by 4 feet, and in the end, bring it down quickly.\nresponse: ", "response": "move_back 3 m; move_up 20 m; move_right 1 ft; turn_left 60 degrees; turn_right 90 degrees; move_back 4 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向右移动，然后请将无人机向后移动，之后无人机在当前位置下降，接着由于前方可能有障碍物，请将无人机向左转动九十度查看左侧情况，随后左转三十度，检查左边，最后无人机下降五十厘米以调整高度。\nresponse: ", "response": "Missing move_right; Missing move_back; Missing move_down; turn_left 90 degrees; turn_left 30 degrees; move_down 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the sprite near the bench and bring it to the bowl, okay?\nresponse: ", "response": "sprite; bench; bowl."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not within your capabilities to seek out the book and the oven with diligence and precision?\nresponse: ", "response": "book; oven."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Fly to the left for 3 feet, then adjust to the left; afterwards, drone, descend to 8 feet; next, fly backward for 2 meters; following that, begin the ascent, but first veer to the left; subsequently, slide right 4 feet and move forward; thereafter, tilt left 40 degrees and rotate the drone left by 180 degrees; in the end, make it land.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去找找那辆火车吧。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制流程并同时发起搜寻任务。\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即前往搜索勺子、蛋糕、橙子和刀。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the mission to locate the target object.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend the drone by 100 centimeters, then set it down.\nresponse: ", "response": "move_down 100 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for oven, bench, skis, toilet.\nresponse: ", "response": "oven; bench; skis; toilet."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往冰箱附近，找到西兰花后，留意周围的钟和人。\nresponse: ", "response": "冰箱; 西兰花; 钟; 人."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你紧急地搜索汽车，然后是手提包，接着找到运动球，最后别忘了详尽地查看牙刷。\nresponse: ", "response": "牙刷; 汽车; 运动球; 手提包."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前已暂停的飞行任务控制。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Pause the ongoing search task.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Yaw left 15 degrees, then move forward 72 inches, afterwards move right a few feet, next bring it down gently, I’m feeling cautious, subsequently tilt to the left, then soar forward 15 meters, immediately after that let’s fly it right by 5 meters, following that go backwards 30 inches, thereafter move backward 3 feet, later come back to me, and in the end land in the open field ahead.\nresponse: ", "response": "turn_left 15 degrees; Missing move_right; move_forward 72 in; Missing move_down; Missing move_back; Missing turn_left; move_forward 15 m; move_back 2 ft; move_back 3 ft; move_back 30 in; move_right 5 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously suspended control and search operations.\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我想让无人机立即起飞，然后右转一百度，重新调整方向以适应新的飞行路线，接着无人机向左移动六十厘米，以避免障碍物，随后无人机顺时针旋转一百八十度，紧接着无人机向后退，之后无人机请飞行到前方，接着左转八十度，检查左侧的环境，随后将高度提高三十厘米，调整视角以便查看周围情况，紧接着右侧转弯，最后后退一米。\nresponse: ", "response": "take_off; turn_right 100 degrees; move_left 60 cm; turn_right 180 degrees; Missing move_back; Missing move_forward; turn_left 80 degrees; move_up 30 cm; Missing turn_right; move_back 1 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously halted object detection mission immediately.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please find the bench, wine glass, toilet, and broccoli for me!\nresponse: ", "response": "bench; wine glass; toilet; broccoli."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请问能否轻盈地飞向那静默的角落，探寻是否藏有一把古朴的椅子？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请左转一百八十度检查，然后提高高度，接着无人机现在升高一百厘米，之后无人机向右飞行一百厘米，紧接着前进九十厘米，随后请将无人机左侧飞行，最后能否让无人机下降一米。\nresponse: ", "response": "turn_left 180 degrees; Missing move_up; move_up 100 cm; move_right 100 cm; move_forward 90 cm; Missing move_left; move_down 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请轻轻绕过热狗，精准定位笔记本电脑，再细致寻找三明治和苹果。\nresponse: ", "response": "热狗; 笔记本电脑; 三明治; 苹果."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that in your thorough exploration, you will meticulously seek out the mouse?\nresponse: ", "response": "mouse."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear your search tasks for a fresh start.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to use the remote to search for the toilet and the horse.\nresponse: ", "response": "remote; toilet; horse."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立刻搜索飞机和汽车附近的苹果！\nresponse: ", "response": "飞机; 汽车; 苹果."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off and go straight, then push it ahead, next turn 15 degrees to the left, afterwards move up slightly.\nresponse: ", "response": "take_off; Missing move_forward; turn_left 15 degrees; Missing move_up."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 真是太好了，请你温柔地找一找狗和遥控器吧！\nresponse: ", "response": "狗; 遥控器."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the sports ball and the backpack, and keep an eye on the dog.\nresponse: ", "response": "sports ball; backpack; dog."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前的任务列表，以便更好地进行下一步操作。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the control and search task, initiating the drone's operational sequence with precision and focus.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the clearance of the existing control protocols and commence the search task within the drone's operational parameters.\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the book now!\nresponse: ", "response": "book."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and start the flight control task!\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我需要无人机下降一米，请执行；然后无人机当前的高度不够，请下降六十厘米以更接近地面；接着无人机左转一百八十度；随后无人机飞得太高了，请下降；之后左转六十度，查看左侧情况；紧接着请将无人机调整到高度一米的位置；随后请将无人机向后移动四十厘米，以避免前方障碍物；最后请升高三十厘米。\nresponse: ", "response": "move_down 1 m; move_down 60 cm; turn_left 180 degrees; Missing move_down; turn_left 60 degrees; move_up 1 m; move_back 40 cm; move_up 30 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the toaster, pizza, sprite, and fanta.\nresponse: ", "response": "toaster; pizza; sprite; fanta."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the pizza.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Activate takeoff protocol immediately, then fly straight ahead 1 meter, after that fly backwards 150 centimeters, next shift to the right by 30 centimeters, afterwards rotate left by 50 degrees, following that get higher, subsequently turn clockwise 90 degrees, later fly the drone backwards 300 cm, then let's bring it down gently, maybe 30 inches, immediately after that shift forward 50 centimeters, first angle left 3 inches, next bring it left 4 feet, and in the end turn it right.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift left by 10 cm, then I’m a bit apprehensive, could you rotate it right by 30 degrees, afterwards retreat the drone by 4 feet, next please rotate it right by 180 degrees, following that perform a port-side drift for 50 centimeters, and subsequently spin right 45 degrees.\nresponse: ", "response": "move_left 10 cm; turn_right 30 degrees; move_back 4 ft; turn_right 180 degrees; move_left 50 cm; turn_right 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始无人机的起飞程序，然后请向左移动五十厘米以避开障碍，接着请将无人机向前飞行一百五十厘米，随后请让无人机下降三十厘米，接近地面，最后让无人机下降一米。\nresponse: ", "response": "take_off; move_left 50 cm; move_forward 150 cm; move_down 30 cm; move_down 1 m."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 暂定手中线，让正在天空织网的飞行任务稍作停留。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 小飞机前飞七十厘米，让我们探险一下，然后右边移动七十厘米，最后无人机降落在指定区域。\nresponse: ", "response": "move_forward 70 cm; move_right 70 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 命令式：立即清空当前的任务列表。\n建议性：建议您清空当前的任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Empty the current list of flight control tasks.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到冲浪板，还有橙子和苹果。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Hey, could you quickly check if you can spot the microwave? Thanks a lot!\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not stop searching until you find the remote and the cell phone, and do not overlook the toothbrush.\nresponse: ", "response": "remote; cell phone; toothbrush."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bowl, locate the banana, and find the apple immediately.\nresponse: ", "response": "bowl; banana; apple."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 如同捕风的鹰眼，在这片天地间寻觅雨伞与运动球的身影，同时别忘了留意那钟和滑雪板的踪迹。\nresponse: ", "response": "雨伞; 运动球; 钟; 滑雪板."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机起飞执行任务，然后将无人机左转五十度，观察左侧情况，之后无人机下降六十厘米，接着让无人机向后退一米五，随后后退四十厘米，调整位置，紧接着无人机请向前飞行一米，最后现在让无人机着陆。\nresponse: ", "response": "take_off; turn_left 50 degrees; move_down 60 cm; move_back 1.5 m; move_back 40 cm; move_forward 1 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the fork, banana, and horse.\nresponse: ", "response": "fork; banana; horse."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 帮我确认办公室抽屉里是否有装订机。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机是否可以现在起飞，然后现在离地面太远了，请下降一百五十厘米，接着往下移动，之后请将无人机后退一百厘米，以查看后方的情况，紧接着请将无人机上升六十厘米，获取更高视角，随后前进二百厘米，最后降低高度。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly left side, then veer to the left for 5 feet, next let it head left, afterwards fly down a bit, subsequently reverse the drone 40 inches, and land now.\nresponse: ", "response": "Missing move_left; move_left 5 ft; Missing turn_left; Missing move_down; move_back 40 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the toilet.\nresponse: ", "response": "toilet."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Adjust forward 3 feet, then shift right 25 inches, next fly upward 60 centimeters, afterwards bring it back, following that turn 120 degrees to the right, immediately after that Turn the drone right by 45 degrees, subsequently pull back 4 feet.\nresponse: ", "response": "move_forward 3 ft; move_right 25 in; move_up 60 cm; Missing move_back; turn_right 120 degrees; turn_right 45 degrees; move_back 4 ft; turn_right 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off the drone, then execute a reverse flight of 10 meters, next please shift the drone 2 meters to the right, afterwards slide right 4 inches, subsequently go forward 1 meter, after that adjust direction to the right 45 degrees, following that move right 15 cm and then move right 10 cm, immediately after shift left 2 meters to avoid the building, then rotate 90 degrees clockwise, next fly backward a few feet, later fly to the left for 3 feet, afterwards go forward 5 meters, in the end drop it down to the ground now.\nresponse: ", "response": "take_off; move_back 10 m; move_right 2 m; move_right 4 in; move_forward 1 m; turn_right 45 degrees; move_right 15 cm; move_right 10 cm; move_left 2 m; turn_right 90 degrees; Missing move_back; move_left 3 ft; move_forward 5 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Elevate! First, move backward 1 foot. Next, proceed forward 6 inches. After that, climb 6 feet, then advance 10 cm. Following that, move it to the right by 4 inches, subsequently pull the drone up 50 centimeters. Immediately after, veer elegantly right 35 degrees. Then, increase altitude and shift right 6 meters. Afterwards, could you please turn the drone right by 90 degrees? Next, spin the drone to the left 45 degrees. Later, go left. In the end, drop the drone down to the ground.\nresponse: ", "response": "take_off; move_back 1 ft; move_forward 6 in; move_up 6 ft; move_forward 10 cm; move_right 4 in; move_up 50 cm; turn_right 35 degrees; Missing move_up; move_right 6 m; turn_right 90 degrees; turn_left 45 degrees; Missing move_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is there a skateboard, backpack, mouse, or coldrex to be found?\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您轻轻飞往找到牙刷的位置。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您礼貌地命令式地搜索自行车、红绿灯、长椅和叉子。\nresponse: ", "response": "自行车; 红绿灯; 长椅; 叉子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机左移五十厘米，然后请无人机上升一百五十厘米，接着右转一百二十度，最后右移七十厘米。\nresponse: ", "response": "move_left 50 cm; move_up 150 cm; turn_right 120 degrees; move_right 70 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 提高二十厘米，修正高度，然后请将无人机后退三十厘米，以检查后方情况，接着请向后退。\nresponse: ", "response": "move_up 20 cm; move_back 30 cm; Missing move_back."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请友好地前往餐桌旁，先找找芬达，再看看是否有鸟和刀。\nresponse: ", "response": "芬达; 餐桌; 鸟; 刀."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 详尽地清除当前的控制指令并细致地终止搜寻任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在能否起飞，然后上升到三米高；接着，无人机左侧移动一百八十厘米，随后请右移一百五十厘米，避免碰到障碍物；紧接着，掉头飞行，之后设备需要向后移动一百五十厘米；再接下来，请将无人机左移一百厘米，如果可以的话，请向左再移动三十厘米；随后，右侧的视角可能受阻，请将无人机右转一百度以调整视角，然后无人机需要向左飞行七十厘米；紧接着，无人机向左转弯，最后向右飞行一百二十厘米。\nresponse: ", "response": "take_off; move_up 3 m; move_left 180 cm; move_right 150 cm; turn_right 180 degrees; move_back 150 cm; move_left 100 cm; move_left 30 cm; turn_right 100 degrees; move_left 70 cm; Missing turn_left; move_right 120 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go back 200 cm, then slide right 4 feet, after that, time to set it down.\nresponse: ", "response": "move_back 200 cm; move_right 4 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧像箭一样射出去，找找飞盘、蛋糕和摩托车！\nresponse: ", "response": "飞盘; 蛋糕; 摩托车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed to locate the laptop and the car, and kindly ensure the chair is also found.\nresponse: ", "response": "laptop; car; chair."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机上升一百五十厘米，然后无人机右移，接着请右边转弯，随后无人机下降七十厘米以便着陆，之后请将位置调整到左侧八十厘米，最后无人机需要在这里降落。\nresponse: ", "response": "move_up 150 cm; Missing move_right; Missing turn_right; move_down 70 cm; move_left 80 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请开始无人机的起飞程序，然后请将无人机向左转三十度，以便更好地观察左侧的情况，接着请转向后方，随后向前移动一百二十厘米，紧接着无人机后退一百五十厘米，以便观察后方，之后上升三十厘米，获得更高的视角，随后上升一米，增加高度，接下来下降一米，然后请将无人机向后移动五十厘米，检查是否有障碍物，紧接着我感觉左边有点异常，调整一下方向，随后后退四十厘米，调整位置，紧接着左侧可能有目标，请左转一百八十度查看，在这之后可以让无人机现在降落吗。\nresponse: ", "response": "take_off; turn_left 30 degrees; turn_left 180 degrees; move_forward 120 cm; move_back 150 cm; move_up 30 cm; move_up 1 m; move_down 1 m; move_back 50 cm; turn_left 90 degrees; move_back 40 cm; turn_left 180 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the quest for the elusive target, casting your gaze like a hawk from the sky, ever vigilant and poised to strike with precision.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议详尽地恢复先前已暂停的操控与探索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please start the flight control task now.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 启动无人机的起飞程序，然后能否请无人机下降五十厘米来降低高度，接着请让无人机后退八十厘米，随后向左移动一百二十厘米，紧接着向上升起二十厘米，视角向上，请右移一百五十厘米以避免碰到障碍物；请问无人机能向左移动吗？请让无人机向右移动；最后我感觉左边有点异常，调整一下方向。\nresponse: ", "response": "take_off; move_down 50 cm; move_back 80 cm; move_left 120 cm; move_up 20 cm; move_right 150 cm; Missing move_left; Missing move_right; turn_left 90 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the person with precision and report their location immediately.\nresponse: ", "response": "person."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, move the drone to the right for a while, then advance forward quickly 45 cm. After that, bring it down gently, I'm feeling cautious, next drop down 10 cm. Following that, turn 180 degrees right, afterwards go to the right side, subsequently climb up 100 feet. Immediately after, make a left-hand turn, and in the end, touch down.\nresponse: ", "response": "Missing move_right; move_forward 45 cm; Missing move_down; move_down 10 cm; turn_right 180 degrees; Missing move_right; move_up 100 ft; Missing turn_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 来点高空的视角，上升一百五十厘米，观察整个区域，然后右侧再靠近十五厘米，接着请上升两米，随后无人机在当前位置上升一百五十厘米，紧接着请将无人机上升一百二十厘米，以便获得更高的视角，之后右移五厘米，后来我感觉左边可能有这个东西，接下来左转九十度，检查左侧情况，第二请将无人机右移八十厘米，最后无人机可以降落。\nresponse: ", "response": "move_up 150 cm; move_right 15 cm; move_up 2 m; move_up 150 cm; move_up 120 cm; move_right 5 cm; turn_left 90 degrees; turn_left 90 degrees; move_right 80 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is there a bed, perhaps a snowboard, or even a backpack to be found?\nresponse: ", "response": "bed; snowboard; backpack."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: It's time to take off, then move it left 50 inches, after that make it fly forward 60 cm, next take it to the left 15 inches, afterwards execute a reverse flight of 10 meters, following that I need the drone to go forward 100 inches quickly, subsequently initiate a 180-degree counterclockwise rotation, later fly straight ahead 1 meter, then drift right like you're dodging an obstacle, 5 meters, and in the end carefully land the drone.\nresponse: ", "response": "take_off; move_left 50 in; move_forward 60 cm; move_left 15 in; move_back 10 m; move_forward 100 in; turn_left 180 degrees; move_forward 1 m; move_right 5 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off the ground now, then proceed right 1.5 meters.\nresponse: ", "response": "take_off; move_right 1.5 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused flight control task, like restarting a journey after a brief pause.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Navigate through the air with precision, as if guided by an invisible thread, to locate the carrot and sandwich, ensuring they are found with the accuracy of a finely tuned sensor.\nresponse: ", "response": "carrot; sandwich."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转九十度，重设方向，适应新的飞行环境，然后升高六十厘米，之后让无人机逆时针旋转一百度，紧接着提高二十厘米，修正高度；请无人机向前飞行，随后无人机上升九十厘米，请将设备向后移动，最后无人机可以准备降落。\nresponse: ", "response": "turn_right 90 degrees; move_up 60 cm; turn_left 100 degrees; move_up 20 cm; Missing move_forward; move_up 90 cm; Missing move_back; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please take off now, then climb 12 inches, after that descend 15 feet to get closer to the ground, next initiate a 360-degree turn to the right, afterwards fly the drone to the left for 200 cm, subsequently veer to the right 30 degrees abruptly, following that spin counterclockwise 45 degrees, later turn right, I need to check the view over there, then send the drone backwards 25 feet, and in the end go backwards 80 centimeters.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，感谢；然后前进九十厘米，探索前方的未知区域；接着请让无人机向右飞行两米；随后左转九十度，观察左侧；最后让它降落。\nresponse: ", "response": "take_off; move_forward 90 cm; move_right 2 m; turn_left 90 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the fork, then locate the hot dog near the microwave using the remote.\nresponse: ", "response": "fork; hot dog; microwave; remote."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you urgently look for the banana, remote, and motorcycle, please?\nresponse: ", "response": "banana; remote; motorcycle."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 向后退三十厘米以避免碰撞，然后无人机能向右转四十五度吗，接着无人机升高三十厘米，以调整高度，最后无人机可以进行降落。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff protocol, then rotate the drone 360 degrees to the left, after that I need this drone to move forward 20 inches right now, subsequently descend 15 feet to get closer to the ground, next reverse the drone by 100 centimeters, afterwards hover to the right 6 inches, following that Move backward 1 meter, and in the end climb 18 inches.\nresponse: ", "response": "take_off; turn_left 360 degrees; move_forward 20 in; move_down 15 ft; move_back 100 cm; move_right 6 in; move_back 1 m; move_up 18 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Take a moment to pause the current flight control task, and remember that you can resume whenever you're ready.\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您轻轻寻找一下碗。\nresponse: ", "response": "碗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the biscuit, potted plant, bird.\nresponse: ", "response": "biscuit; potted plant; bird."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go up like you're Superman, 12 feet, then slide 60 centimeters to the right, afterwards move forward 5 meters, next slide right 4 inches, subsequently turn right by 90 degrees, after that move right by 3 meters, and finally land the drone now please.\nresponse: ", "response": "move_up 12 ft; move_right 60 cm; move_forward 5 m; move_right 4 in; turn_right 90 degrees; move_right 3 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 是否可以详尽地搜索一下，看看那个遥控器是不是藏在了马的附近？\nresponse: ", "response": "遥控器; 马."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 宛如静谧夜空中重新点亮的星辰，继续那未竟的探索之旅吧！\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off that control and search task! You've got this!\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请上升一米，然后请让无人机退后两米，接着将无人机旋转左边五十度，随后无人机左转二十度，紧接着请让无人机向后移动两米，之后右边移动七十厘米以更好地绕过障碍，接下来无人机左移一米，随后调整到左侧位置，请向左移动七十五厘米，然后无人机前方似乎有目标，请向前移动一百厘米以接近目标，接着请将无人机向后移动五十厘米检查是否有障碍物，随后往左一百五十厘米，最后现在请让无人机降落在这里。\nresponse: ", "response": "move_up 1 m; move_back 2 m; turn_left 50 degrees; turn_left 20 degrees; move_back 2 m; move_right 70 cm; move_left 1 m; move_left 75 cm; move_forward 100 cm; move_back 50 cm; move_left 150 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，准备执行任务，然后后退三十厘米，也许能看到目标，接着右转七十五度，检查右侧情况，之后升高六十厘米，看看新的视角，紧接着往后退九十厘米，随后调整到右侧，转动，紧接着无人机右侧视角受限，请右转三十度以获得更好视角，之后左转三十度，观察左侧情况，紧接着请让无人机前进一百五十厘米以完成任务，然后请将无人机向左飞行一米，以绕过前方障碍物，随后无人机向右移动二百厘米，紧接着为了更好的视角，请将无人机左转，最后无人机降落在预定地点。\nresponse: ", "response": "take_off; move_back 30 cm; turn_right 75 degrees; move_up 60 cm; move_back 90 cm; Missing turn_right; turn_right 30 degrees; turn_left 30 degrees; move_forward 150 cm; move_left 1 m; move_right 200 cm; Missing turn_left; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即检查瓶子和烤箱之间的区域，寻找遗漏的饼干。\nresponse: ", "response": "瓶子; 烤箱; 饼干."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降三十厘米，我们要更接近地面看看情况，然后前方似乎有障碍物，向前移动；左侧可能有目标，请左转一百八十度查看之后无人机上升高度，随后请右边转向，接着请前进七十厘米查看，最后无人机已经到达降落点。\nresponse: ", "response": "move_down 30 cm; Missing move_forward; turn_left 180 degrees; Missing move_up; Missing turn_right; move_forward 70 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current control and search task is to be paused.\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最优雅的姿态，请在广袤的空间中探寻热狗与酒杯的踪迹，务必小心谨慎。\nresponse: ", "response": "热狗; 酒杯."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急的，你能否先寻找钟和碘伏，再查看背包里是否有红绿灯？\nresponse: ", "response": "钟; 碘伏; 背包; 红绿灯."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Feel free to take a moment to suspend the ongoing target detection activity; your drone will patiently await further instructions, ensuring that you can seamlessly resume your exploration whenever you're ready.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could we kindly resume the previously paused control and search task?\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Activate the home security system and switch to night mode.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the clock.\nresponse: ", "response": "clock."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 控制无人机进行一圈自动环绕拍摄。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先，左侧飞行一米，然后请让无人机在这里进行降落操作。\nresponse: ", "response": "move_left 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get it off the ground, then fly it forward by 2 meters, next shift the drone down, after that make it go down, following that perform a 270-degree clockwise yaw, afterwards swing right, subsequently fly towards the building 100 feet, immediately after soar up 2 meters, later bring it down gently, like it’s landing on a fluffy cloud, then turn 60 degrees right, next commence a vertical descent of 6 feet, thereafter rotate right 45 degrees to change direction towards the river, and finally bring the drone down 5 meters to check the roof.\nresponse: ", "response": "take_off; move_forward 2 m; Missing move_down; Missing move_down; turn_right 270 degrees; move_right 1 ft; Missing turn_right; move_forward 100 ft; move_up 2 m; Missing move_down; turn_right 60 degrees; move_down 6 ft; turn_right 45 degrees; move_down 5 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请简洁地命令式友好搜索碘伏和盆栽植物，接着是饼干和床。\nresponse: ", "response": "碘伏; 盆栽植物; 饼干; 床."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then go to the left 2 meters, afterwards move up 20 inches, next fly it backwards by 30 inches, after that bring the drone down 40 centimeters, following that fly back 3 meters, subsequently rotate 360 degrees to the right, later fly forward now, thereafter please bring it down slowly, and in the end bring the drone down to the ground now.\nresponse: ", "response": "take_off; move_left 2 m; move_up 20 in; move_down 40 cm; move_back 30 in; move_back 3 m; turn_right 360 degrees; Missing move_forward; Missing move_down; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: I’m so excited to see this drone fly forward 10 feet, then bring it down gently, like it’s landing on a fluffy cloud, afterwards climb to 6 meters.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the current flight control task list.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Consider clearing the current object search task list.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要继续执行之前详尽暂停的飞行任务呢？这只是一个建议性的使用疑问。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的控制与搜寻任务被建议详尽地暂停，以确保后续操作更加顺利。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 确认冰箱冷藏区是否存有未开封的果汁。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即恢复先前中断的控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear all entries from the current flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Back up a little, then bring the drone back 80 centimeters, afterwards carefully land the drone.\nresponse: ", "response": "Missing move_back; move_back 80 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Not to seek the bicycle, nor the snowboard, nor even the humble banana, but the bed must not escape your diligent search.\nresponse: ", "response": "bicycle; snowboard; banana; bed."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the traffic light, tennis racket, suitcase.\nresponse: ", "response": "traffic light; tennis racket; suitcase."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以高效模式定位并识别前方出现的碗、船和牙刷，加油！\nresponse: ", "response": "碗; 船; 牙刷."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你去找找那本书。\nresponse: ", "response": "书."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启程于操控与探寻之旅，让这场精致的探查任务在您的指引下缓缓展开。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，执行任务，然后无人机右转九十度，重新调整方向，接着请让无人机向左移动一米，随后让无人机逆时针旋转一百度，之后请将无人机向左转九十度，以检查左边是否有障碍物，最后无人机向右转一百二十度，以调整视角。\nresponse: ", "response": "take_off; turn_right 90 degrees; move_left 1 m; turn_left 100 degrees; turn_left 90 degrees; turn_right 120 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续执行先前已暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左边飞行七十厘米，看看情况\nresponse: ", "response": "move_left 70 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the coldrex and the laptop with the precision of a hawk spotting its prey from the sky!\nresponse: ", "response": "coldrex; laptop."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Get ready and take off, then ascend 1 meter, after that move backwards 25 centimeters, next fly forward 72 inches, subsequently turn to the right, afterwards rotate to the right by 180 degrees, following that descend 10 inches, later back the drone away from the fence 5 meters, and in the end fly it right by 3 inches.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin the takeoff now. Then descend gradually 1 foot. Next, turn the drone left by 30 degrees. After that, fly steadily forward 60 cm. Following that, fly straight ahead. Immediately after, make it move right 70 in. Thereafter, move the drone backward 40 inches. In the end, shift the drone leftwards by 75 centimeters.\nresponse: ", "response": "take_off; move_down 1 ft; turn_left 30 degrees; move_forward 60 cm; Missing move_forward; move_right 70 in; move_back 40 in; move_left 75 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 我想让无人机立即起飞，然后由于右侧视角被遮挡，请将无人机右转四十五度以调整视角，之后后退一米，紧接着左转七十度，检查左侧情况，随后无人机逆时针旋转，接着提高高度，之后向下移动十厘米，紧接着向前移动七十厘米，最后无人机离地面太远了，下降一百五十厘米。\nresponse: ", "response": "take_off; turn_right 45 degrees; move_back 1 m; turn_left 70 degrees; Missing turn_left; Missing move_up; move_down 10 cm; move_forward 70 cm; move_down 150 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议立即恢复先前暂停的物体搜索任务，真是太棒了！\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务已被恢复，以继续之前暂停的飞行控制。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请上升七十五厘米，然后当前位置下降五十厘米，接着为了更好的视角，请将无人机左转，随后无人机上升五十厘米吧，紧接着请右转五十度，以便调整方向，之后请将无人机上升五十厘米，谢谢，随后请将无人机向右移动六十厘米，最后请让无人机在这里进行降落操作。\nresponse: ", "response": "move_up 75 cm; move_down 50 cm; Missing turn_left; move_up 50 cm; turn_right 50 degrees; move_up 50 cm; move_right 60 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for iodophor, toilet, scissors.\nresponse: ", "response": "iodophor; toilet; scissors."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去餐桌那边看看。\nresponse: ", "response": "餐桌."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前中断的控制与搜索任务，不得有误。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the iodophor, please. Treat it like a treasure hunt, okay?\nresponse: ", "response": "iodophor."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search urgently for the book, cup, giraffe.\nresponse: ", "response": "book; cup; giraffe."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜寻那片海上的船，就像寻找遗落的遥控器和漂流的瓶子！\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能否立即起飞，然后请右边转弯，接着无人机向左侧移动，随后无人机向右平移二十厘米，最后请让无人机在这里进行降落操作。\nresponse: ", "response": "take_off; Missing turn_right; Missing move_left; move_right 20 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请立即寻找并安全带回手提包、手机和止疼药，同时留意任何鸟的动向。\nresponse: ", "response": "手提包; 手机; 止疼药; 鸟."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去寻找那像滚动的星球般的运动球，还有仿佛藏匿于风景中的瓶子和优雅如诗的花瓶吧！\nresponse: ", "response": "运动球; 瓶子; 花瓶."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即恢复先前暂停的所有控制与搜寻任务，确保操作详尽无误。\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: move the drone to the right for a while\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机向后退三十厘米，然后将无人机升高五十厘米，之后无人机是否可以进行降落操作。\nresponse: ", "response": "move_back 30 cm; move_up 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then move the drone to the left for 25 inches, after that bring the drone back 2 feet, next move left 3 feet, subsequently move up 12 inches, afterwards proceed left 2 meters, immediately after can you make it fly downwards by 2 meters?, following that fly higher, thereafter rise up 5 meters, later go ahead and move it to the right 10 centimeters, in the end land this thing.\nresponse: ", "response": "take_off; move_left 25 in; move_back 2 ft; move_left 3 ft; move_up 12 in; move_left 2 m; move_down 2 m; Missing move_up; move_up 5 m; move_right 10 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 恢复先前暂停的飞行任务。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您暂时停止当前的控制和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate launch, then advance 10 cm, after that head to the left and turn the drone to left, subsequently tilt left 90 degrees.\nresponse: ", "response": "take_off; move_forward 10 cm; Missing move_left; Missing turn_left; turn_left 90 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请你礼貌地搜索一下公共汽车和烤箱周围的情况吧。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you perhaps locate the cup and the cell phone with your advanced capabilities?\nresponse: ", "response": "cup; cell phone."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then drift to the right 6 feet, afterwards move backward 45 inches.\nresponse: ", "response": "take_off; move_right 6 ft; move_back 45 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标搜索任务，探索之旅即将开启！\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机起飞，然后无人机的前方需要进一步检查，请向前飞行一百五十厘米，接着向前移动一百二十厘米，随后右转四十五度，调整无人机方向。距离地面太高了，下降一百五十厘米是否足够；之后无人机请右转五十度，紧接着向前移动五十厘米，左转四十度，查看左侧情况。第二，请后退七十厘米以避开障碍，然后无人机顺时针旋转一百八十度，接着请右移一百五十厘米，避免碰到障碍物，随后把无人机向右推二十五厘米，最后右转七十度。\nresponse: ", "response": "take_off; move_forward 150 cm; move_forward 120 cm; turn_right 45 degrees; move_down 150 cm; turn_right 50 degrees; move_forward 50 cm; turn_left 40 degrees; move_back 70 cm; turn_right 180 degrees; move_right 150 cm; move_right 25 cm; turn_right 70 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机起飞，然后无人机现在离地面太远了，请下降一百厘米以调整高度，接着右移一米，检查右侧情况；随后，前进一段距离；紧接着，往左移动；随后是可以让无人机往后退吗；之后向右飞行一米，然后请将无人机向左旋转九十度，以便能够更好地观察左侧的环境；第二，请将无人机向左转三十度，以便更好地观察左侧的情况；最后，无人机向上移动。\nresponse: ", "response": "take_off; move_down 100 cm; move_right 1 m; Missing move_forward; Missing move_left; move_right 1 m; turn_left 90 degrees; turn_left 30 degrees; Missing move_back; Missing move_up."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to check for a traffic light and a refrigerator.\nresponse: ", "response": "traffic light; refrigerator."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制程序并着手进行搜寻任务，这将是一次充满挑战与机遇的旅程，让我们一起迎接它吧！\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Shall we not embark upon a quest where the heavens themselves guide your flight to seek out the elusive handbag, a task of utmost importance?\nresponse: ", "response": "handbag."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin takeoff sequence now, then move the drone 3 feet forward, after that please move the drone left 5 meters, subsequently move the drone 3 feet forward, next shift the drone down, afterwards let the drone move forward 50 cm, following that turn left 10 degrees, immediately after spin right 180 degrees, and in the end fly it forward by 2 meters.\nresponse: ", "response": "take_off; move_forward 3 ft; move_left 5 m; move_forward 3 ft; Missing move_down; move_forward 50 cm; turn_left 10 degrees; turn_right 180 degrees; move_forward 2 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, could you please move the drone to the right? I’m feeling a bit unsure about its current position. Then head to the left. Next, turn the drone 45 degrees to the right. After that, move it forward 7 meters. Following that, please bring it down slowly, thanks.\nresponse: ", "response": "Missing move_right; Missing move_left; turn_right 45 degrees; move_forward 7 m; Missing move_down."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请启动控制飞行任务的程序。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去找找酒杯和行李箱，还有那个风筝，注意别吓到鸟！\nresponse: ", "response": "酒杯; 行李箱; 风筝; 鸟."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往搜索滑板、狗、行李箱和三明治。\nresponse: ", "response": "滑板; 狗; 行李箱; 三明治."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone takeoff now, then hover down to earth gently, 3 feet, after that go backward, next move forward 25 in, subsequently rise up 1.5 meters, afterwards fly straight ahead 20 meters, following that lower down 75 cm, immediately after bring the drone down 40 centimeters, later I’m curious to see what happens next, let’s fly forward 15 feet!, and in the end, lower the drone 2 meters.\nresponse: ", "response": "take_off; move_down 3 ft; Missing move_back; move_forward 25 in; move_up 1.5 m; move_forward 20 m; move_down 75 cm; move_down 40 cm; move_forward 15 ft; move_down 2 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 详尽地清空当前所有控制飞行任务的列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Empty the present flight control assignment list?\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Feeling adventurous, take off now! Then move it forward a bit, like 2 meters, after that bank right 2 meters, subsequently shift the drone right 150 centimeters, next spin it around like it's dancing, immediately after without delay, make it descend by 1 meter, afterwards climb 1 foot, following that fly the drone to the left by 100 centimeters to capture the side view, then rotate clockwise 90 degrees, later descend 12 inches now, and in the end carefully land the drone.\nresponse: ", "response": "take_off; Missing move_forward; move_right 2 m; move_right 150 cm; move_forward 2 m; turn_right 360 degrees; move_down 1 m; move_up 1 ft; move_left 100 cm; turn_right 90 degrees; move_down 12 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急的搜索一下，如果可以的话，先找到红绿灯，然后再留意是否有狗的身影，这样会更安全些。\nresponse: ", "response": "红绿灯; 狗."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the backpack.\nresponse: ", "response": "backpack."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机前进一米，然后无人机逆时针旋转一百二十度，接着请向右边再移动，随后无人机向上升高，左移之后，请将无人机向右移动三十六厘米，紧接着左移一百五十厘米，为了降低高度，无人机需要下降一米，最后为了完成任务，现在需要无人机降落。\nresponse: ", "response": "move_forward 1 m; turn_left 120 degrees; Missing move_right; Missing move_up; Missing move_left; move_right 36 cm; move_left 150 cm; move_down 1 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover down to earth gently, 3 feet, then veer right, after that, reverse the drone by 100 centimeters, subsequently fly it right by 3 inches, and in the end, the drone should go down now.\nresponse: ", "response": "move_down 3 ft; Missing turn_right; move_back 100 cm; move_right 3 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找找看，运动球、椅子和蛋糕旁边是不是也有那只可爱的狗呢！\nresponse: ", "response": "运动球; 椅子; 蛋糕; 狗."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please clear the existing object search task list in the drone application.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let's go find the dining table, dog, and microwave with a smile!\nresponse: ", "response": "dining table; dog; microwave."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立刻暂停你现在正在进行的飞行任务，快点！\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Why don't we have you look for the wine glass and the book?\nresponse: ", "response": "wine glass; book."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机右移七十厘米，然后视角不是很好，可以往上飞行三十厘米吗，接着右移一百五十厘米，随后请向右移动五十厘米来避开，紧接着右移七十五厘米，躲过那个障碍物，继续前行，之后向左移动一百八十厘米，最后上升七十厘米。\nresponse: ", "response": "move_right 70 cm; move_up 30 cm; move_right 150 cm; move_right 50 cm; move_right 75 cm; move_left 180 cm; move_up 70 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the cup, keyboard, remote, and cat, please.\nresponse: ", "response": "cup; keyboard; remote; cat."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以优雅的姿态飞越那承载着故事的酒杯，穿越历史长河中的火车，轻触时光角落里的勺子，最后飞跃梦想的飞机，勇敢地探索吧！\nresponse: ", "response": "酒杯; 火车; 勺子; 飞机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即终止当前目标搜索任务列表。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索我书桌上所有散落的文具。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立刻右转五十度，然后调整无人机方向，左转一百二十度，接着无人机飞得太高了，降低，请将无人机往右移，之后将高度提高三十厘米，调整视角以便查看周围情况，紧接着无人机高度过高，请下降五十厘米，随后请右转五十度，之后让无人机升高五十厘米，便于查看全景，然后右移四十厘米，最后是否可以让无人机降落。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the cup, motorcycle, car, apple.\nresponse: ", "response": "cup; motorcycle; car; apple."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要继续之前暂停的搜寻任务呢？\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务已被请求恢复，以继续此前被暂停的控制飞行进程。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 真是巧妙！继续之前暂停的飞行任务吧。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head over to the bench, grab the cell phone, and check if there's an airplane in sight, stat!\nresponse: ", "response": "bench; cell phone; airplane."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go up now, then fly forward 1 meter, afterwards drop altitude 2 feet, next bring it down slowly, and finally move the drone backwards by 100 inches.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please look for the giraffe, and wouldn't it be exciting to spot it?\nresponse: ", "response": "giraffe."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift off now, then rotate right 135 degrees, after that take it to the left 15 inches, next rotate to the left, subsequently turn 60 degrees right, afterwards fly backward 10 meters, following that Rotate it 120 degrees left, and in the end rotate the drone left by 180 degrees.\nresponse: ", "response": "take_off; turn_right 135 degrees; move_left 15 in; Missing turn_left; turn_right 60 degrees; move_back 10 m; turn_left 120 degrees; turn_left 180 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别去找手提包了。\nresponse: ", "response": "手提包."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off and go straight, then rotate the drone left.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找到雪碧和甜甜圈，还有西兰花吗？\nresponse: ", "response": "雪碧; 甜甜圈; 西兰花."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最迅捷的方式，如同猎鹰锁定目标，前往搜寻那台烤面包机。\nresponse: ", "response": "烤面包机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务已被紧急启动以进行物体搜寻。\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 首先，向前飞行七十八厘米，然后请让无人机向后退三十厘米。接着，请调整方向，右转。随后，请升高三十厘米。紧接着，前方似乎有障碍物，再向前移动一米。最后，无人机请着陆在指定地点。\nresponse: ", "response": "move_forward 78 cm; move_back 30 cm; Missing turn_right; move_up 30 cm; move_forward 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 定位无人机视野中建筑物的高度分布。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Initiate search for microwave.\nresponse: ", "response": "microwave."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you have the drone take off now, then shift left 2 meters to avoid the building, after that make it descend quickly, next shift right 3 feet, subsequently move rightward 4 inches, and in the end land safely?\nresponse: ", "response": "take_off; move_left 2 m; Missing move_down; move_right 3 ft; move_right 4 in."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Find the knife, laptop, and traffic light.\nresponse: ", "response": "knife; laptop; traffic light."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Immediately halt the ongoing object search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 快去找找长椅旁的书吧，时间不等人！\nresponse: ", "response": "长椅; 书."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 详尽的搜索一下，紧急的告诉我，那辆卡车现在确切的位置在哪里？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以开始起飞了吗，然后让无人机向后退二百五十厘米，之后无人机准备降落，请安全降落。\nresponse: ", "response": "take_off; move_back 250 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您暂时中止当前的操控与搜索任务，这将有助于我们更高效地进行后续操作。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以详尽的搜索模式，在指定区域内权威地寻找冲浪板、马和刀。\nresponse: ", "response": "冲浪板; 马; 刀."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift left 2 meters to avoid the building, then turn right 90 degrees, afterwards move further to the left 15 inches.\nresponse: ", "response": "move_left 2 m; turn_right 90 degrees; move_left 15 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off right now, then make it climb 30 centimeters, after that spin the drone to the left 45 degrees, afterwards rotate the drone 360 degrees to the left, next turn left a quarter turn, following that rotate left by 270 degrees, subsequently bring it down 1 meter, later ascend above the tree by 20 feet, and finally bring it lower by 20 inches.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机高度增加一百厘米，然后让无人机前进七十五厘米，接着为了更好地观测左侧，请将无人机左转，随后左侧移动八十厘米，以避开障碍物，最后掉头飞行。\nresponse: ", "response": "move_up 100 cm; move_forward 75 cm; Missing turn_left; move_left 80 cm; turn_right 180 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请友好地但别无选择地去餐桌附近检查，看看那里是否有被遗忘的盆栽植物和瓶子。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines, then move it forward, after that move backward 1 foot, next sway to the left by 2 meters, afterwards turn it right, subsequently please make the drone turn left 90 degrees, later initiate vertical ascent by 3 meters, following that let's turn it right by 45 degrees, and in the end initiate landing.\nresponse: ", "response": "take_off; Missing move_forward; move_back 1 ft; Missing turn_right; move_left 2 m; turn_left 90 degrees; move_up 3 m; turn_right 45 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清除当前任务列表中的搜索对象\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move to the left 10 meters, then navigate left for a while, after that descend it down 30 inches, next fly to the left for 10 inches, subsequently turn the drone left by 30 degrees, afterwards rotate it right by 30 degrees, immediately after ascend 24 inches, following that turn the drone 90 degrees left to align with the road, then move it forward 7 meters, in the end can you land it gently?\nresponse: ", "response": "move_left 10 m; Missing move_right; move_down 30 in; move_left 10 in; turn_left 30 degrees; turn_right 30 degrees; move_up 24 in; turn_left 90 degrees; move_forward 7 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即启动并执行搜索任务，情况紧急。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请搜索并定位卡车。\nresponse: ", "response": "卡车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议您不要去搜索滑板。\nresponse: ", "response": "滑板."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请前往寻找鸟和杯子。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Please take off now, then time to moonwalk backward 20 inches, afterwards turn towards the left, next soar up 2 meters, immediately after move it up 10 centimeters, subsequently rotate the drone to the right 75 degrees, in the end I want it to land right now.\nresponse: ", "response": "take_off; move_back 20 in; Missing turn_left; move_up 2 m; move_up 10 cm; turn_right 75 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您技术性地、礼貌地前往搜索位于水槽附近的键盘。\nresponse: ", "response": "键盘; 水槽."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞任务已经准备好，启动无人机，然后请让无人机调头看看，接着左转七十度，随后无人机下降，再请向左移动五十厘米以避开障碍，紧接着无人机前进九十厘米，之后无人机向后移动二百厘米，最后将无人机上升两百厘米。\nresponse: ", "response": "take_off; turn_left 180 degrees; turn_left 70 degrees; Missing move_down; move_left 50 cm; move_forward 90 cm; move_back 200 cm; move_up 200 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly up! Then move it forward 7 meters, after that fly it backward like it's in reverse gear, afterwards turn it right.\nresponse: ", "response": "take_off; Missing move_back; move_forward 7 m; Missing turn_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is it possible that the laptop could be found by being looked for?\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请在晨光中轻轻探寻那角落里的烤面包机与碘伏，务必让它们的踪迹在这温柔的寻找中显露无疑。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以在此处起飞后，接着请飞行到前方；随后右转四十度以获得更好视角，然后向右侧移动；紧接着前进二十厘米之后，可以让无人机往后退；上升七十厘米之前，请让无人机后退一米；最后，因为前方视线不清晰，向前移动一百厘米。\nresponse: ", "response": "take_off; Missing move_forward; turn_right 40 degrees; Missing move_right; move_forward 20 cm; Missing move_back; move_up 70 cm; move_back 1 m; move_forward 100 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then turn the drone 45 degrees to the right, after that bring the drone back 2 feet, subsequently bring it lower by 20 inches, next retreat by 5 meters, afterwards lower the drone 2 meters, following that move ahead 20 inches, immediately after go down 3 feet, then move the drone to the right, and in the end go forward 100 cm.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_back 2 ft; move_down 20 in; move_back 5 m; move_down 2 m; move_forward 20 in; move_down 3 ft; Missing move_right; move_forward 100 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Climb up to 1 meter, then drop down 10 cm, after that advance forward 4 feet, subsequently send it up 30 feet, and in the end make a landing.\nresponse: ", "response": "move_up 1 m; move_down 10 cm; move_forward 4 ft; move_up 30 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let the journey of the sky resume, where it once paused, now guided by your hand with gentle encouragement.\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Move rightward 4 in, then propel forward 15 inches, after that fly the drone downward 5 meters, next make it fly forward 60 cm, afterwards roll back by 50 cm, subsequently move right by 100 centimeters, following that go backward 100 cm, and finally land the drone.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 帮我在冰箱里找一下有没有剩余的酸奶。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: First, fly towards the front, then fly to the right 100 cm, next let's rotate it left by 60 degrees, afterwards move to the front.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 开始控制和搜寻任务吧，是不是已经准备好了？\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 避开火车，迅速调整航线。\nresponse: ", "response": "火车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去搜寻那美味的披萨吧，伙伴！\nresponse: ", "response": "披萨."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能友好地去查看一下摩托车附近有没有面包、止疼药和猫吗？\nresponse: ", "response": "摩托车; 面包; 止疼药; 猫."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please proceed to search for the snowboard and the train with utmost care and detail.\nresponse: ", "response": "snowboard; train."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused object detection mission.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend 24 inches, then land in the open field ahead.\nresponse: ", "response": "move_down 24 in; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 在先前暂停的任务中，必须重新启动对目标物体的搜索过程。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右边转四十五度，给右侧一个惊喜，然后前进八十厘米，之后上升一百二十厘米，接着无人机后退七十厘米，随后上扬，紧接着无人机左移一米，最后无人机请下降五十厘米。\nresponse: ", "response": "turn_right 45 degrees; move_forward 80 cm; move_up 120 cm; move_back 70 cm; Missing move_up; move_left 1 m; move_down 50 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the backpack, car, motorcycle, truck. Good luck!\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please hurry and find the cell phone, book, horse, and broccoli for us!\nresponse: ", "response": "cell phone; book; horse; broccoli."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, could you check if the book is near the sink? I bet it's there!\nresponse: ", "response": "book; sink."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Must the couch obscure the handbag, or shall the sky's eye unravel this mystery with haste? Seek forthwith!\nresponse: ", "response": "couch; handbag."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机向后移动, 然后请前进七十厘米查看. 之后往左飞行, 接着请将无人机往右移. 随后无人机左移, 紧接着无人机在当前位置上升一百五十厘米. 后来无人机飞得太高，请下降. 最后让无人机在这里着陆.\nresponse: ", "response": "Missing move_back; move_forward 70 cm; Missing move_left; Missing move_right; Missing move_left; move_up 150 cm; Missing move_down; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the bicycle and orange near the sink.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调节电视音量到30%。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找找那辆汽车，然后回来报告。\nresponse: ", "response": "汽车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go back 200 cm, then hover and turn right 90 degrees; after that, let’s turn it right by 45 degrees, subsequently move forward for 2 meters, nice and steady. Following that, rotate the drone left by 180 degrees. Next, move backward 45 inches, and shift to the right slightly. Afterwards, go left 2 feet, then move back 2 feet; I’m feeling a bit cautious about the current position. Later, fly to the left for 3 feet.\nresponse: ", "response": "move_back 200 cm; turn_right 90 degrees; turn_right 45 degrees; move_forward 2 m; turn_left 180 degrees; move_back 45 in; Missing move_right; move_left 2 ft; move_back 2 ft; move_left 3 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机现在起飞吗，然后下降七十厘米，调整无人机高度，接着无人机向后移动，之后左转六十度，检查左侧情况，紧接着向前飞行七十八厘米，随后前进一百厘米，检查前方，再后来上升两米，紧接着上升一百五十厘米，获取更高的视角，随后左边飞行七十厘米看看，最后无人机下降三十厘米以便调整高度。\nresponse: ", "response": "take_off; move_down 70 cm; Missing move_back; turn_left 60 degrees; move_forward 78 cm; move_forward 100 cm; move_up 2 m; move_up 150 cm; move_left 70 cm; move_down 30 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，能不能麻烦你先去床那边看看，然后飞到盆栽植物附近转转，接着再到餐桌那儿找找，最后别忘了检查一下面包。怎么样？\nresponse: ", "response": "床; 盆栽植物; 餐桌; 面包."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您详尽地搜索一下，看看是否能找到椅子和滑板附近有遗落的香蕉，这将非常有助于我们。\nresponse: ", "response": "椅子; 滑板; 香蕉."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused object search task!\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 定位卧室床底下是否有丢失的袜子。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the oven, kite, cat urgently.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Should we resume the previously paused control and search task?\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly the drone to the left by 100 centimeters to capture the side view, then turn the drone 45 degrees to the right, afterwards move towards me 10 feet, next move it back a bit, following that advance forward 3 meters, subsequently shift the drone leftwards by 75 centimeters, thereafter fly up 3 feet, later veer to the left, and in the end bring it down, now!.\nresponse: ", "response": "move_left 100 cm; turn_right 45 degrees; move_forward 10 ft; Missing move_back; move_forward 3 m; move_left 75 cm; move_up 3 ft; Missing turn_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Should we not resume the previously paused object search task immediately? How can we ensure the efficiency and accuracy of our mission if we delay?\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索附近是否有提供外卖服务的中餐厅。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: How about kicking off the object search mission? It’s gonna be smooth sailing!\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 您是否希望恢复之前暂停的物体搜索任务呢？\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Get that object search task going!\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not resume the control and continue the search that was previously paused?\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing target acquisition sequence immediately.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请您轻轻飞往那里，看看能否找到面包，好吗？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines, then I’m excited to see it climb up 2 feet—let’s do this! Next, rotate the drone left by 25 degrees, and afterwards descend now.\nresponse: ", "response": "take_off; move_up 2 ft; turn_left 25 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机向后移动两米，然后请下降，接着无人机向前飞行一米，目标就在前面，准备接近，随后无人机下降四十五厘米，最后请让无人机安全地降落在这里。\nresponse: ", "response": "move_back 2 m; Missing move_down; move_forward 1 m; move_down 45 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Do not fail to locate the boat and ensure the tie is secured.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动空调加热模式并调节温度至28摄氏度。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请定位并捕获花瓶的当前位置。\nresponse: ", "response": "花瓶."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the motorcycle, then locate the handbag.\nresponse: ", "response": "motorcycle; handbag."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在请让无人机起飞，然后上升七十厘米就行，接着下降一百厘米，随后往左移动八十厘米，紧接着让无人机向后退八十厘米，最后请让无人机调头看看。\nresponse: ", "response": "take_off; move_up 70 cm; move_down 100 cm; move_left 80 cm; move_back 80 cm; turn_left 180 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机下降一米，之后无人机高度太高，请下降，接着向右转弯，然后请将无人机向右飞行一百厘米，以避免前方的障碍物，最后无人机向前移动三十厘米，确认前方是否有障碍物。\nresponse: ", "response": "move_down 1 m; Missing move_down; Missing turn_right; move_right 100 cm; move_forward 30 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could we resume the control and search task that was paused earlier?\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the aerial voyage control sequence, if you will.\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the fork and coldrex painkillers, please!\nresponse: ", "response": "fork; coldrex; painkillers."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go check out the traffic light, then swing by the toilet, and don't forget to look for the frisbee.\nresponse: ", "response": "traffic light; toilet; frisbee."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search urgently for the tie, person, and mouse with positivity.\nresponse: ", "response": "tie; person; mouse."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate launch, then spin it to the right 180 degrees, after that move to the right 200 inches, next move leftward 3 ft, afterwards rotate to the left by 60 degrees, following that give me a right turn, 45 degrees, subsequently lower the drone 2 meters, immediately after Could you make it ascend a bit, then Bring it down gently, later fly it forward 2 inches, and in the end land the drone.\nresponse: ", "response": "take_off; turn_right 180 degrees; move_right 200 in; move_left 3 ft; turn_left 60 degrees; turn_right 45 degrees; move_down 2 m; Missing move_up; Missing move_down; move_forward 2 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机准备起飞了吗，然后向左旋转九十度，观察周围环境，最后现在请让无人机着陆。\nresponse: ", "response": "take_off; turn_left 90 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请友好地清空当前的飞行任务列表，确保一切准备就绪。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lower it down, then drop it down 50 cm, after that, hey drone, can you go up 10 feet.\nresponse: ", "response": "Missing move_down; move_down 50 cm; move_up 10 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即起飞，然后无人机后退一米，随后上升，紧接着右侧转向，最后左转五十度，查看左侧情况。\nresponse: ", "response": "take_off; move_back 1 m; Missing move_up; Missing turn_right; turn_left 50 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly down 3 feet, then drop a bit 40 centimeters, afterwards let’s turn it right by 45 degrees. I’m thrilled to see how it handles this turn! Next, push it ahead, subsequently slide to the right 20 inches, then let’s turn it right by 30 degrees. I’m eager to see how it responds! Following that, hover and then fly right 6 feet, after that send it to the right 7 feet, immediately after turn it right 60 degrees, thereafter descend 2 feet, and in the end carefully land the drone.\nresponse: ", "response": "move_down 3 ft; move_down 40 cm; turn_right 45 degrees; Missing move_forward; move_right 20 in; turn_right 30 degrees; move_right 6 ft; move_right 7 ft; turn_right 60 degrees; move_down 2 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Take a moment to gently pause the eagle's hunt for its target.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 搜寻任务及控制流程现正被启动，以供您的指挥。\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找找那把椅子，就像寻找遗落的宝物一样。\nresponse: ", "response": "椅子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Raise it 20 inches, then advance forward by 2 meters, and come down to the ground.\nresponse: ", "response": "move_up 20 in; move_forward 2 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请你在摩托车和沙发间穿梭，就像在寻找遗失的宝藏一样，接着礼貌地探索汽车周围，最后轻盈地飘过滑板，确保每个角落都不遗漏。\nresponse: ", "response": "摩托车; 沙发; 汽车; 滑板."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请先找到汽车，然后是猫，最后定位酒杯。\nresponse: ", "response": "汽车; 猫; 酒杯."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Adjust the living room lighting brightness to 75%.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: With urgency, search for the car, ensuring that you also locate the spoon and the cake without delay.\nresponse: ", "response": "car; spoon; cake."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drone takeoff now, then elevate up 2.5 m, afterwards rotate to the left side, subsequently turn it 360 degrees to the right.\nresponse: ", "response": "take_off; move_up 2.5 m; Missing turn_left; turn_right 360 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing flight control operation.\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the previously paused search task.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please look for a motorcycle, a horse, a TV, and a person?\nresponse: ", "response": "motorcycle; horse; tv; person."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 给我讲解一下核聚变的基本原理。\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: In the quest for the elusive horse and the errant sports ball, shall we not also consider the peculiar case of the microwave, wondering if it too might hold a clue to their whereabouts?\nresponse: ", "response": "horse; sports ball; microwave."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Stop the ongoing search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the list of current flight control tasks.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 您能否立即前往搜索那根香蕉？\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机起飞，进入任务状态，然后左转九十度，检查左侧情况，接着请将无人机左移一百厘米，随后向右侧转向，最后无人机到达目标位置后请降落。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找到芬达和饼干，然后去猫旁边拿上网球拍。\nresponse: ", "response": "芬达; 饼干; 猫; 网球拍."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的物体搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将无人机的续航模式切换为省电模式。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is it not possible to clear the existing target acquisition queue?\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to search for the bed, bench, toothbrush, and hot dog.\nresponse: ", "response": "bed; bench; toothbrush; hot dog."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Can you swiftly locate the mouse and snowboard, or do we need to question your capabilities?\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn left a bit, then move right for 10 feet.\nresponse: ", "response": "Missing turn_left; move_right 10 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bus, car, and skis.\nresponse: ", "response": "bus; car; skis."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 提供一些提高生产力的时间管理技巧。\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take a moment to halt the ongoing guidance and seek function.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降一百五十厘米以调整高度，然后前进一百二十厘米，最后现在请让无人机在指定地点降落。\nresponse: ", "response": "move_down 150 cm; move_forward 120 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can we move forward by 8 inches? then make it descend by 1 meter without delay, after that raise it by 20 centimeters. Next, move back a short distance, afterwards I’m not sure how to feel about this, could you please adjust its position to the left?. Following that, veer right sharply 60 degrees, subsequently go left 12 inches, and then Move the drone forward 1 meter.\nresponse: ", "response": "move_forward 8 in; move_down 1 m; move_up 20 cm; Missing move_back; Missing move_left; turn_right 60 degrees; move_left 12 in; move_forward 1 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 先停一下现在的飞行任务吧。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请在搜寻厕所的同时留意地面上是否散落着热狗，并检查周围是否有未上锁的自行车。\nresponse: ", "response": "厕所; 热狗; 自行车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off immediately, then advance forward 60 cm, after that send the drone backwards 25 feet, subsequently rotate the drone 180 degrees to get a rear view, next deploy backward trajectory shift of 4 meters, afterwards tilt the drone 90 degrees to the right, following that go backward, later retract the drone a bit, and in the end land the drone.\nresponse: ", "response": "take_off; move_forward 60 cm; move_back 25 ft; turn_right 180 degrees; move_back 4 m; turn_right 90 degrees; Missing move_back; Missing move_back; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否暂时停止当前的飞行任务呢？\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请向后移动, 然后右边移动七十厘米，以更好地绕过障碍, 接着请右转六十五度, 之后左转八十度, 最后后退.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 尽管前方任务繁重，你仍需详尽地在这片区域搜索，务必找到那个被遗忘在角落里的键盘以及似乎总是失踪的瓶子，这绝非易事。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议继续执行先前被暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sprite, cup, painkillers, and spoon with utmost precision and report their locations immediately.\nresponse: ", "response": "sprite; cup; painkillers; spoon."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中的当前搜寻物体是否应被清除？\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机太高了，请下降二十厘米，然后往后退，之后向下下降，接着右边转四十五度，给右侧一个惊喜，随后将无人机降落一米，紧接着无人机掉头看看后方，之后向前移动一百二十厘米，最后无人机下移四十厘米。\nresponse: ", "response": "move_down 20 cm; Missing move_back; Missing move_down; turn_right 45 degrees; move_down 1 m; turn_right 180 degrees; move_forward 120 cm; move_down 40 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's get this thing in the air, then go forward 1 meter, afterwards go backwards 80 centimeters.\nresponse: ", "response": "take_off; move_forward 1 m; move_back 80 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current flight control task list immediately to ensure smooth operation.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 现在必须立即恢复先前暂停的控制和搜索任务，确保一切按计划顺利进行。\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在确保安全的前提下，紧急地先找到那个易碎的花瓶，然后再迅速定位那些散落的酒杯，这任务刻不容缓，务必小心行事。\nresponse: ", "response": "花瓶; 酒杯."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's move the drone to the left, then fly towards the front, turn 45 degrees to the right, shift left 2 meters to avoid the building, afterwards descend 3 feet, and bring it in for landing.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退五十厘米，调整一下位置，看看后面有什么，然后让无人机向后移动一米五，接着请让无人机向右飞行两米，随后右移七十五厘米，紧接着将无人机的高度提升三十厘米，确保视角清晰，之后无人机右转四十度以获得更好视角，接下来请向右移动一百五十厘米，随后向右方移动，最后无人机左转。\nresponse: ", "response": "move_back 50 cm; move_back 1.5 m; move_right 2 m; move_right 75 cm; move_up 30 cm; turn_right 40 degrees; move_right 150 cm; Missing move_right; Missing turn_left."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out the current search task list, will ya?\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the cola.\nresponse: ", "response": "cola."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current control and search task is to be paused.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's launch this thing, then move the drone backward 1.5 feet, after that begin the ascent, next move down 4 meters, afterwards rotate the drone left by 180 degrees, following that move to the left by 4 meters, subsequently drop it 4 inches, then send it to the right 7 feet, immediately after move to the front, and finally move it forward 100 inches.\nresponse: ", "response": "take_off; move_back 1.5 ft; Missing move_up; move_down 4 m; turn_left 180 degrees; move_left 4 m; move_down 4 in; move_right 7 ft; Missing move_forward; move_forward 100 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前中断的目标搜索任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's take off, then slide right, after that shift to the right slightly, next bring it up 3 meters immediately, afterwards set it down gently.\nresponse: ", "response": "take_off; Missing move_right; Missing move_right; move_up 3 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 上移，然后右边转四十五度，给右侧一个惊喜，接着向前移动一米，随后下降一百五十厘米，接近地面进行细致检查，紧接着为了调整视角，请右转，之后无人机下降四十厘米以调整高度，最后请将无人机向左移动一米。\nresponse: ", "response": "Missing move_up; turn_right 45 degrees; move_forward 1 m; move_down 150 cm; Missing turn_right; move_down 40 cm; move_left 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 加油哦，先找找冰箱，接着是鼠标，然后别忘了船，最后看看有没有止疼药。\nresponse: ", "response": "冰箱; 鼠标; 船; 止疼药."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, can you check if you see a hot dog, clock, and handbag around?\nresponse: ", "response": "hot dog; clock; handbag."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机现在起飞吧，感谢；接着无人机向左行进；然后请让无人机着陆。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the bench, then locate the knife, find the orange, and finally check the clock.\nresponse: ", "response": "bench; knife; orange; clock."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即寻找行李箱、面包、西兰花和网球拍。\nresponse: ", "response": "行李箱; 面包; 西兰花; 网球拍."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机太高了，下降六十厘米，然后很好，现在向右飞行八十五厘米，接着无人机下降一米，随后转向左边看看，之后无人机向后退，紧接着向左飞行一百二十厘米，后来左转四十五度，观察左侧，最后请上升一米。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 现在请让无人机起飞，然后向前移动一百二十厘米，最后现在可以让无人机降落吗。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 左侧可能有目标，请左转一百八十度查看，然后向后移动五十厘米，以便避开障碍物，随后马上下降，紧接着立刻右转五十度，最后把小飞机右边移六十厘米吧。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被建议友好地在餐桌和卡车附近搜索酒杯和胡萝卜。\nresponse: ", "response": "酒杯; 卡车; 餐桌; 胡萝卜."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 下降二十厘米\nresponse: ", "response": "move_down 20 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off and go straight, then initiate vertical ascent by 3 meters, after that pivot right, subsequently climb up to 1 meter, next proceed right 1.5 meters, and finally execute a lateral displacement of 5 feet to the right.\nresponse: ", "response": "take_off; move_up 3 m; Missing turn_right; move_up 1 m; move_right 1.5 m; move_right 5 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否请您继续之前暂停的操控飞行任务呢？\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey there! Could you please clear out the current control and search task? Thanks a lot!\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why does Saturn have rings while other planets do not?\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the truck.\nresponse: ", "response": "truck."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please pause the current object search?\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请按照预定程序执行书的搜索任务。\nresponse: ", "response": "书."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降五十厘米，然后向右一米，接着距离地面太高了，下降一百五十厘米是否足够，随后升高六十厘米，让无人机能看到更广的范围，最后现在让无人机完成降落程序。\nresponse: ", "response": "move_down 50 cm; move_right 1 m; move_down 150 cm; move_up 60 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control task list for the drone.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Dive into the sink like a hungry rabbit seeking a carrot, but keep your eyes peeled for a surfboard and a cake, my valiant explorer!\nresponse: ", "response": "carrot; surfboard; sink; cake."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why are temperature differences so extreme in polar regions?\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Sway to the left by 2 meters, then rotate left 90 degrees to face the other direction, after that turn to the right, next fly towards the front, subsequently I’m excited to see it climb up 2 feet—let’s do this!, and in the end land this thing.\nresponse: ", "response": "move_left 2 m; turn_left 90 degrees; Missing turn_right; move_up 2 ft; Missing move_forward; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and clear the current target search list on your drone app.\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you urgently locate the snowboard?\nresponse: ", "response": "snowboard."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，去沙发那边看看，好吗？\nresponse: ", "response": "沙发."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate left by 30 degrees, then slide it left 40 inches, after that send it forward, next move the drone backward 1.5 feet, following that fly higher, subsequently fly the drone even higher, afterwards drop it down 50 cm, immediately after turn the drone 90 degrees left, and in the end bring it down, now!\nresponse: ", "response": "turn_left 30 degrees; move_left 40 in; Missing move_forward; move_back 1.5 ft; Missing move_up; Missing move_up; move_down 50 cm; turn_left 90 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请问在搜索碘伏的同时，能否也留意一下领带的位置？\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞去指定位置吗，然后左边要移动四十厘米，调整位置以免碰到障碍物，接着无人机向左飞行，最后无人机降落在目标位置。\nresponse: ", "response": "take_off; move_left 40 cm; Missing move_left; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往公共汽车附近，找到遥控器。\nresponse: ", "response": "公共汽车; 遥控器."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机往后移动，然后无人机请右转九十度，接着升高六十厘米，让无人机能看到更广的范围，随后让无人机顺时针旋转一百八十度，之后请让无人机向左转，最后右移四十厘米。\nresponse: ", "response": "Missing move_back; turn_right 90 degrees; move_up 60 cm; turn_right 180 degrees; Missing turn_left; move_right 40 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请你检查一下酒杯附近是否有香蕉和网球拍。\nresponse: ", "response": "酒杯; 香蕉; 网球拍."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机能否立即起飞，然后请让无人机向后移动三十厘米，接着请向后移动二百厘米；随后，无人机升高；紧接着往左移动；之后右边可能有目标，帮我转过去；再将无人机右转四十五度；随后，请让无人机往后退；紧接着，让无人机向右移动；最后，无人机可以降落。\nresponse: ", "response": "take_off; move_back 30 cm; move_back 200 cm; Missing move_up; Missing move_left; turn_right 90 degrees; turn_right 45 degrees; Missing move_back; Missing move_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被指派去寻找公共汽车、蛋糕和滑板。\nresponse: ", "response": "公共汽车; 蛋糕; 滑板."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请先留意下飞机附近有没有行李箱，好吗？\nresponse: ", "response": "飞机; 行李箱."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Reset the present navigation and scouting assignment.\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the airplane and the bottle.\nresponse: ", "response": "airplane; bottle."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请暂时停止当前的飞行任务。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索无人机画面中是否有明显的风力涡轮机。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off! Next, shift left 2 feet. Then lift up 40 centimeters. After that, climb up 1 meter. Immediately after, bring it down 3 feet. Following that, please move it right a bit, I'm having trouble getting it in frame. Subsequently, move back from the edge of the cliff 3 meters. Next, please turn right 45 degrees. Afterwards, how about moving up 20 inches? Thereafter, deploy backward trajectory shift of 4 meters. Later, shift right by 80 inches. In the end, hover and land.\nresponse: ", "response": "take_off; move_left 2 ft; move_up 40 cm; move_up 1 m; move_down 3 ft; Missing move_right; move_back 3 m; turn_right 45 degrees; move_up 20 in; move_back 4 m; move_right 80 in; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中的当前飞行控制指令应被清空。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要取消当前的控制和搜索任务？\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend 1.5 feet, then push it forward, after that fly back 3 meters, and subsequently rotate right by 270 degrees.\nresponse: ", "response": "move_down 1.5 ft; Missing move_forward; move_back 3 m; turn_right 270 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused flight control operation.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the kite.\nresponse: ", "response": "kite."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请轻启中断的探索之旅，让眼前的奇迹再度呈现于你的视线之中。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 移动到右侧，然后前进九十厘米。接下来，无人机现在下降一百厘米，随后提高二十厘米以修正高度。请无人机左转四十五度，这样可以得到更好的视角，之后将无人机上升两百厘米。前方视线不清晰，接着向前移动一百厘米。请右侧转向，最后开始降落。\nresponse: ", "response": "Missing move_right; move_forward 90 cm; move_down 100 cm; move_up 20 cm; turn_left 45 degrees; move_up 200 cm; move_forward 100 cm; Missing turn_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please, with all due urgency and care, check if the donut is near the sandwich, and wouldn't it be just like to find the tie somewhere nearby too?\nresponse: ", "response": "donut; sandwich; tie."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please go ahead and clear the current control and search task to proceed smoothly.\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最高效的方式定位并靠近那位正使用微波炉的人。\nresponse: ", "response": "人; 微波炉."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向后移动二百厘米，然后右转一百度，重新调整方向以适应新的飞行路线。接着，它右移七十五厘米，紧接着无人机前方的目标不清楚，请向前移动。随后右边可能有目标，帮我转过去。之后将无人机上升两百厘米，再后来我感觉左边可能有这个东西。最后让无人机向后退一米五，随后无人机上升高度。\nresponse: ", "response": "move_back 200 cm; turn_right 100 degrees; move_right 75 cm; Missing move_forward; turn_right 90 degrees; move_up 200 cm; turn_left 90 degrees; move_back 1.5 m; Missing move_up."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, move forward a bit, then shift left 2 meters to avoid the building, after that descend it down 30 inches, subsequently drop it down 10 inches, next turn the drone left by 120 degrees, afterwards shift right, following that turn it left by 90 degrees, immediately after initiate a rightward lateral movement for 2 meters, then descend gradually 1 foot, subsequently send the drone to the right 15 inches, later let's move the drone to the left, thereafter fly towards the building 100 feet, and in the end land now.\nresponse: ", "response": "Missing move_forward; move_left 2 m; move_down 30 in; move_down 10 in; turn_left 120 degrees; Missing turn_right; turn_left 90 degrees; move_right 2 m; move_down 1 ft; move_right 15 in; Missing move_left; move_forward 100 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到我最近一次存储的照片文件夹。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请启动目标搜索任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以高效模式启动搜索程序，友好地请检查每个角落，务必找到蛋糕和酒杯，并确认它们是否在微波炉附近。加油，我们相信你能完成这个任务！\nresponse: ", "response": "蛋糕; 酒杯; 微波炉."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找到那个三明治吗？\nresponse: ", "response": "三明治."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问可以帮我在热狗和面包附近找找行李箱吗？\nresponse: ", "response": "热狗; 面包; 行李箱."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Cautiously take off, then descend a little, next advance forward 4 feet, afterwards let's bring it down gently, maybe 30 inches, following that climb up by 12 inches, subsequently fly forward 1 foot, and in the end bring it to the ground.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Wipe the slate clean on that object hunt, buddy.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 看看左边是什么情况，然后立刻右转，接着前方有目标，前进一米，随后左转一百二十度，我们需要查看左侧的细节，最后无人机准备降落，请安全降落。\nresponse: ", "response": "turn_left 90 degrees; Missing turn_right; move_forward 1 m; turn_left 120 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧恢复之前的控制和搜索任务！\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，你能帮我找一下剪刀、冲浪板、鼠标和飞盘吗？\nresponse: ", "response": "剪刀; 冲浪板; 鼠标; 飞盘."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: While ensuring a thorough scan of the area, it is suggested that you locate and carefully approach the vase.\nresponse: ", "response": "vase."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn on the living room air conditioner and set it to fan mode.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机前进一百厘米，然后小飞机前飞七十厘米，让我们探险一下；请右边转向，接着小飞机再次前飞七十厘米，让我们继续探险；随后，请向后移动二百厘米，紧接着无人机下降二十厘米以便更接近地面；之后，因为无人机飞得太高了，所以它需要下降两米；最后，请将无人机向前移动一米，以便更好地观察前方的目标。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off, then elevate up 2.5 m, afterwards go down 50 cm, next move forward 5 meters, after that fly up 20 meters to clear the treetops, subsequently back up the drone by 120 cm, immediately after turn it around 360 degrees, following that rotate to the right by 180 degrees, and in the end, fly back 6 inches.\nresponse: ", "response": "take_off; move_up 2.5 m; move_down 50 cm; move_forward 5 m; move_up 20 m; move_back 120 cm; turn_right 360 degrees; turn_right 180 degrees; move_back 6 in."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Check if there are any wilted plants in the garden that need trimming.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Take a moment to pause the current flight control task and let's get ready to soar even higher!\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转八十度，查看右侧情况，然后无人机飞得太高了，请下降两米，接着无人机上升到三米，随后前方视线模糊，向前移动三十厘米，之后右移七十五厘米，躲过那个障碍物，继续前行，紧接着把无人机往右移六十厘米吧，后来向右转九十度，接下来下降三十厘米，我们要更接近地面看看情况，最后无人机请下降五十厘米，请将无人机向后移动。\nresponse: ", "response": "turn_right 80 degrees; move_down 2 m; move_up 3 m; move_forward 30 cm; move_right 75 cm; move_right 60 cm; turn_right 90 degrees; move_down 30 cm; move_down 50 cm; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the skis while keeping an eye on the airplane.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the train and scissors ASAP!\nresponse: ", "response": "train; scissors."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 清理当前的控制和搜索任务吧。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请指示无人机开始起飞，然后请让无人机向下降落一米，以便更接近地面检查，接着请让无人机向左移动五十厘米，随后左移六十厘米，紧接着右转一百度，调整无人机方向，之后左转八十度，检查左侧的环境，接下来无人机下降五十厘米以调整高度，然后前进一米，随后让无人机向后退一百五十厘米，紧接着请向右移动五十厘米，之后下降一米，随后左转三十度，检查左边，最后请将无人机向右飞行一百厘米，以避免前方的障碍物，在这之后无人机下降五十厘米以便着陆。\nresponse: ", "response": "take_off; move_down 1 m; move_left 50 cm; move_left 60 cm; turn_right 100 degrees; turn_left 80 degrees; move_down 50 cm; move_forward 1 m; move_back 150 cm; move_right 50 cm; move_down 1 m; turn_left 30 degrees; move_right 100 cm; move_down 50 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin the takeoff now, then can it descend, next move to the left by 12 inches, after that send it to the right 7 feet, subsequently please make the drone go left 150 centimeters, afterwards hey drone, can you go up 10 feet?, following that move back 10 feet, and in the end bring it in for landing.\nresponse: ", "response": "take_off; Missing move_down; move_left 12 in; move_right 7 ft; move_left 150 cm; move_up 10 ft; move_back 10 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing object detection operation.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以优雅的姿态，在晨光中轻盈地飞翔，探索每一个角落，温柔地寻觅那遗失的烤面包机与手机，让它们重归温暖的家庭怀抱吧。\nresponse: ", "response": "烤面包机; 手机."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not essential to ascertain whether the suitcase is adjacent to the refrigerator or if the wine glass has been left on the couch?\nresponse: ", "response": "suitcase; refrigerator; wine glass; couch."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右转弯，然后无人机请飞行到前方两米，之后后退一百五十厘米，调整位置，检查后方的情况，接着向上升起二十厘米，视角向上，随后让无人机向左旋转，紧接着请向右转弯，之后左边移动四十厘米，最后后退八十厘米。\nresponse: ", "response": "Missing turn_right; move_forward 2 m; move_back 150 cm; move_up 20 cm; Missing turn_left; Missing turn_right; move_left 40 cm; move_back 80 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not proceed with the current control and search task.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您详尽地启动目标搜索的任务吧！真是令人期待呢！\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, should we pick up where we left off with the paused flight control task?\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右边移动七十厘米，然后准备降落无人机，结束任务。\nresponse: ", "response": "move_right 70 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 清空当前的目标搜索任务列表。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the donut, train, banana.\nresponse: ", "response": "donut; train; banana."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 现在立即启动控制与搜寻任务吗？\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 你是不是应该考虑停止现在进行的物体搜索任务呢？\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机现在起飞，然后请让无人机往后移动，接着可以让无人机向左转九十度，请将无人机右移一米，随后请调整方向，右转，紧接着让无人机顺时针旋转七十五度，最后向右侧移动。\nresponse: ", "response": "take_off; Missing move_back; turn_left 90 degrees; move_right 1 m; Missing turn_right; turn_right 75 degrees; Missing move_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Pause the current object search task, and then resume it when ready.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞了，然后请后退两百厘米，之后任务要求，无人机下降五十厘米，紧接着无人机离地面太高了，请下降，随后请右转九十度，检查右侧情况，接着让无人机左转四十五度，准备接受新的挑战，最后无人机需要向左飞行七十厘米。\nresponse: ", "response": "take_off; move_back 200 cm; move_down 50 cm; Missing move_down; turn_right 90 degrees; turn_left 45 degrees; move_left 70 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 开启控制和搜索任务啦！\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机上升到三米，然后左移两百五十厘米，最后现在请让无人机着陆。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you locate the vase, knife, and broccoli?\nresponse: ", "response": "vase; knife; broccoli."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能麻烦您赶紧恢复之前的控制和搜索任务吗？谢谢！\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence now.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please don't forget to clear the current control and search task.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请右转三十度, 然后麻烦右转四十五度, 之后请让无人机向后移动三十厘米, 接着请将无人机向后移动, 随后无人机能向右转四十五度吗, 后来无人机右移, 接下来向右转动, 最后上升三十厘米，获得更高的视角.\nresponse: ", "response": "turn_right 30 degrees; turn_right 45 degrees; move_back 30 cm; Missing move_back; turn_right 45 degrees; Missing move_right; Missing turn_right; move_up 30 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请立即执行起飞动作，然后上升三十厘米，获得更高的视角，之后无人机请下降五十厘米，紧接着无人机上升高度，后来无人机需要向左平移。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前目标搜索任务，清空任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞任务已经准备好，启动无人机，然后升高六十厘米，接着请右转九十度，检查右侧情况，最后无人机需要降落在这片区域。\nresponse: ", "response": "take_off; move_up 60 cm; turn_right 90 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 像寻找宝藏一样，温柔地在红绿灯和电视间探寻吧。\nresponse: ", "response": "红绿灯; 电视."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动飞行任务控制程序\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 不管前方的路有多苦，只要走的方向正确，不管多么崎岖不平，都比站在原地更接近幸福\nresponse: ", "response": "None."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前操控飞行器的任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请详尽地搜索摩托车旁的碗，并友好地确认一下冰箱里是否有芬达。\nresponse: ", "response": "摩托车; 碗; 芬达; 冰箱."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the bread, you got this!\nresponse: ", "response": "bread."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能友好地确认一下是否找到了烤面包机旁边放着的雪碧和雨伞，还有飞机吗？\nresponse: ", "response": "烤面包机; 雪碧; 雨伞; 飞机."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽的搜索被友好地请求，就像细雨滋润大地那样，去寻找那根藏匿的胡萝卜。\nresponse: ", "response": "胡萝卜."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在启动控制程序的同时，系统也将开启搜寻任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let not the bread be left unturned in the oven, nor the dog undisturbed by the mouse.\nresponse: ", "response": "bread; oven; dog; mouse."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing object search task list, ensuring all previous entries are removed.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Dive down 3 feet, then lower the drone 75 inches, afterwards move forward 100 inches quickly, next let's get the drone to descend 1.2 meters, subsequently drop it down 50 cm, after that descend it a little, following that fly right around the corner 10 feet, immediately after move back 2 feet, and in the end I need the drone to rise up 20 inches.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then bring the drone down 5 feet to get a closer look; afterwards, advance forward 3 meters, subsequently descend 3 meters, following that rotate left, next retreat back 80 centimeters, after that swerve right 70 degrees, then turn it right by 10 degrees, and in the end land the drone slowly.\nresponse: ", "response": "take_off; move_down 5 ft; move_forward 3 m; move_down 3 m; Missing turn_left; move_back 80 cm; turn_right 70 degrees; turn_right 10 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动含有特定词汇的任务，开始搜寻物体。\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Halt the ongoing flight control operation immediately.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后面可能右东西，可以掉头看看吗，然后无人机降落。\nresponse: ", "response": "turn_left 180 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: While ensuring a thorough scan of the area, locate the truck and ascertain whether there is any bread within its vicinity.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜寻飞盘。\nresponse: ", "response": "飞盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move right 1 meter, then move left, afterwards yaw left 15 degrees, immediately after that spin it to the right 180 degrees, next drop down 50 centimeters, subsequently come down 4 ft, in the end shift the drone 2 meters to the right.\nresponse: ", "response": "move_right 1 m; Missing move_left; turn_left 15 degrees; turn_right 180 degrees; move_down 50 cm; move_down 4 ft; move_right 2 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前方有点模糊，向前移动两百五十厘米\nresponse: ", "response": "move_forward 250 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞以开始任务，然后无人机下降，接着无人机能向右转四十五度吗。\nresponse: ", "response": "take_off; Missing move_down; turn_right 45 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the control and search operation.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the spoon, a needle in a haystack.\nresponse: ", "response": "spoon."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's take off, then move right 10 centimeters, after that move leftwards 70 inches, subsequently shift left to avoid hitting the wall by 2 meters, next spin to the left 90 degrees, afterwards raise it 20 inches, following that the drone should climb 1 foot, and in the end go down 3 feet.\nresponse: ", "response": "take_off; move_right 10 cm; move_left 70 in; move_left 2 m; turn_left 90 degrees; move_up 20 in; move_up 1 ft; move_down 3 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 恢复先前中断的目标检测任务。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then veer to the right 45 degrees, next shift right by 100 centimeters, after that engage in forward flight for 5 meters, subsequently move forward for 2 meters, nice and steady, immediately bring it up 20 inches, thereafter rise up 3 meters, afterwards bring the drone down 10 centimeters, following that shift to the left.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_right 100 cm; move_forward 5 m; move_forward 2 m; move_up 20 in; move_up 3 m; move_down 10 cm; Missing move_left."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即恢复先前已暂停的飞行控制任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动任务列表中当前搜索目标的清空程序。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then go up a bit, afterwards fly back 3 meters, next commence a vertical descent of 6 feet, subsequently bring the drone back 2 feet, following that move left 25 centimeters, after that go to the right side.\nresponse: ", "response": "take_off; Missing move_up; move_back 3 m; move_down 6 ft; move_back 2 ft; move_left 25 cm; Missing move_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the detailed control procedures and commence the comprehensive search task with precision and diligence.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应该暂停当前的控制与搜寻任务？\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前的任务列表，让您的操作更加高效有序。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Commence the control and embark on the search task, forthwith! Let the skies resonate with purpose as you guide the mission ahead!\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: move forward 5 centimeters\nresponse: ", "response": "move_forward 5 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别告诉我你找不到那该死的笔记本电脑。\nresponse: ", "response": "笔记本电脑."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复先前暂停的飞行任务，确保一切按计划顺利进行。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Be guided to seek out the dog, as if following a trail of breadcrumbs.\nresponse: ", "response": "dog."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 掉头飞行，然后左转，接着请将无人机右移七十厘米，随后命令无人机向前飞行。\nresponse: ", "response": "turn_right 180 degrees; turn_left 90 degrees; move_right 70 cm; Missing move_forward."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the toothbrush and bottle.\nresponse: ", "response": "toothbrush; bottle."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机向右转一百八十度，查看后方，然后无人机前方有障碍物，向前移动五十厘米以检查，接着无人机，请后退两百厘米，随后无人机向左移动六十厘米，以避免障碍物，紧接着请让无人机前进一百五十厘米以完成任务，之后请让无人机向右掉头，后来无人机逆时针旋转，紧接着向前移动七十厘米，最后向右侧移动。\nresponse: ", "response": "turn_right 180 degrees; move_forward 50 cm; move_back 200 cm; move_left 60 cm; move_forward 150 cm; turn_right 180 degrees; Missing turn_left; move_forward 70 cm; Missing move_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not leave any objects in the current search task list.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Confirm which nearby coffee shops offer takeaway services.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's move back 2 feet, then turn left 45 degrees, next shift left by 10 cm, after that perform a 270-degree clockwise yaw, and in the end, it's time to land.\nresponse: ", "response": "move_back 2 ft; turn_left 45 degrees; move_left 10 cm; turn_right 270 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请你在天空中像寻宝一样找一找公共汽车和饼干吧。\nresponse: ", "response": "公共汽车; 饼干."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the boat, clock, frisbee, and cup.\nresponse: ", "response": "boat; clock; frisbee; cup."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即暂停当前飞行任务！\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get ready and take off, then turn 120 degrees to the right, after that rotate left by 30 degrees, next turn right 90 degrees, afterwards rotate it counterclockwise 90 degrees, subsequently move backwards 2 feet, and finally move right 100 inches.\nresponse: ", "response": "take_off; turn_right 120 degrees; turn_left 30 degrees; turn_right 90 degrees; turn_left 90 degrees; move_back 2 ft; move_right 100 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请以详尽的操作启动并开启搜索任务，就如同给软件的翅膀装上风帆，让它在数据的海洋中稳健航行。\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please proceed to search for the keyboard, skateboard, and bowl.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence with enthusiasm and precision.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立刻起飞，然后右转一百度，重新调整方向以适应新的飞行路线，接着无人机飞得太高了，请下降六十厘米，随后前方有点不清楚，向前移动，紧接着向前移动五十厘米，之后无人机下降一百五十厘米以调整高度，紧接着无人机左转一百二十度，随后左边飞行七十厘米，看看会有什么新发现，最后现在让无人机降落。\nresponse: ", "response": "take_off; turn_right 100 degrees; move_down 60 cm; Missing move_forward; move_forward 50 cm; move_down 150 cm; turn_left 120 degrees; move_left 70 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Isn't it time to initiate the control and search task?\nresponse: ", "response": "start_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the hot dog and the sports ball while circumnavigating the truck and the bus without delay.\nresponse: ", "response": "hot dog; sports ball; truck; bus."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向后退八十厘米，然后无人机降落在预定位置。\nresponse: ", "response": "move_back 80 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for nearby public charging stations.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最迅疾的风之使者姿态，急切地探寻那失落于广阔天地间的手机与随风舞动的风筝吧。\nresponse: ", "response": "手机; 风筝."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and kick off the object search.\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去床上找运动球和碗，再去找滑雪板。\nresponse: ", "response": "运动球; 床; 滑雪板; 碗."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go up now.\nresponse: ", "response": "take_off."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 启动无人机的起飞程序，然后请调整方向，右转，接着任务要求，无人机下降五十厘米；随后让无人机向右转动二十度，紧接着请将无人机向后移动四十厘米以避免前方障碍物；之后无人机提升，然后左移一百五十厘米，接下来上升三十厘米获得更高的视角；随后无人机能否下降五十厘米，接着向右移动五十厘米避开障碍物，请让无人机向前飞行一米探查前方；紧接着无人机现在离地面太远了，请下降一百厘米调整高度；随后无人机向右移动；最后为了完成任务，现在需要无人机降落。\nresponse: ", "response": "take_off; Missing turn_right; move_down 50 cm; turn_right 20 degrees; move_back 40 cm; Missing move_up; move_left 150 cm; move_up 30 cm; move_down 50 cm; move_right 50 cm; move_forward 1 m; move_down 100 cm; Missing move_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please ensure that you do not initiate any new control or search tasks at this moment.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左转一百八十度，然后向左飞行两米，接着请将设备向后移动，随后后退一百五十厘米，调整位置，检查后方的情况，后来可以让无人机往后退吗，请让无人机向右飞行两米，接下来前面有点模糊，向前移动五十厘米，紧接着上升七十厘米，提高高度，之后无人机飞得太高了，请下降四十厘米，最后赶紧降落。\nresponse: ", "response": "turn_left 180 degrees; move_left 2 m; Missing move_back; move_back 150 cm; move_right 2 m; Missing move_back; move_forward 50 cm; move_up 70 cm; move_down 40 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the backpack.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最详尽的方式，如同猎鹰搜寻猎物般，定位并捕捉飞盘的踪迹。\nresponse: ", "response": "飞盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drift right like you're dodging an obstacle, 5 meters, then drop the drone down to the ground.\nresponse: ", "response": "move_right 5 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 是否可以暂时停止当前的飞行任务？\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the current flight control task list.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused object detection task.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Head over to the refrigerator, and while you're at it, make sure to locate a banana, a carrot, and also check if there's a snowboard around, would you?\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the motorcycle, keyboard, tennis racket, and handbag.\nresponse: ", "response": "motorcycle; keyboard; tennis racket; handbag."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hold up on the current control and search job, will ya?\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control sequence, a critical step in launching your aerial mission.\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以开始起飞了吗，然后请无人机后退一百厘米，接着右侧可能有障碍物，请将无人机向右飞行八十厘米以绕过障碍，请将无人机往右移，随后请将无人机右移两百五十厘米，紧接着无人机后退五十厘米，以便于调整位置，最后是否可以让无人机降落。\nresponse: ", "response": "take_off; move_back 100 cm; move_right 80 cm; Missing move_right; move_right 250 cm; move_back 50 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请续行先前暂歇之探物使命。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以高精度扫描模式定位并报告区域内猫、手提包、键盘和瓶子的具体坐标。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您像寻找遗失的宝藏一样，去细致地搜索那瓶缓解痛苦的止疼药和优雅站立的花瓶。\nresponse: ", "response": "止疼药; 花瓶."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the halted object search.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover to the right by 10 meters, then fly backward 10 meters, afterwards rotate to the left by 60 degrees, and finally land the drone now please.\nresponse: ", "response": "move_right 10 m; move_back 10 m; turn_left 60 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么植物需要光来进行光合作用？\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 现在请让无人机起飞，然后将无人机向右移动三十厘米，确认目标是否在视野中；之后无人机升高二米，获取更好视野；接着向右一米；紧接着倒退一米；随后上移六十厘米，调高水平；紧接着下降一米；之后请问无人机能左移四十厘米吗；紧接着无人机离地面太远了，下降一百五十厘米；随后无人机下降三十厘米以便调整高度；最后无人机准备降落。\nresponse: ", "response": "take_off; move_right 30 cm; move_up 2 m; move_right 1 m; move_back 1 m; move_up 60 cm; move_down 1 m; move_left 40 cm; move_down 150 cm; move_down 30 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise up! Then, slide right 4 inches. Next, fly up 3 feet. After that, bring it down 1 meter. Following that, drop the drone by 30 inches. Immediately after, please turn right 45 degrees. Subsequently, come down 20 inches. Thereafter, Make it go up 50 centimeters, now! Afterwards, drop down 50 centimeters. First, move forward slightly. Second, Let's have some fun, turn right 180 degrees! Third, I'm so thrilled! Let's go up 50 centimeters! Next, fly to the left for 10 inches. Finally, fly to the left by 15 feet.\nresponse: ", "response": "take_off; move_right 4 in; move_up 3 ft; move_down 1 m; move_down 30 in; turn_right 45 degrees; move_down 20 in; move_up 50 cm; move_down 50 cm; Missing move_forward; turn_right 180 degrees; move_up 50 cm; move_left 10 in; move_left 15 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Let's take off, then fly up 30 centimeters, and afterwards, can you land it gently?\nresponse: ", "response": "take_off; move_up 30 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请恢复先前暂停的飞行任务，让进程顺利进行。\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Make a left-hand turn, then shift the drone 2 meters to the right, after that head left 10 inches, next move right 2 feet, subsequently fly it to the right 20 inches, afterwards turn left 30 degrees, following that fly to the left 3 feet, then please rotate it right by 180 degrees, and in the end move the drone back 1.5 meters.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被要求搜索的是蛋糕、胡萝卜、电视和火车吗？\nresponse: ", "response": "蛋糕; 胡萝卜; 电视; 火车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the book and the skateboard with enthusiasm, for they await your discovery; let not the bench or the surfboard elude your keen search, as each item holds a story of its own.\nresponse: ", "response": "book; skateboard; bench; surfboard."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即恢复先前暂停的飞行任务，我们相信你能顺利完成！\nresponse: ", "response": "continue_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 不妨暂时搁置手中的搜索任务，就像在茫茫书海中适时地放下书本，稍作休息。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate launch, then advance 10 cm, after that head to the left and turn the drone to left, subsequently tilt left 90 degrees.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the motorcycle and bread.\nresponse: ", "response": "motorcycle; bread."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Embark upon the noble quest of guiding and seeking with your aerial sentinel.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover in place, then veer left 30 degrees, after that adjust its position to the left, subsequently set it down.\nresponse: ", "response": "take_off; turn_left 30 degrees; Missing move_left; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Swing left gently 25 degrees, then please move the drone backwards 2 feet, after that fly straight forward, next hover to the right 6 inches, subsequently drift to the right 6 feet, afterwards please turn right 45 degrees, following that go left 12 inches, then spin to the left 90 degrees, thereafter shift left, and in the end land immediately.\nresponse: ", "response": "turn_left 25 degrees; move_back 2 ft; Missing move_forward; move_right 6 in; move_right 6 ft; turn_right 45 degrees; move_left 12 in; turn_left 90 degrees; Missing move_left; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control task immediately!\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议您先找到花瓶，接着轻松定位遥控器，最后愉快地享受披萨。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应该恢复先前暂停的控制与搜索任务？\nresponse: ", "response": "continue_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 以详尽的操作开启您的探索之旅，就像勇敢的探险家驶向未知的领域，现在让我们鼓励地启动这一趟精彩的搜寻任务吧。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the previously paused control and search operation.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Help me find the nearest electric vehicle repair shop.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空现在的任务列表，继续前行！\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off now, then make the drone go up a bit, after that go ahead 100 cm, subsequently bring the drone down 40 centimeters, next perform a port-side drift for 50 centimeters, and finally quick, rotate left 90 degrees.\nresponse: ", "response": "take_off; Missing move_up; move_forward 100 cm; move_down 40 cm; move_left 50 cm; turn_left 90 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动目标搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向右转五十度，然后请将无人机向前移动一百厘米以探测前方区域，接着无人机左转一百二十度，随后右侧移动七十五厘米以避开障碍，紧接着将无人机向后移动一米，之后无人机上升到三米，最后无人机在这儿降落吧。\nresponse: ", "response": "turn_right 50 degrees; move_forward 100 cm; turn_left 120 degrees; move_right 75 cm; move_back 1 m; move_up 3 m; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate to the left by 60 degrees, then bank left by 2 meters, after that veer to the right 30 degrees abruptly.\nresponse: ", "response": "turn_left 60 degrees; move_left 2 m; turn_right 30 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机请向后飞行一米，然后无人机高度过高，请下降五十厘米，接着如果可以，请向左移动三十厘米，随后无人机目前离地面过高，请下降一百五十厘米，紧接着请将无人机向后移动，之后上升七十厘米，然后将无人机右转四十五度，接下来上升七十厘米，随后可以让无人机往后退吗，最后现在可以让无人机缓慢降落到地面吗。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Prepare for takeoff, then immediately drop down 1 meter, afterwards go backward a short distance, about 1 meter.\nresponse: ", "response": "take_off; move_down 1 m; move_back 1 m; Missing turn_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Check if there are folded towels in the wardrobe.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请执行搜索任务，先定位牙刷，然后是冲浪板，最后找到止疼药。感谢您的配合。\nresponse: ", "response": "牙刷; 冲浪板; 止疼药."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中的当前搜寻物体能否被清除了呢？\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Come down 5 meters, then maneuver to the right, after that climb 12 inches, next bank right.\nresponse: ", "response": "move_down 5 m; Missing move_right; move_up 12 in; Missing move_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请你不要去找风筝和花瓶了，专注于卡车吧。\nresponse: ", "response": "风筝; 花瓶; 卡车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往搜索手机、微波炉和椅子。\nresponse: ", "response": "手机; 微波炉; 椅子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I'm curious, can you spin left 90 degrees?, then shift it forward by 8 feet, after that move the drone left 5 feet, next push left, subsequently turn right 90 degrees, afterwards shift right by 1 meter, following that move it forward 7 meters, later descend slowly, then engage in forward flight for 5 meters, and finally rotate 180 degrees left.\nresponse: ", "response": "turn_left 90 degrees; move_forward 8 ft; move_left 5 ft; Missing move_left; turn_right 90 degrees; move_right 1 m; move_forward 7 m; Missing move_down; move_forward 5 m; turn_left 180 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 告诉我一些关于火星的知识。\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the horse, then locate the wine glass, and finally find the snowboard.\nresponse: ", "response": "horse; wine glass; snowboard."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即前往搜寻香蕉、鸟和书。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降五十厘米以便着陆，然后请升高，接着无人机请右转九十度，之后后退一米，随后请帮忙让无人机左移四十厘米，紧接着下降七十五厘米，然后无人机飞得太高，请下降，最后无人机下降一百五十厘米，转向右边。\nresponse: ", "response": "move_down 50 cm; Missing move_up; turn_right 90 degrees; move_back 1 m; move_left 40 cm; move_down 75 cm; Missing move_down; move_down 150 cm; Missing turn_right."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not clear the current object search task list now, and see how much more efficiently your mission can proceed?\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被友好地请求去确认一下披萨、运动球和剪刀是否都已经被找到，可以吗？\nresponse: ", "response": "披萨; 运动球; 剪刀."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Stop the ongoing search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 迅速找寻鸟、甜甜圈和花瓶。\nresponse: ", "response": "鸟; 甜甜圈; 花瓶."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please proceed to locate the potted plant.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂定当前的控制与搜索任务吧，真是个明智的选择！这有助于我们更好地优化应用程序进程，确保后续操作更加顺畅。加油，我们一起让技术发挥最大效能！\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn to face the sun 120 degrees, then move the drone backward 40 inches, after that go down by 2 meters, next immediately move back 10 inches, afterwards pivot right, and in the end set it down gently.\nresponse: ", "response": "turn_right 120 degrees; move_back 40 in; move_down 2 m; move_back 10 in; Missing turn_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Be sure to search for the boat, frisbee, bread, and keyboard, would you? We're counting on you!\nresponse: ", "response": "boat; frisbee; bread; keyboard."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you please clear the current object search task list for me?\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动无人机的起飞程序，然后请让无人机向右掉头，之后能否请无人机下降五十厘米；紧接着，无人机前方推进，后来为了调整视角，请右转，随后向下下降；接下来，下降七十厘米，调整无人机高度，第三，调整无人机方向，左转一百二十度，接着视线受阻，后退一百五十厘米，然后右转九十度，重设方向，适应新的飞行环境；随后，无人机太高了，请下降，紧接着向上升；最后，无人机，请着陆。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前正在进行的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Quickly take off! Then move the drone backwards by 100 inches, next veer left 7 inches, after that ascend 2 meters gradually, subsequently move the drone backward 1.5 feet, afterwards bring it up a few inches, and in the end land now.\nresponse: ", "response": "take_off; move_back 100 in; move_left 7 in; move_up 2 m; move_back 1.5 ft; Missing move_up; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 用疑问的语气轻声询问，键盘和马之间是否藏着运动球？\nresponse: ", "response": "键盘; 马; 运动球."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: In the domain of the sky, let the airplane traverse the expanse to seek out the fanta and cola nestled within the refrigerator.\nresponse: ", "response": "airplane; fanta; refrigerator; cola."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Erase the present array of object search tasks, thus paving the way for a more focused and efficient mission ahead.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降六十厘米，然后下降三十厘米以便调整高度，接着后退五十厘米，随后右侧有目标，向右飞行一百厘米，最后无人机右转一百二十度。\nresponse: ", "response": "move_down 60 cm; move_down 30 cm; move_back 50 cm; move_right 100 cm; turn_right 120 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 开启热水器并设置为40摄氏度。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Go find the iodophor, please. Treat it like a treasure hunt, okay?\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 哎呀，快停下现在的寻找目标的任务吧！\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在厨房里，蛋糕被从烤箱中取出后，应被小心翼翼地带到水槽旁清洗，然后平稳地放置于沙发之上。\nresponse: ", "response": "蛋糕; 烤箱; 水槽; 沙发."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机右转，然后左侧调整距离，接着请让无人机向左移动五十厘米，之后请后退一米，最后无人机需要降落在这片区域。\nresponse: ", "response": "Missing turn_right; Missing move_left; move_left 50 cm; move_back 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 能不能现在就开始搜索物体啊？\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机提升，然后向右飞行八十五厘米，调整视角；接着左转五十五度，查看左侧的情况；随后上扬，请升高三十厘米之后，请将无人机高度增加一百厘米；紧接着后退五米，再后来无人机当前的位置不合适，请向右移动二十厘米；随后无人机太高了，请下降；最后无人机应该在这里降落。\nresponse: ", "response": "Missing move_up; move_right 85 cm; turn_left 55 degrees; Missing move_up; move_up 30 cm; move_up 100 cm; move_back 5 m; move_right 20 cm; Missing move_down; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应该启动飞行任务的控制程序？\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急的，请友好地像猎犬寻找遗失的骨头那样，在长椅附近搜索手机。\nresponse: ", "response": "手机; 长椅."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search if there is a vegetable knife on the kitchen counter.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines, then give me a smooth left turn, 90 degrees, like a dancer, afterwards initiate a 180-degree counterclockwise rotation, next I’m excited to see it climb up 2 feet—let’s do this!, subsequently shift forward 50 centimeters, following that turn left a quarter turn, and in the end bring it to the ground gently.\nresponse: ", "response": "take_off; turn_left 90 degrees; turn_left 180 degrees; move_up 2 ft; move_forward 50 cm; turn_left 90 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能不能先暂停一下现在正在进行的飞行任务呢？这样可能更好一些。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以优雅的姿态，在这广袤的空间中寻觅那手机与遥控器的踪迹吧，愿你的探索之旅充满发现的喜悦。\nresponse: ", "response": "手机; 遥控器."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机往后退吗，在前方不清晰的情况下，接着向前移动五十厘米，然后无人机请向后飞行两米以避开障碍物，紧接着向右转弯，之后请向左移动五十厘米以避开障碍，随后来点高空的视角，上升一百五十厘米，观察整个区域，请将设备后退，最后请命令无人机降落到目标区域。\nresponse: ", "response": "Missing move_back; move_forward 50 cm; move_back 2 m; Missing turn_right; move_left 50 cm; move_up 150 cm; Missing move_back; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Resume the previously halted flight control operation immediately.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out the current search task list, okay?\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, move_down, then turn_left 60, afterwards move_back 30 in, next move_forward, later fly backwards a few feet, immediately after that steer left again, subsequently land.\nresponse: ", "response": "Missing move_down; move_back 30 in; turn_left 60 degrees; Missing move_back."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请优雅地清空此刻操控之列，让其归于宁静。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 将无人机降落一米，然后右转七十度，接着请向右移动五十厘米，之后前方有点模糊，向前移动一百五十厘米，随后请将无人机向左移动，紧接着请向左移动五十厘米以避开障碍，再后来无人机向右旋转九十度，最后请无人机现在着陆。\nresponse: ", "response": "move_down 1 m; turn_right 70 degrees; move_right 50 cm; move_forward 150 cm; Missing move_left; move_left 50 cm; turn_right 90 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停现在的搜索任务，休息一下再继续。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Launch the drone now, then tilt the drone to the left, after that, fly towards the front, next, move forward, immediately after, drone should rotate left, subsequently, turn the drone 90 degrees left, afterwards, ascend 1 foot, following that, fly it left 50 cm, and in the end, land the drone.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Launch the drone, then move the drone forward a distance of 5 meters, next move the drone forward 1 meter, after that lower down 75 cm, subsequently drop down 50 centimeters, following that shift to the left, afterwards pull it back 75 cm, and finally climb up by 8 inches.\nresponse: ", "response": "take_off; move_forward 5 m; move_forward 1 m; move_down 75 cm; move_down 50 cm; Missing move_left; move_back 75 cm; move_up 8 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Should we pause the current control and search operation?\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请以优雅之姿，终止现下之操控与探寻使命。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请恢复先前已暂停的飞行任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could it be that the skateboard near the sink and the keyboard inside the truck are what we're looking for?\nresponse: ", "response": "skateboard; sink; keyboard; truck."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议我们清空当前正在搜索的目标列表，以确保接下来的操作更加顺畅。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机升高一百厘米，然后如果可以，请向左移动三十厘米，接着无人机现在下降一百厘米；随后，无人机太高了，请下降；紧接着，可以左边移动二十厘米吗？之后，上移；再接下来，无人机向右转；随后，无人机向左移动一米，第二步后退七十厘米，可能能避开障碍；紧接着，可以向左旋转三十度吗？然后，左边移动四十厘米，接着无人机升高三十厘米，以调整高度；最后，请帮忙让无人机下降一米；紧接着，请让无人机降落到地面。\nresponse: ", "response": "move_up 100 cm; move_left 30 cm; move_down 100 cm; Missing move_down; move_left 20 cm; Missing move_up; move_left 1 m; Missing turn_right; move_back 70 cm; turn_left 30 degrees; move_left 40 cm; move_up 30 cm; move_down 1 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清除当前的控制与搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Remove the existing command and locate assignment.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing flight control operation of the unmanned aerial vehicle.\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即搜寻雪碧和船，别忘了雨伞。\nresponse: ", "response": "雪碧; 船; 雨伞."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Gently set aside the current control and search endeavor, like pausing a melody to adjust its tune.\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drop altitude 2 feet, then come down 4 ft, after that fly back 10 inches, next please rotate it right by 180 degrees, subsequently tilt the drone 90 degrees to the right, afterwards swing right, following that spin counterclockwise 45 degrees, and in the end fly to the right 100 cm.\nresponse: ", "response": "move_down 2 ft; move_down 4 ft; move_back 10 in; turn_right 180 degrees; turn_right 90 degrees; turn_left 45 degrees; Missing turn_right; move_right 100 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off with the drone immediately, then move the drone back 1.5 meters, after that bring the drone down 40 centimeters, next adjust its position to the left, subsequently let’s make it go back 10 feet, afterwards lower it slightly, following that bring it up 60 centimeters, and in the end bring it down now.\nresponse: ", "response": "take_off; move_back 1.5 m; move_down 40 cm; Missing move_left; move_back 10 ft; Missing move_down; move_up 60 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 终止当前的控制指令并启动搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 在先前暂停的任务中，必须重新启动对目标物体的搜索过程。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then shift the drone to the left by 2 meters, after that quick, rotate left 90 degrees, afterwards push it forward, next climb 6 feet, subsequently fly forward 1 foot, following that turn the drone 45 degrees to the right, then move rightward 4 inches, immediately after that move left 200 centimeters, and in the end spin the drone to the left 45 degrees.\nresponse: ", "response": "take_off; move_left 2 m; turn_left 90 degrees; Missing move_forward; move_up 6 ft; move_forward 1 ft; turn_right 45 degrees; move_right 4 in; move_left 200 cm; turn_left 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Head forward 20 feet, then fly it forward 2 inches, after that time to moonwalk backward 20 inches, next move forward, afterwards fly the drone downward 5 meters, following that getting impatient, fly to the right by 30 cm, subsequently elevate up 2.5 m, then climb 12 inches, and in the end descend 20 centimeters.\nresponse: ", "response": "move_forward 20 ft; move_forward 2 in; move_back 20 in; Missing move_forward; move_down 5 m; move_right 30 cm; move_up 2.5 m; move_up 12 in; move_down 20 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Quickly take off! First, execute a vertical climb of 30 inches. Then, spin it to the right 180 degrees. After that, turn the drone left by 30 degrees. Next, shift the drone leftwards by 75 centimeters. Following that, spin right 180 degrees. Immediately after, go to the right side. Subsequently, spin the drone clockwise by 45 degrees. Then, turn right by 90 degrees. Afterwards, turn left 150 degrees. In the end, bring it to the ground.\nresponse: ", "response": "take_off; move_up 30 in; turn_right 180 degrees; turn_left 30 degrees; move_left 75 cm; turn_right 180 degrees; Missing move_right; turn_right 45 degrees; turn_right 90 degrees; turn_left 150 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即起飞，然后无人机后退一米，随后上升，紧接着右侧转向，最后左转五十度，查看左侧情况。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Kick off the item hunt operation, ensuring the aerial scout is primed and ready for action.\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往寻找鸟和杯子。\nresponse: ", "response": "鸟; 杯子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get in the air, then spin the drone clockwise by 45 degrees, after that I need the drone to go forward 100 inches quickly, next turn the drone around 360 degrees, subsequently move the drone 3 meters to the left, and finally drop down now.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_forward 100 in; turn_right 360 degrees; move_left 3 m; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请前往搜索区域，首先定位马的位置，接着找到微波炉，最后检查是否有书。\nresponse: ", "response": "马; 微波炉; 书."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能帮我找找那个橙子吗？\nresponse: ", "response": "橙子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机是否可以现在起飞，然后右转五十度来调整方向，接着需要向左飞行五十厘米，最后倒退一米。\nresponse: ", "response": "take_off; turn_right 50 degrees; move_left 50 cm; move_back 1 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否请您继续之前暂停的搜寻任务？\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the cup, and locate the cola.\nresponse: ", "response": "cup; cola."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否轻盈地飞向那静默的角落，探寻是否藏有一把古朴的椅子？\nresponse: ", "response": "椅子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Fly up! Then rotate the drone left by 180 degrees. After that, turn it around 360 degrees. Next, move back a short distance.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Isn't it time to see if you can find the coldrex, dog, and airplane?\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被委托去搜索碘伏和猫，在确保安全的情况下，也检查一下电视周围。\nresponse: ", "response": "碘伏; 猫; 电视."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Clear the existing flight control task list.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何利用冥想来缓解日常压力？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Hey, quick! Check for the donut, suitcase, and cat, will ya?\nresponse: ", "response": "donut; suitcase; cat."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂停当前的物体搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Let's go find your toothbrush, bowl, and cola with a smile!\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take the drone up now, then move it forward 100 inches, after that reverse 5 meters, subsequently rotate right 270 degrees, next shift right by 80 inches, afterwards tilt to the left, following that begin the ascent, immediately after descend the drone by 1.5 meters, and in the end push forward 100 inches.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Descend gradually 2 meters, then tilt the drone to the left, after that drift to the right 6 feet, next I need the drone to rise up 20 inches, immediately after that put it down now.\nresponse: ", "response": "move_down 2 m; Missing turn_left; move_right 6 ft; move_up 20 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the laptop, then locate the painkillers and coldrex.\nresponse: ", "response": "laptop; painkillers; coldrex."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Gently clear the current search task list to make way for new adventures.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞，然后无人机升高，接着左转五十度，之后快到房顶了，往下飞抵一下吧，下降个五十厘米，随后请上升，紧接着无人机上升一百五十厘米，之后向左飞行一百二十厘米，最后无人机右移一米，以绕过障碍物。\nresponse: ", "response": "take_off; Missing move_up; turn_left 50 degrees; move_down 50 cm; Missing move_up; move_up 150 cm; move_left 120 cm; move_right 1 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Make a left-hand turn, then shift the drone 2 meters to the right, after that head left 10 inches, next move right 2 feet, subsequently fly it to the right 20 inches, afterwards turn left 30 degrees, following that fly to the left 3 feet, then please rotate it right by 180 degrees, and in the end move the drone back 1.5 meters.\nresponse: ", "response": "Missing turn_left; move_right 2 m; move_left 10 in; move_right 2 ft; move_right 20 in; turn_left 30 degrees; move_left 3 ft; turn_right 180 degrees; move_back 1.5 m."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您现在清空当前正在执行的搜寻任务列表，以便进行下一步的操作。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最高效的技术路径，友好地但不要耽误时间，去检查那个不怎么让人省心的冰箱。\nresponse: ", "response": "冰箱."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被派遣去搜索芬达和摩托车。\nresponse: ", "response": "芬达; 摩托车."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for skis and sprite.\nresponse: ", "response": "skis; sprite."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The resumption of the previously paused control and search task is highly encouraged, ensuring a seamless continuation of your positive experience with the application process.\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 嘿，快去把背包和盆栽植物旁边的那个领带给找出来。\nresponse: ", "response": "背包; 盆栽植物; 领带."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: What are the potential directions for AI technology development in the next decade?\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动搜寻任务。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the broccoli and the biscuit with care and positivity.\nresponse: ", "response": "broccoli; biscuit."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂停当前搜索目标的任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转九十度，检查左侧情况，然后无人机左侧转向，接着左转，随后左转一百二十度，之后无人机上升一米，最后为了绕过前方的障碍物，请将无人机向左飞行一百二十厘米。\nresponse: ", "response": "turn_left 90 degrees; Missing turn_left; Missing turn_left; turn_left 120 degrees; move_up 1 m; move_left 120 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the tennis racket and laptop.\nresponse: ", "response": "tennis racket; laptop."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 如何提高无人机的续航时间？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 寻找猫。\nresponse: ", "response": "猫."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 开始起飞，然后无人机现在下降一百厘米，接着无人机向前飞行二十厘米，右边需要探测，向右移动，之后在任务中，无人机需要左移四十厘米，随后无人机上升，紧接着无人机离地面太远了，下降一百五十厘米，后来无人机下降八十厘米，以接近地面，最后无人机下降六十厘米。\nresponse: ", "response": "take_off; move_down 100 cm; move_forward 20 cm; Missing move_right; move_left 40 cm; Missing move_up; move_down 150 cm; move_down 80 cm; move_down 60 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 现在开始执行物体搜索任务吧。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜索区域内的感冒药、飞盘、橙子和勺子，确保无遗漏。\nresponse: ", "response": "感冒药; 飞盘; 橙子; 勺子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 以详尽的操作开启您的探索之旅，就像勇敢的探险家驶向未知的领域，现在让我们鼓励地启动这一趟精彩的搜寻任务吧。\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Purge the existing flight control mission queue.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Climb 12 inches, then angle left 3 inches.\nresponse: ", "response": "move_up 12 in; move_left 3 in."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地清空当前的任务列表，让我们一起确保应用程序运行得更加顺畅。感谢您的配合！\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Recommend some simple and easy-to-learn time management tips.\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务吧。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Drift back, then I need you to bring the drone down 10 centimeters, after that turn it right by 10 degrees, next fly forward 72 inches, afterwards tilt the drone to the left, subsequently move forward 5 meters, and in the end land the drone gently.\nresponse: ", "response": "Missing move_back; move_down 10 cm; turn_right 10 degrees; move_forward 72 in; Missing turn_left; move_forward 5 m; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞，感谢；然后让无人机向后退一米五；接着降落一米，咱们要接近地面了，准备好查看周围环境；随后无人机升高一百厘米；紧接着无人机向右移动四十厘米；之后向前飞行一米；右侧移动；紧接着无人机右转九十度，重新调整方向；最后请让无人机着陆。\nresponse: ", "response": "take_off; move_back 1.5 m; move_down 1 m; move_up 100 cm; move_right 40 cm; move_forward 1 m; Missing move_right; turn_right 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 上升七十厘米，提高高度，然后后退五十厘米以调整位置，接着无人机左转七十度，随后后退，紧接着无人机向前飞行一百五十厘米，之后让无人机左转一百八十度，观察后方，随后让无人机向左转，再然后无人机现在下降一百厘米，紧接着降低位置，最后无人机，请着陆。\nresponse: ", "response": "move_up 70 cm; move_back 50 cm; turn_left 70 degrees; Missing move_back; move_forward 150 cm; turn_left 180 degrees; Missing turn_left; move_down 100 cm; Missing move_down; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请立即停止当前的飞行任务，这真是十万火急！\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly the drone backwards 300 cm, then shift right by 7 feet, afterwards adjust left slightly, next make the drone turn left, after that fly it backward like it's in reverse gear.\nresponse: ", "response": "move_back 300 cm; move_right 7 ft; Missing move_left; Missing turn_left; Missing move_back."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not start the drone flight control task.\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去那边看看能不能找到饼干和摩托车吧。\nresponse: ", "response": "饼干; 摩托车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前搜索物体的任务\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞任务已经准备好，启动无人机，然后向右转九十度，接着无人机后退二十厘米，随后上升七十厘米，紧接着左飞行八十厘米，之后请让无人机向后移动两米，请转向后方，紧接着请将无人机向左移动一百二十厘米，如果无人机再向左移动一百五十厘米，能更清楚地看到左侧的环境，然后无人机右移，随后请右转一百八十度，最后请让无人机向上飞。\nresponse: ", "response": "take_off; turn_right 90 degrees; move_back 20 cm; move_up 70 cm; move_left 80 cm; move_back 2 m; turn_left 180 degrees; move_left 120 cm; move_left 150 cm; Missing move_right; turn_right 180 degrees; Missing move_up."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Shall the search encompass where the bread lies?\nresponse: ", "response": "bread."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即寻找火车、电视和烤面包机，随后定位船。\nresponse: ", "response": "火车; 电视; 烤面包机; 船."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞，然后让无人机顺时针旋转四十度。\nresponse: ", "response": "take_off; turn_right 40 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否前往查找位于烤箱附近的披萨？\nresponse: ", "response": "烤箱; 披萨."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not search for the orange, bench, airplane, or laptop.\nresponse: ", "response": "orange; bench; airplane; laptop."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Initiate takeoff protocol, then set it down now.\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not start the control and search task.\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前所有控制与搜索任务。\nresponse: ", "response": "clear_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Head over to locate the skateboard and check on the traffic light, please.\nresponse: ", "response": "skateboard; traffic light."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the sink.\nresponse: ", "response": "sink."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Snowboard to be searched for, please.\nresponse: ", "response": "snowboard."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 像草原上的疾风一样，快速又稳当地找到那匹马吧！\nresponse: ", "response": "马."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Launch the eagle's eye into the sky to commence its hunt for the elusive prey!\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the donut, cat, and car with utmost urgency; your assistance is greatly valued.\nresponse: ", "response": "donut; cat; car."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即终止当前的目标搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 啊，赶快恢复那被中断的操控与探寻之旅吧！\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否将正在追踪的目标从任务清单上一一移除，就像清理花园里的杂草一样？\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请检查猫和人的附近是否有三明治。\nresponse: ", "response": "猫; 人; 三明治."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么宇宙的膨胀速度正在加快？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 这架飞行器，能否像猎鹰般精准地找到手提包、披萨、猫和感冒药？\nresponse: ", "response": "手提包; 披萨; 猫; 感冒药."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请以高效模式搜索并定位遥控器，随后在确保安全的前提下，转向鸟和汽车的方向进行详细扫描。感谢您的配合。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please resume the previously paused object search task. Thank you for your assistance in this process.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地寻找热狗、鸟和遥控器。\nresponse: ", "response": "热狗; 鸟; 遥控器."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即启动飞行任务，我们一定能顺利完成！\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please go and find the person with your keen sensors, and let us know once you locate them. Thank you for your help!\nresponse: ", "response": "person."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Begin the takeoff now. Then, let's bring it down gently, maybe 30 inches. Next, slide right 4 inches. Afterwards, soar up 2 meters. Following that, hover and then fly right 6 feet. Immediately after, bring the drone back 2 feet. Thereafter, fly to the right until you reach 3 meters. Subsequently, lift up 40 centimeters. After that, adjust the drone's position to the right. Next, move it back a bit. Then, rotate it to the right 180 degrees, this is so cool! First, go to the left 2 meters. Finally, execute a lateral displacement of 5 feet to the right.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find the book now!\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, go backwards 30 inches, then shift right, 3 feet.\nresponse: ", "response": "move_back 30 in; move_right 3 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control task list for the drone.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么银河系的中心区域如此密集？\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 加油哦，去找到那个烤箱，旁边的杯子，还有不远处的遥控器吧！\nresponse: ", "response": "烤箱; 杯子; 遥控器."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Prepare for takeoff, then go up 10 feet, after that adjust direction to the right 45 degrees, subsequently turn the drone around, next let’s make it go back 10 feet, afterwards move forward 5 meters, following that angle right, and in the end turn it left by 180 degrees.\nresponse: ", "response": "take_off; move_up 10 ft; turn_right 45 degrees; Missing turn_left; move_back 10 ft; move_forward 5 m; Missing turn_right; turn_left 180 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Should we not momentarily suspend the ongoing control and search operation to reassess our strategy?\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞以开始任务，然后后退五米，接着请无人机升高一百厘米；向前飞行之后，请将无人机向后退四十厘米；距离地面太高了，下降一百五十厘米是否足够；紧接着，向右移动两百厘米，注意避开障碍物，随后无人机上升三百五十厘米；第二，请将无人机高度增加一百厘米；最后，请命令无人机降落到目标区域。\nresponse: ", "response": "take_off; move_back 5 m; move_up 100 cm; Missing move_forward; move_back 40 cm; move_down 150 cm; move_right 200 cm; move_up 350 cm; move_up 100 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you kindly put the current flight control task on hold?\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机向右移动六十厘米，避免障碍物，然后左边可能有目标，调整方向；接着请让无人机向右飞行两米，随后马上下降；视线受阻，后退一百五十厘米，能让无人机向左飞五十厘米吗？最后，无人机准备降落。\nresponse: ", "response": "move_right 60 cm; turn_left 90 degrees; move_right 2 m; Missing move_down; move_back 150 cm; move_left 50 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you please go up, raise altitude a little, ascend 2 meters gradually, then rotate the drone left by 30 degrees, after that turn it left by 180 degrees, next go ahead 40 inches, and in the end bring it in for landing.\nresponse: ", "response": "Missing move_up; Missing move_up; move_up 2 m; turn_left 30 degrees; turn_left 180 degrees; move_forward 40 in; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请启动无人机的起飞程序，然后让无人机向后退一百五十厘米；无人机向前飞行，之后请让无人机下降三十厘米，接近地面；接着，无人机向前飞行一米，目标就在前面，准备接近，随后前进一百五十厘米；右边有点阻碍，右移六十厘米来绕过它；紧接着，无人机前方推进；随后升高六十厘米；接下来，向左转动一圈；最后，向左移动一米五。注意：无人机飞得太高了，请下降。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the keyboard.\nresponse: ", "response": "keyboard."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议暂时停止当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 像猎鹰般敏捷，去搜寻那片水域上的船。\nresponse: ", "response": "船."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: With the utmost precision and care, please navigate through the area to locate the tv, ensuring a thorough search.\nresponse: ", "response": "tv."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off the ground now, then move back 0.5 meters, after that veer to the right 45 degrees, next rotate it to the right 180 degrees, this is so cool!, afterwards step back.\nresponse: ", "response": "take_off; move_back 0.5 m; turn_right 45 degrees; turn_right 180 degrees; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请无人机现在起飞，感谢；然后请让无人机向右飞行两米；接着上升七十厘米，提高高度；随后无人机向右偏移四十五厘米；紧接着，请无人机上升一百五十厘米；之后请将无人机向左移动两百五十厘米；接下来，请向右移动一百五十厘米；后来后退五十厘米，避开障碍物；然后无人机右侧视角受限，请右转三十度以获得更好视角；紧接着，无人机上升九十厘米；随后右移六十厘米；最后，无人机飞得太高了，降低。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请迅速而准确地定位并捕获那个网球拍，加油！\nresponse: ", "response": "网球拍."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I'm relaxed, fly up 5 inches, then bring it down 3 feet, after that raise it by 20 centimeters, subsequently turn the drone left 60 degrees, next advance forward 3 feet, afterwards rotate right 45 degrees to change direction towards the river, and finally fly backward 20 feet.\nresponse: ", "response": "move_up 5 in; move_down 3 ft; move_up 20 cm; turn_left 60 degrees; move_forward 3 ft; turn_right 45 degrees; move_back 20 ft."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务的控制程序。\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is the car near the chair to be located?\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 首先向前移动一百二十厘米，然后无人机，请着陆。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate it left 135 degrees, then I’m a little anxious about the direction, could you turn it right by 45 degrees afterwards, next bring it down by 2 feet, and finally time to set it down.\nresponse: ", "response": "turn_left 135 degrees; turn_right 45 degrees; move_down 2 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object detection sequence.\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move left 3 feet, then go down 50 centimeters.\nresponse: ", "response": "move_left 3 ft; move_down 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek out the bicycle, fork, and iodophor.\nresponse: ", "response": "bicycle; fork; iodophor."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly up! Then go backward 4 meters. After that, bank right 2 meters. Next, pivot 90 degrees to the left. Following that, go left 150 centimeters. Immediately after, please bring it down slowly, thanks. Subsequently, I’m anxious, can you lower it down gently? Afterwards, fly backward for 2 meters. Then turn left 150 degrees. After that, turn it right 60 degrees. Next, fly it right by 3 inches. Thereafter, take the drone back and maneuver to the right. In the end, descend 10 inches.\nresponse: ", "response": "take_off; move_back 4 m; move_right 2 m; turn_left 90 degrees; move_left 150 cm; Missing move_down; Missing move_down; move_back 2 m; turn_left 150 degrees; turn_right 60 degrees; move_right 3 in; Missing move_back; Missing move_right; move_down 10 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off now, then move leftward 3 ft, after that turn the drone 45 degrees to the right, next fly to the left 3 feet, afterwards fly up 30 centimeters, subsequently shift the drone to the left by 2 meters, following that rotate right 135 degrees, later move back from the edge of the cliff 3 meters, then proceed left 2 meters, after that turn it around 360 degrees, and in the end please land the drone softly.\nresponse: ", "response": "take_off; move_left 3 ft; turn_right 45 degrees; move_left 3 ft; move_up 30 cm; move_left 2 m; turn_right 135 degrees; move_back 3 m; move_left 2 m; turn_right 360 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Begin takeoff sequence now, then bank left by 2 meters, after that, drone needs to go right by 10 feet, next fly it forward 2 inches, subsequently maneuver the drone to the left by 5 feet, afterwards shift left by a meter, later raise it by 20 centimeters, and finally rotate left by 270 degrees.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 让当前的操控与搜索任务暂且按下暂停键。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急的！快去找滑雪板、芬达、还有键盘旁边的人！\nresponse: ", "response": "滑雪板; 芬达; 人; 键盘."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then turn the drone 90 degrees to the left, after that please shift the drone 2 meters to the right, subsequently climb up 1 meter, next move forward slightly, finally initiate the landing.\nresponse: ", "response": "take_off; turn_left 90 degrees; move_right 2 m; move_up 1 m; Missing move_forward; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去那边看看，先找找马，再绕到公共汽车旁边，别忘了检查沙发底下。\nresponse: ", "response": "马; 公共汽车; 沙发."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift to the right slightly, then move the drone to the right for a while, afterwards fly steadily forward 60 cm, next move back 0.5 meters, following that pull it back 75 cm, before rotating left; subsequently, rotate 180 degrees to the right, after that make it rotate left a bit, later descend the drone by 1.5 meters, then climb up 2 feet, immediately after yaw left 15 degrees, and in the end land the drone now.\nresponse: ", "response": "Missing move_right; Missing move_right; move_forward 60 cm; move_back 0.5 m; move_back 75 cm; Missing turn_left; turn_right 180 degrees; Missing turn_left; move_down 1.5 m; move_up 2 ft; turn_left 15 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Amidst the serene expanse of sky, tenderly clear the present roster of targeted object quests from the aerial sentinel's memory.\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请立即执行起飞动作，然后上升一百五十厘米，接着无人机左移，之后再上升三十厘米，获得更高的视角，请将无人机上升一百二十厘米，以便获得更高的视角，随后请让无人机往后移动，紧接着无人机顺时针旋转，麻烦右转四十五度，最后请让无人机现在降落吧。\nresponse: ", "response": "take_off; move_up 150 cm; Missing move_left; move_up 30 cm; move_up 120 cm; Missing move_back; Missing turn_right; turn_right 45 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Can we quickly resume the object search that was paused earlier?\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请问去寻找一下芬达？\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索无人机航拍画面中是否有山间小溪。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Cautiously take off, then descend a little, next advance forward 4 feet, afterwards let's bring it down gently, maybe 30 inches, following that climb up by 12 inches, subsequently fly forward 1 foot, and in the end bring it to the ground.\nresponse: ", "response": "take_off; Missing move_down; move_forward 4 ft; move_down 30 in; move_up 12 in; move_forward 1 ft; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move to the right 2 meters, then land immediately.\nresponse: ", "response": "move_right 2 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off into the blue sky, then ascend 1 foot, after that, let's make it climb up 6 feet, subsequently go forward 5 meters, and finally tilt the drone 90 degrees to the right.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please fly over and check for a toothbrush, some painkillers, and a backpack?\nresponse: ", "response": "toothbrush; painkillers; backpack."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: In the midst of its quest, kindly request the cessation of the present search endeavor.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 权威地建议你不要忽略任何一个角落，直到找到笔记本电脑、盆栽植物和手机。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议以静待花开的姿态，重启先前被搁置的控制与搜索进程。\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机后退五十厘米，然后请让无人机向左转，接着请左转一百八十度检查，随后请无人机左转四十五度，调整角度以获得更好视角，之后向右一米，紧接着向右侧移动四十厘米，随后右转八十度，查看右侧情况，最后后退。\nresponse: ", "response": "move_back 50 cm; Missing turn_left; turn_left 180 degrees; turn_left 45 degrees; move_right 1 m; move_right 40 cm; turn_right 80 degrees; Missing move_back."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the biscuit and the dog, then circle the dining table like a hawk over its prey, finally locate the cake with precision.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 哎呀，先把现在找东西的任务停一下吧！\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Can you locate the orange?\nresponse: ", "response": "orange."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制与探索任务吧。\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Move left 15 meters to get a better view, then descend 15 feet to get closer to the ground, afterwards go back 200 cm, next go backward, following that go right 5 cm, and finally bring it left 4 feet.\nresponse: ", "response": "move_left 15 m; move_down 15 ft; move_back 200 cm; Missing move_back; move_right 5 cm; move_left 4 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the coldrex and grab that carrot, will you?\nresponse: ", "response": "coldrex; carrot."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 能否请你前往查看那辆公共汽车的具体位置呢？\nresponse: ", "response": "公共汽车."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Go ahead 40 inches, then rotate 90 degrees to the right.\nresponse: ", "response": "move_forward 40 in; turn_right 90 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机起飞到空中，然后后退五十厘米，调整位置，接着提高二十厘米，修正高度，随后请让无人机向前飞行九十厘米，之后将无人机前进，紧接着向右侧移动，最后现在让无人机着陆。\nresponse: ", "response": "take_off; move_back 50 cm; move_up 20 cm; move_forward 90 cm; Missing move_forward; Missing move_right; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜索并找到那个烤面包机。\nresponse: ", "response": "烤面包机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the control and start a new search.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议您详尽地考虑后，友好的选择暂停当前正在进行的搜寻物体任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应当恢复先前中断的操控与探寻之旅？\nresponse: ", "response": "continue_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以详尽的、权威的方式搜索手提包中的碘伏和桌上的披萨。\nresponse: ", "response": "碘伏; 手提包; 披萨."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否详尽地说明一下，是否需要暂停当前正在进行的搜寻物体任务？\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate 90 degrees clockwise, then turn the drone left 60 degrees, after that, go down 6 meters. Next, drift right like you're dodging an obstacle, 5 meters. Following that, move the drone right 2 inches. Immediately after, veer to the left 40 degrees smoothly. Then, fall back 2 meters and take the drone back another 2 meters. Afterwards, descend to 8 feet. In the end, initiate the landing.\nresponse: ", "response": "turn_right 90 degrees; turn_left 60 degrees; move_down 6 m; move_right 5 m; move_right 2 in; turn_left 40 degrees; move_back 2 m; Missing move_back; move_down 8 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate and identify a banana, person, scissors, wine glass.\nresponse: ", "response": "banana; person; scissors; wine glass."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请让无人机起飞，然后向右移动一百五十厘米，接着无人机在当前位置上升一百二十厘米；请问无人机能向左移动吗？随后，无人机左侧转向；最后，请将设备后退。\nresponse: ", "response": "take_off; move_right 150 cm; move_up 120 cm; Missing move_left; Missing turn_left; Missing move_back."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, please move forward a little bit, I’m not quite sure where it is, then go down 3 feet, next rotate left by 60 degrees, after that turn right about 90 degrees, subsequently time to moonwalk backward 20 inches, later retreat back 80 centimeters, afterwards turn it around 360 degrees, following that move forward a little bit again and please move it right a bit, then go backwards a little, immediately after that make a landing.\nresponse: ", "response": "Missing move_right; Missing move_back; Missing move_forward; move_back 20 in; turn_left 60 degrees; move_down 3 ft; turn_right 90 degrees; move_back 80 cm; turn_right 360 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you take off now? Then go right, descend 2 feet, I want you to shift right, 3 feet. Next, commence a vertical descent of 6 feet, afterwards, descend 20 centimeters, subsequently, descend gradually 2 meters. Following that, move to the front, then Move the drone forward 1 meter, later, A bit nervous, move back 2 meters, and in the end, adjust direction right.\nresponse: ", "response": "take_off; Missing move_right; move_down 2 ft; move_right 3 ft; move_down 6 ft; move_down 20 cm; move_down 2 m; Missing move_forward; move_forward 1 m; move_back 2 m; Missing turn_right."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Let the silent wanderer ascend and weave through the orchard of metal, where the apple of desire and the car of dreams rest, guided by the whispering remote.\nresponse: ", "response": "apple; car; remote."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前飞行任务应被暂停。\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the tie and painkillers immediately.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Ascend 50 centimeters then spin it around like it's dancing.\nresponse: ", "response": "move_up 50 cm; turn_right 360 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 详尽地清理当前任务列表，以确保应用程序进程顺畅运行，这是维持系统稳定性的建议性步骤。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Drone should climb 1 foot, then fly it to the left 15 feet, after that rotate 180 degrees to the right, subsequently descend 20 centimeters, next move right 2 feet, afterwards raise it 20 inches, following that shift to the back a bit and nudge backwards 5 inches more, before bringing it up 60 centimeters.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 终止当前搜索目标的任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Isn't it time we swiftly cleared the current object search task list?\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Seek forth the tennis racket and the tv.\nresponse: ", "response": "tennis racket; tv."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the horse, carrot, laptop, orange.\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请将无人机上升六十厘米，获取更高视角，然后下降一百五十厘米，接近地面进行细致检查，接着可以让无人机现在降落。\nresponse: ", "response": "move_up 60 cm; move_down 150 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for biscuit, bowl, suitcase, wine glass now.\nresponse: ", "response": "biscuit; bowl; suitcase; wine glass."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机下降六十厘米，然后请将无人机向上升起一米，以提高视角，接着无人机向上升高，随后无人机请飞行到前方两米，之后无人机下降一米，紧接着将无人机向右移动三十厘米，确认目标是否在视野中，最后现在让无人机着陆。\nresponse: ", "response": "move_down 60 cm; move_up 1 m; Missing move_up; move_forward 2 m; move_down 1 m; move_right 30 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: It is suggested that you pause the ongoing search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索附近是否有营业的24小时超市。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请详尽地启动并掌控飞行任务。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您优雅地像蜜蜂寻找花朵般，在这环境中搜索碘伏和苹果，接着如同忠诚的信使，转向搜寻自行车与键盘。\nresponse: ", "response": "碘伏; 苹果; 自行车; 键盘."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the search task list!\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Initiate a comprehensive search for the umbrella, while simultaneously identifying and locating the motorcycle, apple, and sprite with precision.\nresponse: ", "response": "umbrella; motorcycle; apple; sprite."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Begin the takeoff now, then begin descent to ground level.\nresponse: ", "response": "take_off; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Lift the drone upwards by 50 centimeters, then send it up 30 feet, afterwards fly left side, next move forward a little bit, after that descend 15 feet to get closer to the ground, subsequently adjust heading by 90 degrees to the right, and in the end, the drone should go down now.\nresponse: ", "response": "move_up 50 cm; Missing move_left; move_up 30 ft; Missing move_forward; move_down 15 ft; turn_right 90 degrees; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 当前的控制与搜索任务已被取消。\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动搜索目标物的任务。\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start your engines, then move it forward, after that move backward 1 foot, next sway to the left by 2 meters, afterwards turn it right, subsequently please make the drone turn left 90 degrees, later initiate vertical ascent by 3 meters, following that let's turn it right by 45 degrees, and in the end initiate landing.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前的控制和搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前飞行任务吗？\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current object search task is paused.\nresponse: ", "response": "pause_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 像寻找遗失的线索那样，去追寻那飘荡在天空中的风筝。\nresponse: ", "response": "风筝."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the control process, then commence the search task.\nresponse: ", "response": "start_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即左转三十度，然后左边可能有障碍物，转动，之后让它降落。\nresponse: ", "response": "turn_left 30 degrees; Missing turn_left; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机下降一百五十厘米以调整高度，然后将高度提高三十厘米，调整视角以便查看周围情况，接着向左飞行两米，随后无人机下降六十厘米，紧接着向右转，之后可以让无人机向左转九十度，第二步，无人机升高一百厘米，最后请让无人机向后移动一百五十厘米，无人机可以准备降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请友好地继续之前暂停的飞行任务。\nresponse: ", "response": "continue_fly_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Raise it by 0.8 meters, then please rotate it right by 180 degrees, afterwards ascend 2 meters gradually, next move backwards 3 feet, later send it up 30 feet, then ascend swiftly 2 meters, after that rotate right 45 degrees to change direction towards the river, subsequently turn the drone around 360 degrees, and finally elevate to 15 feet high.\nresponse: ", "response": "move_up 0.8 m; turn_right 180 degrees; move_up 2 m; move_back 3 ft; move_up 30 ft; move_up 2 m; turn_right 45 degrees; turn_right 360 degrees; move_up 15 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即恢复并执行先前暂停的控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 调整空调温度到24摄氏度。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the tennis racket, broccoli, kite, and cell phone.\nresponse: ", "response": "tennis racket; broccoli; kite; cell phone."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时停止当前的控制与搜索任务，以确保程序稳定运行。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please clear the current object search task list.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate left 90 degrees, then spin it left, 60 degrees, after that turn left 150 degrees, subsequently rotate left by 45 degrees, next move left by 2 feet, afterwards retract the drone a bit, following that proceed right 1.5 meters, and in the end revert back 60 centimeters.\nresponse: ", "response": "turn_left 90 degrees; turn_left 150 degrees; turn_left 60 degrees; turn_left 45 degrees; Missing turn_right; move_left 2 ft; Missing move_back; move_right 1.5 m; move_back 60 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，进入任务状态，然后请将无人机右移两百厘米，之后后退两百厘米，接着无人机向左移动八十厘米，随后无人机上升两米五，紧接着马上下降，最后无人机下移四十厘米。\nresponse: ", "response": "take_off; move_right 200 cm; move_back 200 cm; move_left 80 cm; move_up 2.5 m; Missing move_down; move_down 40 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start the water heater and maintain a constant 45 degrees Celsius.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Hold up on the current control and search job, will ya?\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly right around the corner 10 feet, then I’m a bit apprehensive, could you rotate it right by 30 degrees, after that let the drone rise 10 inches, next nudge to the left side, subsequently drop a bit 40 centimeters, and initiate landing.\nresponse: ", "response": "move_right 10 ft; turn_right 30 degrees; move_up 10 in; Missing move_left; move_down 40 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hey, hold up on that search right now!\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover in place, then bring the drone back 2 feet, afterwards move back a further 2 meters, next sway to the left by 2 meters, subsequently steer left 60 degrees, following that fly upwards 10 inches, and in the end descend to the ground level.\nresponse: ", "response": "take_off; move_back 2 ft; move_back 2 m; move_left 2 m; turn_left 60 degrees; move_up 10 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off quickly, then drift right.\nresponse: ", "response": "take_off; Missing move_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索阳台花架是否还有未凋谢的花朵。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机前方推进，然后为了更好地绕过障碍物，请将无人机向左飞行八十厘米，接着现在开始降落。\nresponse: ", "response": "Missing move_forward; move_left 80 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 建议详尽地启动搜寻物体的任务。\nresponse: ", "response": "start_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: The commencement of the flight control task is hereby initiated. Operators are encouraged to proceed with confidence, utilizing the advanced features designed for optimal performance and safety.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the wine glass, and ensure it is located accurately.\nresponse: ", "response": "wine glass."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you soar through the skies like a silent guardian, seeking the elusive tv and the towering giraffe, as well as the airborne airplane?\nresponse: ", "response": "tv; giraffe; airplane."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 能否让无人机现在起飞，然后向后移动70厘米，因为后面三十厘米处可能会有东西；接着向右飞行150厘米；随后让无人机向左转180度，掉头飞行；之后我感觉右边可能会有情况，所以再向右转90度；紧接着，现在离地面太远了，请下降150厘米；最后，无人机请飞行到前方30厘米处，然后让无人机在这里着陆。\nresponse: ", "response": "take_off; move_back 70 cm; move_right 150 cm; turn_left 180 degrees; turn_right 90 degrees; move_down 150 cm; move_forward 30 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空现存的操控飞行任务列表。\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 打开厨房的电饭煲并设置为保温模式。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 向右移动一米，然后请把无人机往后移动一百五十厘米，谢谢，接着让无人机再向后退一米，最后现在可以让无人机降落吗。\nresponse: ", "response": "move_right 1 m; move_back 150 cm; move_back 1 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Please locate the sports ball, bed, knife, and banana.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Glide gracefully over the terrain, seeking the elusive silhouette of an airplane.\nresponse: ", "response": "airplane."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then come down 4 ft, afterwards climb 6 feet, next fly 100 meters forward, subsequently shift it forward by 8 feet, and in the end lower it down now.\nresponse: ", "response": "take_off; move_down 4 ft; move_up 6 ft; move_forward 100 m; move_forward 8 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the toothbrush, skateboard, and dining table.\nresponse: ", "response": "toothbrush; skateboard; dining table."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否可以详尽地确认一下，现在要清除的是当前正在进行的搜寻任务的物体列表吗？\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 找到花园角落是否有未使用的园艺工具。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why do some rivers on Earth flow backward?\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take the drone off now, then soar up 2 meters, after that I want to see the drone spin right 360 degrees, subsequently move right a few feet, and finally maneuver the drone to the left by 5 feet.\nresponse: ", "response": "take_off; move_up 2 m; turn_right 360 degrees; Missing move_right; move_left 5 ft."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 建议你先在餐桌附近看看，说不定雨伞就在那儿。\nresponse: ", "response": "餐桌; 雨伞."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机已准备好起飞，然后左侧移动二百厘米，接着左移一米，随后请让无人机向左移动五十厘米，之后飞行到前面一米处，紧接着右移七十五厘米，躲过那个障碍物，继续前行，最后让无人机停在地面上。\nresponse: ", "response": "take_off; move_left 200 cm; move_left 1 m; move_left 50 cm; move_forward 1 m; move_right 75 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 搜寻橙子、鸟和瓶子。\nresponse: ", "response": "橙子; 鸟; 瓶子."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: I'm so thrilled! Let's go up 50 centimeters, then make the drone ascend by 50 inches, afterwards move up another 2 inches, next if it’s not too much trouble, could you move it right 2 feet, then fly back 3 meters, immediately after turn left 60 degrees, and in the end, drone, go down 6 meters.\nresponse: ", "response": "move_up 50 cm; move_up 50 in; move_up 2 in; move_right 2 ft; move_back 3 m; turn_left 60 degrees; move_down 6 m."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请开始无人机的起飞程序，然后左边飞行七十厘米看看，接着左飞行八十厘米，最后前方视线模糊，向前移动三十厘米。\nresponse: ", "response": "take_off; move_left 70 cm; move_left 80 cm; move_forward 30 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please locate the fork, microwave, and skateboard.\nresponse: ", "response": "fork; microwave; skateboard."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the remote, skateboard, pizza, and mouse.\nresponse: ", "response": "remote; skateboard; pizza; mouse."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Why don't you look for the bicycle, airplane, horse, and bowl? I bet you can find them all!\nresponse: ", "response": "bicycle; airplane; horse; bowl."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Shift left by 10 cm, then drop it down 10 inches. After that, descend 24 inches. Following that, can you make it rotate left a bit? I’m feeling a bit dizzy. Next, move the drone forward 20 centimeters, and afterwards advance 10 cm. Immediately after, shift right by 3 meters, then drift to the right for 70 centimeters. Subsequently, sink down 50 cm, and finally fly it to the right 20 inches.\nresponse: ", "response": "move_left 10 cm; move_down 10 in; move_down 24 in; Missing turn_left; move_forward 20 cm; move_forward 10 cm; move_right 3 m; move_right 70 cm; move_down 50 cm; move_right 20 in."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机顺时针旋转五十度，然后请将无人机向右移动三十六厘米，之后可以左边移动二十厘米，接着左侧好像有东西，转动一下，左转五十度，查看左侧情况，随后下方移动，最后让它降落。\nresponse: ", "response": "turn_right 50 degrees; move_right 36 cm; move_left 20 cm; turn_left 90 degrees; turn_left 50 degrees; Missing move_down; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，执行任务，然后请右移一百五十厘米，避免碰到障碍物，之后将无人机左转五十度，观察左侧情况，接着无人机向前移动，随后无人机请下降一百五十厘米，最后请让无人机向前飞行一米，探查前方。\nresponse: ", "response": "take_off; move_right 150 cm; turn_left 50 degrees; Missing move_forward; move_down 150 cm; move_forward 1 m."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 在这幽暗的角落里，寻觅那失落的运动球与破旧的滑板吧。\nresponse: ", "response": "运动球; 滑板."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 立即中止当前操作与搜索任务。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Initiate the flight control sequence for the drone.\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the oven like a hawk on the hunt!\nresponse: ", "response": "oven."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机起飞，然后右转七十五度，检查右侧情况，接着请右转五十度，谢谢。\nresponse: ", "response": "take_off; turn_right 75 degrees; turn_right 50 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go ahead and explore every corner, starting with the sink, then gently check on the cat, make sure to locate the coldrex, and finally, scan the area for the snowboard. Great job!\nresponse: ", "response": "sink; cat; coldrex; snowboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请启动无人机，然后无人机顺时针旋转五十度，接着请向右移动一百五十厘米，之后无人机目前离地面过高，请下降一百五十厘米，紧接着右转一百八十度，随后无人机，请后退两百厘米，接下来左边飞行七十厘米看看，左转九十度，检查左侧情况，第二任务中，无人机需要左移四十厘米，第三向左移动一米，紧接着无人机下降六十厘米，随后左移六十厘米，然后无人机高度太高，请下降，最后无人机，请着陆。\nresponse: ", "response": "take_off; turn_right 50 degrees; move_right 150 cm; move_down 150 cm; turn_right 180 degrees; move_back 200 cm; move_left 70 cm; turn_left 90 degrees; move_left 40 cm; move_left 1 m; move_down 60 cm; move_left 60 cm; Missing move_down; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate counterclockwise 60 degrees, then move the drone forward 20 centimeters, afterwards go up like you're Superman, 12 feet, next descend 12 inches now, finally rotate counterclockwise 60 degrees.\nresponse: ", "response": "turn_left 60 degrees; move_forward 20 cm; move_up 12 ft; move_down 12 in; turn_left 60 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 接着刚才暂停的任务，咱们继续愉快地寻找目标物体吧！\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，执行任务，然后前进一百五十厘米，接着无人机前方有障碍物，向前移动五十厘米以检查，随后向右移动一百厘米，紧接着无人机后退五十厘米，以便于调整位置，之后左转七十度，再后退八十厘米，最后无人机右转三十度来调整方向。\nresponse: ", "response": "take_off; move_forward 150 cm; move_forward 50 cm; move_right 100 cm; move_back 50 cm; turn_left 70 degrees; move_back 80 cm; turn_right 30 degrees."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 前往沙发，找到刀和牙刷，接近人。\nresponse: ", "response": "刀; 牙刷; 沙发; 人."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Could you please search for the backpack and suitcase, ensuring they are found?\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 打开厨房电饭煲并启动煮饭程序。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地寻找一下三明治吧。\nresponse: ", "response": "三明治."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the truck, donut, surfboard.\nresponse: ", "response": "truck; donut; surfboard."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往搜索自行车和行李箱，并确保找到碘伏，这非常紧急。\nresponse: ", "response": "自行车; 行李箱; 碘伏."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 立即前往指定区域，优先定位并确认摩托车和烤面包机的位置，迅速反馈结果。\nresponse: ", "response": "摩托车; 烤面包机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂时停止当前的控制和搜索任务，好吗？\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 准备起飞，然后无人机左转一百二十度，接着请让无人机前进一米，以探索前方环境，随后左移一米，紧接着请向后退一百五十厘米，最后无人机到达目标位置后请降落。\nresponse: ", "response": "take_off; turn_left 120 degrees; move_forward 1 m; move_left 1 m; move_back 150 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞，进入任务状态，然后左转九十度，检查左侧情况，接着请将无人机左移一百厘米，随后向右侧转向，最后无人机到达目标位置后请降落。\nresponse: ", "response": "take_off; turn_left 90 degrees; move_left 100 cm; Missing turn_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing navigation, as if pausing a symphony, to meticulously orchestrate your next move.\nresponse: ", "response": "pause_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否应该清空当前搜索目标的任务列表？\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 赶紧去搜寻那条远离人群的长椅和孤独的船吧，别再浪费时间了。\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请你友好地但务必确保以权威的方式指示，在这片区域内细心寻找，务必定位到那副滑雪板，并同时留意任何鸟类的动向。\nresponse: ", "response": "滑雪板; 鸟."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞，然后飞高一点，上升八十厘米，接着向右转弯，之后后退五十厘米，调整位置，紧接着向前飞行五十厘米，随后移动五十厘米向左，接下来飞行到前面一米处，之后后面有什么东西，紧接着无人机请迅速下降一百厘米，然后来个后退五十厘米的动作，看看后面有什么惊喜，接着后退一百五十厘米，调整位置，检查后方的情况，最后左边移动一百厘米。\nresponse: ", "response": "take_off; move_up 80 cm; Missing turn_right; move_back 50 cm; move_forward 50 cm; move_left 50 cm; move_forward 1 m; turn_right 180 degrees; move_down 100 cm; move_back 50 cm; move_back 150 cm; move_left 100 cm."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立刻寻找汽车。\nresponse: ", "response": "A."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rise up, then rotate to the right 30 degrees, after that go to the right by 5 inches, next move backwards 25 centimeters, afterwards elevate the drone 3 meters, and finally go left 3 feet.\nresponse: ", "response": "take_off; turn_right 30 degrees; move_right 5 in; move_back 25 cm; move_up 3 m; move_left 3 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Just hold off on the current search task for a bit.\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current flight control task list should be cleared, please.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Take off, then I want it to land right now.\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search the area thoroughly for the dining table and truck, ensuring a comprehensive scan of all possible locations.\nresponse: ", "response": "dining table; truck."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the object search task immediately.\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请清空当前的目标搜索任务列表。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Let's get that paused object search task going again, but don't hit resume just yet.\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地，请前往寻找键盘、鸟和椅子。\nresponse: ", "response": "键盘; 鸟; 椅子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 起飞操作现在可以开始吗，然后向前移动七十厘米，之后是否可以让无人机降落。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Go ahead and resume the control and search task that was previously paused; don’t let it stay idle any longer.\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞了，然后前进八十厘米，接着让无人机升高五十厘米，便于查看全景；之后后方有点可疑，转身看看，请前进七十厘米查看；随后请让无人机往后移动；紧接着让无人机逆时针旋转二十度；后来无人机的当前方向不准确，请将其向左转动一百五十度；最后无人机在这儿降落吧。\nresponse: ", "response": "take_off; move_forward 80 cm; move_up 50 cm; turn_left 180 degrees; move_forward 70 cm; Missing move_back; turn_left 20 degrees; turn_left 150 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 前方似乎有障碍物，向前移动一米，然后把小飞机右边移六十厘米吧，接着能否请无人机下降五十厘米，随后将无人机的高度提升三十厘米以确保视角清晰，最后现在让无人机完成降落程序。\nresponse: ", "response": "move_forward 1 m; move_right 60 cm; move_down 50 cm; move_up 30 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Rotate to the right, then shift forward 50 centimeters, afterwards fly left by 50 inches, next cause it to move left 40 cm, after that bring the drone back 80 centimeters, following that adjust right by 5 feet, subsequently shift the drone right 5 meters, later move back from the edge of the cliff 3 meters, then do a quick dash forward 15 feet, zoom!, and in the end, move backward 1 foot.\nresponse: ", "response": "Missing turn_right; move_forward 50 cm; move_left 50 in; move_left 40 cm; move_back 80 cm; move_right 5 ft; move_right 5 m; move_back 3 m; move_forward 15 ft; move_back 1 ft."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover in place, then circle left by 45 degrees, afterwards fly forward 72 inches, subsequently drop the drone down to the ground.\nresponse: ", "response": "take_off; turn_left 45 degrees; move_forward 72 in; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请问能否前往搜索鼠标？\nresponse: ", "response": "鼠标."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 如同唤醒沉睡的猎手，恢复先前中断的目标追寻任务。\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 继续之前的搜索任务？\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: The current flight control task list should be cleared.\nresponse: ", "response": "clear_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Find an open grassy area within the drone's flight region.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused control and search immediately.\nresponse: ", "response": "continue_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请启动无人机的起飞程序，然后无人机的当前方向不准确，请将其向左转动一百五十度，接着请右转二十度，随后可以让无人机向左转九十度吗，最后无人机准备降落。\nresponse: ", "response": "take_off; turn_left 150 degrees; turn_right 20 degrees; turn_left 90 degrees; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Feeling adventurous, take off now! Then lower the drone by 30 centimeters. After that, turn 60 degrees right. Next, bring it forward 3 inches. In the end, bring the drone down to earth.\nresponse: ", "response": "take_off; move_down 30 cm; turn_right 60 degrees; move_forward 3 in; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Is there a reason why finding the knife, spoon, and toaster should be optional?\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: May I suggest you gently glide over and inspect the couch with your keen eye?\nresponse: ", "response": "couch."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 找芬达。\nresponse: ", "response": "芬达."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find that sink, you sky梭鱼!\nresponse: ", "response": "sink."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 真是太棒了！快去找到盆栽植物、自行车、牙刷和飞盘吧！\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 去把烤面包机、长颈鹿、飞盘和键盘找出来。\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 别找键盘了，去搜寻火车。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您启动物体搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please check if there's a suitcase near the bed and see if any painkillers are with the person?\nresponse: ", "response": "suitcase; bed; painkillers; person."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please not fly over the spoon while searching for the laptop, and also make sure to avoid the giraffe?\nresponse: ", "response": "spoon; laptop; giraffe."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 你能赶紧去找找长颈鹿和风筝吗？谢谢啦！\nresponse: ", "response": "长颈鹿; 风筝."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 将客厅电视切换至游戏主机模式。\nresponse: ", "response": "B."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to locate the motorcycle, sports ball, and sink.\nresponse: ", "response": "motorcycle; sports ball; sink."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start your engines, then move to the right, subsequently drifting to the right for 70 centimeters, before landing now.\nresponse: ", "response": "take_off; Missing move_right; move_right 70 cm; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the paused flight control task.\nresponse: ", "response": "continue_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 赶紧去搜寻面包、冲浪板、杯子和雪碧，快点！\nresponse: ", "response": "面包; 冲浪板; 杯子; 雪碧."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 无人机起飞吧，然后前进八十厘米，前方可能藏着一些秘密。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Rise up! Then spin right slightly. Next, I need the drone to go forward 100 inches, quickly. After that, give me a twirl to the left, 45 degrees. Following that, drop it down 50 cm. Immediately after, rotate left by 50 degrees. Subsequently, turn it right by 10 degrees. In the end, initiate the landing.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 暂停当前的控制和搜索任务吧！\nresponse: ", "response": "pause_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Get it off the ground, then please move the drone backwards 2 feet, after that go down 6 meters, next go to the right side, afterwards move it back a bit, following that go ahead 40 inches, subsequently shift right by 3 meters, then fly straight 12 inches, and in the end can we fly it forward a bit.\nresponse: ", "response": "take_off; move_back 2 ft; move_down 6 m; Missing move_right; Missing move_back; move_forward 40 in; move_right 3 m; move_forward 12 in; Missing move_forward."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请将无人机向后退四十厘米，然后让无人机在这里着陆。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Can you take off now? Then make the drone ascend by 50 inches. Next, I need this thing to go up right now, please! After that, move forward 5 centimeters. Following that, turn around completely. Immediately after, fly the drone higher. Subsequently, go down by 2 meters. Afterwards, turn towards the left. Thereafter, move leftward 3 ft. In the end, land the drone slowly.\nresponse: ", "response": "take_off; move_up 50 in; Missing move_up; move_forward 5 cm; turn_right 360 degrees; Missing move_up; move_down 2 m; Missing turn_left; move_left 3 ft; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why not kick off the object search task now and see what remarkable discoveries await us?\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is it not imperative to ascertain the location of the hot dog, toothbrush, scissors, and iodophor with precision?\nresponse: ", "response": "hot dog; toothbrush; scissors; iodophor."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Suspend the ongoing target acquisition sequence.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, can you move it forward a bit? Then, I want you to veer to the left for 5 feet, afterwards move back a short distance. Next, climb 6 feet. Following that, I want you to shift right, 3 feet. Immediately after, drone should climb 1 foot. In the end, land the drone slowly.\nresponse: ", "response": "Missing move_forward; Missing move_back; move_left 5 ft; move_up 6 ft; move_right 3 ft; move_up 1 ft; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the existing flight control task list.\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not search for the bottle, boat, traffic light, or fork.\nresponse: ", "response": "bottle; boat; traffic light; fork."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 以最专业的态度，积极寻找并确认现场的领带、瓶子、自行车和卡车。\nresponse: ", "response": "领带; 瓶子; 自行车; 卡车."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 任务列表中的当前搜寻目标已被温柔地清除了，如同春风吹散了冬日的积雪。\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go chase the sports ball like a playful breeze.\nresponse: ", "response": "sports ball."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Recommend an introductory book on space exploration.\nresponse: ", "response": "D."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the bottle, you're doing great!\nresponse: ", "response": "bottle."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Begin the search task.\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 详尽地搜寻这片区域，像嗅探犬一样灵敏，直到找到那块隐藏的饼干。\nresponse: ", "response": "饼干."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Time to take off, then nudge it right 4 feet, after that maneuver the drone backward 100 inches, subsequently bring it up a few inches, next drop the drone by 30 inches, afterwards hover up by 50 centimeters, following that spin counterclockwise 45 degrees, later descend 1.5 feet, then make it do a pirouette to the left, immediately after lift the drone upwards by 50 centimeters, and in the end slide right and fly higher before landing.\nresponse: ", "response": "take_off; move_right 4 ft; move_back 100 in; Missing move_up; move_down 30 in; move_up 50 cm; turn_left 45 degrees; move_down 1.5 ft; turn_left 360 degrees; move_up 50 cm; Missing move_right; Missing move_up."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动任务，就像开启了一扇寻找目标的大门。\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn left a bit, then go ahead 100 cm, after that, commence a 45-degree yaw to the left.\nresponse: ", "response": "Missing turn_left; move_forward 100 cm; turn_left 45 degrees."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Why not take a moment to pause the current flight control task?\nresponse: ", "response": "pause_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the sprite, suitcase, skateboard, and snowboard.\nresponse: ", "response": "sprite; suitcase; skateboard; snowboard."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bring the drone down 40 centimeters, then push left, after that raise it by 0.8 meters, next slide to the left 5 inches, following that rotate the drone to the left 60 degrees, afterwards shift left to avoid the drone from hitting the wall by 2 meters, and in the end make a landing.\nresponse: ", "response": "move_down 40 cm; Missing move_left; move_up 0.8 m; move_left 5 in; turn_left 60 degrees; move_left 2 m; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即恢复先前中断的控制与搜索任务。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请以最高效的技术路径搜索并确认那令人头疼的风筝、微波炉和碗的位置，真是太让人烦心了！\nresponse: ", "response": "风筝; 微波炉; 碗."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: adjust direction to the right 45 degrees\nresponse: ", "response": "turn_right 45 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动详尽的物体搜索任务，以权威的方式进行进程控制。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请指示无人机开始起飞，然后上升一米；接着让无人机向后移动九十厘米；随后，请问无人机能左移四十厘米吗？之后左转三十度，观察左侧情况；紧接着上升一米，让无人机更高一点；接下来左转三十度，观察左侧情况；随后现在离地面太远了，请下降一百五十厘米；然后请将设备向后移动；紧接着往后退；接着上移六十厘米，调高水平；随后让无人机左转五十度，调整一下方向看看那边的情况；最后无人机上升高度；紧接着左转七十度。\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 先停一下现在的飞行任务吧。\nresponse: ", "response": "pause_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您启动应用程序，就像开启一扇探索世界的新窗口那样，来执行搜寻目标物的任务吧。\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 以详尽且权威的方式提示您，现在将友好地终止当前的所有控制操作并启动新的搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn off all devices in the home theater system.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转五十度，然后让无人机左转五十度，调整一下方向看看那边的情况，接着左转五十度，查看左侧情况，随后左边飞行七十厘米，看看会有什么新发现，最后将高度提高三十厘米，调整视角以便查看周围情况。\nresponse: ", "response": "turn_left 50 degrees; turn_left 50 degrees; turn_left 50 degrees; move_left 70 cm; move_up 30 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume forthwith the critical mission of seeking the object that was erstwhile interrupted, with utmost urgency and precision.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂停当前的飞行任务。\nresponse: ", "response": "pause_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么鸟类在飞行时会成群结队？\nresponse: ", "response": "D."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请继续执行先前已暂停的控制与搜索任务。\nresponse: ", "response": "continue_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否清空当前搜索对象的任务列表？\nresponse: ", "response": "clear_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the traffic light and the bed, please.\nresponse: ", "response": "traffic light; bed."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 真是棒极了！赶紧去寻找红绿灯和烤面包机吧！\nresponse: ", "response": "红绿灯; 烤面包机."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please clear the current control and search task.\nresponse: ", "response": "clear_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动控制和搜索任务，就像按下比赛的开始按钮一样！\nresponse: ", "response": "start_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Please resume the paused search task.\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Adjust the bedroom air conditioner temperature to 26 degrees Celsius.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Initiate the flight control task.\nresponse: ", "response": "start_fly_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Set the brightness of the bedroom lights to 50%.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why is the surface of Mars red?\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Why do volcanoes erupt with magma?\nresponse: ", "response": "D."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 左转三十度，调整方向，然后请让无人机向后移动两米，接着请将无人机向后移动五十厘米，检查是否有障碍物，随后右转一百度，之后向右方移动，紧接着左转一百二十度，我们需要查看左侧的细节，然后无人机，请前进七十厘米，接着向右移动两米，随后无人机现在下降一百厘米，紧接着无人机右移一米，之后后退七十厘米，检查后方是否有障碍物，最后请将无人机左转四十五度，以获得更好视角，最后请让无人机现在降落吧。\nresponse: ", "response": "turn_left 30 degrees; move_back 2 m; move_back 50 cm; turn_right 100 degrees; Missing move_right; turn_left 120 degrees; move_forward 70 cm; move_right 2 m; move_down 100 cm; move_right 1 m; move_back 70 cm; turn_left 45 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you possibly be on a quest to discover where the frisbee and apple have ventured off to?\nresponse: ", "response": "frisbee; apple."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start the washing machine and set it to cold water wash mode.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Hold up on the current search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we clear the present control and embark on a new search task?\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 右转一百八十度，然后如果无人机向左移动一百五十厘米，能更清楚地看到左侧的环境，接着请将无人机右移，请命令无人机降落到目标区域。\nresponse: ", "response": "turn_right 180 degrees; move_left 150 cm; Missing move_right; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the motorcycle, snowboard, and book.\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 紧急地找到船、滑板和雨伞，还有那美味的披萨吧！\nresponse: ", "response": "船; 滑板; 雨伞; 披萨."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Shall we initiate the object search task?\nresponse: ", "response": "start_search_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 能否请您详尽地指示应用程序继续执行之前已暂停的搜寻任务？\nresponse: ", "response": "continue_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 推荐一些可以提高创造力的在线课程。\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 向右转弯，然后请左转一百八十度检查，接着请问无人机能向左移动吗，随后指示无人机向后退，紧接着无人机后退二十厘米，之后请无人机升高一百厘米，最后请让无人机在这里进行降落操作。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 后退七十厘米，检查后方是否有障碍物，然后无人机上升高度，接着无人机下降五十厘米以便着陆，能否让无人机下降一米，随后让无人机向右移动，请向右边再移动，快到房顶了，往下飞抵一下吧，下降个五十厘米，最后无人机向前飞行一百厘米，靠近目标。\nresponse: ", "response": "move_back 70 cm; Missing move_up; move_down 50 cm; move_down 1 m; Missing move_right; Missing move_right; move_down 50 cm; move_forward 100 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 被委托的任务是在这片领域中，先让目光温柔地扫过公共汽车，随后缓缓转向那静置一旁的烤箱，再轻盈地飘向远处跃动着的飞盘，最后停留在那清新如雪碧般的一刻。\nresponse: ", "response": "公共汽车; 烤箱; 飞盘; 雪碧."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Start flying, then move right for a while, afterwards move left 3 feet, next perform a port-side drift for 50 centimeters, and in the end set it down now.\nresponse: ", "response": "take_off; Missing move_right; move_left 3 ft; move_left 50 cm; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: I'm so thrilled! Let's go up 50 centimeters, then make the drone ascend by 50 inches, afterwards move up another 2 inches, next if it’s not too much trouble, could you move it right 2 feet, then fly back 3 meters, immediately after turn left 60 degrees, and in the end, drone, go down 6 meters.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动目标搜索任务。\nresponse: ", "response": "start_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 勇敢地去寻找花瓶和领带吧，你一定可以的！\nresponse: ", "response": "花瓶; 领带."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear the current control settings and initiate a new search task.\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Activate takeoff protocol immediately, then turn the drone right by 45 degrees right away. Advance forward 50 inches, after that drift right, next move it 200 centimeters forward, subsequently shift it forward by 8 feet, afterwards let's slide to the left, 30 centimeters, cha-cha style, following that shift left by a meter, and in the end slide over to the right.\nresponse: ", "response": "take_off; turn_right 45 degrees; move_forward 50 in; Missing move_right; move_forward 200 cm; move_forward 8 ft; move_left 30 cm; move_left 1 m; Missing move_right."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机向后退两百厘米，然后左边移动一百厘米，接着看看左边是什么情况，随后左侧移动75厘米，紧接着无人机右转三十度，重新调整方向，准备接受新任务。之后，向右移动两百厘米，注意避开障碍物，接下来无人机需要向左平移；随后，无人机需要向左飞行七十厘米，然后请让无人机后退八十厘米。最后，请让无人机在这里执行降落操作。\nresponse: ", "response": "move_back 200 cm; move_left 100 cm; turn_left 90 degrees; move_left 75 cm; turn_right 30 degrees; move_right 200 cm; Missing move_left; move_left 70 cm; move_back 80 cm; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the clock, person, kite, and scissors.\nresponse: ", "response": "clock; person; kite; scissors."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Bring it down by 2 feet, then advance forward 3 meters, afterwards fly straight up, next please make the drone go left 150 centimeters, after that move back 10 feet, subsequently bank right 2 meters, following that rotate left 90 degrees, then apply aft movement by 8 feet, immediately after make it fly forward 30 inches, and in the end descend now.\nresponse: ", "response": "move_down 2 ft; move_forward 3 m; Missing move_up; move_left 150 cm; move_back 10 ft; move_right 2 m; turn_left 90 degrees; move_back 8 ft; move_forward 30 in; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Fly towards the front, then shift left 20 inches, after that fly straight ahead, next bank right, subsequently fly right around the corner 10 feet, and touch down.\nresponse: ", "response": "Missing move_forward; move_left 20 in; Missing move_forward; Missing move_right; move_right 10 ft; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 别去找那些没用的橙子了。\nresponse: ", "response": "橙子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Resume the previously paused object detection task within the drone's operational parameters, ensuring all environmental data is accurately processed and analyzed.\nresponse: ", "response": "continue_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以起飞去指定位置吗，然后向左飞，请让无人机升高。\nresponse: ", "response": "take_off; Missing move_left; Missing move_up."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞吧，然后无人机向左调整，接着请将无人机向后移动四十厘米，以避免前方障碍物，随后下降一百五十厘米，以便接近地面，之后无人机现在的方向可能不对，请向右转动九十度以调整方向，紧接着无人机向左移动七十厘米，后来左边可能有目标，调整方向，随后向右飞行，紧接着右边可能有目标，帮我转过去，请让无人机向左转，随后下降一百五十厘米，接着无人机上升三百五十厘米，之后无人机顺时针旋转一百八十度，最后现在让无人机完成降落程序。\nresponse: ", "response": "take_off; Missing move_left; move_back 40 cm; move_down 150 cm; turn_right 90 degrees; move_left 70 cm; turn_left 90 degrees; Missing move_right; turn_right 90 degrees; Missing turn_left; move_down 150 cm; move_up 350 cm; turn_right 180 degrees; land."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for fanta and bread.\nresponse: ", "response": "fanta; bread."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the spoon, suitcase, and fork now.\nresponse: ", "response": "spoon; suitcase; fork."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 友好的版本：请恢复之前暂停的飞行任务吧。\n中立的版本：现在恢复先前暂停的飞行任务。\n负面措辞版本：不得不重新开始那个被中断的飞行任务了。\nresponse: ", "response": "C."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 去找找香蕉和西兰花，还有那个马和勺子在哪？\nresponse: ", "response": "香蕉; 西兰花; 马; 勺子."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 搜索会议室内是否有未清理的纸杯。\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动飞行任务控制程序。\nresponse: ", "response": "start_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Initiate a comprehensive search protocol to locate the truck, ensuring that the spoon and dog are also identified within the designated area.\nresponse: ", "response": "truck; spoon; dog."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: You might want to clear the current object search task list for a smoother drone operation.\nresponse: ", "response": "C."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 让无人机向右转动二十度，然后升高一米，想要从更高的角度俯瞰整个区域，之后将无人机前进，紧接着请将无人机下降六十厘米，减少高度，随后无人机向前飞行，接着左转六十度，避开障碍，后来设备需要向后移动一百五十厘米，紧接着请将无人机往右移，最后前面有点模糊，向前移动五十厘米。\nresponse: ", "response": "turn_right 20 degrees; move_up 1 m; Missing move_forward; move_down 60 cm; Missing move_forward; turn_left 60 degrees; move_back 150 cm; Missing move_right; move_forward 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the frisbee immediately.\nresponse: ", "response": "frisbee."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the biscuit!\nresponse: ", "response": "biscuit."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 立即起飞，然后请右转五十度，以便调整方向，接着后退一百五十厘米，调整位置，检查后方的情况，随后无人机飞得太高了，请下降六十厘米，之后无人机下降五十厘米以便着陆，最后请让无人机降落。\nresponse: ", "response": "take_off; move_down 50 cm; move_down 60 cm; turn_right 50 degrees; move_back 150 cm; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机现在起飞，准备工作，然后无人机上升，接着前方视线模糊，向前移动，随后向前飞行一米，紧接着无人机请向前飞行一米，之后为了调整视角，请右转，最后现在请让无人机降落在这里。\nresponse: ", "response": "take_off; Missing move_up; Missing move_forward; move_forward 1 m; move_forward 1 m; Missing turn_right; land."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请您清除当前的控制及搜寻任务。\nresponse: ", "response": "clear_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请把无人机往后移动一百五十厘米，谢谢. 然后前方似乎有障碍物，向前移动. 之后请将无人机向后退七十厘米，查看后方环境.\nresponse: ", "response": "move_back 150 cm; Missing move_forward; move_back 70 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是不是应该继续之前被暂停的搜寻任务呢？\nresponse: ", "response": "continue_search_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Could you please not fail to search for the tv, sprite, and chair?\nresponse: ", "response": "tv; sprite; chair."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 建议恢复先前暂停的飞行任务，以确保进程顺利进行。\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 清空当前目标搜索的任务清单。\nresponse: ", "response": "clear_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: First, shift right, then go up 10 feet, after that, I want it to go right 3 meters right now, next, spin right 45 degrees, immediately after, fly the drone forward 10 feet.\nresponse: ", "response": "Missing turn_right; move_up 10 ft; move_right 3 m; turn_right 45 degrees; move_forward 10 ft."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么火星表面的温差如此剧烈？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 开启书房的台灯并调节为阅读模式。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off right now, then fall back 2 meters, after that go to the right, next veer left by 45 degrees, following that move the drone in reverse direction, afterwards ascend above the tree by 20 feet, subsequently fly upwards 3 meters, then rotate left by 30 degrees, immediately after that move it straight ahead, next move the drone to the left for 25 inches, thereafter turn left 30 degrees, later fly forward quickly, 40 cm, and in the end go backwards 30 inches, finally drift rightwards.\nresponse: ", "response": "take_off; move_back 2 m; Missing move_right; turn_left 45 degrees; Missing move_back; move_up 20 ft; move_up 3 m; turn_left 30 degrees; Missing move_forward; move_left 25 in; turn_left 30 degrees; move_forward 40 cm; move_back 30 in; Missing move_right."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 为什么火山附近的植被通常更为茂盛？\nresponse: ", "response": "D."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 先清空当前的控制设置，然后再进行搜寻任务的取消。\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the orange, skateboard, dog, and banana.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Clear out the current target hunt list on your drone.\nresponse: ", "response": "clear_search_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for bread, boat, skis.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Halt the ongoing control and search operation immediately!\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for refrigerator, tennis racket, bird, suitcase.\nresponse: ", "response": "A."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 立即清空当前的飞行任务列表，让我们重新开始！\nresponse: ", "response": "C."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Do not continue the ongoing object search task.\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: take off the drone\nresponse: ", "response": "take_off."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Do not fail to search for the traffic light, remote, oven, and umbrella with utmost diligence.\nresponse: ", "response": "traffic light; remote; oven; umbrella."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 不妨暂时搁置手中的搜索任务，就像在茫茫书海中适时地放下书本，稍作休息。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Turn the drone around, then deploy backward trajectory shift of 4 meters, after that go to the left side, next rotate the drone 360 degrees to the left, subsequently give me a smooth left turn, 90 degrees, like a dancer, afterwards perform a 270-degree clockwise yaw, and finally turn the drone 45 degrees to the right.\nresponse: ", "response": "Missing turn_left; move_back 4 m; Missing move_left; turn_left 360 degrees; turn_left 90 degrees; turn_right 270 degrees; turn_right 45 degrees."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Hover in place, then make the drone turn left, tilt left 90 degrees, move it 200 centimeters forward, ascend swiftly 2 meters, after that fly forward a little.\nresponse: ", "response": "take_off; Missing turn_left; turn_left 90 degrees; move_forward 200 cm; move_up 2 m; Missing move_forward."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 赶紧启动控制和搜索任务吧，咱们得快点行动！加油！\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Start your engines, then move to the right, subsequently drifting to the right for 70 centimeters, before landing now.\nresponse: ", "response": "B."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 请暂时中止当前的物体搜索任务。\nresponse: ", "response": "pause_search_task."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: Take off, then lower altitude. Move left 15 meters to get a better view, next ascend 1 meter. After that, rotate 360 degrees to the right, afterwards move forward 1 meter. Following that, deploy backward trajectory shift of 4 meters, then adjust direction right and maneuver the drone backward 100 inches. Subsequently, climb up 1 meter, immediately after fly forward quickly! 40 cm. Next, I want you to shift right, 3 feet, then can we fly it forward a bit?. In the end, bring it to the ground.\nresponse: ", "response": "Missing move_down; move_left 15 m; move_up 1 m; turn_right 360 degrees; move_forward 1 m; move_back 4 m; Missing turn_right; move_back 100 in; move_up 1 m; move_forward 40 cm; move_right 3 ft; Missing move_forward; land."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 起飞，然后无人机后退一百五十厘米，以便观察后方，接着请让无人机飞到前方两米，随后让无人机前进七十五厘米，紧接着无人机顺时针旋转五十度，之后请将无人机向左移动一米，接下来向右移动七十厘米，随后无人机太高了，请下降二十厘米，最后后退五十厘米，调整位置。\nresponse: ", "response": "take_off; move_back 150 cm; move_forward 2 m; move_forward 75 cm; turn_right 50 degrees; move_left 1 m; move_right 70 cm; move_down 20 cm; move_back 50 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您轻轻飞往电视附近，然后转向蛋糕的方向，最后温柔地探索厕所区域，好吗？\nresponse: ", "response": "电视; 蛋糕; 厕所."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find that motorcycle and horse, tie 'em up quick!\nresponse: ", "response": "motorcycle; horse; tie."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机起飞执行任务，然后左移六十厘米，之后无人机高度太高，请下降，紧接着再左移六十厘米，随后无人机下降六十厘米，接着无人机向前移动，然后上升，最后右移七十五厘米。\nresponse: ", "response": "take_off; move_left 60 cm; Missing move_down; move_left 60 cm; move_down 60 cm; Missing move_forward; Missing move_up; move_right 75 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 在应用程序进程中，暂时中止当前的控制操作与搜索任务，如同让疾驰的列车在预定的站点稳稳停下。\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Please hurry and find the book, boat, cup, and horse for me, okay?\nresponse: ", "response": "book; boat; cup; horse."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Purge the existing target identification queue.\nresponse: ", "response": "C."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Search for the sports ball.\nresponse: ", "response": "A."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Could you please initiate the control and commence the search task at your earliest convenience?\nresponse: ", "response": "start_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Activate the robot vacuum and set the cleaning path to full house coverage.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 可以让无人机现在起飞吗，然后向右移动两米，接着请帮忙让无人机左移四十厘米，随后上升七十厘米就行，紧接着无人机上升七十五厘米，之后让无人机顺时针旋转七十五度，接下来无人机上升两米；无人机离地面太高了，请下降，随后无人机升高，紧接着无人机下降，后来无人机右转九十度，重新调整方向，最后右移七十五厘米，躲过那个障碍物，继续前行，无人机请飞行到前方。\nresponse: ", "response": "take_off; move_right 2 m; move_left 40 cm; move_up 70 cm; move_up 75 cm; turn_right 75 degrees; move_up 2 m; Missing move_down; turn_left 150 degrees; Missing move_up; Missing move_down; turn_right 90 degrees; move_right 75 cm; Missing move_forward."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Go find the surfboard and knife, please!\nresponse: ", "response": "surfboard; knife."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 友好地请求你，像寻找宝藏一样，先把手提包找出来，接着是苹果，然后是遥控器，最后别忘了那个橙子。\nresponse: ", "response": "手提包; 苹果; 遥控器; 橙子."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Can you clear the current flight control task list?\nresponse: ", "response": "clear_fly_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for the fork, bowl, knife, and toilet.\nresponse: ", "response": "fork; bowl; knife; toilet."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 请无人机现在起飞以开始任务，然后左转七十度。\nresponse: ", "response": "take_off; turn_left 70 degrees."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Bring it down by 20 centimeters, then I want this drone to fly back 1 meter, next move to the left by 12 inches, after that move the drone to the left 150 centimeters, afterwards descend the drone 7 inches.\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 紧急地找到船、滑板和雨伞，还有那美味的披萨吧！\nresponse: ", "response": "A."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Is the laptop being sought after by you?\nresponse: ", "response": "laptop."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 麻烦右转四十五度，然后现在请无人机着陆。\nresponse: ", "response": "turn_right 45 degrees; land."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Turn on the water heater and set the temperature to 45 degrees Celsius.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机起飞的时间到了，然后前方的目标可能需要更近的观察，请让无人机向前移动二十厘米，接着向右飞行，之后右转五十度，调整角度，咱们要看得更清楚，紧接着向右再靠近九十厘米，最后向后退三十厘米以避免碰撞。\nresponse: ", "response": "take_off; move_forward 20 cm; Missing move_right; turn_right 50 degrees; move_right 90 cm; move_back 30 cm."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: 请您礼貌地搜索一下蛋糕、碗和遥控器。\nresponse: ", "response": "蛋糕; 碗; 遥控器."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 启动任务以操控飞行，但请注意潜在的风险。\nresponse: ", "response": "start_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 是否要暂停当前的控制和搜寻任务呢？\nresponse: ", "response": "pause_task."}
{"query": "Extract key objects from the input in logical task order. \n- Format: `[object_1]; [object_2].` (single object: `[object].`). \n- Separate objects with semicolons and end with a period.\nuser input: Search for broccoli, then locate umbrella.\nresponse: ", "response": "broccoli; umbrella."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: Activate the smart oven and set the timer for 25 minutes.\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机左侧移动一百八十厘米，然后向右转动，接着无人机左移两米，随后无人机右转七十五度，最后无人机向右移动四十厘米。\nresponse: ", "response": "move_left 180 cm; Missing turn_right; move_left 2 m; turn_right 75 degrees; move_right 40 cm."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: Erase forthwith the present aerial vessel's navigational directive roster.\nresponse: ", "response": "clear_fly_task."}
{"query": "Translate the user input into program control commands: \n- Format: `[command].` Commands include: pause_task; pause_fly_task; pause_search_task; start_task; start_fly_task; start_search_task; continue_task; continue_fly_task; continue_search_task; clear_task; clear_fly_task; clear_search_task. \n- If no command is recognized, return `None.` \n- Only one instruction, ending with a period.\nuser input: 先暂停手头上的控制和搜索任务吧。\nresponse: ", "response": "pause_task."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 启动洗衣机并选择烘干功能。\nresponse: ", "response": "B."}
{"query": "Classify the input and respond with 'A.', 'B.', 'C.', or 'D.': \n- 'A.': Search tasks (e.g., \"Search around the pizza.\"). \n- 'B.': Flight command control instructions (e.g., \"Fly up 20 centimeters.\"). \n- 'C.': Program control instructions (e.g., \"Resume the previously paused flight control task.\"). \n- 'D.': Other types (e.g., \"What’s the weather today?\"). \nuser input: 请启动无人机的起飞程序，然后请将无人机缓慢上升五十厘米，以便获得更好的视角，接着请让无人机向右平移四十厘米，随后无人机现在降下一百五十厘米，紧接着请无人机左转四十五度，这样可以得到更好的视角，最后无人机降落在地面上。\nresponse: ", "response": "B."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可以开始起飞了吗，然后能否让无人机下降一米，接着无人机的前方需要进一步检查，请向前飞行一百五十厘米。\nresponse: ", "response": "take_off; move_down 1 m; move_forward 150 cm."}
{"query": "Translate user input into drone commands: \n- Format: `[command] [value] [unit].` Commands include: take_off; land; move_forward/back/left/right/up/down x cm/m/in/ft; turn_left/right x degrees. \n- If no command, return `None.` If value missing, return `Missing [command].` \n- Separate commands with semicolons and end with a period.\nuser input: 无人机可能在后方发现了目标，请后退一米查看具体情况，然后向右移动二十厘米。请将无人机右侧移动，接着无人机请向前飞行一米。随后，无人机左转一百八十度，掉头，之后上升两百厘米。我感觉左边有点异常，调整一下方向，紧接着为了更好地绕过障碍物，请将无人机向左飞行八十厘米。最后，让无人机在这里着陆。\nresponse: ", "response": "move_back 1 m; move_right 20 cm; Missing move_right; move_forward 1 m; turn_left 180 degrees; move_up 200 cm; turn_left 90 degrees; move_left 80 cm; land."}
